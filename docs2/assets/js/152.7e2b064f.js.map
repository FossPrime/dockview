{"version":3,"file":"assets/js/152.7e2b064f.js","mappings":"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","sources":["webpack://dockview-docs/./node_modules/dockview/dist/esm/dnd/dataTransfer.js","webpack://dockview-docs/./node_modules/dockview/dist/esm/events.js","webpack://dockview-docs/./node_modules/dockview/dist/esm/lifecycle.js","webpack://dockview-docs/./node_modules/dockview/dist/esm/dom.js","webpack://dockview-docs/./node_modules/dockview/dist/esm/math.js","webpack://dockview-docs/./node_modules/dockview/dist/esm/array.js","webpack://dockview-docs/./node_modules/dockview/dist/esm/splitview/core/viewItem.js","webpack://dockview-docs/./node_modules/dockview/dist/esm/splitview/core/splitview.js","webpack://dockview-docs/./node_modules/dockview/dist/esm/dnd/droptarget.js","webpack://dockview-docs/./node_modules/dockview/dist/esm/paneview/paneview.js","webpack://dockview-docs/./node_modules/dockview/dist/esm/dnd/dnd.js","webpack://dockview-docs/./node_modules/dockview/dist/esm/gridview/leafNode.js","webpack://dockview-docs/./node_modules/dockview/dist/esm/gridview/branchNode.js","webpack://dockview-docs/./node_modules/dockview/dist/esm/gridview/gridview.js","webpack://dockview-docs/./node_modules/dockview/dist/esm/api/component.api.js","webpack://dockview-docs/./node_modules/dockview/dist/esm/groupview/panel/content.js","webpack://dockview-docs/./node_modules/dockview/dist/esm/groupview/dnd.js","webpack://dockview-docs/./node_modules/dockview/dist/esm/groupview/tab.js","webpack://dockview-docs/./node_modules/dockview/dist/esm/groupview/groupview.js","webpack://dockview-docs/./node_modules/dockview/dist/esm/dnd/abstractDragHandler.js","webpack://dockview-docs/./node_modules/dockview/dist/esm/groupview/titlebar/tabsContainer.js","webpack://dockview-docs/./node_modules/dockview/dist/esm/gridview/baseComponentGridview.js","webpack://dockview-docs/./node_modules/dockview/dist/esm/api/panelApi.js","webpack://dockview-docs/./node_modules/dockview/dist/esm/api/gridviewPanelApi.js","webpack://dockview-docs/./node_modules/dockview/dist/esm/api/groupPanelApi.js","webpack://dockview-docs/./node_modules/dockview/dist/esm/dockview/dockviewGroupPanel.js","webpack://dockview-docs/./node_modules/dockview/dist/esm/actionbar/actionsContainer.js","webpack://dockview-docs/./node_modules/dockview/dist/esm/dockview/components/watermark/watermark.js","webpack://dockview-docs/./node_modules/dockview/dist/esm/dockview/deserializer.js","webpack://dockview-docs/./node_modules/dockview/dist/esm/panel/componentFactory.js","webpack://dockview-docs/./node_modules/dockview/dist/esm/dockview/components/tab/defaultTab.js","webpack://dockview-docs/./node_modules/dockview/dist/esm/gridview/basePanelView.js","webpack://dockview-docs/./node_modules/dockview/dist/esm/gridview/gridviewPanel.js","webpack://dockview-docs/./node_modules/dockview/dist/esm/groupview/groupviewPanel.js","webpack://dockview-docs/./node_modules/dockview/dist/esm/dockview/defaultGroupPanelView.js","webpack://dockview-docs/./node_modules/dockview/dist/esm/dockview/dockviewComponent.js","webpack://dockview-docs/./node_modules/dockview/dist/esm/gridview/gridviewComponent.js","webpack://dockview-docs/./node_modules/dockview/dist/esm/splitview/splitviewComponent.js","webpack://dockview-docs/./node_modules/dockview/dist/esm/api/splitviewPanelApi.js","webpack://dockview-docs/./node_modules/dockview/dist/esm/api/paneviewPanelApi.js","webpack://dockview-docs/./node_modules/dockview/dist/esm/paneview/paneviewPanel.js","webpack://dockview-docs/./node_modules/dockview/dist/esm/paneview/draggablePaneviewPanel.js","webpack://dockview-docs/./node_modules/dockview/dist/esm/paneview/defaultPaneviewHeader.js","webpack://dockview-docs/./node_modules/dockview/dist/esm/paneview/paneviewComponent.js","webpack://dockview-docs/./node_modules/dockview/dist/esm/splitview/splitviewPanel.js","webpack://dockview-docs/./node_modules/dockview/dist/esm/react/react.js","webpack://dockview-docs/./node_modules/dockview/dist/esm/react/dockview/reactContentPart.js","webpack://dockview-docs/./node_modules/dockview/dist/esm/react/dockview/reactHeaderPart.js","webpack://dockview-docs/./node_modules/dockview/dist/esm/react/deserializer.js","webpack://dockview-docs/./node_modules/dockview/dist/esm/react/dockview/reactWatermarkPart.js","webpack://dockview-docs/./node_modules/dockview/dist/esm/react/dockview/dockview.js","webpack://dockview-docs/./node_modules/dockview/dist/esm/react/splitview/view.js","webpack://dockview-docs/./node_modules/dockview/dist/esm/react/splitview/splitview.js","webpack://dockview-docs/./node_modules/dockview/dist/esm/react/gridview/view.js","webpack://dockview-docs/./node_modules/dockview/dist/esm/react/gridview/gridview.js","webpack://dockview-docs/./node_modules/dockview/dist/esm/react/paneview/view.js","webpack://dockview-docs/./node_modules/dockview/dist/esm/react/paneview/paneview.js"],"sourcesContent":["class TransferObject {\r\n    constructor() {\r\n        //\r\n    }\r\n}\r\nexport class PanelTransfer extends TransferObject {\r\n    constructor(viewId, groupId, panelId) {\r\n        super();\r\n        this.viewId = viewId;\r\n        this.groupId = groupId;\r\n        this.panelId = panelId;\r\n    }\r\n}\r\nexport class PaneTransfer extends TransferObject {\r\n    constructor(viewId, paneId) {\r\n        super();\r\n        this.viewId = viewId;\r\n        this.paneId = paneId;\r\n    }\r\n}\r\n/**\r\n * A singleton to store transfer data during drag & drop operations that are only valid within the application.\r\n */\r\nexport class LocalSelectionTransfer {\r\n    constructor() {\r\n        // protect against external instantiation\r\n    }\r\n    static getInstance() {\r\n        return LocalSelectionTransfer.INSTANCE;\r\n    }\r\n    hasData(proto) {\r\n        return proto && proto === this.proto;\r\n    }\r\n    clearData(proto) {\r\n        if (this.hasData(proto)) {\r\n            this.proto = undefined;\r\n            this.data = undefined;\r\n        }\r\n    }\r\n    getData(proto) {\r\n        if (this.hasData(proto)) {\r\n            return this.data;\r\n        }\r\n        return undefined;\r\n    }\r\n    setData(data, proto) {\r\n        if (proto) {\r\n            this.data = data;\r\n            this.proto = proto;\r\n        }\r\n    }\r\n}\r\nLocalSelectionTransfer.INSTANCE = new LocalSelectionTransfer();\r\nexport function getPanelData() {\r\n    const panelTransfer = LocalSelectionTransfer.getInstance();\r\n    const isPanelEvent = panelTransfer.hasData(PanelTransfer.prototype);\r\n    if (!isPanelEvent) {\r\n        return undefined;\r\n    }\r\n    return panelTransfer.getData(PanelTransfer.prototype)[0];\r\n}\r\nexport function getPaneData() {\r\n    const paneTransfer = LocalSelectionTransfer.getInstance();\r\n    const isPanelEvent = paneTransfer.hasData(PaneTransfer.prototype);\r\n    if (!isPanelEvent) {\r\n        return undefined;\r\n    }\r\n    return paneTransfer.getData(PaneTransfer.prototype)[0];\r\n}\r\n","export var Event;\r\n(function (Event) {\r\n    Event.any = (...children) => {\r\n        return (listener) => {\r\n            const disposables = children.map((child) => child(listener));\r\n            return {\r\n                dispose: () => {\r\n                    disposables.forEach((d) => {\r\n                        d.dispose();\r\n                    });\r\n                },\r\n            };\r\n        };\r\n    };\r\n})(Event || (Event = {}));\r\n// dumb event emitter with better typings than nodes event emitter\r\n// https://github.com/microsoft/vscode/blob/master/src/vs/base/common/event.ts\r\nexport class Emitter {\r\n    constructor(options) {\r\n        this.options = options;\r\n        this._listeners = [];\r\n        this._disposed = false;\r\n    }\r\n    get event() {\r\n        if (!this._event) {\r\n            this._event = (listener) => {\r\n                var _a;\r\n                if (((_a = this.options) === null || _a === void 0 ? void 0 : _a.replay) && this._last !== undefined) {\r\n                    listener(this._last);\r\n                }\r\n                this._listeners.push(listener);\r\n                return {\r\n                    dispose: () => {\r\n                        const index = this._listeners.indexOf(listener);\r\n                        if (index > -1) {\r\n                            this._listeners.splice(index, 1);\r\n                        }\r\n                    },\r\n                };\r\n            };\r\n        }\r\n        return this._event;\r\n    }\r\n    fire(e) {\r\n        this._last = e;\r\n        for (const listener of this._listeners) {\r\n            listener(e);\r\n        }\r\n    }\r\n    dispose() {\r\n        this._listeners = [];\r\n        this._disposed = true;\r\n    }\r\n}\r\nexport function addDisposableWindowListener(element, type, listener, options) {\r\n    element.addEventListener(type, listener, options);\r\n    return {\r\n        dispose: () => {\r\n            element.removeEventListener(type, listener);\r\n        },\r\n    };\r\n}\r\nexport function addDisposableListener(element, type, listener, options) {\r\n    element.addEventListener(type, listener, options);\r\n    return {\r\n        dispose: () => {\r\n            element.removeEventListener(type, listener);\r\n        },\r\n    };\r\n}\r\nexport class TickDelayedEvent {\r\n    constructor() {\r\n        this._onFired = new Emitter();\r\n        this.onEvent = this._onFired.event;\r\n    }\r\n    fire() {\r\n        if (this.timer) {\r\n            clearTimeout(this.timer);\r\n        }\r\n        this.timer = setTimeout(() => {\r\n            this._onFired.fire();\r\n            clearTimeout(this.timer);\r\n        });\r\n    }\r\n    dispose() {\r\n        this._onFired.dispose();\r\n    }\r\n}\r\n","export var Disposable;\r\n(function (Disposable) {\r\n    Disposable.NONE = {\r\n        dispose: () => {\r\n            // noop\r\n        },\r\n    };\r\n})(Disposable || (Disposable = {}));\r\nexport class CompositeDisposable {\r\n    constructor(...args) {\r\n        this.disposables = args;\r\n    }\r\n    static from(...args) {\r\n        return new CompositeDisposable(...args);\r\n    }\r\n    addDisposables(...args) {\r\n        args.forEach((arg) => this.disposables.push(arg));\r\n    }\r\n    dispose() {\r\n        this.disposables.forEach((arg) => arg.dispose());\r\n    }\r\n}\r\nexport class MutableDisposable {\r\n    constructor() {\r\n        this._disposable = Disposable.NONE;\r\n    }\r\n    set value(disposable) {\r\n        if (this._disposable) {\r\n            this._disposable.dispose();\r\n        }\r\n        this._disposable = disposable;\r\n    }\r\n    dispose() {\r\n        if (this._disposable) {\r\n            this._disposable.dispose();\r\n            this._disposable = Disposable.NONE;\r\n        }\r\n    }\r\n}\r\n","import { Emitter, addDisposableListener, addDisposableWindowListener, } from './events';\r\nimport { CompositeDisposable } from './lifecycle';\r\nexport function watchElementResize(element, cb) {\r\n    const observer = new ResizeObserver((entires) => {\r\n        const firstEntry = entires[0];\r\n        cb(firstEntry);\r\n    });\r\n    observer.observe(element);\r\n    return {\r\n        dispose: () => {\r\n            observer.unobserve(element);\r\n            observer.disconnect();\r\n        },\r\n    };\r\n}\r\nexport const removeClasses = (element, ...classes) => {\r\n    for (const classname of classes) {\r\n        if (element.classList.contains(classname)) {\r\n            element.classList.remove(classname);\r\n        }\r\n    }\r\n};\r\nexport const addClasses = (element, ...classes) => {\r\n    for (const classname of classes) {\r\n        if (!element.classList.contains(classname)) {\r\n            element.classList.add(classname);\r\n        }\r\n    }\r\n};\r\nexport const toggleClass = (element, className, isToggled) => {\r\n    const hasClass = element.classList.contains(className);\r\n    if (isToggled && !hasClass) {\r\n        element.classList.add(className);\r\n    }\r\n    if (!isToggled && hasClass) {\r\n        element.classList.remove(className);\r\n    }\r\n};\r\nexport function isAncestor(testChild, testAncestor) {\r\n    while (testChild) {\r\n        if (testChild === testAncestor) {\r\n            return true;\r\n        }\r\n        testChild = testChild.parentNode;\r\n    }\r\n    return false;\r\n}\r\nexport function getElementsByTagName(tag) {\r\n    return Array.prototype.slice.call(document.getElementsByTagName(tag), 0);\r\n}\r\nexport function trackFocus(element) {\r\n    return new FocusTracker(element);\r\n}\r\n/**\r\n * Track focus on an element. Ensure tabIndex is set when an HTMLElement is not focusable by default\r\n */\r\nclass FocusTracker extends CompositeDisposable {\r\n    constructor(element) {\r\n        super();\r\n        this._onDidFocus = new Emitter();\r\n        this.onDidFocus = this._onDidFocus.event;\r\n        this._onDidBlur = new Emitter();\r\n        this.onDidBlur = this._onDidBlur.event;\r\n        let hasFocus = isAncestor(document.activeElement, element);\r\n        let loosingFocus = false;\r\n        const onFocus = () => {\r\n            loosingFocus = false;\r\n            if (!hasFocus) {\r\n                hasFocus = true;\r\n                this._onDidFocus.fire();\r\n            }\r\n        };\r\n        const onBlur = () => {\r\n            if (hasFocus) {\r\n                loosingFocus = true;\r\n                window.setTimeout(() => {\r\n                    if (loosingFocus) {\r\n                        loosingFocus = false;\r\n                        hasFocus = false;\r\n                        this._onDidBlur.fire();\r\n                    }\r\n                }, 0);\r\n            }\r\n        };\r\n        this._refreshStateHandler = () => {\r\n            const currentNodeHasFocus = isAncestor(document.activeElement, element);\r\n            if (currentNodeHasFocus !== hasFocus) {\r\n                if (hasFocus) {\r\n                    onBlur();\r\n                }\r\n                else {\r\n                    onFocus();\r\n                }\r\n            }\r\n        };\r\n        if (element instanceof HTMLElement) {\r\n            this.addDisposables(addDisposableListener(element, 'focus', onFocus, true));\r\n            this.addDisposables(addDisposableListener(element, 'blur', onBlur, true));\r\n        }\r\n        else {\r\n            this.addDisposables(addDisposableWindowListener(element, 'focus', onFocus, true));\r\n            this.addDisposables(addDisposableWindowListener(element, 'blur', onBlur, true));\r\n        }\r\n    }\r\n    refreshState() {\r\n        this._refreshStateHandler();\r\n    }\r\n    dispose() {\r\n        super.dispose();\r\n        this._onDidBlur.dispose();\r\n        this._onDidFocus.dispose();\r\n    }\r\n}\r\n","export const clamp = (value, min, max) => {\r\n    if (min > max) {\r\n        throw new Error(`${min} > ${max} is an invalid condition`);\r\n    }\r\n    return Math.min(max, Math.max(value, min));\r\n};\r\nexport const sequentialNumberGenerator = () => {\r\n    let value = 1;\r\n    return { next: () => (value++).toString() };\r\n};\r\n","export function tail(arr) {\r\n    if (arr.length === 0) {\r\n        throw new Error('Invalid tail call');\r\n    }\r\n    return [arr.slice(0, arr.length - 1), arr[arr.length - 1]];\r\n}\r\nexport function last(arr) {\r\n    return arr.length > 0 ? arr[arr.length - 1] : undefined;\r\n}\r\nexport function sequenceEquals(arr1, arr2) {\r\n    if (arr1.length !== arr2.length) {\r\n        return false;\r\n    }\r\n    for (let i = 0; i < arr1.length; i++) {\r\n        if (arr1[i] !== arr2[i]) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n/**\r\n * Pushes an element to the start of the array, if found.\r\n */\r\nexport function pushToStart(arr, value) {\r\n    const index = arr.indexOf(value);\r\n    if (index > -1) {\r\n        arr.splice(index, 1);\r\n        arr.unshift(value);\r\n    }\r\n}\r\n/**\r\n * Pushes an element to the end of the array, if found.\r\n */\r\nexport function pushToEnd(arr, value) {\r\n    const index = arr.indexOf(value);\r\n    if (index > -1) {\r\n        arr.splice(index, 1);\r\n        arr.push(value);\r\n    }\r\n}\r\nexport const range = (from, to) => {\r\n    const result = [];\r\n    if (typeof to !== 'number') {\r\n        to = from;\r\n        from = 0;\r\n    }\r\n    if (from <= to) {\r\n        for (let i = from; i < to; i++) {\r\n            result.push(i);\r\n        }\r\n    }\r\n    else {\r\n        for (let i = from; i > to; i--) {\r\n            result.push(i);\r\n        }\r\n    }\r\n    return result;\r\n};\r\nexport function firstIndex(array, fn) {\r\n    for (let i = 0; i < array.length; i++) {\r\n        const element = array[i];\r\n        if (fn(element)) {\r\n            return i;\r\n        }\r\n    }\r\n    return -1;\r\n}\r\n","import { clamp } from '../../math';\r\nexport class ViewItem {\r\n    constructor(container, view, size, disposable) {\r\n        this.container = container;\r\n        this.view = view;\r\n        this.disposable = disposable;\r\n        this._cachedVisibleSize = undefined;\r\n        if (typeof size === 'number') {\r\n            this._size = size;\r\n            this._cachedVisibleSize = undefined;\r\n            container.classList.add('visible');\r\n        }\r\n        else {\r\n            this._size = 0;\r\n            this._cachedVisibleSize = size.cachedVisibleSize;\r\n        }\r\n    }\r\n    set size(size) {\r\n        this._size = size;\r\n    }\r\n    get size() {\r\n        return this._size;\r\n    }\r\n    get cachedVisibleSize() {\r\n        return this._cachedVisibleSize;\r\n    }\r\n    get visible() {\r\n        return typeof this._cachedVisibleSize === 'undefined';\r\n    }\r\n    setVisible(visible, size) {\r\n        var _a;\r\n        if (visible === this.visible) {\r\n            return;\r\n        }\r\n        if (visible) {\r\n            this.size = clamp((_a = this._cachedVisibleSize) !== null && _a !== void 0 ? _a : 0, this.viewMinimumSize, this.viewMaximumSize);\r\n            this._cachedVisibleSize = undefined;\r\n        }\r\n        else {\r\n            this._cachedVisibleSize =\r\n                typeof size === 'number' ? size : this.size;\r\n            this.size = 0;\r\n        }\r\n        this.container.classList.toggle('visible', visible);\r\n        if (this.view.setVisible) {\r\n            this.view.setVisible(visible);\r\n        }\r\n    }\r\n    get minimumSize() {\r\n        return this.visible ? this.view.minimumSize : 0;\r\n    }\r\n    get viewMinimumSize() {\r\n        return this.view.minimumSize;\r\n    }\r\n    get maximumSize() {\r\n        return this.visible ? this.view.maximumSize : 0;\r\n    }\r\n    get viewMaximumSize() {\r\n        return this.view.maximumSize;\r\n    }\r\n    get priority() {\r\n        return this.view.priority;\r\n    }\r\n    get snap() {\r\n        return !!this.view.snap;\r\n    }\r\n    set enabled(enabled) {\r\n        this.container.style.pointerEvents = enabled ? '' : 'none';\r\n    }\r\n    // layout(offset: number, layoutContext: TLayoutContext | undefined): void {\r\n    //     this.layoutContainer(offset);\r\n    //     this.view.layout(this.size, offset, layoutContext);\r\n    // }\r\n    // abstract layoutContainer(offset: number): void;\r\n    dispose() {\r\n        this.disposable.dispose();\r\n        return this.view;\r\n    }\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\r\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/splitview\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { removeClasses, addClasses, toggleClass, getElementsByTagName, } from '../../dom';\r\nimport { clamp } from '../../math';\r\nimport { Emitter } from '../../events';\r\nimport { pushToStart, pushToEnd, range, firstIndex } from '../../array';\r\nimport { ViewItem } from './viewItem';\r\nexport var Orientation;\r\n(function (Orientation) {\r\n    Orientation[\"HORIZONTAL\"] = \"HORIZONTAL\";\r\n    Orientation[\"VERTICAL\"] = \"VERTICAL\";\r\n})(Orientation || (Orientation = {}));\r\nexport var SashState;\r\n(function (SashState) {\r\n    SashState[SashState[\"MAXIMUM\"] = 0] = \"MAXIMUM\";\r\n    SashState[SashState[\"MINIMUM\"] = 1] = \"MINIMUM\";\r\n    SashState[SashState[\"DISABLED\"] = 2] = \"DISABLED\";\r\n    SashState[SashState[\"ENABLED\"] = 3] = \"ENABLED\";\r\n})(SashState || (SashState = {}));\r\nexport var LayoutPriority;\r\n(function (LayoutPriority) {\r\n    LayoutPriority[\"Low\"] = \"low\";\r\n    LayoutPriority[\"High\"] = \"high\";\r\n    LayoutPriority[\"Normal\"] = \"normal\";\r\n})(LayoutPriority || (LayoutPriority = {}));\r\nexport var Sizing;\r\n(function (Sizing) {\r\n    Sizing.Distribute = { type: 'distribute' };\r\n    function Split(index) {\r\n        return { type: 'split', index };\r\n    }\r\n    Sizing.Split = Split;\r\n    function Invisible(cachedVisibleSize) {\r\n        return { type: 'invisible', cachedVisibleSize };\r\n    }\r\n    Sizing.Invisible = Invisible;\r\n})(Sizing || (Sizing = {}));\r\nexport class Splitview {\r\n    constructor(container, options) {\r\n        this.container = container;\r\n        this.views = [];\r\n        this.sashes = [];\r\n        this._size = 0;\r\n        this._orthogonalSize = 0;\r\n        this.contentSize = 0;\r\n        this._proportions = undefined;\r\n        this._onDidSashEnd = new Emitter();\r\n        this.onDidSashEnd = this._onDidSashEnd.event;\r\n        this._onDidAddView = new Emitter();\r\n        this.onDidAddView = this._onDidAddView.event;\r\n        this._onDidRemoveView = new Emitter();\r\n        this.onDidRemoveView = this._onDidRemoveView.event;\r\n        this._startSnappingEnabled = true;\r\n        this._endSnappingEnabled = true;\r\n        this.resize = (index, delta, sizes = this.views.map((x) => x.size), lowPriorityIndexes, highPriorityIndexes, overloadMinDelta = Number.NEGATIVE_INFINITY, overloadMaxDelta = Number.POSITIVE_INFINITY, snapBefore, snapAfter) => {\r\n            if (index < 0 || index > this.views.length) {\r\n                return 0;\r\n            }\r\n            const upIndexes = range(index, -1);\r\n            const downIndexes = range(index + 1, this.views.length);\r\n            //\r\n            if (highPriorityIndexes) {\r\n                for (const i of highPriorityIndexes) {\r\n                    pushToStart(upIndexes, i);\r\n                    pushToStart(downIndexes, i);\r\n                }\r\n            }\r\n            if (lowPriorityIndexes) {\r\n                for (const i of lowPriorityIndexes) {\r\n                    pushToEnd(upIndexes, i);\r\n                    pushToEnd(downIndexes, i);\r\n                }\r\n            }\r\n            //\r\n            const upItems = upIndexes.map((i) => this.views[i]);\r\n            const upSizes = upIndexes.map((i) => sizes[i]);\r\n            //\r\n            const downItems = downIndexes.map((i) => this.views[i]);\r\n            const downSizes = downIndexes.map((i) => sizes[i]);\r\n            //\r\n            const minDeltaUp = upIndexes.reduce((_, i) => _ + this.views[i].minimumSize - sizes[i], 0);\r\n            const maxDeltaUp = upIndexes.reduce((_, i) => _ + this.views[i].maximumSize - sizes[i], 0);\r\n            //\r\n            const maxDeltaDown = downIndexes.length === 0\r\n                ? Number.POSITIVE_INFINITY\r\n                : downIndexes.reduce((_, i) => _ + sizes[i] - this.views[i].minimumSize, 0);\r\n            const minDeltaDown = downIndexes.length === 0\r\n                ? Number.NEGATIVE_INFINITY\r\n                : downIndexes.reduce((_, i) => _ + sizes[i] - this.views[i].maximumSize, 0);\r\n            //\r\n            const minDelta = Math.max(minDeltaUp, minDeltaDown);\r\n            const maxDelta = Math.min(maxDeltaDown, maxDeltaUp);\r\n            //\r\n            let snapped = false;\r\n            if (snapBefore) {\r\n                const snapView = this.views[snapBefore.index];\r\n                const visible = delta >= snapBefore.limitDelta;\r\n                snapped = visible !== snapView.visible;\r\n                snapView.setVisible(visible, snapBefore.size);\r\n            }\r\n            if (!snapped && snapAfter) {\r\n                const snapView = this.views[snapAfter.index];\r\n                const visible = delta < snapAfter.limitDelta;\r\n                snapped = visible !== snapView.visible;\r\n                snapView.setVisible(visible, snapAfter.size);\r\n            }\r\n            if (snapped) {\r\n                return this.resize(index, delta, sizes, lowPriorityIndexes, highPriorityIndexes, overloadMinDelta, overloadMaxDelta);\r\n            }\r\n            //\r\n            const tentativeDelta = clamp(delta, minDelta, maxDelta);\r\n            let actualDelta = 0;\r\n            //\r\n            let deltaUp = tentativeDelta;\r\n            for (let i = 0; i < upItems.length; i++) {\r\n                const item = upItems[i];\r\n                const size = clamp(upSizes[i] + deltaUp, item.minimumSize, item.maximumSize);\r\n                const viewDelta = size - upSizes[i];\r\n                actualDelta += viewDelta;\r\n                deltaUp -= viewDelta;\r\n                item.size = size;\r\n            }\r\n            //\r\n            let deltaDown = actualDelta;\r\n            for (let i = 0; i < downItems.length; i++) {\r\n                const item = downItems[i];\r\n                const size = clamp(downSizes[i] - deltaDown, item.minimumSize, item.maximumSize);\r\n                const viewDelta = size - downSizes[i];\r\n                deltaDown += viewDelta;\r\n                item.size = size;\r\n            }\r\n            //\r\n            return delta;\r\n        };\r\n        this._orientation = options.orientation;\r\n        this.element = this.createContainer();\r\n        this.proportionalLayout =\r\n            options.proportionalLayout === undefined\r\n                ? true\r\n                : !!options.proportionalLayout;\r\n        this.viewContainer = this.createViewContainer();\r\n        this.sashContainer = this.createSashContainer();\r\n        this.element.appendChild(this.sashContainer);\r\n        this.element.appendChild(this.viewContainer);\r\n        this.container.appendChild(this.element);\r\n        this.style(options.styles);\r\n        // We have an existing set of view, add them now\r\n        if (options.descriptor) {\r\n            this._size = options.descriptor.size;\r\n            options.descriptor.views.forEach((viewDescriptor, index) => {\r\n                const sizing = viewDescriptor.visible === undefined ||\r\n                    viewDescriptor.visible\r\n                    ? viewDescriptor.size\r\n                    : {\r\n                        type: 'invisible',\r\n                        cachedVisibleSize: viewDescriptor.size,\r\n                    };\r\n                const view = viewDescriptor.view;\r\n                this.addView(view, sizing, index, true\r\n                // true skip layout\r\n                );\r\n            });\r\n            // Initialize content size and proportions for first layout\r\n            this.contentSize = this.views.reduce((r, i) => r + i.size, 0);\r\n            this.saveProportions();\r\n        }\r\n    }\r\n    get size() {\r\n        return this._size;\r\n    }\r\n    set size(value) {\r\n        this._size = value;\r\n    }\r\n    get orthogonalSize() {\r\n        return this._orthogonalSize;\r\n    }\r\n    set orthogonalSize(value) {\r\n        this._orthogonalSize = value;\r\n    }\r\n    get length() {\r\n        return this.views.length;\r\n    }\r\n    get proportions() {\r\n        return this._proportions ? [...this._proportions] : undefined;\r\n    }\r\n    get orientation() {\r\n        return this._orientation;\r\n    }\r\n    set orientation(value) {\r\n        this._orientation = value;\r\n        const tmp = this.size;\r\n        this.size = this.orthogonalSize;\r\n        this.orthogonalSize = tmp;\r\n        removeClasses(this.element, 'horizontal', 'vertical');\r\n        this.element.classList.add(this.orientation == Orientation.HORIZONTAL\r\n            ? 'horizontal'\r\n            : 'vertical');\r\n    }\r\n    get minimumSize() {\r\n        return this.views.reduce((r, item) => r + item.minimumSize, 0);\r\n    }\r\n    get maximumSize() {\r\n        return this.length === 0\r\n            ? Number.POSITIVE_INFINITY\r\n            : this.views.reduce((r, item) => r + item.maximumSize, 0);\r\n    }\r\n    get startSnappingEnabled() {\r\n        return this._startSnappingEnabled;\r\n    }\r\n    set startSnappingEnabled(startSnappingEnabled) {\r\n        if (this._startSnappingEnabled === startSnappingEnabled) {\r\n            return;\r\n        }\r\n        this._startSnappingEnabled = startSnappingEnabled;\r\n        this.updateSashEnablement();\r\n    }\r\n    get endSnappingEnabled() {\r\n        return this._endSnappingEnabled;\r\n    }\r\n    set endSnappingEnabled(endSnappingEnabled) {\r\n        if (this._endSnappingEnabled === endSnappingEnabled) {\r\n            return;\r\n        }\r\n        this._endSnappingEnabled = endSnappingEnabled;\r\n        this.updateSashEnablement();\r\n    }\r\n    style(styles) {\r\n        if ((styles === null || styles === void 0 ? void 0 : styles.separatorBorder) === 'transparent') {\r\n            removeClasses(this.element, 'separator-border');\r\n            this.element.style.removeProperty('--dv-separator-border');\r\n        }\r\n        else {\r\n            addClasses(this.element, 'separator-border');\r\n            if (styles === null || styles === void 0 ? void 0 : styles.separatorBorder) {\r\n                this.element.style.setProperty('--dv-separator-border', styles.separatorBorder);\r\n            }\r\n        }\r\n    }\r\n    isViewVisible(index) {\r\n        if (index < 0 || index >= this.views.length) {\r\n            throw new Error('Index out of bounds');\r\n        }\r\n        const viewItem = this.views[index];\r\n        return viewItem.visible;\r\n    }\r\n    setViewVisible(index, visible) {\r\n        if (index < 0 || index >= this.views.length) {\r\n            throw new Error('Index out of bounds');\r\n        }\r\n        toggleClass(this.container, 'visible', visible);\r\n        const viewItem = this.views[index];\r\n        toggleClass(this.container, 'visible', visible);\r\n        viewItem.setVisible(visible, viewItem.size);\r\n        this.distributeEmptySpace(index);\r\n        this.layoutViews();\r\n        this.saveProportions();\r\n    }\r\n    getViewSize(index) {\r\n        if (index < 0 || index >= this.views.length) {\r\n            return -1;\r\n        }\r\n        return this.views[index].size;\r\n    }\r\n    resizeView(index, size) {\r\n        if (index < 0 || index >= this.views.length) {\r\n            return;\r\n        }\r\n        const indexes = range(this.views.length).filter((i) => i !== index);\r\n        const lowPriorityIndexes = [\r\n            ...indexes.filter((i) => this.views[i].priority === LayoutPriority.Low),\r\n            index,\r\n        ];\r\n        const highPriorityIndexes = indexes.filter((i) => this.views[i].priority === LayoutPriority.High);\r\n        const item = this.views[index];\r\n        size = Math.round(size);\r\n        size = clamp(size, item.minimumSize, Math.min(item.maximumSize, this._size));\r\n        item.size = size;\r\n        this.relayout(lowPriorityIndexes, highPriorityIndexes);\r\n    }\r\n    getViews() {\r\n        return this.views.map((x) => x.view);\r\n    }\r\n    onDidChange(item, size) {\r\n        const index = this.views.indexOf(item);\r\n        if (index < 0 || index >= this.views.length) {\r\n            return;\r\n        }\r\n        size = typeof size === 'number' ? size : item.size;\r\n        size = clamp(size, item.minimumSize, item.maximumSize);\r\n        item.size = size;\r\n        this.relayout([index]);\r\n    }\r\n    addView(view, size = { type: 'distribute' }, index = this.views.length, skipLayout) {\r\n        const container = document.createElement('div');\r\n        container.className = 'view';\r\n        container.appendChild(view.element);\r\n        let viewSize;\r\n        if (typeof size === 'number') {\r\n            viewSize = size;\r\n        }\r\n        else if (size.type === 'split') {\r\n            viewSize = this.getViewSize(size.index) / 2;\r\n        }\r\n        else if (size.type === 'invisible') {\r\n            viewSize = { cachedVisibleSize: size.cachedVisibleSize };\r\n        }\r\n        else {\r\n            viewSize = view.minimumSize;\r\n        }\r\n        const disposable = view.onDidChange((newSize) => this.onDidChange(viewItem, newSize));\r\n        const dispose = () => {\r\n            disposable === null || disposable === void 0 ? void 0 : disposable.dispose();\r\n            this.viewContainer.removeChild(container);\r\n        };\r\n        const viewItem = new ViewItem(container, view, viewSize, { dispose });\r\n        if (index === this.views.length) {\r\n            this.viewContainer.appendChild(container);\r\n        }\r\n        else {\r\n            this.viewContainer.insertBefore(container, this.viewContainer.children.item(index));\r\n        }\r\n        this.views.splice(index, 0, viewItem);\r\n        if (this.views.length > 1) {\r\n            //add sash\r\n            const sash = document.createElement('div');\r\n            sash.className = 'sash';\r\n            const onStart = (event) => {\r\n                for (const item of this.views) {\r\n                    item.enabled = false;\r\n                }\r\n                const iframes = [\r\n                    ...getElementsByTagName('iframe'),\r\n                    ...getElementsByTagName('webview'),\r\n                ];\r\n                for (const iframe of iframes) {\r\n                    iframe.style.pointerEvents = 'none';\r\n                }\r\n                const start = this._orientation === Orientation.HORIZONTAL\r\n                    ? event.clientX\r\n                    : event.clientY;\r\n                const sashIndex = firstIndex(this.sashes, (s) => s.container === sash);\r\n                //\r\n                const sizes = this.views.map((x) => x.size);\r\n                //\r\n                let snapBefore;\r\n                let snapAfter;\r\n                const upIndexes = range(sashIndex, -1);\r\n                const downIndexes = range(sashIndex + 1, this.views.length);\r\n                const minDeltaUp = upIndexes.reduce((r, i) => r + (this.views[i].minimumSize - sizes[i]), 0);\r\n                const maxDeltaUp = upIndexes.reduce((r, i) => r + (this.views[i].viewMaximumSize - sizes[i]), 0);\r\n                const maxDeltaDown = downIndexes.length === 0\r\n                    ? Number.POSITIVE_INFINITY\r\n                    : downIndexes.reduce((r, i) => r + (sizes[i] - this.views[i].minimumSize), 0);\r\n                const minDeltaDown = downIndexes.length === 0\r\n                    ? Number.NEGATIVE_INFINITY\r\n                    : downIndexes.reduce((r, i) => r +\r\n                        (sizes[i] - this.views[i].viewMaximumSize), 0);\r\n                const minDelta = Math.max(minDeltaUp, minDeltaDown);\r\n                const maxDelta = Math.min(maxDeltaDown, maxDeltaUp);\r\n                const snapBeforeIndex = this.findFirstSnapIndex(upIndexes);\r\n                const snapAfterIndex = this.findFirstSnapIndex(downIndexes);\r\n                if (typeof snapBeforeIndex === 'number') {\r\n                    const snappedViewItem = this.views[snapBeforeIndex];\r\n                    const halfSize = Math.floor(snappedViewItem.viewMinimumSize / 2);\r\n                    snapBefore = {\r\n                        index: snapBeforeIndex,\r\n                        limitDelta: snappedViewItem.visible\r\n                            ? minDelta - halfSize\r\n                            : minDelta + halfSize,\r\n                        size: snappedViewItem.size,\r\n                    };\r\n                }\r\n                if (typeof snapAfterIndex === 'number') {\r\n                    const snappedViewItem = this.views[snapAfterIndex];\r\n                    const halfSize = Math.floor(snappedViewItem.viewMinimumSize / 2);\r\n                    snapAfter = {\r\n                        index: snapAfterIndex,\r\n                        limitDelta: snappedViewItem.visible\r\n                            ? maxDelta + halfSize\r\n                            : maxDelta - halfSize,\r\n                        size: snappedViewItem.size,\r\n                    };\r\n                }\r\n                //\r\n                const mousemove = (mousemoveEvent) => {\r\n                    const current = this._orientation === Orientation.HORIZONTAL\r\n                        ? mousemoveEvent.clientX\r\n                        : mousemoveEvent.clientY;\r\n                    const delta = current - start;\r\n                    this.resize(sashIndex, delta, sizes, undefined, undefined, minDelta, maxDelta, snapBefore, snapAfter);\r\n                    this.distributeEmptySpace();\r\n                    this.layoutViews();\r\n                };\r\n                const end = () => {\r\n                    for (const item of this.views) {\r\n                        item.enabled = true;\r\n                    }\r\n                    for (const iframe of iframes) {\r\n                        iframe.style.pointerEvents = 'auto';\r\n                    }\r\n                    this.saveProportions();\r\n                    document.removeEventListener('mousemove', mousemove);\r\n                    document.removeEventListener('mouseup', end);\r\n                    document.removeEventListener('mouseend', end);\r\n                    this._onDidSashEnd.fire(undefined);\r\n                };\r\n                document.addEventListener('mousemove', mousemove);\r\n                document.addEventListener('mouseup', end);\r\n                document.addEventListener('mouseend', end);\r\n            };\r\n            sash.addEventListener('mousedown', onStart);\r\n            const sashItem = {\r\n                container: sash,\r\n                disposable: () => {\r\n                    sash.removeEventListener('mousedown', onStart);\r\n                    this.sashContainer.removeChild(sash);\r\n                },\r\n            };\r\n            this.sashContainer.appendChild(sash);\r\n            this.sashes.push(sashItem);\r\n        }\r\n        if (!skipLayout) {\r\n            this.relayout([index]);\r\n        }\r\n        if (!skipLayout &&\r\n            typeof size !== 'number' &&\r\n            size.type === 'distribute') {\r\n            this.distributeViewSizes();\r\n        }\r\n        this._onDidAddView.fire(view);\r\n    }\r\n    distributeViewSizes() {\r\n        const flexibleViewItems = [];\r\n        let flexibleSize = 0;\r\n        for (const item of this.views) {\r\n            if (item.maximumSize - item.minimumSize > 0) {\r\n                flexibleViewItems.push(item);\r\n                flexibleSize += item.size;\r\n            }\r\n        }\r\n        const size = Math.floor(flexibleSize / flexibleViewItems.length);\r\n        for (const item of flexibleViewItems) {\r\n            item.size = clamp(size, item.minimumSize, item.maximumSize);\r\n        }\r\n        const indexes = range(this.views.length);\r\n        const lowPriorityIndexes = indexes.filter((i) => this.views[i].priority === LayoutPriority.Low);\r\n        const highPriorityIndexes = indexes.filter((i) => this.views[i].priority === LayoutPriority.High);\r\n        this.relayout(lowPriorityIndexes, highPriorityIndexes);\r\n    }\r\n    removeView(index, sizing, skipLayout = false) {\r\n        // Remove view\r\n        const viewItem = this.views.splice(index, 1)[0];\r\n        viewItem.dispose();\r\n        // Remove sash\r\n        if (this.views.length >= 1) {\r\n            const sashIndex = Math.max(index - 1, 0);\r\n            const sashItem = this.sashes.splice(sashIndex, 1)[0];\r\n            sashItem.disposable();\r\n        }\r\n        if (!skipLayout) {\r\n            this.relayout();\r\n        }\r\n        if (sizing && sizing.type === 'distribute') {\r\n            this.distributeViewSizes();\r\n        }\r\n        this._onDidRemoveView.fire(viewItem.view);\r\n        return viewItem.view;\r\n    }\r\n    getViewCachedVisibleSize(index) {\r\n        if (index < 0 || index >= this.views.length) {\r\n            throw new Error('Index out of bounds');\r\n        }\r\n        const viewItem = this.views[index];\r\n        return viewItem.cachedVisibleSize;\r\n    }\r\n    moveView(from, to) {\r\n        const cachedVisibleSize = this.getViewCachedVisibleSize(from);\r\n        const sizing = typeof cachedVisibleSize === 'undefined'\r\n            ? this.getViewSize(from)\r\n            : Sizing.Invisible(cachedVisibleSize);\r\n        const view = this.removeView(from, undefined, true);\r\n        this.addView(view, sizing, to);\r\n    }\r\n    layout(size, orthogonalSize) {\r\n        const previousSize = Math.max(this.size, this.contentSize);\r\n        this.size = size;\r\n        this.orthogonalSize = orthogonalSize;\r\n        if (!this.proportions) {\r\n            const indexes = range(this.views.length);\r\n            const lowPriorityIndexes = indexes.filter((i) => this.views[i].priority === LayoutPriority.Low);\r\n            const highPriorityIndexes = indexes.filter((i) => this.views[i].priority === LayoutPriority.High);\r\n            this.resize(this.views.length - 1, size - previousSize, undefined, lowPriorityIndexes, highPriorityIndexes);\r\n        }\r\n        else {\r\n            for (let i = 0; i < this.views.length; i++) {\r\n                const item = this.views[i];\r\n                item.size = clamp(Math.round(this.proportions[i] * size), item.minimumSize, item.maximumSize);\r\n            }\r\n        }\r\n        this.distributeEmptySpace();\r\n        this.layoutViews();\r\n    }\r\n    relayout(lowPriorityIndexes, highPriorityIndexes) {\r\n        const contentSize = this.views.reduce((r, i) => r + i.size, 0);\r\n        this.resize(this.views.length - 1, this._size - contentSize, undefined, lowPriorityIndexes, highPriorityIndexes);\r\n        this.distributeEmptySpace();\r\n        this.layoutViews();\r\n        this.saveProportions();\r\n    }\r\n    distributeEmptySpace(lowPriorityIndex) {\r\n        const contentSize = this.views.reduce((r, i) => r + i.size, 0);\r\n        let emptyDelta = this.size - contentSize;\r\n        const indexes = range(this.views.length - 1, -1);\r\n        const lowPriorityIndexes = indexes.filter((i) => this.views[i].priority === LayoutPriority.Low);\r\n        const highPriorityIndexes = indexes.filter((i) => this.views[i].priority === LayoutPriority.High);\r\n        for (const index of highPriorityIndexes) {\r\n            pushToStart(indexes, index);\r\n        }\r\n        for (const index of lowPriorityIndexes) {\r\n            pushToEnd(indexes, index);\r\n        }\r\n        if (typeof lowPriorityIndex === 'number') {\r\n            pushToEnd(indexes, lowPriorityIndex);\r\n        }\r\n        for (let i = 0; emptyDelta !== 0 && i < indexes.length; i++) {\r\n            const item = this.views[indexes[i]];\r\n            const size = clamp(item.size + emptyDelta, item.minimumSize, item.maximumSize);\r\n            const viewDelta = size - item.size;\r\n            emptyDelta -= viewDelta;\r\n            item.size = size;\r\n        }\r\n    }\r\n    saveProportions() {\r\n        if (this.proportionalLayout && this.contentSize > 0) {\r\n            this._proportions = this.views.map((i) => i.size / this.contentSize);\r\n        }\r\n    }\r\n    layoutViews() {\r\n        this.contentSize = this.views.reduce((r, i) => r + i.size, 0);\r\n        let sum = 0;\r\n        const x = [];\r\n        this.updateSashEnablement();\r\n        for (let i = 0; i < this.views.length - 1; i++) {\r\n            sum += this.views[i].size;\r\n            x.push(sum);\r\n            const offset = Math.min(Math.max(0, sum - 2), this.size - 4);\r\n            if (this._orientation === Orientation.HORIZONTAL) {\r\n                this.sashes[i].container.style.left = `${offset}px`;\r\n                this.sashes[i].container.style.top = `0px`;\r\n            }\r\n            if (this._orientation === Orientation.VERTICAL) {\r\n                this.sashes[i].container.style.left = `0px`;\r\n                this.sashes[i].container.style.top = `${offset}px`;\r\n            }\r\n        }\r\n        this.views.forEach((view, i) => {\r\n            if (this._orientation === Orientation.HORIZONTAL) {\r\n                view.container.style.width = `${view.size}px`;\r\n                view.container.style.left = i == 0 ? '0px' : `${x[i - 1]}px`;\r\n                view.container.style.top = '';\r\n                view.container.style.height = '';\r\n            }\r\n            if (this._orientation === Orientation.VERTICAL) {\r\n                view.container.style.height = `${view.size}px`;\r\n                view.container.style.top = i == 0 ? '0px' : `${x[i - 1]}px`;\r\n                view.container.style.width = '';\r\n                view.container.style.left = '';\r\n            }\r\n            view.view.layout(view.size, this._orthogonalSize);\r\n        });\r\n    }\r\n    findFirstSnapIndex(indexes) {\r\n        // visible views first\r\n        for (const index of indexes) {\r\n            const viewItem = this.views[index];\r\n            if (!viewItem.visible) {\r\n                continue;\r\n            }\r\n            if (viewItem.snap) {\r\n                return index;\r\n            }\r\n        }\r\n        // then, hidden views\r\n        for (const index of indexes) {\r\n            const viewItem = this.views[index];\r\n            if (viewItem.visible &&\r\n                viewItem.maximumSize - viewItem.minimumSize > 0) {\r\n                return undefined;\r\n            }\r\n            if (!viewItem.visible && viewItem.snap) {\r\n                return index;\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n    updateSashEnablement() {\r\n        let previous = false;\r\n        const collapsesDown = this.views.map((i) => (previous = i.size - i.minimumSize > 0 || previous));\r\n        previous = false;\r\n        const expandsDown = this.views.map((i) => (previous = i.maximumSize - i.size > 0 || previous));\r\n        const reverseViews = [...this.views].reverse();\r\n        previous = false;\r\n        const collapsesUp = reverseViews\r\n            .map((i) => (previous = i.size - i.minimumSize > 0 || previous))\r\n            .reverse();\r\n        previous = false;\r\n        const expandsUp = reverseViews\r\n            .map((i) => (previous = i.maximumSize - i.size > 0 || previous))\r\n            .reverse();\r\n        let position = 0;\r\n        for (let index = 0; index < this.sashes.length; index++) {\r\n            const sash = this.sashes[index];\r\n            const viewItem = this.views[index];\r\n            position += viewItem.size;\r\n            const min = !(collapsesDown[index] && expandsUp[index + 1]);\r\n            const max = !(expandsDown[index] && collapsesUp[index + 1]);\r\n            if (min && max) {\r\n                const upIndexes = range(index, -1);\r\n                const downIndexes = range(index + 1, this.views.length);\r\n                const snapBeforeIndex = this.findFirstSnapIndex(upIndexes);\r\n                const snapAfterIndex = this.findFirstSnapIndex(downIndexes);\r\n                const snappedBefore = typeof snapBeforeIndex === 'number' &&\r\n                    !this.views[snapBeforeIndex].visible;\r\n                const snappedAfter = typeof snapAfterIndex === 'number' &&\r\n                    !this.views[snapAfterIndex].visible;\r\n                if (snappedBefore &&\r\n                    collapsesUp[index] &&\r\n                    (position > 0 || this.startSnappingEnabled)) {\r\n                    this.updateSash(sash, SashState.MINIMUM);\r\n                }\r\n                else if (snappedAfter &&\r\n                    collapsesDown[index] &&\r\n                    (position < this.contentSize || this.endSnappingEnabled)) {\r\n                    this.updateSash(sash, SashState.MAXIMUM);\r\n                }\r\n                else {\r\n                    this.updateSash(sash, SashState.DISABLED);\r\n                }\r\n            }\r\n            else if (min && !max) {\r\n                this.updateSash(sash, SashState.MINIMUM);\r\n            }\r\n            else if (!min && max) {\r\n                this.updateSash(sash, SashState.MAXIMUM);\r\n            }\r\n            else {\r\n                this.updateSash(sash, SashState.ENABLED);\r\n            }\r\n        }\r\n    }\r\n    updateSash(sash, state) {\r\n        toggleClass(sash.container, 'disabled', state === SashState.DISABLED);\r\n        toggleClass(sash.container, 'enabled', state === SashState.ENABLED);\r\n        toggleClass(sash.container, 'maximum', state === SashState.MAXIMUM);\r\n        toggleClass(sash.container, 'minimum', state === SashState.MINIMUM);\r\n    }\r\n    createViewContainer() {\r\n        const element = document.createElement('div');\r\n        element.className = 'view-container';\r\n        return element;\r\n    }\r\n    createSashContainer() {\r\n        const element = document.createElement('div');\r\n        element.className = 'sash-container';\r\n        return element;\r\n    }\r\n    createContainer() {\r\n        const element = document.createElement('div');\r\n        const orientationClassname = this._orientation === Orientation.HORIZONTAL\r\n            ? 'horizontal'\r\n            : 'vertical';\r\n        element.className = `split-view-container ${orientationClassname}`;\r\n        return element;\r\n    }\r\n    dispose() {\r\n        this._onDidSashEnd.dispose();\r\n        this._onDidAddView.dispose();\r\n        this._onDidRemoveView.dispose();\r\n        for (let i = 0; i < this.element.children.length; i++) {\r\n            if (this.element.children.item(i) === this.element) {\r\n                this.element.removeChild(this.element);\r\n                break;\r\n            }\r\n        }\r\n        this.element.remove();\r\n    }\r\n}\r\n","import { toggleClass } from '../dom';\r\nimport { Emitter } from '../events';\r\nimport { CompositeDisposable } from '../lifecycle';\r\nimport { DragAndDropObserver } from './dnd';\r\nexport var Position;\r\n(function (Position) {\r\n    Position[\"Top\"] = \"Top\";\r\n    Position[\"Left\"] = \"Left\";\r\n    Position[\"Bottom\"] = \"Bottom\";\r\n    Position[\"Right\"] = \"Right\";\r\n    Position[\"Center\"] = \"Center\";\r\n})(Position || (Position = {}));\r\nfunction isBooleanValue(canDisplayOverlay) {\r\n    return typeof canDisplayOverlay === 'boolean';\r\n}\r\nexport class Droptarget extends CompositeDisposable {\r\n    constructor(element, options) {\r\n        super();\r\n        this.element = element;\r\n        this.options = options;\r\n        this._onDrop = new Emitter();\r\n        this.onDrop = this._onDrop.event;\r\n        this.addDisposables(this._onDrop, new DragAndDropObserver(this.element, {\r\n            onDragEnter: () => undefined,\r\n            onDragOver: (e) => {\r\n                const width = this.element.clientWidth;\r\n                const height = this.element.clientHeight;\r\n                if (width === 0 || height === 0) {\r\n                    return; // avoid div!0\r\n                }\r\n                const x = e.offsetX;\r\n                const y = e.offsetY;\r\n                const xp = (100 * x) / width;\r\n                const yp = (100 * y) / height;\r\n                const quadrant = this.calculateQuadrant(this.options.validOverlays, xp, yp);\r\n                if (isBooleanValue(this.options.canDisplayOverlay)) {\r\n                    if (!this.options.canDisplayOverlay) {\r\n                        return;\r\n                    }\r\n                }\r\n                else if (!this.options.canDisplayOverlay(e, quadrant)) {\r\n                    return;\r\n                }\r\n                if (!this.target) {\r\n                    this.target = document.createElement('div');\r\n                    this.target.className = 'drop-target-dropzone';\r\n                    this.overlay = document.createElement('div');\r\n                    this.overlay.className = 'drop-target-selection';\r\n                    this._state = Position.Center;\r\n                    this.target.appendChild(this.overlay);\r\n                    this.element.classList.add('drop-target');\r\n                    this.element.append(this.target);\r\n                }\r\n                if (this.options.validOverlays === 'none') {\r\n                    return;\r\n                }\r\n                if (!this.target || !this.overlay) {\r\n                    return;\r\n                }\r\n                const isSmallX = width < 100;\r\n                const isSmallY = height < 100;\r\n                this.toggleClasses(quadrant, isSmallX, isSmallY);\r\n                this.setState(quadrant);\r\n            },\r\n            onDragLeave: () => {\r\n                this.removeDropTarget();\r\n            },\r\n            onDragEnd: () => {\r\n                this.removeDropTarget();\r\n            },\r\n            onDrop: (e) => {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n                const state = this._state;\r\n                this.removeDropTarget();\r\n                if (state) {\r\n                    this._onDrop.fire({ position: state, nativeEvent: e });\r\n                }\r\n            },\r\n        }));\r\n    }\r\n    get state() {\r\n        return this._state;\r\n    }\r\n    set validOverlays(value) {\r\n        this.options.validOverlays = value;\r\n    }\r\n    set canDisplayOverlay(value) {\r\n        this.options.canDisplayOverlay = value;\r\n    }\r\n    dispose() {\r\n        this.removeDropTarget();\r\n    }\r\n    toggleClasses(quadrant, isSmallX, isSmallY) {\r\n        if (!this.overlay) {\r\n            return;\r\n        }\r\n        const isLeft = quadrant === 'left';\r\n        const isRight = quadrant === 'right';\r\n        const isTop = quadrant === 'top';\r\n        const isBottom = quadrant === 'bottom';\r\n        toggleClass(this.overlay, 'right', !isSmallX && isRight);\r\n        toggleClass(this.overlay, 'left', !isSmallX && isLeft);\r\n        toggleClass(this.overlay, 'top', !isSmallY && isTop);\r\n        toggleClass(this.overlay, 'bottom', !isSmallY && isBottom);\r\n        toggleClass(this.overlay, 'small-right', isSmallX && isRight);\r\n        toggleClass(this.overlay, 'small-left', isSmallX && isLeft);\r\n        toggleClass(this.overlay, 'small-top', isSmallY && isTop);\r\n        toggleClass(this.overlay, 'small-bottom', isSmallY && isBottom);\r\n    }\r\n    setState(quadrant) {\r\n        switch (quadrant) {\r\n            case 'top':\r\n                this._state = Position.Top;\r\n                break;\r\n            case 'left':\r\n                this._state = Position.Left;\r\n                break;\r\n            case 'bottom':\r\n                this._state = Position.Bottom;\r\n                break;\r\n            case 'right':\r\n                this._state = Position.Right;\r\n                break;\r\n            default:\r\n                this._state = Position.Center;\r\n                break;\r\n        }\r\n    }\r\n    calculateQuadrant(overlayType, xp, yp) {\r\n        switch (overlayType) {\r\n            case 'all':\r\n                if (xp < 20) {\r\n                    return 'left';\r\n                }\r\n                if (xp > 80) {\r\n                    return 'right';\r\n                }\r\n                if (yp < 20) {\r\n                    return 'top';\r\n                }\r\n                if (yp > 80) {\r\n                    return 'bottom';\r\n                }\r\n                break;\r\n            case 'vertical':\r\n                if (yp < 50) {\r\n                    return 'top';\r\n                }\r\n                return 'bottom';\r\n            case 'horizontal':\r\n                if (xp < 50) {\r\n                    return 'left';\r\n                }\r\n                return 'right';\r\n        }\r\n        return null;\r\n    }\r\n    removeDropTarget() {\r\n        if (this.target) {\r\n            this._state = undefined;\r\n            this.element.removeChild(this.target);\r\n            this.target = undefined;\r\n            this.element.classList.remove('drop-target');\r\n        }\r\n    }\r\n}\r\n","import { Splitview, Orientation, } from '../splitview/core/splitview';\r\nimport { CompositeDisposable } from '../lifecycle';\r\nimport { Emitter } from '../events';\r\nimport { addClasses, removeClasses } from '../dom';\r\nexport class Paneview extends CompositeDisposable {\r\n    constructor(container, options) {\r\n        var _a;\r\n        super();\r\n        this.paneItems = [];\r\n        this.skipAnimation = false;\r\n        this._onDidChange = new Emitter();\r\n        this.onDidChange = this._onDidChange.event;\r\n        this._orientation = (_a = options.orientation) !== null && _a !== void 0 ? _a : Orientation.VERTICAL;\r\n        this.element = document.createElement('div');\r\n        this.element.className = 'pane-container';\r\n        container.appendChild(this.element);\r\n        this.splitview = new Splitview(this.element, {\r\n            orientation: this._orientation,\r\n            proportionalLayout: false,\r\n            descriptor: options.descriptor,\r\n        });\r\n        // if we've added views from the descriptor we need to\r\n        // add the panes to our Pane array and setup animation\r\n        this.getPanes().forEach((pane) => {\r\n            const disposable = new CompositeDisposable(pane.onDidChangeExpansionState(() => {\r\n                this.setupAnimation();\r\n                this._onDidChange.fire(undefined);\r\n            }));\r\n            const paneItem = {\r\n                pane,\r\n                disposable: {\r\n                    dispose: () => {\r\n                        disposable.dispose();\r\n                    },\r\n                },\r\n            };\r\n            this.paneItems.push(paneItem);\r\n            pane.orthogonalSize = this.splitview.orthogonalSize;\r\n        });\r\n        this.addDisposables(this._onDidChange, this.splitview.onDidSashEnd(() => {\r\n            this._onDidChange.fire(undefined);\r\n        }), this.splitview.onDidAddView(() => {\r\n            this._onDidChange.fire();\r\n        }), this.splitview.onDidRemoveView(() => {\r\n            this._onDidChange.fire();\r\n        }));\r\n    }\r\n    get onDidAddView() {\r\n        return this.splitview.onDidAddView;\r\n    }\r\n    get onDidRemoveView() {\r\n        return this.splitview.onDidRemoveView;\r\n    }\r\n    get minimumSize() {\r\n        return this.splitview.minimumSize;\r\n    }\r\n    get maximumSize() {\r\n        return this.splitview.maximumSize;\r\n    }\r\n    get orientation() {\r\n        return this.splitview.orientation;\r\n    }\r\n    get size() {\r\n        return this.splitview.size;\r\n    }\r\n    get orthogonalSize() {\r\n        return this.splitview.orthogonalSize;\r\n    }\r\n    addPane(pane, size, index = this.splitview.length, skipLayout = false) {\r\n        const disposable = pane.onDidChangeExpansionState(() => {\r\n            this.setupAnimation();\r\n            this._onDidChange.fire(undefined);\r\n        });\r\n        const paneItem = {\r\n            pane,\r\n            disposable: {\r\n                dispose: () => {\r\n                    disposable.dispose();\r\n                },\r\n            },\r\n        };\r\n        this.paneItems.splice(index, 0, paneItem);\r\n        pane.orthogonalSize = this.splitview.orthogonalSize;\r\n        this.splitview.addView(pane, size, index, skipLayout);\r\n    }\r\n    getViewSize(index) {\r\n        return this.splitview.getViewSize(index);\r\n    }\r\n    getPanes() {\r\n        return this.splitview.getViews();\r\n    }\r\n    removePane(index, options = { skipDispose: false }) {\r\n        const paneItem = this.paneItems.splice(index, 1)[0];\r\n        this.splitview.removeView(index);\r\n        if (!options.skipDispose) {\r\n            paneItem.disposable.dispose();\r\n            paneItem.pane.dispose();\r\n        }\r\n        return paneItem;\r\n    }\r\n    moveView(from, to) {\r\n        if (from === to) {\r\n            return;\r\n        }\r\n        const view = this.removePane(from, { skipDispose: true });\r\n        this.skipAnimation = true;\r\n        try {\r\n            this.addPane(view.pane, view.pane.size, to, false);\r\n        }\r\n        finally {\r\n            this.skipAnimation = false;\r\n        }\r\n    }\r\n    layout(size, orthogonalSize) {\r\n        this.splitview.layout(size, orthogonalSize);\r\n    }\r\n    setupAnimation() {\r\n        if (this.skipAnimation) {\r\n            return;\r\n        }\r\n        if (this.animationTimer) {\r\n            clearTimeout(this.animationTimer);\r\n            this.animationTimer = undefined;\r\n        }\r\n        addClasses(this.element, 'animated');\r\n        this.animationTimer = setTimeout(() => {\r\n            this.animationTimer = undefined;\r\n            removeClasses(this.element, 'animated');\r\n        }, 200);\r\n    }\r\n    dispose() {\r\n        super.dispose();\r\n        if (this.animationTimer) {\r\n            clearTimeout(this.animationTimer);\r\n            this.animationTimer = undefined;\r\n        }\r\n        this.paneItems.forEach((paneItem) => {\r\n            paneItem.disposable.dispose();\r\n            paneItem.pane.dispose();\r\n        });\r\n        this.paneItems = [];\r\n        this.splitview.dispose();\r\n        this.element.remove();\r\n    }\r\n}\r\n","import { addDisposableListener } from '../events';\r\nimport { CompositeDisposable } from '../lifecycle';\r\nexport class DragAndDropObserver extends CompositeDisposable {\r\n    constructor(element, callbacks) {\r\n        super();\r\n        this.element = element;\r\n        this.callbacks = callbacks;\r\n        // A helper to fix issues with repeated DRAG_ENTER / DRAG_LEAVE\r\n        // calls see https://github.com/microsoft/vscode/issues/14470\r\n        // when the element has child elements where the events are fired\r\n        // repeadedly.\r\n        this.counter = 0;\r\n        this.registerListeners();\r\n    }\r\n    registerListeners() {\r\n        this.addDisposables(addDisposableListener(this.element, 'dragenter', (e) => {\r\n            this.counter++;\r\n            this.callbacks.onDragEnter(e);\r\n        }));\r\n        this.addDisposables(addDisposableListener(this.element, 'dragover', (e) => {\r\n            e.preventDefault(); // needed so that the drop event fires (https://stackoverflow.com/questions/21339924/drop-event-not-firing-in-chrome)\r\n            if (this.callbacks.onDragOver) {\r\n                this.callbacks.onDragOver(e);\r\n            }\r\n        }));\r\n        this.addDisposables(addDisposableListener(this.element, 'dragleave', (e) => {\r\n            this.counter--;\r\n            if (this.counter === 0) {\r\n                this.callbacks.onDragLeave(e);\r\n            }\r\n        }));\r\n        this.addDisposables(addDisposableListener(this.element, 'dragend', (e) => {\r\n            this.counter = 0;\r\n            this.callbacks.onDragEnd(e);\r\n        }));\r\n        this.addDisposables(addDisposableListener(this.element, 'drop', (e) => {\r\n            this.counter = 0;\r\n            this.callbacks.onDrop(e);\r\n        }));\r\n    }\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\r\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/grid\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { Orientation, } from '../splitview/core/splitview';\r\nimport { Emitter } from '../events';\r\nexport class LeafNode {\r\n    constructor(view, orientation, orthogonalSize, size = 0) {\r\n        this.view = view;\r\n        this.orientation = orientation;\r\n        this._onDidChange = new Emitter();\r\n        this.onDidChange = this._onDidChange.event;\r\n        this._orthogonalSize = orthogonalSize;\r\n        this._size = size;\r\n        this._disposable = this.view.onDidChange((event) => {\r\n            if (event) {\r\n                this._onDidChange.fire(this.orientation === Orientation.VERTICAL\r\n                    ? event.width\r\n                    : event.height);\r\n            }\r\n            else {\r\n                this._onDidChange.fire(undefined);\r\n            }\r\n        });\r\n    }\r\n    get minimumWidth() {\r\n        return this.view.minimumWidth;\r\n    }\r\n    get maximumWidth() {\r\n        return this.view.maximumWidth;\r\n    }\r\n    get minimumHeight() {\r\n        return this.view.minimumHeight;\r\n    }\r\n    get maximumHeight() {\r\n        return this.view.maximumHeight;\r\n    }\r\n    get priority() {\r\n        return this.view.priority;\r\n    }\r\n    get snap() {\r\n        return this.view.snap;\r\n    }\r\n    get minimumSize() {\r\n        return this.orientation === Orientation.HORIZONTAL\r\n            ? this.minimumHeight\r\n            : this.minimumWidth;\r\n    }\r\n    get maximumSize() {\r\n        return this.orientation === Orientation.HORIZONTAL\r\n            ? this.maximumHeight\r\n            : this.maximumWidth;\r\n    }\r\n    get minimumOrthogonalSize() {\r\n        return this.orientation === Orientation.HORIZONTAL\r\n            ? this.minimumWidth\r\n            : this.minimumHeight;\r\n    }\r\n    get maximumOrthogonalSize() {\r\n        return this.orientation === Orientation.HORIZONTAL\r\n            ? this.maximumWidth\r\n            : this.maximumHeight;\r\n    }\r\n    get orthogonalSize() {\r\n        return this._orthogonalSize;\r\n    }\r\n    get size() {\r\n        return this._size;\r\n    }\r\n    get element() {\r\n        return this.view.element;\r\n    }\r\n    get width() {\r\n        return this.orientation === Orientation.HORIZONTAL\r\n            ? this.orthogonalSize\r\n            : this.size;\r\n    }\r\n    get height() {\r\n        return this.orientation === Orientation.HORIZONTAL\r\n            ? this.size\r\n            : this.orthogonalSize;\r\n    }\r\n    setVisible(visible) {\r\n        if (this.view.setVisible) {\r\n            this.view.setVisible(visible);\r\n            this._onDidChange.fire(undefined);\r\n        }\r\n    }\r\n    layout(size, orthogonalSize) {\r\n        this._size = size;\r\n        this._orthogonalSize = orthogonalSize;\r\n        this.view.layout(this.width, this.height);\r\n    }\r\n    dispose() {\r\n        this._onDidChange.dispose();\r\n        this._disposable.dispose();\r\n    }\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\r\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/grid\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { Splitview, Orientation, LayoutPriority, } from '../splitview/core/splitview';\r\nimport { Emitter, Event } from '../events';\r\nimport { LeafNode } from './leafNode';\r\nimport { CompositeDisposable, Disposable } from '../lifecycle';\r\nexport class BranchNode extends CompositeDisposable {\r\n    constructor(orientation, proportionalLayout, styles, size, orthogonalSize, childDescriptors) {\r\n        super();\r\n        this.orientation = orientation;\r\n        this.proportionalLayout = proportionalLayout;\r\n        this.styles = styles;\r\n        this.children = [];\r\n        this._onDidChange = new Emitter();\r\n        this.onDidChange = this._onDidChange.event;\r\n        this._childrenDisposable = Disposable.NONE;\r\n        this._orthogonalSize = orthogonalSize;\r\n        this._size = size;\r\n        this.element = document.createElement('div');\r\n        this.element.className = 'branch-node';\r\n        if (!childDescriptors) {\r\n            this.splitview = new Splitview(this.element, {\r\n                orientation: this.orientation,\r\n                proportionalLayout,\r\n                styles,\r\n            });\r\n            this.splitview.layout(this.size, this.orthogonalSize);\r\n        }\r\n        else {\r\n            const descriptor = {\r\n                views: childDescriptors.map((childDescriptor) => {\r\n                    return {\r\n                        view: childDescriptor.node,\r\n                        size: childDescriptor.node.size,\r\n                        visible: childDescriptor.node instanceof LeafNode &&\r\n                            childDescriptor.visible !== undefined\r\n                            ? childDescriptor.visible\r\n                            : true,\r\n                    };\r\n                }),\r\n                size: this.size,\r\n            };\r\n            this.children = childDescriptors.map((c) => c.node);\r\n            this.splitview = new Splitview(this.element, {\r\n                orientation: this.orientation,\r\n                descriptor,\r\n                proportionalLayout,\r\n            });\r\n        }\r\n        this.addDisposables(this._onDidChange, this.splitview.onDidSashEnd(() => {\r\n            this._onDidChange.fire(undefined);\r\n        }));\r\n        this.setupChildrenEvents();\r\n    }\r\n    get width() {\r\n        return this.orientation === Orientation.HORIZONTAL\r\n            ? this.size\r\n            : this.orthogonalSize;\r\n    }\r\n    get height() {\r\n        return this.orientation === Orientation.HORIZONTAL\r\n            ? this.orthogonalSize\r\n            : this.size;\r\n    }\r\n    get minimumSize() {\r\n        return this.children.length === 0\r\n            ? 0\r\n            : Math.max(...this.children.map((c) => c.minimumOrthogonalSize));\r\n    }\r\n    get maximumSize() {\r\n        return Math.min(...this.children.map((c) => c.maximumOrthogonalSize));\r\n    }\r\n    get minimumOrthogonalSize() {\r\n        return this.splitview.minimumSize;\r\n    }\r\n    get maximumOrthogonalSize() {\r\n        return this.splitview.maximumSize;\r\n    }\r\n    get orthogonalSize() {\r\n        return this._orthogonalSize;\r\n    }\r\n    get size() {\r\n        return this._size;\r\n    }\r\n    get minimumWidth() {\r\n        return this.orientation === Orientation.HORIZONTAL\r\n            ? this.minimumOrthogonalSize\r\n            : this.minimumSize;\r\n    }\r\n    get minimumHeight() {\r\n        return this.orientation === Orientation.HORIZONTAL\r\n            ? this.minimumSize\r\n            : this.minimumOrthogonalSize;\r\n    }\r\n    get maximumWidth() {\r\n        return this.orientation === Orientation.HORIZONTAL\r\n            ? this.maximumOrthogonalSize\r\n            : this.maximumSize;\r\n    }\r\n    get maximumHeight() {\r\n        return this.orientation === Orientation.HORIZONTAL\r\n            ? this.maximumSize\r\n            : this.maximumOrthogonalSize;\r\n    }\r\n    get priority() {\r\n        if (this.children.length === 0) {\r\n            return LayoutPriority.Normal;\r\n        }\r\n        const priorities = this.children.map((c) => typeof c.priority === 'undefined'\r\n            ? LayoutPriority.Normal\r\n            : c.priority);\r\n        if (priorities.some((p) => p === LayoutPriority.High)) {\r\n            return LayoutPriority.High;\r\n        }\r\n        else if (priorities.some((p) => p === LayoutPriority.Low)) {\r\n            return LayoutPriority.Low;\r\n        }\r\n        return LayoutPriority.Normal;\r\n    }\r\n    setVisible(visible) {\r\n        for (const child of this.children) {\r\n            child.setVisible(visible);\r\n        }\r\n    }\r\n    isChildVisible(index) {\r\n        if (index < 0 || index >= this.children.length) {\r\n            throw new Error('Invalid index');\r\n        }\r\n        return this.splitview.isViewVisible(index);\r\n    }\r\n    setChildVisible(index, visible) {\r\n        if (index < 0 || index >= this.children.length) {\r\n            throw new Error('Invalid index');\r\n        }\r\n        if (this.splitview.isViewVisible(index) === visible) {\r\n            return;\r\n        }\r\n        this.splitview.setViewVisible(index, visible);\r\n    }\r\n    moveChild(from, to) {\r\n        if (from === to) {\r\n            return;\r\n        }\r\n        if (from < 0 || from >= this.children.length) {\r\n            throw new Error('Invalid from index');\r\n        }\r\n        if (from < to) {\r\n            to--;\r\n        }\r\n        this.splitview.moveView(from, to);\r\n        const child = this._removeChild(from);\r\n        this._addChild(child, to);\r\n    }\r\n    getChildSize(index) {\r\n        if (index < 0 || index >= this.children.length) {\r\n            throw new Error('Invalid index');\r\n        }\r\n        return this.splitview.getViewSize(index);\r\n    }\r\n    resizeChild(index, size) {\r\n        if (index < 0 || index >= this.children.length) {\r\n            throw new Error('Invalid index');\r\n        }\r\n        this.splitview.resizeView(index, size);\r\n    }\r\n    layout(size, orthogonalSize) {\r\n        this._size = orthogonalSize;\r\n        this._orthogonalSize = size;\r\n        this.splitview.layout(this.size, this.orthogonalSize);\r\n    }\r\n    addChild(node, size, index, skipLayout) {\r\n        if (index < 0 || index > this.children.length) {\r\n            throw new Error('Invalid index');\r\n        }\r\n        this.splitview.addView(node, size, index, skipLayout);\r\n        this._addChild(node, index);\r\n    }\r\n    getChildCachedVisibleSize(index) {\r\n        if (index < 0 || index >= this.children.length) {\r\n            throw new Error('Invalid index');\r\n        }\r\n        return this.splitview.getViewCachedVisibleSize(index);\r\n    }\r\n    removeChild(index, sizing) {\r\n        if (index < 0 || index >= this.children.length) {\r\n            throw new Error('Invalid index');\r\n        }\r\n        this.splitview.removeView(index, sizing);\r\n        this._removeChild(index);\r\n    }\r\n    _addChild(node, index) {\r\n        this.children.splice(index, 0, node);\r\n        this.setupChildrenEvents();\r\n    }\r\n    _removeChild(index) {\r\n        const [child] = this.children.splice(index, 1);\r\n        this.setupChildrenEvents();\r\n        return child;\r\n    }\r\n    setupChildrenEvents() {\r\n        this._childrenDisposable.dispose();\r\n        this._childrenDisposable = Event.any(...this.children.map((c) => c.onDidChange))(() => {\r\n            /**\r\n             * indicate a change has occured to allows any re-rendering but don't bubble\r\n             * event because that was specific to this branch\r\n             */\r\n            this._onDidChange.fire(undefined);\r\n        });\r\n    }\r\n    dispose() {\r\n        super.dispose();\r\n        this._childrenDisposable.dispose();\r\n        this.children.forEach((child) => child.dispose());\r\n        this.splitview.dispose();\r\n    }\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\r\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/grid\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { Orientation, Sizing, } from '../splitview/core/splitview';\r\nimport { Position } from '../dnd/droptarget';\r\nimport { tail } from '../array';\r\nimport { LeafNode } from './leafNode';\r\nimport { BranchNode } from './branchNode';\r\nimport { Emitter } from '../events';\r\nimport { MutableDisposable } from '../lifecycle';\r\nfunction findLeaf(candiateNode, last) {\r\n    if (candiateNode instanceof LeafNode) {\r\n        return candiateNode;\r\n    }\r\n    if (candiateNode instanceof BranchNode) {\r\n        return findLeaf(candiateNode.children[last ? candiateNode.children.length - 1 : 0], last);\r\n    }\r\n    throw new Error('invalid node');\r\n}\r\nfunction flipNode(node, size, orthogonalSize) {\r\n    if (node instanceof BranchNode) {\r\n        const result = new BranchNode(orthogonal(node.orientation), node.proportionalLayout, node.styles, size, orthogonalSize);\r\n        let totalSize = 0;\r\n        for (let i = node.children.length - 1; i >= 0; i--) {\r\n            const child = node.children[i];\r\n            const childSize = child instanceof BranchNode ? child.orthogonalSize : child.size;\r\n            let newSize = node.size === 0\r\n                ? 0\r\n                : Math.round((size * childSize) / node.size);\r\n            totalSize += newSize;\r\n            // The last view to add should adjust to rounding errors\r\n            if (i === 0) {\r\n                newSize += size - totalSize;\r\n            }\r\n            result.addChild(flipNode(child, orthogonalSize, newSize), newSize, 0, true);\r\n        }\r\n        return result;\r\n    }\r\n    else {\r\n        return new LeafNode(node.view, orthogonal(node.orientation), orthogonalSize);\r\n    }\r\n}\r\nexport function indexInParent(element) {\r\n    const parentElement = element.parentElement;\r\n    if (!parentElement) {\r\n        throw new Error('Invalid grid element');\r\n    }\r\n    let el = parentElement.firstElementChild;\r\n    let index = 0;\r\n    while (el !== element && el !== parentElement.lastElementChild && el) {\r\n        el = el.nextElementSibling;\r\n        index++;\r\n    }\r\n    return index;\r\n}\r\n/**\r\n * Find the grid location of a specific DOM element by traversing the parent\r\n * chain and finding each child index on the way.\r\n *\r\n * This will break as soon as DOM structures of the Splitview or Gridview change.\r\n */\r\nexport function getGridLocation(element) {\r\n    const parentElement = element.parentElement;\r\n    if (!parentElement) {\r\n        throw new Error('Invalid grid element');\r\n    }\r\n    if (/\\bgrid-view\\b/.test(parentElement.className)) {\r\n        return [];\r\n    }\r\n    const index = indexInParent(parentElement);\r\n    const ancestor = parentElement.parentElement.parentElement.parentElement;\r\n    return [...getGridLocation(ancestor), index];\r\n}\r\nexport function getRelativeLocation(rootOrientation, location, direction) {\r\n    const orientation = getLocationOrientation(rootOrientation, location);\r\n    const directionOrientation = getDirectionOrientation(direction);\r\n    if (orientation === directionOrientation) {\r\n        const [rest, _index] = tail(location);\r\n        let index = _index;\r\n        if (direction === Position.Right || direction === Position.Bottom) {\r\n            index += 1;\r\n        }\r\n        return [...rest, index];\r\n    }\r\n    else {\r\n        const index = direction === Position.Right || direction === Position.Bottom\r\n            ? 1\r\n            : 0;\r\n        return [...location, index];\r\n    }\r\n}\r\nexport function getDirectionOrientation(direction) {\r\n    return direction === Position.Top || direction === Position.Bottom\r\n        ? Orientation.VERTICAL\r\n        : Orientation.HORIZONTAL;\r\n}\r\nexport function getLocationOrientation(rootOrientation, location) {\r\n    return location.length % 2 === 0\r\n        ? orthogonal(rootOrientation)\r\n        : rootOrientation;\r\n}\r\nexport const orthogonal = (orientation) => orientation === Orientation.HORIZONTAL\r\n    ? Orientation.VERTICAL\r\n    : Orientation.HORIZONTAL;\r\nexport function isGridBranchNode(node) {\r\n    return !!node.children;\r\n}\r\nconst serializeBranchNode = (node, orientation) => {\r\n    const size = orientation === Orientation.VERTICAL ? node.box.width : node.box.height;\r\n    if (!isGridBranchNode(node)) {\r\n        if (typeof node.cachedVisibleSize === 'number') {\r\n            return {\r\n                type: 'leaf',\r\n                data: node.view.toJSON(),\r\n                size: node.cachedVisibleSize,\r\n                visible: false,\r\n            };\r\n        }\r\n        return { type: 'leaf', data: node.view.toJSON(), size };\r\n    }\r\n    return {\r\n        type: 'branch',\r\n        data: node.children.map((c) => serializeBranchNode(c, orthogonal(orientation))),\r\n        size,\r\n    };\r\n};\r\nexport class Gridview {\r\n    constructor(proportionalLayout, styles, orientation) {\r\n        this.proportionalLayout = proportionalLayout;\r\n        this.styles = styles;\r\n        this.disposable = new MutableDisposable();\r\n        this._onDidChange = new Emitter();\r\n        this.onDidChange = this._onDidChange.event;\r\n        this.element = document.createElement('div');\r\n        this.element.className = 'grid-view';\r\n        this.root = new BranchNode(orientation, proportionalLayout, styles, 0, 0);\r\n    }\r\n    serialize() {\r\n        const root = serializeBranchNode(this.getView(), this.orientation);\r\n        return {\r\n            root,\r\n            width: this.width,\r\n            height: this.height,\r\n            orientation: this.orientation,\r\n        };\r\n    }\r\n    dispose() {\r\n        this.disposable.dispose();\r\n        this._onDidChange.dispose();\r\n        this.root.dispose();\r\n        this.element.remove();\r\n    }\r\n    clear() {\r\n        const orientation = this.root.orientation;\r\n        this.root = new BranchNode(orientation, this.proportionalLayout, this.styles, this.root.size, this.root.orthogonalSize);\r\n    }\r\n    deserialize(json, deserializer) {\r\n        const orientation = json.orientation;\r\n        const height = orientation === Orientation.VERTICAL ? json.height : json.width;\r\n        this._deserialize(json.root, orientation, deserializer, height);\r\n    }\r\n    _deserialize(root, orientation, deserializer, orthogonalSize) {\r\n        this.root = this._deserializeNode(root, orientation, deserializer, orthogonalSize, true);\r\n    }\r\n    _deserializeNode(node, orientation, deserializer, orthogonalSize, isRoot = false) {\r\n        let result;\r\n        if (node.type === 'branch') {\r\n            const serializedChildren = node.data;\r\n            const children = serializedChildren.map((serializedChild) => {\r\n                return {\r\n                    node: this._deserializeNode(serializedChild, orthogonal(orientation), deserializer, node.size),\r\n                    visible: serializedChild.visible,\r\n                };\r\n            });\r\n            // HORIZONTAL => height=orthogonalsize width=size\r\n            // VERTICAL => height=size width=orthogonalsize\r\n            result = new BranchNode(orientation, this.proportionalLayout, this.styles, isRoot ? orthogonalSize : node.size, isRoot ? node.size : orthogonalSize, children);\r\n        }\r\n        else {\r\n            result = new LeafNode(deserializer.fromJSON(node), orientation, orthogonalSize, node.size);\r\n        }\r\n        return result;\r\n    }\r\n    get orientation() {\r\n        return this.root.orientation;\r\n    }\r\n    set orientation(orientation) {\r\n        if (this.root.orientation === orientation) {\r\n            return;\r\n        }\r\n        const { size, orthogonalSize } = this.root;\r\n        this.root = flipNode(this.root, orthogonalSize, size);\r\n        this.root.layout(size, orthogonalSize);\r\n    }\r\n    get root() {\r\n        return this._root;\r\n    }\r\n    set root(root) {\r\n        const oldRoot = this._root;\r\n        if (oldRoot) {\r\n            oldRoot.dispose();\r\n            this.element.removeChild(oldRoot.element);\r\n        }\r\n        this._root = root;\r\n        this.element.appendChild(this._root.element);\r\n        this.disposable.value = this._root.onDidChange((e) => {\r\n            this._onDidChange.fire(e);\r\n        });\r\n    }\r\n    next(location) {\r\n        return this.progmaticSelect(location);\r\n    }\r\n    previous(location) {\r\n        return this.progmaticSelect(location, true);\r\n    }\r\n    getView(location) {\r\n        const node = location ? this.getNode(location)[1] : this.root;\r\n        return this._getViews(node, this.orientation);\r\n    }\r\n    _getViews(node, orientation, cachedVisibleSize) {\r\n        const box = { height: node.height, width: node.width };\r\n        if (node instanceof LeafNode) {\r\n            return { box, view: node.view, cachedVisibleSize };\r\n        }\r\n        const children = [];\r\n        for (let i = 0; i < node.children.length; i++) {\r\n            const child = node.children[i];\r\n            const nodeCachedVisibleSize = node.getChildCachedVisibleSize(i);\r\n            children.push(this._getViews(child, orthogonal(orientation), nodeCachedVisibleSize));\r\n        }\r\n        return { box, children };\r\n    }\r\n    progmaticSelect(location, reverse = false) {\r\n        const [path, node] = this.getNode(location);\r\n        if (!(node instanceof LeafNode)) {\r\n            throw new Error('invalid location');\r\n        }\r\n        for (let i = path.length - 1; i > -1; i--) {\r\n            const n = path[i];\r\n            const l = location[i] || 0;\r\n            const canProgressInCurrentLevel = reverse\r\n                ? l - 1 > -1\r\n                : l + 1 < n.children.length;\r\n            if (canProgressInCurrentLevel) {\r\n                return findLeaf(n.children[reverse ? l - 1 : l + 1], reverse);\r\n            }\r\n        }\r\n        return findLeaf(this.root, reverse);\r\n    }\r\n    get width() {\r\n        return this.root.width;\r\n    }\r\n    get height() {\r\n        return this.root.height;\r\n    }\r\n    get minimumWidth() {\r\n        return this.root.minimumWidth;\r\n    }\r\n    get minimumHeight() {\r\n        return this.root.minimumHeight;\r\n    }\r\n    get maximumWidth() {\r\n        return this.root.maximumHeight;\r\n    }\r\n    get maximumHeight() {\r\n        return this.root.maximumHeight;\r\n    }\r\n    isViewVisible(location) {\r\n        const [rest, index] = tail(location);\r\n        const [, parent] = this.getNode(rest);\r\n        if (!(parent instanceof BranchNode)) {\r\n            throw new Error('Invalid from location');\r\n        }\r\n        return parent.isChildVisible(index);\r\n    }\r\n    setViewVisible(location, visible) {\r\n        const [rest, index] = tail(location);\r\n        const [, parent] = this.getNode(rest);\r\n        if (!(parent instanceof BranchNode)) {\r\n            throw new Error('Invalid from location');\r\n        }\r\n        parent.setChildVisible(index, visible);\r\n    }\r\n    moveView(parentLocation, from, to) {\r\n        const [, parent] = this.getNode(parentLocation);\r\n        if (!(parent instanceof BranchNode)) {\r\n            throw new Error('Invalid location');\r\n        }\r\n        parent.moveChild(from, to);\r\n    }\r\n    addView(view, size, location) {\r\n        const [rest, index] = tail(location);\r\n        const [pathToParent, parent] = this.getNode(rest);\r\n        if (parent instanceof BranchNode) {\r\n            const node = new LeafNode(view, orthogonal(parent.orientation), parent.orthogonalSize);\r\n            parent.addChild(node, size, index);\r\n        }\r\n        else {\r\n            const [grandParent, ..._] = [...pathToParent].reverse();\r\n            const [parentIndex, ...__] = [...rest].reverse();\r\n            let newSiblingSize = 0;\r\n            const newSiblingCachedVisibleSize = grandParent.getChildCachedVisibleSize(parentIndex);\r\n            if (typeof newSiblingCachedVisibleSize === 'number') {\r\n                newSiblingSize = Sizing.Invisible(newSiblingCachedVisibleSize);\r\n            }\r\n            grandParent.removeChild(parentIndex);\r\n            const newParent = new BranchNode(parent.orientation, this.proportionalLayout, this.styles, parent.size, parent.orthogonalSize);\r\n            grandParent.addChild(newParent, parent.size, parentIndex);\r\n            const newSibling = new LeafNode(parent.view, grandParent.orientation, parent.size);\r\n            newParent.addChild(newSibling, newSiblingSize, 0);\r\n            if (typeof size !== 'number' && size.type === 'split') {\r\n                size = { type: 'split', index: 0 };\r\n            }\r\n            const node = new LeafNode(view, grandParent.orientation, parent.size);\r\n            newParent.addChild(node, size, index);\r\n        }\r\n    }\r\n    remove(view, sizing) {\r\n        const location = getGridLocation(view.element);\r\n        return this.removeView(location, sizing);\r\n    }\r\n    removeView(location, sizing) {\r\n        const [rest, index] = tail(location);\r\n        const [pathToParent, parent] = this.getNode(rest);\r\n        if (!(parent instanceof BranchNode)) {\r\n            throw new Error('Invalid location');\r\n        }\r\n        const node = parent.children[index];\r\n        if (!(node instanceof LeafNode)) {\r\n            throw new Error('Invalid location');\r\n        }\r\n        parent.removeChild(index, sizing);\r\n        if (parent.children.length === 0) {\r\n            return node.view;\r\n        }\r\n        if (parent.children.length > 1) {\r\n            return node.view;\r\n        }\r\n        const sibling = parent.children[0];\r\n        if (pathToParent.length === 0) {\r\n            // parent is root\r\n            if (sibling instanceof LeafNode) {\r\n                return node.view;\r\n            }\r\n            // we must promote sibling to be the new root\r\n            parent.removeChild(0, sizing);\r\n            this.root = sibling;\r\n            return node.view;\r\n        }\r\n        const [grandParent, ..._] = [...pathToParent].reverse();\r\n        const [parentIndex, ...__] = [...rest].reverse();\r\n        const isSiblingVisible = parent.isChildVisible(0);\r\n        parent.removeChild(0, sizing);\r\n        const sizes = grandParent.children.map((_size, i) => grandParent.getChildSize(i));\r\n        grandParent.removeChild(parentIndex, sizing);\r\n        if (sibling instanceof BranchNode) {\r\n            sizes.splice(parentIndex, 1, ...sibling.children.map((c) => c.size));\r\n            for (let i = 0; i < sibling.children.length; i++) {\r\n                const child = sibling.children[i];\r\n                grandParent.addChild(child, child.size, parentIndex + i);\r\n            }\r\n        }\r\n        else {\r\n            const newSibling = new LeafNode(sibling.view, orthogonal(sibling.orientation), sibling.size);\r\n            const siblingSizing = isSiblingVisible\r\n                ? sibling.orthogonalSize\r\n                : Sizing.Invisible(sibling.orthogonalSize);\r\n            grandParent.addChild(newSibling, siblingSizing, parentIndex);\r\n        }\r\n        for (let i = 0; i < sizes.length; i++) {\r\n            grandParent.resizeChild(i, sizes[i]);\r\n        }\r\n        return node.view;\r\n    }\r\n    layout(width, height) {\r\n        const [size, orthogonalSize] = this.root.orientation === Orientation.HORIZONTAL\r\n            ? [height, width]\r\n            : [width, height];\r\n        this.root.layout(size, orthogonalSize);\r\n    }\r\n    getNode(location, node = this.root, path = []) {\r\n        if (location.length === 0) {\r\n            return [path, node];\r\n        }\r\n        if (!(node instanceof BranchNode)) {\r\n            throw new Error('Invalid location');\r\n        }\r\n        const [index, ...rest] = location;\r\n        if (index < 0 || index >= node.children.length) {\r\n            throw new Error('Invalid location');\r\n        }\r\n        const child = node.children[index];\r\n        path.push(node);\r\n        return this.getNode(rest, child, path);\r\n    }\r\n}\r\n","import { Emitter } from '../events';\r\nexport class SplitviewApi {\r\n    constructor(component) {\r\n        this.component = component;\r\n    }\r\n    get minimumSize() {\r\n        return this.component.minimumSize;\r\n    }\r\n    get maximumSize() {\r\n        return this.component.maximumSize;\r\n    }\r\n    get height() {\r\n        return this.component.height;\r\n    }\r\n    get width() {\r\n        return this.component.width;\r\n    }\r\n    get length() {\r\n        return this.component.length;\r\n    }\r\n    get orientation() {\r\n        return this.component.orientation;\r\n    }\r\n    get panels() {\r\n        return this.component.panels;\r\n    }\r\n    get onDidLayoutFromJSON() {\r\n        return this.component.onDidLayoutFromJSON;\r\n    }\r\n    get onDidLayoutChange() {\r\n        return this.component.onDidLayoutChange;\r\n    }\r\n    get onDidAddView() {\r\n        return this.component.onDidAddView;\r\n    }\r\n    get onDidRemoveView() {\r\n        return this.component.onDidRemoveView;\r\n    }\r\n    updateOptions(options) {\r\n        this.component.updateOptions(options);\r\n    }\r\n    removePanel(panel, sizing) {\r\n        this.component.removePanel(panel, sizing);\r\n    }\r\n    focus() {\r\n        this.component.focus();\r\n    }\r\n    getPanel(id) {\r\n        return this.component.getPanel(id);\r\n    }\r\n    layout(width, height) {\r\n        return this.component.layout(width, height);\r\n    }\r\n    addPanel(options) {\r\n        return this.component.addPanel(options);\r\n    }\r\n    movePanel(from, to) {\r\n        this.component.movePanel(from, to);\r\n    }\r\n    fromJSON(data) {\r\n        this.component.fromJSON(data);\r\n    }\r\n    toJSON() {\r\n        return this.component.toJSON();\r\n    }\r\n}\r\nexport class PaneviewApi {\r\n    constructor(component) {\r\n        this.component = component;\r\n    }\r\n    get minimumSize() {\r\n        return this.component.minimumSize;\r\n    }\r\n    get maximumSize() {\r\n        return this.component.maximumSize;\r\n    }\r\n    get height() {\r\n        return this.component.height;\r\n    }\r\n    get width() {\r\n        return this.component.width;\r\n    }\r\n    get panels() {\r\n        return this.component.panels;\r\n    }\r\n    get onDidLayoutChange() {\r\n        return this.component.onDidLayoutChange;\r\n    }\r\n    get onDidLayoutFromJSON() {\r\n        return this.component.onDidLayoutFromJSON;\r\n    }\r\n    get onDidAddView() {\r\n        return this.component.onDidAddView;\r\n    }\r\n    get onDidRemoveView() {\r\n        return this.component.onDidRemoveView;\r\n    }\r\n    get onDidDrop() {\r\n        const emitter = new Emitter();\r\n        const disposable = this.component.onDidDrop((e) => {\r\n            emitter.fire(Object.assign(Object.assign({}, e), { api: this }));\r\n        });\r\n        emitter.dispose = () => {\r\n            disposable.dispose();\r\n            emitter.dispose();\r\n        };\r\n        return emitter.event;\r\n    }\r\n    removePanel(panel) {\r\n        this.component.removePanel(panel);\r\n    }\r\n    getPanel(id) {\r\n        return this.component.getPanel(id);\r\n    }\r\n    movePanel(from, to) {\r\n        this.component.movePanel(from, to);\r\n    }\r\n    focus() {\r\n        this.component.focus();\r\n    }\r\n    layout(width, height) {\r\n        this.component.layout(width, height);\r\n    }\r\n    addPanel(options) {\r\n        return this.component.addPanel(options);\r\n    }\r\n    fromJSON(data) {\r\n        this.component.fromJSON(data);\r\n    }\r\n    toJSON() {\r\n        return this.component.toJSON();\r\n    }\r\n}\r\nexport class GridviewApi {\r\n    constructor(component) {\r\n        this.component = component;\r\n    }\r\n    get minimumHeight() {\r\n        return this.component.minimumHeight;\r\n    }\r\n    get maximumHeight() {\r\n        return this.component.maximumHeight;\r\n    }\r\n    get minimumWidth() {\r\n        return this.component.minimumWidth;\r\n    }\r\n    get maximumWidth() {\r\n        return this.component.maximumWidth;\r\n    }\r\n    get width() {\r\n        return this.component.width;\r\n    }\r\n    get height() {\r\n        return this.component.height;\r\n    }\r\n    get onDidLayoutChange() {\r\n        return this.component.onDidLayoutChange;\r\n    }\r\n    get onDidAddPanel() {\r\n        return this.component.onDidAddGroup;\r\n    }\r\n    get onDidRemovePanel() {\r\n        return this.component.onDidRemoveGroup;\r\n    }\r\n    get onDidActivePanelChange() {\r\n        return this.component.onDidActiveGroupChange;\r\n    }\r\n    get onDidLayoutFromJSON() {\r\n        return this.component.onDidLayoutFromJSON;\r\n    }\r\n    get panels() {\r\n        return this.component.groups;\r\n    }\r\n    get orientation() {\r\n        return this.component.orientation;\r\n    }\r\n    set orientation(value) {\r\n        this.component.updateOptions({ orientation: value });\r\n    }\r\n    focus() {\r\n        this.component.focus();\r\n    }\r\n    layout(width, height, force = false) {\r\n        this.component.layout(width, height, force);\r\n    }\r\n    addPanel(options) {\r\n        return this.component.addPanel(options);\r\n    }\r\n    removePanel(panel, sizing) {\r\n        this.component.removePanel(panel, sizing);\r\n    }\r\n    movePanel(panel, options) {\r\n        this.component.movePanel(panel, options);\r\n    }\r\n    getPanel(id) {\r\n        return this.component.getPanel(id);\r\n    }\r\n    fromJSON(data) {\r\n        return this.component.fromJSON(data);\r\n    }\r\n    toJSON() {\r\n        return this.component.toJSON();\r\n    }\r\n}\r\nexport class DockviewApi {\r\n    constructor(component) {\r\n        this.component = component;\r\n    }\r\n    get width() {\r\n        return this.component.width;\r\n    }\r\n    get height() {\r\n        return this.component.height;\r\n    }\r\n    get minimumHeight() {\r\n        return this.component.minimumHeight;\r\n    }\r\n    get maximumHeight() {\r\n        return this.component.maximumHeight;\r\n    }\r\n    get minimumWidth() {\r\n        return this.component.minimumWidth;\r\n    }\r\n    get maximumWidth() {\r\n        return this.component.maximumWidth;\r\n    }\r\n    get size() {\r\n        return this.component.size;\r\n    }\r\n    get totalPanels() {\r\n        return this.component.totalPanels;\r\n    }\r\n    get onDidActiveGroupChange() {\r\n        return this.component.onDidActiveGroupChange;\r\n    }\r\n    get onDidAddGroup() {\r\n        return this.component.onDidAddGroup;\r\n    }\r\n    get onDidRemoveGroup() {\r\n        return this.component.onDidRemoveGroup;\r\n    }\r\n    get onDidActivePanelChange() {\r\n        return this.component.onDidActivePanelChange;\r\n    }\r\n    get onDidAddPanel() {\r\n        return this.component.onDidAddPanel;\r\n    }\r\n    get onDidRemovePanel() {\r\n        return this.component.onDidRemovePanel;\r\n    }\r\n    get onDidLayoutFromJSON() {\r\n        return this.component.onDidLayoutfromJSON;\r\n    }\r\n    get onDidLayoutChange() {\r\n        return this.component.onDidLayoutChange;\r\n    }\r\n    get onDidDrop() {\r\n        return this.component.onDidDrop;\r\n    }\r\n    get panels() {\r\n        return this.component.panels;\r\n    }\r\n    get groups() {\r\n        return this.component.groups;\r\n    }\r\n    get activePanel() {\r\n        return this.component.activePanel;\r\n    }\r\n    get activeGroup() {\r\n        return this.component.activeGroup;\r\n    }\r\n    getTabHeight() {\r\n        return this.component.tabHeight;\r\n    }\r\n    setTabHeight(height) {\r\n        this.component.tabHeight = height;\r\n    }\r\n    focus() {\r\n        this.component.focus();\r\n    }\r\n    getPanel(id) {\r\n        return this.component.getGroupPanel(id);\r\n    }\r\n    layout(width, height, force = false) {\r\n        this.component.layout(width, height, force);\r\n    }\r\n    addPanel(options) {\r\n        return this.component.addPanel(options);\r\n    }\r\n    addEmptyGroup(options) {\r\n        this.component.addEmptyGroup(options);\r\n    }\r\n    moveToNext(options) {\r\n        this.component.moveToNext(options);\r\n    }\r\n    moveToPrevious(options) {\r\n        this.component.moveToPrevious(options);\r\n    }\r\n    closeAllGroups() {\r\n        return this.component.closeAllGroups();\r\n    }\r\n    removeGroup(group) {\r\n        this.component.removeGroup(group);\r\n    }\r\n    getGroup(id) {\r\n        return this.component.getPanel(id);\r\n    }\r\n    fromJSON(data) {\r\n        this.component.fromJSON(data);\r\n    }\r\n    toJSON() {\r\n        return this.component.toJSON();\r\n    }\r\n}\r\n","import { CompositeDisposable, MutableDisposable, } from '../../lifecycle';\r\nimport { Emitter } from '../../events';\r\nimport { trackFocus } from '../../dom';\r\nexport class ContentContainer extends CompositeDisposable {\r\n    constructor() {\r\n        super();\r\n        this.disposable = new MutableDisposable();\r\n        this._onDidFocus = new Emitter();\r\n        this.onDidFocus = this._onDidFocus.event;\r\n        this._onDidBlur = new Emitter();\r\n        this.onDidBlur = this._onDidBlur.event;\r\n        this._element = document.createElement('div');\r\n        this._element.className = 'content-container';\r\n        this._element.tabIndex = -1;\r\n        this.addDisposables(this._onDidFocus, this._onDidBlur);\r\n        // for hosted containers\r\n        // 1) register a drop target on the host\r\n        // 2) register window dragStart events to disable pointer events\r\n        // 3) register dragEnd events\r\n        // 4) register mouseMove events (if no buttons are present we take this as a dragEnd event)\r\n    }\r\n    get element() {\r\n        return this._element;\r\n    }\r\n    show() {\r\n        this.element.style.display = '';\r\n    }\r\n    hide() {\r\n        this.element.style.display = 'none';\r\n    }\r\n    openPanel(panel) {\r\n        var _a;\r\n        if (this.panel === panel) {\r\n            return;\r\n        }\r\n        if (this.panel) {\r\n            if ((_a = this.panel.view) === null || _a === void 0 ? void 0 : _a.content) {\r\n                this._element.removeChild(this.panel.view.content.element);\r\n            }\r\n            this.panel = undefined;\r\n        }\r\n        this.panel = panel;\r\n        const disposable = new CompositeDisposable();\r\n        if (this.panel.view) {\r\n            const _onDidFocus = this.panel.view.content.onDidFocus;\r\n            const _onDidBlur = this.panel.view.content.onDidBlur;\r\n            const { onDidFocus, onDidBlur } = trackFocus(this._element);\r\n            disposable.addDisposables(onDidFocus(() => this._onDidFocus.fire()), onDidBlur(() => this._onDidBlur.fire()));\r\n            if (_onDidFocus) {\r\n                disposable.addDisposables(_onDidFocus(() => this._onDidFocus.fire()));\r\n            }\r\n            if (_onDidBlur) {\r\n                disposable.addDisposables(_onDidBlur(() => this._onDidBlur.fire()));\r\n            }\r\n            this._element.appendChild(this.panel.view.content.element);\r\n        }\r\n        this.disposable.value = disposable;\r\n    }\r\n    layout(_width, _height) {\r\n        // noop\r\n    }\r\n    closePanel() {\r\n        var _a, _b, _c;\r\n        if ((_c = (_b = (_a = this.panel) === null || _a === void 0 ? void 0 : _a.view) === null || _b === void 0 ? void 0 : _b.content) === null || _c === void 0 ? void 0 : _c.element) {\r\n            this._element.removeChild(this.panel.view.content.element);\r\n            this.panel = undefined;\r\n        }\r\n    }\r\n    dispose() {\r\n        this.disposable.dispose();\r\n        super.dispose();\r\n    }\r\n}\r\n","export var DockviewDropTargets;\r\n(function (DockviewDropTargets) {\r\n    DockviewDropTargets[DockviewDropTargets[\"Tab\"] = 0] = \"Tab\";\r\n    DockviewDropTargets[DockviewDropTargets[\"Panel\"] = 1] = \"Panel\";\r\n    DockviewDropTargets[DockviewDropTargets[\"TabContainer\"] = 2] = \"TabContainer\";\r\n})(DockviewDropTargets || (DockviewDropTargets = {}));\r\n","import { addDisposableListener, Emitter } from '../events';\r\nimport { CompositeDisposable } from '../lifecycle';\r\nimport { getPanelData, LocalSelectionTransfer, PanelTransfer, } from '../dnd/dataTransfer';\r\nimport { toggleClass } from '../dom';\r\nimport { Droptarget } from '../dnd/droptarget';\r\nimport { DockviewDropTargets } from './dnd';\r\nimport { DragHandler } from '../dnd/abstractDragHandler';\r\nexport var MouseEventKind;\r\n(function (MouseEventKind) {\r\n    MouseEventKind[\"CLICK\"] = \"CLICK\";\r\n    MouseEventKind[\"CONTEXT_MENU\"] = \"CONTEXT_MENU\";\r\n})(MouseEventKind || (MouseEventKind = {}));\r\nexport class Tab extends CompositeDisposable {\r\n    constructor(panelId, accessor, group) {\r\n        super();\r\n        this.panelId = panelId;\r\n        this.group = group;\r\n        this._onChanged = new Emitter();\r\n        this.onChanged = this._onChanged.event;\r\n        this._onDropped = new Emitter();\r\n        this.onDrop = this._onDropped.event;\r\n        this.addDisposables(this._onChanged, this._onDropped);\r\n        this._element = document.createElement('div');\r\n        this._element.className = 'tab';\r\n        this._element.tabIndex = 0;\r\n        this._element.draggable = true;\r\n        toggleClass(this.element, 'inactive-tab', true);\r\n        this.addDisposables(new (class Handler extends DragHandler {\r\n            constructor() {\r\n                super(...arguments);\r\n                this.panelTransfer = LocalSelectionTransfer.getInstance();\r\n            }\r\n            getData() {\r\n                this.panelTransfer.setData([new PanelTransfer(accessor.id, group.id, panelId)], PanelTransfer.prototype);\r\n                return {\r\n                    dispose: () => {\r\n                        this.panelTransfer.clearData(PanelTransfer.prototype);\r\n                    },\r\n                };\r\n            }\r\n            dispose() {\r\n                //\r\n            }\r\n        })(this._element));\r\n        this.addDisposables(addDisposableListener(this._element, 'mousedown', (event) => {\r\n            if (event.defaultPrevented) {\r\n                return;\r\n            }\r\n            /**\r\n             * TODO: alternative to stopPropagation\r\n             *\r\n             * I need to stop the event propagation here since otherwise it'll be intercepted by event handlers\r\n             * on the tabs-container. I cannot use event.preventDefault() since I need the on DragStart event to occur\r\n             */\r\n            event.stopPropagation();\r\n            this._onChanged.fire({ kind: MouseEventKind.CLICK, event });\r\n        }), addDisposableListener(this._element, 'contextmenu', (event) => {\r\n            this._onChanged.fire({\r\n                kind: MouseEventKind.CONTEXT_MENU,\r\n                event,\r\n            });\r\n        }));\r\n        this.droptarget = new Droptarget(this._element, {\r\n            validOverlays: 'none',\r\n            canDisplayOverlay: (event) => {\r\n                const data = getPanelData();\r\n                if (data) {\r\n                    return this.panelId !== data.panelId;\r\n                }\r\n                return this.group.model.canDisplayOverlay(event, DockviewDropTargets.Tab);\r\n            },\r\n        });\r\n        this.addDisposables(this.droptarget.onDrop((event) => {\r\n            this._onDropped.fire(event);\r\n        }));\r\n    }\r\n    get element() {\r\n        return this._element;\r\n    }\r\n    setActive(isActive) {\r\n        toggleClass(this.element, 'active-tab', isActive);\r\n        toggleClass(this.element, 'inactive-tab', !isActive);\r\n    }\r\n    setContent(part) {\r\n        if (this.content) {\r\n            this._element.removeChild(this.content.element);\r\n        }\r\n        this.content = part;\r\n        this._element.appendChild(this.content.element);\r\n    }\r\n    dispose() {\r\n        super.dispose();\r\n        this.droptarget.dispose();\r\n    }\r\n}\r\n","import { DockviewApi } from '../api/component.api';\r\nimport { getPanelData } from '../dnd/dataTransfer';\r\nimport { Droptarget, Position } from '../dnd/droptarget';\r\nimport { isAncestor, toggleClass } from '../dom';\r\nimport { addDisposableListener, Emitter } from '../events';\r\nimport { CompositeDisposable } from '../lifecycle';\r\nimport { ContentContainer } from './panel/content';\r\nimport { TabsContainer } from './titlebar/tabsContainer';\r\nimport { DockviewDropTargets } from './dnd';\r\nexport var GroupChangeKind2;\r\n(function (GroupChangeKind2) {\r\n    GroupChangeKind2[\"ADD_PANEL\"] = \"ADD_PANEL\";\r\n    GroupChangeKind2[\"REMOVE_PANEL\"] = \"REMOVE_PANEL\";\r\n    GroupChangeKind2[\"PANEL_ACTIVE\"] = \"PANEL_ACTIVE\";\r\n})(GroupChangeKind2 || (GroupChangeKind2 = {}));\r\nexport class Groupview extends CompositeDisposable {\r\n    constructor(container, accessor, id, options, parent) {\r\n        super();\r\n        this.container = container;\r\n        this.accessor = accessor;\r\n        this.id = id;\r\n        this.options = options;\r\n        this.parent = parent;\r\n        this._isGroupActive = false;\r\n        this._locked = false;\r\n        this.mostRecentlyUsed = [];\r\n        this._onDidChange = new Emitter();\r\n        this.onDidChange = this._onDidChange.event;\r\n        this._width = 0;\r\n        this._height = 0;\r\n        this._panels = [];\r\n        this._onMove = new Emitter();\r\n        this.onMove = this._onMove.event;\r\n        this._onDidGroupChange = new Emitter();\r\n        this.onDidGroupChange = this._onDidGroupChange.event;\r\n        this._onDidDrop = new Emitter();\r\n        this.onDidDrop = this._onDidDrop.event;\r\n        this.container.classList.add('groupview');\r\n        this.addDisposables(this._onMove, this._onDidGroupChange, this._onDidChange, this._onDidDrop);\r\n        this.tabsContainer = new TabsContainer(this.accessor, this.parent, {\r\n            tabHeight: options.tabHeight,\r\n        });\r\n        this.contentContainer = new ContentContainer();\r\n        this.dropTarget = new Droptarget(this.contentContainer.element, {\r\n            validOverlays: 'all',\r\n            canDisplayOverlay: (event, quadrant) => {\r\n                if (this.locked && !quadrant) {\r\n                    return false;\r\n                }\r\n                const data = getPanelData();\r\n                if (data) {\r\n                    const groupHasOnePanelAndIsActiveDragElement = this._panels.length === 1 && data.groupId === this.id;\r\n                    return !groupHasOnePanelAndIsActiveDragElement;\r\n                }\r\n                return this.canDisplayOverlay(event, DockviewDropTargets.Panel);\r\n            },\r\n        });\r\n        container.append(this.tabsContainer.element, this.contentContainer.element);\r\n        this.header.hidden = !!options.hideHeader;\r\n        this.locked = !!options.locked;\r\n        this.addDisposables(this._onMove, this._onDidGroupChange, this.tabsContainer.onDrop((event) => {\r\n            this.handleDropEvent(event.event, Position.Center, event.index);\r\n        }), this.contentContainer.onDidFocus(() => {\r\n            this.accessor.doSetGroupActive(this.parent, true);\r\n        }), this.contentContainer.onDidBlur(() => {\r\n            // noop\r\n        }), this.dropTarget.onDrop((event) => {\r\n            this.handleDropEvent(event.nativeEvent, event.position);\r\n        }));\r\n    }\r\n    get element() {\r\n        throw new Error('not supported');\r\n    }\r\n    get activePanel() {\r\n        return this._activePanel;\r\n    }\r\n    get locked() {\r\n        return this._locked;\r\n    }\r\n    set locked(value) {\r\n        this._locked = value;\r\n    }\r\n    get isActive() {\r\n        return this._isGroupActive;\r\n    }\r\n    get panels() {\r\n        return this._panels;\r\n    }\r\n    get size() {\r\n        return this._panels.length;\r\n    }\r\n    get isEmpty() {\r\n        return this._panels.length === 0;\r\n    }\r\n    get minimumHeight() {\r\n        return 100;\r\n    }\r\n    get maximumHeight() {\r\n        return Number.MAX_SAFE_INTEGER;\r\n    }\r\n    get minimumWidth() {\r\n        return 100;\r\n    }\r\n    get maximumWidth() {\r\n        return Number.MAX_SAFE_INTEGER;\r\n    }\r\n    get hasWatermark() {\r\n        return !!(this.watermark && this.container.contains(this.watermark.element));\r\n    }\r\n    get header() {\r\n        return this.tabsContainer;\r\n    }\r\n    get isContentFocused() {\r\n        if (!document.activeElement) {\r\n            return false;\r\n        }\r\n        return isAncestor(document.activeElement, this.contentContainer.element);\r\n    }\r\n    initialize() {\r\n        var _a, _b;\r\n        if ((_a = this.options) === null || _a === void 0 ? void 0 : _a.panels) {\r\n            this.options.panels.forEach((panel) => {\r\n                this.doAddPanel(panel);\r\n            });\r\n        }\r\n        if ((_b = this.options) === null || _b === void 0 ? void 0 : _b.activePanel) {\r\n            this.openPanel(this.options.activePanel);\r\n        }\r\n        // must be run after the constructor otherwise this.parent may not be\r\n        // correctly initialized\r\n        this.setActive(this.isActive, true, true);\r\n        this.updateContainer();\r\n    }\r\n    indexOf(panel) {\r\n        return this.tabsContainer.indexOf(panel.id);\r\n    }\r\n    toJSON() {\r\n        var _a;\r\n        const result = {\r\n            views: this.tabsContainer.panels,\r\n            activeView: (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.id,\r\n            id: this.id,\r\n        };\r\n        if (this.locked) {\r\n            result.locked = true;\r\n        }\r\n        if (this.header.hidden) {\r\n            result.hideHeader = true;\r\n        }\r\n        return result;\r\n    }\r\n    moveToNext(options) {\r\n        if (!options) {\r\n            options = {};\r\n        }\r\n        if (!options.panel) {\r\n            options.panel = this.activePanel;\r\n        }\r\n        const index = options.panel ? this.panels.indexOf(options.panel) : -1;\r\n        let normalizedIndex;\r\n        if (index < this.panels.length - 1) {\r\n            normalizedIndex = index + 1;\r\n        }\r\n        else if (!options.suppressRoll) {\r\n            normalizedIndex = 0;\r\n        }\r\n        else {\r\n            return;\r\n        }\r\n        this.openPanel(this.panels[normalizedIndex]);\r\n    }\r\n    moveToPrevious(options) {\r\n        if (!options) {\r\n            options = {};\r\n        }\r\n        if (!options.panel) {\r\n            options.panel = this.activePanel;\r\n        }\r\n        if (!options.panel) {\r\n            return;\r\n        }\r\n        const index = this.panels.indexOf(options.panel);\r\n        let normalizedIndex;\r\n        if (index > 0) {\r\n            normalizedIndex = index - 1;\r\n        }\r\n        else if (!options.suppressRoll) {\r\n            normalizedIndex = this.panels.length - 1;\r\n        }\r\n        else {\r\n            return;\r\n        }\r\n        this.openPanel(this.panels[normalizedIndex]);\r\n    }\r\n    containsPanel(panel) {\r\n        return this.panels.includes(panel);\r\n    }\r\n    init(_params) {\r\n        //noop\r\n    }\r\n    update(_params) {\r\n        //noop\r\n    }\r\n    focus() {\r\n        var _a;\r\n        (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.focus();\r\n    }\r\n    openPanel(panel, options = {}) {\r\n        if (typeof options.index !== 'number' ||\r\n            options.index > this.panels.length) {\r\n            options.index = this.panels.length;\r\n        }\r\n        const skipSetActive = !!options.skipSetActive;\r\n        // ensure the group is updated before we fire any events\r\n        panel.updateParentGroup(this.parent, true);\r\n        if (!skipSetActive && this._activePanel === panel) {\r\n            this.accessor.doSetGroupActive(this.parent);\r\n            return;\r\n        }\r\n        this.doAddPanel(panel, options.index, skipSetActive);\r\n        if (!skipSetActive) {\r\n            this.doSetActivePanel(panel);\r\n            this.accessor.doSetGroupActive(this.parent, !!options.skipFocus);\r\n        }\r\n        this.updateContainer();\r\n    }\r\n    removePanel(groupItemOrId) {\r\n        const id = typeof groupItemOrId === 'string'\r\n            ? groupItemOrId\r\n            : groupItemOrId.id;\r\n        const panelToRemove = this._panels.find((panel) => panel.id === id);\r\n        if (!panelToRemove) {\r\n            throw new Error('invalid operation');\r\n        }\r\n        return this._removePanel(panelToRemove);\r\n    }\r\n    closeAllPanels() {\r\n        if (this.panels.length > 0) {\r\n            // take a copy since we will be edting the array as we iterate through\r\n            const arrPanelCpy = [...this.panels];\r\n            for (const panel of arrPanelCpy) {\r\n                this.doClose(panel);\r\n            }\r\n        }\r\n        else {\r\n            this.accessor.removeGroup(this.parent);\r\n        }\r\n    }\r\n    closePanel(panel) {\r\n        this.doClose(panel);\r\n    }\r\n    doClose(panel) {\r\n        this.accessor.removePanel(panel);\r\n    }\r\n    isPanelActive(panel) {\r\n        return this._activePanel === panel;\r\n    }\r\n    updateActions() {\r\n        var _a, _b;\r\n        if (this.isActive && ((_b = (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.view) === null || _b === void 0 ? void 0 : _b.actions)) {\r\n            this.tabsContainer.setActionElement(this._activePanel.view.actions.element);\r\n        }\r\n        else {\r\n            this.tabsContainer.setActionElement(undefined);\r\n        }\r\n    }\r\n    setActive(isGroupActive, skipFocus = false, force = false) {\r\n        var _a, _b;\r\n        if (!force && this.isActive === isGroupActive) {\r\n            if (!skipFocus) {\r\n                (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.focus();\r\n            }\r\n            return;\r\n        }\r\n        this._isGroupActive = isGroupActive;\r\n        toggleClass(this.container, 'active-group', isGroupActive);\r\n        toggleClass(this.container, 'inactive-group', !isGroupActive);\r\n        this.tabsContainer.setActive(this.isActive);\r\n        if (!this._activePanel && this.panels.length > 0) {\r\n            this.doSetActivePanel(this.panels[0]);\r\n        }\r\n        this.updateContainer();\r\n        if (isGroupActive) {\r\n            if (!skipFocus) {\r\n                (_b = this._activePanel) === null || _b === void 0 ? void 0 : _b.focus();\r\n            }\r\n        }\r\n    }\r\n    layout(width, height) {\r\n        var _a;\r\n        this._width = width;\r\n        this._height = height;\r\n        this.contentContainer.layout(this._width, this._height);\r\n        if ((_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.layout) {\r\n            this._activePanel.layout(this._width, this._height);\r\n        }\r\n    }\r\n    _removePanel(panel) {\r\n        const isActivePanel = this._activePanel === panel;\r\n        this.doRemovePanel(panel);\r\n        if (isActivePanel && this.panels.length > 0) {\r\n            const nextPanel = this.mostRecentlyUsed[0];\r\n            this.openPanel(nextPanel);\r\n        }\r\n        if (this._activePanel && this.panels.length === 0) {\r\n            this.doSetActivePanel(undefined);\r\n        }\r\n        this.updateContainer();\r\n        return panel;\r\n    }\r\n    doRemovePanel(panel) {\r\n        const index = this.panels.indexOf(panel);\r\n        if (this._activePanel === panel) {\r\n            this.contentContainer.closePanel();\r\n        }\r\n        this.tabsContainer.delete(panel.id);\r\n        this._panels.splice(index, 1);\r\n        if (this.mostRecentlyUsed.includes(panel)) {\r\n            this.mostRecentlyUsed.splice(this.mostRecentlyUsed.indexOf(panel), 1);\r\n        }\r\n        this._onDidGroupChange.fire({\r\n            kind: GroupChangeKind2.REMOVE_PANEL,\r\n            panel,\r\n        });\r\n    }\r\n    doAddPanel(panel, index = this.panels.length, skipSetActive = false) {\r\n        const existingPanel = this._panels.indexOf(panel);\r\n        const hasExistingPanel = existingPanel > -1;\r\n        this.tabsContainer.openPanel(panel, index);\r\n        if (!skipSetActive) {\r\n            this.contentContainer.openPanel(panel);\r\n        }\r\n        this.tabsContainer.show();\r\n        this.contentContainer.show();\r\n        if (hasExistingPanel) {\r\n            // TODO - need to ensure ordering hasn't changed and if it has need to re-order this.panels\r\n            return;\r\n        }\r\n        this.updateMru(panel);\r\n        this.panels.splice(index, 0, panel);\r\n        this._onDidGroupChange.fire({\r\n            kind: GroupChangeKind2.ADD_PANEL,\r\n            panel,\r\n        });\r\n    }\r\n    doSetActivePanel(panel) {\r\n        this._activePanel = panel;\r\n        if (panel) {\r\n            this.tabsContainer.setActivePanel(panel);\r\n            panel.layout(this._width, this._height);\r\n            this.updateMru(panel);\r\n            this._onDidGroupChange.fire({\r\n                kind: GroupChangeKind2.PANEL_ACTIVE,\r\n                panel,\r\n            });\r\n        }\r\n    }\r\n    updateMru(panel) {\r\n        if (this.mostRecentlyUsed.includes(panel)) {\r\n            this.mostRecentlyUsed.splice(this.mostRecentlyUsed.indexOf(panel), 1);\r\n        }\r\n        this.mostRecentlyUsed = [panel, ...this.mostRecentlyUsed];\r\n    }\r\n    updateContainer() {\r\n        this.updateActions();\r\n        toggleClass(this.container, 'empty', this.isEmpty);\r\n        this.panels.forEach((panel) => panel.updateParentGroup(this.parent, this.isActive));\r\n        if (this.isEmpty && !this.watermark) {\r\n            const watermark = this.accessor.createWatermarkComponent();\r\n            watermark.init({\r\n                containerApi: new DockviewApi(this.accessor),\r\n                params: {},\r\n                title: '',\r\n                api: null,\r\n            });\r\n            this.watermark = watermark;\r\n            addDisposableListener(this.watermark.element, 'click', () => {\r\n                if (!this.isActive) {\r\n                    this.accessor.doSetGroupActive(this.parent);\r\n                }\r\n            });\r\n            this.contentContainer.hide();\r\n            this.tabsContainer.hide();\r\n            this.container.appendChild(this.watermark.element);\r\n            this.watermark.updateParentGroup(this.parent, true);\r\n        }\r\n        if (!this.isEmpty && this.watermark) {\r\n            this.watermark.element.remove();\r\n            this.watermark.dispose();\r\n            this.watermark = undefined;\r\n            this.contentContainer.show();\r\n            this.tabsContainer.show();\r\n        }\r\n    }\r\n    canDisplayOverlay(event, target) {\r\n        // custom overlay handler\r\n        if (this.accessor.options.showDndOverlay) {\r\n            return this.accessor.options.showDndOverlay(event, target);\r\n        }\r\n        return false;\r\n    }\r\n    handleDropEvent(event, position, index) {\r\n        const data = getPanelData();\r\n        if (data) {\r\n            const fromSameGroup = this.tabsContainer.indexOf(data.panelId) !== -1;\r\n            if (fromSameGroup && this.tabsContainer.size === 1) {\r\n                return;\r\n            }\r\n            const { groupId, panelId } = data;\r\n            const isSameGroup = this.id === groupId;\r\n            if (isSameGroup && !position) {\r\n                const oldIndex = this.tabsContainer.indexOf(panelId);\r\n                if (oldIndex === index) {\r\n                    return;\r\n                }\r\n            }\r\n            this._onMove.fire({\r\n                target: position,\r\n                groupId: data.groupId,\r\n                itemId: data.panelId,\r\n                index,\r\n            });\r\n        }\r\n        else {\r\n            this._onDidDrop.fire({\r\n                nativeEvent: event,\r\n                position,\r\n                index,\r\n                getData: () => getPanelData(),\r\n            });\r\n        }\r\n    }\r\n    dispose() {\r\n        var _a;\r\n        super.dispose();\r\n        (_a = this.watermark) === null || _a === void 0 ? void 0 : _a.dispose();\r\n        for (const panel of this.panels) {\r\n            panel.dispose();\r\n        }\r\n        this.dropTarget.dispose();\r\n        this.tabsContainer.dispose();\r\n        this.contentContainer.dispose();\r\n    }\r\n}\r\n","import { getElementsByTagName } from '../dom';\r\nimport { addDisposableListener, Emitter } from '../events';\r\nimport { CompositeDisposable, MutableDisposable, } from '../lifecycle';\r\nexport class DragHandler extends CompositeDisposable {\r\n    constructor(el) {\r\n        super();\r\n        this.el = el;\r\n        this.disposable = new MutableDisposable();\r\n        this._onDragStart = new Emitter();\r\n        this.onDragStart = this._onDragStart.event;\r\n        this.iframes = [];\r\n        this.configure();\r\n    }\r\n    configure() {\r\n        this.addDisposables(this._onDragStart, addDisposableListener(this.el, 'dragstart', (event) => {\r\n            this.iframes = [\r\n                ...getElementsByTagName('iframe'),\r\n                ...getElementsByTagName('webview'),\r\n            ];\r\n            for (const iframe of this.iframes) {\r\n                iframe.style.pointerEvents = 'none';\r\n            }\r\n            this.el.classList.add('dragged');\r\n            setTimeout(() => this.el.classList.remove('dragged'), 0);\r\n            this.disposable.value = this.getData();\r\n            if (event.dataTransfer) {\r\n                event.dataTransfer.effectAllowed = 'move';\r\n            }\r\n        }), addDisposableListener(this.el, 'dragend', () => {\r\n            for (const iframe of this.iframes) {\r\n                iframe.style.pointerEvents = 'auto';\r\n            }\r\n            this.iframes = [];\r\n            this.disposable.dispose();\r\n        }));\r\n    }\r\n}\r\n","import { CompositeDisposable, } from '../../lifecycle';\r\nimport { addDisposableListener, Emitter } from '../../events';\r\nimport { MouseEventKind, Tab } from '../tab';\r\nimport { last } from '../../array';\r\nimport { getPanelData } from '../../dnd/dataTransfer';\r\nimport { Droptarget } from '../../dnd/droptarget';\r\nimport { DockviewDropTargets } from '../dnd';\r\nexport class TabsContainer extends CompositeDisposable {\r\n    constructor(accessor, group, options) {\r\n        super();\r\n        this.accessor = accessor;\r\n        this.group = group;\r\n        this.tabs = [];\r\n        this.selectedIndex = -1;\r\n        this._hidden = false;\r\n        this._onDrop = new Emitter();\r\n        this.onDrop = this._onDrop.event;\r\n        this.addDisposables(this._onDrop);\r\n        this._element = document.createElement('div');\r\n        this._element.className = 'tabs-and-actions-container';\r\n        this.height = options.tabHeight;\r\n        this.actionContainer = document.createElement('div');\r\n        this.actionContainer.className = 'action-container';\r\n        this.tabContainer = document.createElement('div');\r\n        this.tabContainer.className = 'tabs-container';\r\n        this.voidContainer = document.createElement('div');\r\n        this.voidContainer.className = 'void-container';\r\n        this._element.appendChild(this.tabContainer);\r\n        this._element.appendChild(this.voidContainer);\r\n        this._element.appendChild(this.actionContainer);\r\n        this.voidDropTarget = new Droptarget(this.voidContainer, {\r\n            validOverlays: 'none',\r\n            canDisplayOverlay: (event) => {\r\n                var _a;\r\n                const data = getPanelData();\r\n                if (data) {\r\n                    // don't show the overlay if the tab being dragged is the last panel of this group\r\n                    return ((_a = last(this.tabs)) === null || _a === void 0 ? void 0 : _a.value.panelId) !== data.panelId;\r\n                }\r\n                return group.model.canDisplayOverlay(event, DockviewDropTargets.Panel);\r\n            },\r\n        });\r\n        this.addDisposables(this.voidDropTarget.onDrop((event) => {\r\n            this._onDrop.fire({\r\n                event: event.nativeEvent,\r\n                index: this.tabs.length,\r\n            });\r\n        }), this.voidDropTarget, addDisposableListener(this.tabContainer, 'mousedown', (event) => {\r\n            if (event.defaultPrevented) {\r\n                return;\r\n            }\r\n            const isLeftClick = event.button === 0;\r\n            if (isLeftClick) {\r\n                this.accessor.doSetGroupActive(this.group);\r\n            }\r\n        }));\r\n    }\r\n    get panels() {\r\n        return this.tabs.map((_) => _.value.panelId);\r\n    }\r\n    get size() {\r\n        return this.tabs.length;\r\n    }\r\n    get height() {\r\n        return this._height;\r\n    }\r\n    set height(value) {\r\n        this._height = value;\r\n        if (typeof value !== 'number') {\r\n            this.element.style.removeProperty('--dv-tabs-and-actions-container-height');\r\n        }\r\n        else {\r\n            this.element.style.setProperty('--dv-tabs-and-actions-container-height', `${value}px`);\r\n        }\r\n    }\r\n    get hidden() {\r\n        return this._hidden;\r\n    }\r\n    set hidden(value) {\r\n        this._hidden = value;\r\n        this.element.style.display = value ? 'none' : '';\r\n    }\r\n    show() {\r\n        if (!this.hidden) {\r\n            this.element.style.display = '';\r\n        }\r\n    }\r\n    hide() {\r\n        this._element.style.display = 'none';\r\n    }\r\n    setActionElement(element) {\r\n        if (this.actions === element) {\r\n            return;\r\n        }\r\n        if (this.actions) {\r\n            this.actions.remove();\r\n            this.actions = undefined;\r\n        }\r\n        if (element) {\r\n            this.actionContainer.appendChild(element);\r\n            this.actions = element;\r\n        }\r\n    }\r\n    get element() {\r\n        return this._element;\r\n    }\r\n    isActive(tab) {\r\n        return (this.selectedIndex > -1 &&\r\n            this.tabs[this.selectedIndex].value === tab);\r\n    }\r\n    at(index) {\r\n        var _a;\r\n        return (_a = this.tabs[index]) === null || _a === void 0 ? void 0 : _a.value;\r\n    }\r\n    indexOf(id) {\r\n        return this.tabs.findIndex((tab) => tab.value.panelId === id);\r\n    }\r\n    setActive(_isGroupActive) {\r\n        // noop\r\n    }\r\n    addTab(tab, index = this.tabs.length) {\r\n        if (index < 0 || index > this.tabs.length) {\r\n            throw new Error('invalid location');\r\n        }\r\n        this.tabContainer.insertBefore(tab.value.element, this.tabContainer.children[index]);\r\n        this.tabs = [\r\n            ...this.tabs.slice(0, index),\r\n            tab,\r\n            ...this.tabs.slice(index),\r\n        ];\r\n        if (this.selectedIndex < 0) {\r\n            this.selectedIndex = index;\r\n        }\r\n    }\r\n    delete(id) {\r\n        const index = this.tabs.findIndex((tab) => tab.value.panelId === id);\r\n        const tabToRemove = this.tabs.splice(index, 1)[0];\r\n        const { value, disposable } = tabToRemove;\r\n        disposable.dispose();\r\n        value.element.remove();\r\n    }\r\n    setActivePanel(panel) {\r\n        this.tabs.forEach((tab) => {\r\n            const isActivePanel = panel.id === tab.value.panelId;\r\n            tab.value.setActive(isActivePanel);\r\n        });\r\n    }\r\n    openPanel(panel, index = this.tabs.length) {\r\n        var _a;\r\n        if (this.tabs.find((tab) => tab.value.panelId === panel.id)) {\r\n            return;\r\n        }\r\n        const tabToAdd = new Tab(panel.id, this.accessor, this.group);\r\n        if (!((_a = panel.view) === null || _a === void 0 ? void 0 : _a.tab)) {\r\n            throw new Error('invalid header component');\r\n        }\r\n        tabToAdd.setContent(panel.view.tab);\r\n        const disposable = CompositeDisposable.from(tabToAdd.onChanged((event) => {\r\n            var _a;\r\n            const alreadyFocused = panel.id === ((_a = this.group.model.activePanel) === null || _a === void 0 ? void 0 : _a.id) &&\r\n                this.group.model.isContentFocused;\r\n            this.accessor.fireMouseEvent(Object.assign(Object.assign({}, event), { panel, tab: true }));\r\n            const isLeftClick = event.event.button === 0;\r\n            if (!isLeftClick || event.event.defaultPrevented) {\r\n                return;\r\n            }\r\n            if (event.kind === MouseEventKind.CLICK) {\r\n                this.group.model.openPanel(panel, {\r\n                    skipFocus: alreadyFocused,\r\n                });\r\n            }\r\n        }), tabToAdd.onDrop((event) => {\r\n            this._onDrop.fire({\r\n                event: event.nativeEvent,\r\n                index: this.tabs.findIndex((x) => x.value === tabToAdd),\r\n            });\r\n        }));\r\n        const value = { value: tabToAdd, disposable };\r\n        this.addTab(value, index);\r\n    }\r\n    closePanel(panel) {\r\n        this.delete(panel.id);\r\n    }\r\n    dispose() {\r\n        super.dispose();\r\n        this.tabs.forEach((tab) => {\r\n            tab.disposable.dispose();\r\n        });\r\n        this.tabs = [];\r\n    }\r\n}\r\n","import { Emitter, Event, TickDelayedEvent } from '../events';\r\nimport { getGridLocation, Gridview } from './gridview';\r\nimport { Position } from '../dnd/droptarget';\r\nimport { CompositeDisposable } from '../lifecycle';\r\nimport { sequentialNumberGenerator } from '../math';\r\nimport { Sizing, } from '../splitview/core/splitview';\r\nconst nextLayoutId = sequentialNumberGenerator();\r\nexport function toTarget(direction) {\r\n    switch (direction) {\r\n        case 'left':\r\n            return Position.Left;\r\n        case 'right':\r\n            return Position.Right;\r\n        case 'above':\r\n            return Position.Top;\r\n        case 'below':\r\n            return Position.Bottom;\r\n        case 'within':\r\n        default:\r\n            return Position.Center;\r\n    }\r\n}\r\nexport class BaseGrid extends CompositeDisposable {\r\n    constructor(_element, options) {\r\n        super();\r\n        this._element = _element;\r\n        this._id = nextLayoutId.next();\r\n        this._groups = new Map();\r\n        this._onDidLayoutChange = new Emitter();\r\n        this.onDidLayoutChange = this._onDidLayoutChange.event;\r\n        this._onDidRemoveGroup = new Emitter();\r\n        this.onDidRemoveGroup = this._onDidRemoveGroup.event;\r\n        this._onDidAddGroup = new Emitter();\r\n        this.onDidAddGroup = this._onDidAddGroup.event;\r\n        this._onDidActiveGroupChange = new Emitter();\r\n        this.onDidActiveGroupChange = this._onDidActiveGroupChange.event;\r\n        this._bufferOnDidLayoutChange = new TickDelayedEvent();\r\n        this.gridview = new Gridview(!!options.proportionalLayout, options.styles, options.orientation);\r\n        this.element.appendChild(this.gridview.element);\r\n        this.layout(0, 0, true); // set some elements height/widths\r\n        this.addDisposables(this.gridview.onDidChange(() => {\r\n            this._onDidLayoutChange.fire();\r\n        }));\r\n        this.addDisposables(Event.any(this.onDidAddGroup, this.onDidRemoveGroup, this.onDidActiveGroupChange)(() => {\r\n            this._bufferOnDidLayoutChange.fire();\r\n        }), this._bufferOnDidLayoutChange.onEvent(() => {\r\n            this._onDidLayoutChange.fire();\r\n        }), this._bufferOnDidLayoutChange);\r\n    }\r\n    get id() {\r\n        return this._id;\r\n    }\r\n    get element() {\r\n        return this._element;\r\n    }\r\n    get size() {\r\n        return this._groups.size;\r\n    }\r\n    get groups() {\r\n        return Array.from(this._groups.values()).map((_) => _.value);\r\n    }\r\n    get width() {\r\n        return this.gridview.width;\r\n    }\r\n    get height() {\r\n        return this.gridview.height;\r\n    }\r\n    get minimumHeight() {\r\n        return this.gridview.minimumHeight;\r\n    }\r\n    get maximumHeight() {\r\n        return this.gridview.maximumHeight;\r\n    }\r\n    get minimumWidth() {\r\n        return this.gridview.minimumWidth;\r\n    }\r\n    get maximumWidth() {\r\n        return this.gridview.maximumWidth;\r\n    }\r\n    get activeGroup() {\r\n        return this._activeGroup;\r\n    }\r\n    setVisible(panel, visible) {\r\n        this.gridview.setViewVisible(getGridLocation(panel.element), visible);\r\n        this._onDidLayoutChange.fire();\r\n    }\r\n    isVisible(panel) {\r\n        return this.gridview.isViewVisible(getGridLocation(panel.element));\r\n    }\r\n    doAddGroup(group, location = [0], size) {\r\n        this.gridview.addView(group, size !== null && size !== void 0 ? size : Sizing.Distribute, location);\r\n        this._onDidAddGroup.fire(group);\r\n        this.doSetGroupActive(group);\r\n    }\r\n    doRemoveGroup(group, options) {\r\n        if (!this._groups.has(group.id)) {\r\n            throw new Error('invalid operation');\r\n        }\r\n        const item = this._groups.get(group.id);\r\n        const view = this.gridview.remove(group, Sizing.Distribute);\r\n        if (item && !(options === null || options === void 0 ? void 0 : options.skipDispose)) {\r\n            item.disposable.dispose();\r\n            item.value.dispose();\r\n            this._groups.delete(group.id);\r\n        }\r\n        this._onDidRemoveGroup.fire(group);\r\n        if (!(options === null || options === void 0 ? void 0 : options.skipActive) && this._activeGroup === group) {\r\n            const groups = Array.from(this._groups.values());\r\n            this.doSetGroupActive(groups.length > 0 ? groups[0].value : undefined);\r\n        }\r\n        return view;\r\n    }\r\n    getPanel(id) {\r\n        var _a;\r\n        return (_a = this._groups.get(id)) === null || _a === void 0 ? void 0 : _a.value;\r\n    }\r\n    doSetGroupActive(group, skipFocus) {\r\n        if (this._activeGroup === group) {\r\n            return;\r\n        }\r\n        if (this._activeGroup) {\r\n            this._activeGroup.setActive(false);\r\n            if (!skipFocus) {\r\n                this._activeGroup.focus();\r\n            }\r\n        }\r\n        if (group) {\r\n            group.setActive(true);\r\n            if (!skipFocus) {\r\n                group.focus();\r\n            }\r\n        }\r\n        this._activeGroup = group;\r\n        this._onDidActiveGroupChange.fire(group);\r\n    }\r\n    removeGroup(group) {\r\n        this.doRemoveGroup(group);\r\n    }\r\n    moveToNext(options) {\r\n        var _a;\r\n        if (!options) {\r\n            options = {};\r\n        }\r\n        if (!options.group) {\r\n            if (!this.activeGroup) {\r\n                return;\r\n            }\r\n            options.group = this.activeGroup;\r\n        }\r\n        const location = getGridLocation(options.group.element);\r\n        const next = (_a = this.gridview.next(location)) === null || _a === void 0 ? void 0 : _a.view;\r\n        this.doSetGroupActive(next);\r\n    }\r\n    moveToPrevious(options) {\r\n        var _a;\r\n        if (!options) {\r\n            options = {};\r\n        }\r\n        if (!options.group) {\r\n            if (!this.activeGroup) {\r\n                return;\r\n            }\r\n            options.group = this.activeGroup;\r\n        }\r\n        const location = getGridLocation(options.group.element);\r\n        const next = (_a = this.gridview.previous(location)) === null || _a === void 0 ? void 0 : _a.view;\r\n        this.doSetGroupActive(next);\r\n    }\r\n    layout(width, height, forceResize) {\r\n        const different = forceResize || width !== this.width || height !== this.height;\r\n        if (!different) {\r\n            return;\r\n        }\r\n        this.element.style.height = `${height}px`;\r\n        this.element.style.width = `${width}px`;\r\n        this.gridview.layout(width, height);\r\n    }\r\n    dispose() {\r\n        super.dispose();\r\n        this._onDidActiveGroupChange.dispose();\r\n        this._onDidAddGroup.dispose();\r\n        this._onDidRemoveGroup.dispose();\r\n        this._onDidLayoutChange.dispose();\r\n        for (const group of this.groups) {\r\n            group.dispose();\r\n        }\r\n        this.gridview.dispose();\r\n    }\r\n}\r\n","import { Emitter } from '../events';\r\nimport { CompositeDisposable } from '../lifecycle';\r\n/**\r\n * A core api implementation that should be used across all panel-like objects\r\n */\r\nexport class PanelApiImpl extends CompositeDisposable {\r\n    constructor(id) {\r\n        super();\r\n        this.id = id;\r\n        this._isFocused = false;\r\n        this._isActive = false;\r\n        this._isVisible = true;\r\n        this._width = 0;\r\n        this._height = 0;\r\n        this._onDidDimensionChange = new Emitter({\r\n            replay: true,\r\n        });\r\n        this.onDidDimensionsChange = this._onDidDimensionChange.event;\r\n        //\r\n        this._onDidChangeFocus = new Emitter({\r\n            replay: true,\r\n        });\r\n        this.onDidFocusChange = this._onDidChangeFocus.event;\r\n        //\r\n        this._onFocusEvent = new Emitter();\r\n        this.onFocusEvent = this._onFocusEvent.event;\r\n        //\r\n        this._onDidVisibilityChange = new Emitter({\r\n            replay: true,\r\n        });\r\n        this.onDidVisibilityChange = this._onDidVisibilityChange.event;\r\n        //\r\n        this._onVisibilityChange = new Emitter();\r\n        this.onVisibilityChange = this._onVisibilityChange.event;\r\n        //\r\n        this._onDidActiveChange = new Emitter({\r\n            replay: true,\r\n        });\r\n        this.onDidActiveChange = this._onDidActiveChange.event;\r\n        //\r\n        this._onActiveChange = new Emitter();\r\n        this.onActiveChange = this._onActiveChange.event;\r\n        this.addDisposables(this._onDidDimensionChange, this._onDidChangeFocus, this._onDidVisibilityChange, this._onDidActiveChange, this._onFocusEvent, this._onActiveChange, this._onVisibilityChange, this.onDidFocusChange((event) => {\r\n            this._isFocused = event.isFocused;\r\n        }), this.onDidActiveChange((event) => {\r\n            this._isActive = event.isActive;\r\n        }), this.onDidVisibilityChange((event) => {\r\n            this._isVisible = event.isVisible;\r\n        }), this.onDidDimensionsChange((event) => {\r\n            this._width = event.width;\r\n            this._height = event.height;\r\n        }));\r\n    }\r\n    //\r\n    get isFocused() {\r\n        return this._isFocused;\r\n    }\r\n    get isActive() {\r\n        return this._isActive;\r\n    }\r\n    get isVisible() {\r\n        return this._isVisible;\r\n    }\r\n    get width() {\r\n        return this._width;\r\n    }\r\n    get height() {\r\n        return this._height;\r\n    }\r\n    setVisible(isVisible) {\r\n        this._onVisibilityChange.fire({ isVisible });\r\n    }\r\n    setActive() {\r\n        this._onActiveChange.fire();\r\n    }\r\n    dispose() {\r\n        super.dispose();\r\n    }\r\n}\r\n","import { Emitter } from '../events';\r\nimport { PanelApiImpl } from './panelApi';\r\nexport class GridviewPanelApiImpl extends PanelApiImpl {\r\n    //\r\n    constructor(id) {\r\n        super(id);\r\n        this._onDidConstraintsChangeInternal = new Emitter();\r\n        this.onDidConstraintsChangeInternal = this._onDidConstraintsChangeInternal.event;\r\n        //\r\n        this._onDidConstraintsChange = new Emitter({\r\n            replay: true,\r\n        });\r\n        this.onDidConstraintsChange = this._onDidConstraintsChange.event;\r\n        //\r\n        this._onDidSizeChange = new Emitter();\r\n        this.onDidSizeChange = this._onDidSizeChange.event;\r\n        this.addDisposables(this._onDidConstraintsChangeInternal, this._onDidConstraintsChange, this._onDidSizeChange);\r\n    }\r\n    setConstraints(value) {\r\n        this._onDidConstraintsChangeInternal.fire(value);\r\n    }\r\n    setSize(event) {\r\n        this._onDidSizeChange.fire(event);\r\n    }\r\n}\r\n","import { Emitter } from '../events';\r\nimport { GridviewPanelApiImpl } from './gridviewPanelApi';\r\nimport { MutableDisposable } from '../lifecycle';\r\nexport class DockviewPanelApiImpl extends GridviewPanelApiImpl {\r\n    constructor(panel, group) {\r\n        super(panel.id);\r\n        this.panel = panel;\r\n        this._onDidTitleChange = new Emitter();\r\n        this.onDidTitleChange = this._onDidTitleChange.event;\r\n        this._titleChanged = new Emitter();\r\n        this.titleChanged = this._titleChanged.event;\r\n        this._suppressClosableChanged = new Emitter();\r\n        this.suppressClosableChanged = this._suppressClosableChanged.event;\r\n        this._onDidActiveGroupChange = new Emitter();\r\n        this.onDidActiveGroupChange = this._onDidActiveGroupChange.event;\r\n        this._onDidGroupChange = new Emitter();\r\n        this.onDidGroupChange = this._onDidGroupChange.event;\r\n        this.disposable = new MutableDisposable();\r\n        this._group = group;\r\n        this.addDisposables(this.disposable, this._onDidTitleChange, this._titleChanged, this._suppressClosableChanged, this._onDidGroupChange, this._onDidActiveGroupChange);\r\n    }\r\n    get title() {\r\n        return this.panel.title;\r\n    }\r\n    get suppressClosable() {\r\n        return !!this.panel.suppressClosable;\r\n    }\r\n    get isGroupActive() {\r\n        var _a;\r\n        return !!((_a = this.group) === null || _a === void 0 ? void 0 : _a.isActive);\r\n    }\r\n    set group(value) {\r\n        const isOldGroupActive = this.isGroupActive;\r\n        this._group = value;\r\n        this._onDidGroupChange.fire();\r\n        if (this._group) {\r\n            this.disposable.value = this._group.api.onDidActiveChange(() => {\r\n                this._onDidActiveGroupChange.fire();\r\n            });\r\n            if (this.isGroupActive !== isOldGroupActive) {\r\n                this._onDidActiveGroupChange.fire();\r\n            }\r\n        }\r\n    }\r\n    get group() {\r\n        return this._group;\r\n    }\r\n    setTitle(title) {\r\n        this._onDidTitleChange.fire({ title });\r\n    }\r\n    close() {\r\n        if (!this.group) {\r\n            throw new Error(`panel ${this.id} has no group`);\r\n        }\r\n        return this.group.model.closePanel(this.panel);\r\n    }\r\n}\r\n","import { DockviewPanelApiImpl } from '../api/groupPanelApi';\r\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\r\nexport class DockviewGroupPanel extends CompositeDisposable {\r\n    constructor(id, accessor, containerApi, group) {\r\n        super();\r\n        this.id = id;\r\n        this.containerApi = containerApi;\r\n        this.mutableDisposable = new MutableDisposable();\r\n        this._suppressClosable = false;\r\n        this._title = '';\r\n        this._group = group;\r\n        this.api = new DockviewPanelApiImpl(this, this._group);\r\n        this.addDisposables(this.api.onActiveChange(() => {\r\n            accessor.setActivePanel(this);\r\n        }), this.api.onDidTitleChange((event) => {\r\n            const title = event.title;\r\n            this.update({ params: { title } });\r\n        }));\r\n    }\r\n    get params() {\r\n        var _a;\r\n        return (_a = this._params) === null || _a === void 0 ? void 0 : _a.params;\r\n    }\r\n    get title() {\r\n        return this._title;\r\n    }\r\n    get suppressClosable() {\r\n        return this._suppressClosable;\r\n    }\r\n    get group() {\r\n        return this._group;\r\n    }\r\n    get view() {\r\n        return this._view;\r\n    }\r\n    init(params) {\r\n        var _a;\r\n        this._params = params.params;\r\n        this._view = params.view;\r\n        this.setTitle(params.title);\r\n        this.setSuppressClosable(params.suppressClosable || false);\r\n        (_a = this.view) === null || _a === void 0 ? void 0 : _a.init(Object.assign(Object.assign({}, params), { api: this.api, containerApi: this.containerApi }));\r\n    }\r\n    focus() {\r\n        this.api._onFocusEvent.fire();\r\n    }\r\n    toJSON() {\r\n        return {\r\n            id: this.id,\r\n            view: this.view.toJSON(),\r\n            params: Object.keys(this._params || {}).length > 0\r\n                ? this._params\r\n                : undefined,\r\n            suppressClosable: this.suppressClosable || undefined,\r\n            title: this.title,\r\n        };\r\n    }\r\n    setTitle(title) {\r\n        var _a;\r\n        const didTitleChange = title !== ((_a = this._params) === null || _a === void 0 ? void 0 : _a.title);\r\n        if (didTitleChange) {\r\n            this._title = title;\r\n            this.api._titleChanged.fire({ title: this.title });\r\n        }\r\n    }\r\n    setSuppressClosable(suppressClosable) {\r\n        var _a;\r\n        const didSuppressChangableClose = suppressClosable !== ((_a = this._params) === null || _a === void 0 ? void 0 : _a.suppressClosable);\r\n        if (didSuppressChangableClose) {\r\n            this._suppressClosable = suppressClosable;\r\n            this.api._suppressClosableChanged.fire({\r\n                suppressClosable: !!this.suppressClosable,\r\n            });\r\n        }\r\n    }\r\n    update(event) {\r\n        var _a;\r\n        const params = event.params;\r\n        this._params = Object.assign(Object.assign({}, (this._params || {})), event.params.params);\r\n        if (typeof params.title === 'string') {\r\n            this.setTitle(params.title);\r\n        }\r\n        if (typeof params.suppressClosable === 'boolean') {\r\n            this.setSuppressClosable(params.suppressClosable);\r\n        }\r\n        (_a = this.view) === null || _a === void 0 ? void 0 : _a.update({\r\n            params: {\r\n                params: this._params,\r\n                title: this.title,\r\n                suppressClosable: this.suppressClosable,\r\n            },\r\n        });\r\n    }\r\n    updateParentGroup(group, isGroupActive) {\r\n        var _a;\r\n        this._group = group;\r\n        this.api.group = group;\r\n        const isPanelVisible = this._group.model.isPanelActive(this);\r\n        this.api._onDidActiveChange.fire({\r\n            isActive: isGroupActive && isPanelVisible,\r\n        });\r\n        this.api._onDidVisibilityChange.fire({\r\n            isVisible: isPanelVisible,\r\n        });\r\n        (_a = this.view) === null || _a === void 0 ? void 0 : _a.updateParentGroup(this._group, this._group.model.isPanelActive(this));\r\n    }\r\n    layout(width, height) {\r\n        var _a;\r\n        // the obtain the correct dimensions of the content panel we must deduct the tab height\r\n        this.api._onDidDimensionChange.fire({\r\n            width,\r\n            height: height - (this.group.model.header.height || 0),\r\n        });\r\n        (_a = this.view) === null || _a === void 0 ? void 0 : _a.layout(width, height);\r\n    }\r\n    dispose() {\r\n        var _a;\r\n        this.api.dispose();\r\n        this.mutableDisposable.dispose();\r\n        (_a = this.view) === null || _a === void 0 ? void 0 : _a.dispose();\r\n    }\r\n}\r\n","export class ActionContainer {\r\n    constructor() {\r\n        this._element = document.createElement('div');\r\n        this._element.className = 'actions-bar';\r\n        this._list = document.createElement('ul');\r\n        this._list.className = 'actions-container';\r\n        this._element.appendChild(this._list);\r\n    }\r\n    get element() {\r\n        return this._element;\r\n    }\r\n    add(element) {\r\n        const listItem = document.createElement('li');\r\n        listItem.className = 'action-item';\r\n        this._list.appendChild(element);\r\n    }\r\n}\r\n","import { ActionContainer } from '../../../actionbar/actionsContainer';\r\nimport { addDisposableListener } from '../../../events';\r\nimport { toggleClass } from '../../../dom';\r\nimport { CompositeDisposable } from '../../../lifecycle';\r\nexport class Watermark extends CompositeDisposable {\r\n    constructor() {\r\n        super();\r\n        this._element = document.createElement('div');\r\n        this._element.className = 'watermark';\r\n        const title = document.createElement('div');\r\n        title.className = 'watermark-title';\r\n        const emptySpace = document.createElement('span');\r\n        emptySpace.style.flexGrow = '1';\r\n        const content = document.createElement('div');\r\n        content.className = 'watermark-content';\r\n        this._element.appendChild(title);\r\n        this._element.appendChild(content);\r\n        const actions = new ActionContainer();\r\n        title.appendChild(emptySpace);\r\n        title.appendChild(actions.element);\r\n        const closeAnchor = document.createElement('a');\r\n        closeAnchor.className = 'close-action';\r\n        actions.add(closeAnchor);\r\n        this.addDisposables(addDisposableListener(closeAnchor, 'click', (ev) => {\r\n            var _a;\r\n            ev.preventDefault();\r\n            if (this.group) {\r\n                (_a = this.params) === null || _a === void 0 ? void 0 : _a.containerApi.removeGroup(this.group);\r\n            }\r\n        }));\r\n    }\r\n    get id() {\r\n        return 'watermark';\r\n    }\r\n    update(_event) {\r\n        // noop\r\n    }\r\n    focus() {\r\n        // noop\r\n    }\r\n    toJSON() {\r\n        return {};\r\n    }\r\n    layout(_width, _height) {\r\n        // noop\r\n    }\r\n    init(params) {\r\n        this.params = params;\r\n        this.addDisposables(this.params.containerApi.onDidLayoutChange(() => {\r\n            this.render();\r\n        }));\r\n        this.render();\r\n    }\r\n    updateParentGroup(group, _visible) {\r\n        this.group = group;\r\n        this.render();\r\n    }\r\n    get element() {\r\n        return this._element;\r\n    }\r\n    render() {\r\n        const isOneGroup = !!(this.params && this.params.containerApi.size <= 1);\r\n        toggleClass(this.element, 'has-actions', isOneGroup);\r\n    }\r\n    dispose() {\r\n        super.dispose();\r\n    }\r\n}\r\n","export class DefaultDeserializer {\r\n    constructor(layout, panelDeserializer) {\r\n        this.layout = layout;\r\n        this.panelDeserializer = panelDeserializer;\r\n    }\r\n    fromJSON(node) {\r\n        const data = node.data;\r\n        const children = data.views;\r\n        const active = data.activeView;\r\n        const group = this.layout.createGroup({\r\n            id: data.id,\r\n            locked: !!data.locked,\r\n            hideHeader: !!data.hideHeader,\r\n        });\r\n        for (const child of children) {\r\n            const panel = this.panelDeserializer.createPanel(child, group);\r\n            const isActive = typeof active === 'string' && active === panel.id;\r\n            group.model.openPanel(panel, {\r\n                skipSetActive: !isActive,\r\n            });\r\n        }\r\n        if (!group.activePanel && group.panels.length > 0) {\r\n            group.model.openPanel(group.panels[group.panels.length - 1]);\r\n        }\r\n        return group;\r\n    }\r\n}\r\n","export function createComponent(id, componentName, components = {}, frameworkComponents = {}, createFrameworkComponent, fallback) {\r\n    const Component = typeof componentName === 'string'\r\n        ? components[componentName]\r\n        : undefined;\r\n    const FrameworkComponent = typeof componentName === 'string'\r\n        ? frameworkComponents[componentName]\r\n        : undefined;\r\n    if (Component && FrameworkComponent) {\r\n        throw new Error(`Cannot create '${id}'. component '${componentName}' registered as both a component and frameworkComponent`);\r\n    }\r\n    if (FrameworkComponent) {\r\n        if (!createFrameworkComponent) {\r\n            throw new Error(`Cannot create '${id}' for framework component '${componentName}'. you must register a frameworkPanelWrapper to use framework components`);\r\n        }\r\n        return createFrameworkComponent.createComponent(id, componentName, FrameworkComponent);\r\n    }\r\n    if (!Component) {\r\n        if (fallback) {\r\n            return fallback();\r\n        }\r\n        throw new Error(`Cannot create '${id}', no component '${componentName}' provided`);\r\n    }\r\n    return new Component(id, componentName);\r\n}\r\n","import { CompositeDisposable } from '../../../lifecycle';\r\nimport { addDisposableListener } from '../../../events';\r\nexport class DefaultTab extends CompositeDisposable {\r\n    constructor() {\r\n        super();\r\n        this._isPanelVisible = false;\r\n        this._isGroupActive = false;\r\n        //\r\n        this.params = {};\r\n        this._element = document.createElement('div');\r\n        this._element.className = 'default-tab';\r\n        //\r\n        this._content = document.createElement('div');\r\n        this._content.className = 'tab-content';\r\n        //\r\n        this._actionContainer = document.createElement('div');\r\n        this._actionContainer.className = 'action-container';\r\n        //\r\n        this._list = document.createElement('ul');\r\n        this._list.className = 'tab-list';\r\n        //\r\n        this.action = document.createElement('a');\r\n        this.action.className = 'tab-action';\r\n        //\r\n        this._element.appendChild(this._content);\r\n        this._element.appendChild(this._actionContainer);\r\n        this._actionContainer.appendChild(this._list);\r\n        this._list.appendChild(this.action);\r\n        //\r\n        this.addDisposables(addDisposableListener(this._actionContainer, 'mousedown', (ev) => {\r\n            ev.preventDefault();\r\n        }));\r\n        this.render();\r\n    }\r\n    get element() {\r\n        return this._element;\r\n    }\r\n    get id() {\r\n        return '__DEFAULT_TAB__';\r\n    }\r\n    update(event) {\r\n        this.params = Object.assign(Object.assign({}, this.params), event.params);\r\n        this.render();\r\n    }\r\n    toJSON() {\r\n        return { id: this.id };\r\n    }\r\n    focus() {\r\n        //noop\r\n    }\r\n    init(params) {\r\n        this.params = params;\r\n        this._content.textContent = params.title;\r\n        if (!this.params.suppressClosable) {\r\n            addDisposableListener(this.action, 'click', (ev) => {\r\n                ev.preventDefault(); //\r\n                this.params.api.close();\r\n            });\r\n        }\r\n        else {\r\n            this.action.classList.add('disable-close');\r\n        }\r\n    }\r\n    updateParentGroup(group, isPanelVisible) {\r\n        const changed = this._isPanelVisible !== isPanelVisible ||\r\n            this._isGroupActive !== group.isActive;\r\n        this._isPanelVisible = isPanelVisible;\r\n        this._isGroupActive = group.isActive;\r\n        if (changed) {\r\n            this.render();\r\n        }\r\n    }\r\n    layout(_width, _height) {\r\n        // noop\r\n    }\r\n    render() {\r\n        if (this._content.textContent !== this.params.title) {\r\n            this._content.textContent = this.params.title;\r\n        }\r\n    }\r\n}\r\n","import { trackFocus } from '../dom';\r\nimport { CompositeDisposable } from '../lifecycle';\r\nexport class BasePanelView extends CompositeDisposable {\r\n    constructor(id, component, api) {\r\n        super();\r\n        this.id = id;\r\n        this.component = component;\r\n        this.api = api;\r\n        this._height = 0;\r\n        this._width = 0;\r\n        this._element = document.createElement('div');\r\n        this._element.tabIndex = -1;\r\n        this._element.style.outline = 'none';\r\n        this._element.style.height = '100%';\r\n        this._element.style.width = '100%';\r\n        this._element.style.overflow = 'hidden';\r\n        const { onDidFocus, onDidBlur } = trackFocus(this._element);\r\n        this.addDisposables(this.api, onDidFocus(() => {\r\n            this.api._onDidChangeFocus.fire({ isFocused: true });\r\n        }), onDidBlur(() => {\r\n            this.api._onDidChangeFocus.fire({ isFocused: false });\r\n        }));\r\n    }\r\n    get element() {\r\n        return this._element;\r\n    }\r\n    get width() {\r\n        return this._width;\r\n    }\r\n    get height() {\r\n        return this._height;\r\n    }\r\n    get params() {\r\n        var _a;\r\n        return (_a = this._params) === null || _a === void 0 ? void 0 : _a.params;\r\n    }\r\n    focus() {\r\n        this.api._onFocusEvent.fire();\r\n    }\r\n    layout(width, height) {\r\n        this._width = width;\r\n        this._height = height;\r\n        this.api._onDidDimensionChange.fire({ width, height });\r\n        if (this.part) {\r\n            if (this._params) {\r\n                this.part.update(this._params.params);\r\n            }\r\n        }\r\n    }\r\n    init(parameters) {\r\n        this._params = parameters;\r\n        this.part = this.getComponent();\r\n    }\r\n    update(event) {\r\n        var _a, _b;\r\n        this._params = Object.assign(Object.assign({}, this._params), { params: Object.assign(Object.assign({}, (_a = this._params) === null || _a === void 0 ? void 0 : _a.params), event.params) });\r\n        (_b = this.part) === null || _b === void 0 ? void 0 : _b.update({ params: this._params.params });\r\n    }\r\n    toJSON() {\r\n        var _a, _b;\r\n        const params = (_b = (_a = this._params) === null || _a === void 0 ? void 0 : _a.params) !== null && _b !== void 0 ? _b : {};\r\n        return {\r\n            id: this.id,\r\n            component: this.component,\r\n            params: Object.keys(params).length > 0 ? params : undefined,\r\n        };\r\n    }\r\n    dispose() {\r\n        var _a;\r\n        super.dispose();\r\n        this.api.dispose();\r\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\r\n    }\r\n}\r\n","import { BasePanelView, } from './basePanelView';\r\nimport { GridviewPanelApiImpl } from '../api/gridviewPanelApi';\r\nimport { Emitter } from '../events';\r\nexport class GridviewPanel extends BasePanelView {\r\n    constructor(id, component, api = new GridviewPanelApiImpl(id)) {\r\n        super(id, component, api);\r\n        this._evaluatedMinimumWidth = 0;\r\n        this._evaluatedMaximumWidth = Number.MAX_SAFE_INTEGER;\r\n        this._evaluatedMinimumHeight = 0;\r\n        this._evaluatedMaximumHeight = Number.MAX_SAFE_INTEGER;\r\n        this._minimumWidth = 0;\r\n        this._minimumHeight = 0;\r\n        this._maximumWidth = Number.MAX_SAFE_INTEGER;\r\n        this._maximumHeight = Number.MAX_SAFE_INTEGER;\r\n        this._snap = false;\r\n        this._onDidChange = new Emitter();\r\n        this.onDidChange = this._onDidChange.event;\r\n        this.addDisposables(this._onDidChange, this.api.onVisibilityChange((event) => {\r\n            const { isVisible } = event;\r\n            const { accessor } = this._params;\r\n            accessor.setVisible(this, isVisible);\r\n        }), this.api.onActiveChange(() => {\r\n            const { accessor } = this._params;\r\n            accessor.setActive(this);\r\n        }), this.api.onDidConstraintsChangeInternal((event) => {\r\n            if (typeof event.minimumWidth === 'number' ||\r\n                typeof event.minimumWidth === 'function') {\r\n                this._minimumWidth = event.minimumWidth;\r\n            }\r\n            if (typeof event.minimumHeight === 'number' ||\r\n                typeof event.minimumHeight === 'function') {\r\n                this._minimumHeight = event.minimumHeight;\r\n            }\r\n            if (typeof event.maximumWidth === 'number' ||\r\n                typeof event.maximumWidth === 'function') {\r\n                this._maximumWidth = event.maximumWidth;\r\n            }\r\n            if (typeof event.maximumHeight === 'number' ||\r\n                typeof event.maximumHeight === 'function') {\r\n                this._maximumHeight = event.maximumHeight;\r\n            }\r\n        }), this.api.onDidSizeChange((event) => {\r\n            this._onDidChange.fire({\r\n                height: event.height,\r\n                width: event.width,\r\n            });\r\n        }));\r\n    }\r\n    get priority() {\r\n        return this._priority;\r\n    }\r\n    get snap() {\r\n        return this._snap;\r\n    }\r\n    get minimumWidth() {\r\n        const width = typeof this._minimumWidth === 'function'\r\n            ? this._minimumWidth()\r\n            : this._minimumWidth;\r\n        if (width !== this._evaluatedMinimumWidth) {\r\n            this._evaluatedMinimumWidth = width;\r\n            this.updateConstraints();\r\n        }\r\n        return width;\r\n    }\r\n    get minimumHeight() {\r\n        const height = typeof this._minimumHeight === 'function'\r\n            ? this._minimumHeight()\r\n            : this._minimumHeight;\r\n        if (height !== this._evaluatedMinimumHeight) {\r\n            this._evaluatedMinimumHeight = height;\r\n            this.updateConstraints();\r\n        }\r\n        return height;\r\n    }\r\n    get maximumHeight() {\r\n        const height = typeof this._maximumHeight === 'function'\r\n            ? this._maximumHeight()\r\n            : this._maximumHeight;\r\n        if (height !== this._evaluatedMaximumHeight) {\r\n            this._evaluatedMaximumHeight = height;\r\n            this.updateConstraints();\r\n        }\r\n        return height;\r\n    }\r\n    get maximumWidth() {\r\n        const width = typeof this._maximumWidth === 'function'\r\n            ? this._maximumWidth()\r\n            : this._maximumWidth;\r\n        if (width !== this._evaluatedMaximumWidth) {\r\n            this._evaluatedMaximumWidth = width;\r\n            this.updateConstraints();\r\n        }\r\n        return width;\r\n    }\r\n    get isActive() {\r\n        return this.api.isActive;\r\n    }\r\n    setVisible(isVisible) {\r\n        this.api._onDidVisibilityChange.fire({ isVisible });\r\n    }\r\n    setActive(isActive) {\r\n        this.api._onDidActiveChange.fire({ isActive });\r\n    }\r\n    init(parameters) {\r\n        if (parameters.maximumHeight) {\r\n            this._maximumHeight = parameters.maximumHeight;\r\n        }\r\n        if (parameters.minimumHeight) {\r\n            this._minimumHeight = parameters.minimumHeight;\r\n        }\r\n        if (parameters.maximumWidth) {\r\n            this._maximumWidth = parameters.maximumWidth;\r\n        }\r\n        if (parameters.minimumWidth) {\r\n            this._minimumWidth = parameters.minimumWidth;\r\n        }\r\n        this._priority = parameters.priority;\r\n        this._snap = !!parameters.snap;\r\n        super.init(parameters);\r\n        if (typeof parameters.isVisible === 'boolean') {\r\n            this.setVisible(parameters.isVisible);\r\n        }\r\n    }\r\n    updateConstraints() {\r\n        this.api._onDidConstraintsChange.fire({\r\n            minimumWidth: this._evaluatedMinimumWidth,\r\n            maximumWidth: this._evaluatedMaximumWidth,\r\n            minimumHeight: this._evaluatedMinimumHeight,\r\n            maximumHeight: this._evaluatedMaximumHeight,\r\n        });\r\n    }\r\n    toJSON() {\r\n        const state = super.toJSON();\r\n        const maximum = (value) => value === Number.MAX_SAFE_INTEGER ? undefined : value;\r\n        const minimum = (value) => (value <= 0 ? undefined : value);\r\n        return Object.assign(Object.assign({}, state), { minimumHeight: minimum(this.minimumHeight), maximumHeight: maximum(this.maximumHeight), minimumWidth: minimum(this.minimumWidth), maximumWidth: maximum(this.maximumWidth), snap: this.snap, priority: this.priority });\r\n    }\r\n}\r\n","import { GridviewPanelApiImpl, } from '../api/gridviewPanelApi';\r\nimport { Groupview } from './groupview';\r\nimport { GridviewPanel } from '../gridview/gridviewPanel';\r\nclass GroupviewApi extends GridviewPanelApiImpl {\r\n}\r\nexport class GroupPanel extends GridviewPanel {\r\n    constructor(accessor, id, options) {\r\n        super(id, 'groupview_default', new GroupviewApi(id));\r\n        this._model = new Groupview(this.element, accessor, id, options, this);\r\n    }\r\n    get panels() {\r\n        return this._model.panels;\r\n    }\r\n    get activePanel() {\r\n        return this._model.activePanel;\r\n    }\r\n    get size() {\r\n        return this._model.size;\r\n    }\r\n    get model() {\r\n        return this._model;\r\n    }\r\n    get minimumHeight() {\r\n        return this._model.minimumHeight;\r\n    }\r\n    get maximumHeight() {\r\n        return this._model.maximumHeight;\r\n    }\r\n    get minimumWidth() {\r\n        return this._model.minimumWidth;\r\n    }\r\n    get maximumWidth() {\r\n        return this._model.maximumWidth;\r\n    }\r\n    get locked() {\r\n        return this._model.locked;\r\n    }\r\n    set locked(value) {\r\n        this._model.locked = value;\r\n    }\r\n    get header() {\r\n        return this._model.header;\r\n    }\r\n    initialize() {\r\n        this._model.initialize();\r\n    }\r\n    setActive(isActive) {\r\n        super.setActive(isActive);\r\n        this.model.setActive(isActive);\r\n    }\r\n    layout(width, height) {\r\n        super.layout(width, height);\r\n        this.model.layout(width, height);\r\n    }\r\n    getComponent() {\r\n        return this._model;\r\n    }\r\n    toJSON() {\r\n        return this.model.toJSON();\r\n    }\r\n}\r\n","import { DefaultTab } from './components/tab/defaultTab';\r\nexport class DefaultGroupPanelView {\r\n    constructor(renderers) {\r\n        var _a;\r\n        this._content = renderers.content;\r\n        this._tab = (_a = renderers.tab) !== null && _a !== void 0 ? _a : new DefaultTab();\r\n        this._actions =\r\n            renderers.actions ||\r\n                (this.content.actions\r\n                    ? {\r\n                        element: this.content.actions,\r\n                        dispose: () => {\r\n                            //\r\n                        },\r\n                    }\r\n                    : undefined);\r\n    }\r\n    get content() {\r\n        return this._content;\r\n    }\r\n    get tab() {\r\n        return this._tab;\r\n    }\r\n    get actions() {\r\n        return this._actions;\r\n    }\r\n    init(params) {\r\n        this.content.init(Object.assign(Object.assign({}, params), { tab: this.tab }));\r\n        this.tab.init(params);\r\n    }\r\n    updateParentGroup(group, isPanelVisible) {\r\n        var _a;\r\n        this._content.updateParentGroup(group, isPanelVisible);\r\n        (_a = this._tab) === null || _a === void 0 ? void 0 : _a.updateParentGroup(group, isPanelVisible);\r\n    }\r\n    layout(width, height) {\r\n        this.content.layout(width, height);\r\n    }\r\n    update(event) {\r\n        this.content.update(event);\r\n        this.tab.update(event);\r\n    }\r\n    toJSON() {\r\n        return {\r\n            content: this.content.toJSON(),\r\n            tab: this.tab instanceof DefaultTab ? undefined : this.tab.toJSON(),\r\n        };\r\n    }\r\n    dispose() {\r\n        var _a;\r\n        this.content.dispose();\r\n        this.tab.dispose();\r\n        (_a = this.actions) === null || _a === void 0 ? void 0 : _a.dispose();\r\n    }\r\n}\r\n","import { getRelativeLocation, getGridLocation, } from '../gridview/gridview';\r\nimport { Position } from '../dnd/droptarget';\r\nimport { tail, sequenceEquals } from '../array';\r\nimport { DockviewGroupPanel } from './dockviewGroupPanel';\r\nimport { CompositeDisposable } from '../lifecycle';\r\nimport { Event, Emitter } from '../events';\r\nimport { Watermark } from './components/watermark/watermark';\r\nimport { sequentialNumberGenerator } from '../math';\r\nimport { DefaultDeserializer } from './deserializer';\r\nimport { createComponent } from '../panel/componentFactory';\r\nimport { BaseGrid, toTarget, } from '../gridview/baseComponentGridview';\r\nimport { DockviewApi } from '../api/component.api';\r\nimport { MouseEventKind } from '../groupview/tab';\r\nimport { Orientation } from '../splitview/core/splitview';\r\nimport { DefaultTab } from './components/tab/defaultTab';\r\nimport { GroupChangeKind2, } from '../groupview/groupview';\r\nimport { GroupPanel } from '../groupview/groupviewPanel';\r\nimport { DefaultGroupPanelView } from './defaultGroupPanelView';\r\nconst nextGroupId = sequentialNumberGenerator();\r\nexport class DockviewComponent extends BaseGrid {\r\n    constructor(element, options) {\r\n        super(element, {\r\n            proportionalLayout: true,\r\n            orientation: options.orientation || Orientation.HORIZONTAL,\r\n            styles: options.styles,\r\n        });\r\n        // events\r\n        this._onTabInteractionEvent = new Emitter();\r\n        this.onTabInteractionEvent = this._onTabInteractionEvent.event;\r\n        this._onTabContextMenu = new Emitter();\r\n        this.onTabContextMenu = this._onTabContextMenu.event;\r\n        this._onDidDrop = new Emitter();\r\n        this.onDidDrop = this._onDidDrop.event;\r\n        this._onDidRemovePanel = new Emitter();\r\n        this.onDidRemovePanel = this._onDidRemovePanel.event;\r\n        this._onDidAddPanel = new Emitter();\r\n        this.onDidAddPanel = this._onDidAddPanel.event;\r\n        this._onDidLayoutfromJSON = new Emitter();\r\n        this.onDidLayoutfromJSON = this._onDidLayoutfromJSON.event;\r\n        this._onDidActivePanelChange = new Emitter();\r\n        this.onDidActivePanelChange = this._onDidActivePanelChange.event;\r\n        this.addDisposables(this._onTabInteractionEvent, this._onTabContextMenu, this._onDidDrop, Event.any(this.onDidAddPanel, this.onDidRemovePanel, this.onDidActivePanelChange)(() => {\r\n            this._bufferOnDidLayoutChange.fire();\r\n        }));\r\n        this._options = options;\r\n        if (!this.options.components) {\r\n            this.options.components = {};\r\n        }\r\n        if (!this.options.frameworkComponents) {\r\n            this.options.frameworkComponents = {};\r\n        }\r\n        if (!this.options.frameworkTabComponents) {\r\n            this.options.frameworkTabComponents = {};\r\n        }\r\n        if (!this.options.tabComponents) {\r\n            this.options.tabComponents = {};\r\n        }\r\n        if (!this.options.watermarkComponent &&\r\n            !this.options.watermarkFrameworkComponent) {\r\n            this.options.watermarkComponent = Watermark;\r\n        }\r\n        this._api = new DockviewApi(this);\r\n    }\r\n    get totalPanels() {\r\n        return this.panels.length;\r\n    }\r\n    get panels() {\r\n        return this.groups.flatMap((group) => group.panels);\r\n    }\r\n    get deserializer() {\r\n        return this._deserializer;\r\n    }\r\n    set deserializer(value) {\r\n        this._deserializer = value;\r\n    }\r\n    get options() {\r\n        return this._options;\r\n    }\r\n    get activePanel() {\r\n        const activeGroup = this.activeGroup;\r\n        if (!activeGroup) {\r\n            return undefined;\r\n        }\r\n        return activeGroup.activePanel;\r\n    }\r\n    set tabHeight(height) {\r\n        this.options.tabHeight = height;\r\n        this._groups.forEach((value) => {\r\n            value.value.model.header.height = height;\r\n        });\r\n    }\r\n    get tabHeight() {\r\n        return this.options.tabHeight;\r\n    }\r\n    updateOptions(options) {\r\n        const hasOrientationChanged = typeof options.orientation === 'string' &&\r\n            this.options.orientation !== options.orientation;\r\n        this._options = Object.assign(Object.assign({}, this.options), options);\r\n        if (hasOrientationChanged) {\r\n            this.gridview.orientation = options.orientation;\r\n        }\r\n        this.layout(this.gridview.width, this.gridview.height, true);\r\n    }\r\n    focus() {\r\n        var _a;\r\n        (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.focus();\r\n    }\r\n    getGroupPanel(id) {\r\n        return this.panels.find((panel) => panel.id === id);\r\n    }\r\n    setActivePanel(panel) {\r\n        this.doSetGroupActive(panel.group);\r\n        panel.group.model.openPanel(panel);\r\n    }\r\n    moveToNext(options = {}) {\r\n        var _a;\r\n        if (!options.group) {\r\n            if (!this.activeGroup) {\r\n                return;\r\n            }\r\n            options.group = this.activeGroup;\r\n        }\r\n        if (options.includePanel && options.group) {\r\n            if (options.group.activePanel !==\r\n                options.group.panels[options.group.panels.length - 1]) {\r\n                options.group.model.moveToNext({ suppressRoll: true });\r\n                return;\r\n            }\r\n        }\r\n        const location = getGridLocation(options.group.element);\r\n        const next = (_a = this.gridview.next(location)) === null || _a === void 0 ? void 0 : _a.view;\r\n        this.doSetGroupActive(next);\r\n    }\r\n    moveToPrevious(options = {}) {\r\n        var _a;\r\n        if (!options.group) {\r\n            if (!this.activeGroup) {\r\n                return;\r\n            }\r\n            options.group = this.activeGroup;\r\n        }\r\n        if (options.includePanel && options.group) {\r\n            if (options.group.activePanel !==\r\n                options.group.panels[0]) {\r\n                options.group.model.moveToPrevious({ suppressRoll: true });\r\n                return;\r\n            }\r\n        }\r\n        const location = getGridLocation(options.group.element);\r\n        const next = (_a = this.gridview.previous(location)) === null || _a === void 0 ? void 0 : _a.view;\r\n        if (next) {\r\n            this.doSetGroupActive(next);\r\n        }\r\n    }\r\n    /**\r\n     * Serialize the current state of the layout\r\n     *\r\n     * @returns A JSON respresentation of the layout\r\n     */\r\n    toJSON() {\r\n        var _a;\r\n        const data = this.gridview.serialize();\r\n        const panels = this.panels.reduce((collection, panel) => {\r\n            collection[panel.id] = panel.toJSON();\r\n            return collection;\r\n        }, {});\r\n        return {\r\n            grid: data,\r\n            panels,\r\n            activeGroup: (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.id,\r\n            options: { tabHeight: this.tabHeight },\r\n        };\r\n    }\r\n    fromJSON(data) {\r\n        const groups = Array.from(this._groups.values()).map((_) => _.value);\r\n        for (const group of groups) {\r\n            // remove the group will automatically remove the panels\r\n            this.removeGroup(group, true);\r\n        }\r\n        this.gridview.clear();\r\n        if (!this.deserializer) {\r\n            throw new Error('invalid deserializer');\r\n        }\r\n        const { grid, panels, options, activeGroup } = data;\r\n        if (typeof (options === null || options === void 0 ? void 0 : options.tabHeight) === 'number') {\r\n            this.tabHeight = options.tabHeight;\r\n        }\r\n        if (!this.deserializer) {\r\n            throw new Error('no deserializer provided');\r\n        }\r\n        this.gridview.deserialize(grid, new DefaultDeserializer(this, {\r\n            createPanel: (id, group) => {\r\n                const panelData = panels[id];\r\n                return this.deserializer.fromJSON(panelData, group);\r\n            },\r\n        }));\r\n        if (typeof activeGroup === 'string') {\r\n            const panel = this.getPanel(activeGroup);\r\n            if (panel) {\r\n                this.doSetGroupActive(panel);\r\n            }\r\n        }\r\n        this.gridview.layout(this.width, this.height);\r\n        this._onDidLayoutfromJSON.fire();\r\n    }\r\n    closeAllGroups() {\r\n        for (const entry of this._groups.entries()) {\r\n            const [_, group] = entry;\r\n            group.value.model.closeAllPanels();\r\n        }\r\n    }\r\n    fireMouseEvent(event) {\r\n        if (event.kind === MouseEventKind.CONTEXT_MENU) {\r\n            if (event.tab && event.panel) {\r\n                this._onTabContextMenu.fire({\r\n                    event: event.event,\r\n                    api: this._api,\r\n                    panel: event.panel,\r\n                });\r\n            }\r\n        }\r\n    }\r\n    addPanel(options) {\r\n        var _a, _b;\r\n        if (this.panels.find((_) => _.id === options.id)) {\r\n            throw new Error(`panel with id ${options.id} already exists`);\r\n        }\r\n        let referenceGroup;\r\n        if ((_a = options.position) === null || _a === void 0 ? void 0 : _a.referencePanel) {\r\n            const referencePanel = this.getGroupPanel(options.position.referencePanel);\r\n            if (!referencePanel) {\r\n                throw new Error(`referencePanel ${options.position.referencePanel} does not exist`);\r\n            }\r\n            referenceGroup = this.findGroup(referencePanel);\r\n        }\r\n        else {\r\n            referenceGroup = this.activeGroup;\r\n        }\r\n        let panel;\r\n        if (referenceGroup) {\r\n            const target = toTarget(((_b = options.position) === null || _b === void 0 ? void 0 : _b.direction) || 'within');\r\n            if (target === Position.Center) {\r\n                panel = this.createPanel(options, referenceGroup);\r\n                referenceGroup.model.openPanel(panel);\r\n            }\r\n            else {\r\n                const location = getGridLocation(referenceGroup.element);\r\n                const relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\r\n                const group = this.createGroupAtLocation(relativeLocation);\r\n                panel = this.createPanel(options, group);\r\n                group.model.openPanel(panel);\r\n            }\r\n        }\r\n        else {\r\n            const group = this.createGroupAtLocation();\r\n            panel = this.createPanel(options, group);\r\n            group.model.openPanel(panel);\r\n        }\r\n        return panel;\r\n    }\r\n    removePanel(panel, options = {\r\n        removeEmptyGroup: true,\r\n        skipDispose: false,\r\n    }) {\r\n        const group = panel.group;\r\n        if (!group) {\r\n            throw new Error(`cannot remove panel ${panel.id}. it's missing a group.`);\r\n        }\r\n        group.model.removePanel(panel);\r\n        panel.dispose();\r\n        const retainGroupForWatermark = this.size === 1;\r\n        if (!retainGroupForWatermark &&\r\n            group.size === 0 &&\r\n            options.removeEmptyGroup) {\r\n            this.removeGroup(group);\r\n        }\r\n    }\r\n    createWatermarkComponent() {\r\n        var _a;\r\n        return createComponent('watermark-id', 'watermark-name', this.options.watermarkComponent\r\n            ? { 'watermark-name': this.options.watermarkComponent }\r\n            : {}, this.options.watermarkFrameworkComponent\r\n            ? { 'watermark-name': this.options.watermarkFrameworkComponent }\r\n            : {}, (_a = this.options.frameworkComponentFactory) === null || _a === void 0 ? void 0 : _a.watermark);\r\n    }\r\n    addEmptyGroup(options) {\r\n        const group = this.createGroup();\r\n        if (options) {\r\n            const referencePanel = this.panels.find((panel) => panel.id === options.referencePanel);\r\n            if (!referencePanel) {\r\n                throw new Error(`reference panel ${options.referencePanel} does not exist`);\r\n            }\r\n            const referenceGroup = this.findGroup(referencePanel);\r\n            if (!referenceGroup) {\r\n                throw new Error(`reference group for reference panel ${options.referencePanel} does not exist`);\r\n            }\r\n            const target = toTarget(options.direction || 'within');\r\n            const location = getGridLocation(referenceGroup.element);\r\n            const relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\r\n            this.doAddGroup(group, relativeLocation);\r\n        }\r\n        else {\r\n            this.doAddGroup(group);\r\n        }\r\n    }\r\n    removeGroup(group, skipActive = false) {\r\n        const panels = [...group.panels]; // reassign since group panels will mutate\r\n        for (const panel of panels) {\r\n            this.removePanel(panel, {\r\n                removeEmptyGroup: false,\r\n                skipDispose: false,\r\n            });\r\n        }\r\n        super.doRemoveGroup(group, { skipActive });\r\n    }\r\n    moveGroupOrPanel(referenceGroup, groupId, itemId, target, index) {\r\n        var _a;\r\n        const sourceGroup = groupId\r\n            ? (_a = this._groups.get(groupId)) === null || _a === void 0 ? void 0 : _a.value\r\n            : undefined;\r\n        if (!target || target === Position.Center) {\r\n            const groupItem = (sourceGroup === null || sourceGroup === void 0 ? void 0 : sourceGroup.model.removePanel(itemId)) ||\r\n                this.panels.find((panel) => panel.id === itemId);\r\n            if (!groupItem) {\r\n                throw new Error(`No panel with id ${itemId}`);\r\n            }\r\n            if ((sourceGroup === null || sourceGroup === void 0 ? void 0 : sourceGroup.model.size) === 0) {\r\n                this.doRemoveGroup(sourceGroup);\r\n            }\r\n            referenceGroup.model.openPanel(groupItem, { index });\r\n        }\r\n        else {\r\n            const referenceLocation = getGridLocation(referenceGroup.element);\r\n            const targetLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, target);\r\n            if (sourceGroup && sourceGroup.size < 2) {\r\n                const [targetParentLocation, to] = tail(targetLocation);\r\n                const sourceLocation = getGridLocation(sourceGroup.element);\r\n                const [sourceParentLocation, from] = tail(sourceLocation);\r\n                if (sequenceEquals(sourceParentLocation, targetParentLocation)) {\r\n                    // special case when 'swapping' two views within same grid location\r\n                    // if a group has one tab - we are essentially moving the 'group'\r\n                    // which is equivalent to swapping two views in this case\r\n                    this.gridview.moveView(sourceParentLocation, from, to);\r\n                }\r\n                else {\r\n                    // source group will become empty so delete the group\r\n                    const targetGroup = this.doRemoveGroup(sourceGroup, {\r\n                        skipActive: true,\r\n                        skipDispose: true,\r\n                    });\r\n                    // after deleting the group we need to re-evaulate the ref location\r\n                    const updatedReferenceLocation = getGridLocation(referenceGroup.element);\r\n                    const location = getRelativeLocation(this.gridview.orientation, updatedReferenceLocation, target);\r\n                    this.doAddGroup(targetGroup, location);\r\n                }\r\n            }\r\n            else {\r\n                const groupItem = (sourceGroup === null || sourceGroup === void 0 ? void 0 : sourceGroup.model.removePanel(itemId)) ||\r\n                    this.panels.find((panel) => panel.id === itemId);\r\n                if (!groupItem) {\r\n                    throw new Error(`No panel with id ${itemId}`);\r\n                }\r\n                const dropLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, target);\r\n                const group = this.createGroupAtLocation(dropLocation);\r\n                group.model.openPanel(groupItem);\r\n            }\r\n        }\r\n    }\r\n    doSetGroupActive(group, skipFocus) {\r\n        var _a, _b;\r\n        const isGroupAlreadyFocused = this._activeGroup === group;\r\n        super.doSetGroupActive(group, skipFocus);\r\n        if (!isGroupAlreadyFocused && ((_a = this._activeGroup) === null || _a === void 0 ? void 0 : _a.activePanel)) {\r\n            this._onDidActivePanelChange.fire((_b = this._activeGroup) === null || _b === void 0 ? void 0 : _b.activePanel);\r\n        }\r\n    }\r\n    createGroup(options) {\r\n        if (!options) {\r\n            options = { tabHeight: this.tabHeight };\r\n        }\r\n        if (typeof options.tabHeight !== 'number') {\r\n            options.tabHeight = this.tabHeight;\r\n        }\r\n        let id = options === null || options === void 0 ? void 0 : options.id;\r\n        if (id && this._groups.has(options.id)) {\r\n            console.warn(`Duplicate group id ${options === null || options === void 0 ? void 0 : options.id}. reassigning group id to avoid errors`);\r\n            id = undefined;\r\n        }\r\n        if (!id) {\r\n            id = nextGroupId.next();\r\n            while (this._groups.has(id)) {\r\n                id = nextGroupId.next();\r\n            }\r\n        }\r\n        const view = new GroupPanel(this, id, options);\r\n        view.init({ params: {}, accessor: null }); // required to initialized .part and allow for correct disposal of group\r\n        if (!this._groups.has(view.id)) {\r\n            const disposable = new CompositeDisposable(view.model.onMove((event) => {\r\n                const { groupId, itemId, target, index } = event;\r\n                this.moveGroupOrPanel(view, groupId, itemId, target, index);\r\n            }), view.model.onDidDrop((event) => {\r\n                this._onDidDrop.fire(Object.assign(Object.assign({}, event), { api: this._api }));\r\n            }), view.model.onDidGroupChange((event) => {\r\n                switch (event.kind) {\r\n                    case GroupChangeKind2.ADD_PANEL:\r\n                        if (event.panel) {\r\n                            this._onDidAddPanel.fire(event.panel);\r\n                        }\r\n                        break;\r\n                    case GroupChangeKind2.REMOVE_PANEL:\r\n                        if (event.panel) {\r\n                            this._onDidRemovePanel.fire(event.panel);\r\n                        }\r\n                        break;\r\n                    case GroupChangeKind2.PANEL_ACTIVE:\r\n                        this._onDidActivePanelChange.fire(event.panel);\r\n                        break;\r\n                }\r\n            }));\r\n            this._groups.set(view.id, { value: view, disposable });\r\n        }\r\n        // TODO: must be called after the above listeners have been setup,\r\n        // not an ideal pattern\r\n        view.initialize();\r\n        if (typeof this.options.tabHeight === 'number') {\r\n            view.model.header.height = this.options.tabHeight;\r\n        }\r\n        return view;\r\n    }\r\n    createPanel(options, group) {\r\n        const view = new DefaultGroupPanelView({\r\n            content: this.createContentComponent(options.id, options.component),\r\n            tab: this.createTabComponent(options.id, options.tabComponent),\r\n        });\r\n        const panel = new DockviewGroupPanel(options.id, this, this._api, group);\r\n        panel.init({\r\n            view,\r\n            title: options.title || options.id,\r\n            suppressClosable: options === null || options === void 0 ? void 0 : options.suppressClosable,\r\n            params: (options === null || options === void 0 ? void 0 : options.params) || {},\r\n        });\r\n        return panel;\r\n    }\r\n    createContentComponent(id, componentName) {\r\n        var _a;\r\n        return createComponent(id, componentName, this.options.components || {}, this.options.frameworkComponents, (_a = this.options.frameworkComponentFactory) === null || _a === void 0 ? void 0 : _a.content);\r\n    }\r\n    createTabComponent(id, componentName) {\r\n        var _a;\r\n        return createComponent(id, componentName, this.options.tabComponents || {}, this.options.frameworkTabComponents, (_a = this.options.frameworkComponentFactory) === null || _a === void 0 ? void 0 : _a.tab, () => new DefaultTab());\r\n    }\r\n    createGroupAtLocation(location = [0]) {\r\n        const group = this.createGroup();\r\n        this.doAddGroup(group, location);\r\n        return group;\r\n    }\r\n    findGroup(panel) {\r\n        var _a;\r\n        return (_a = Array.from(this._groups.values()).find((group) => group.value.model.containsPanel(panel))) === null || _a === void 0 ? void 0 : _a.value;\r\n    }\r\n    dispose() {\r\n        super.dispose();\r\n        this._onDidActivePanelChange.dispose();\r\n        this._onDidAddPanel.dispose();\r\n        this._onDidRemovePanel.dispose();\r\n        this._onDidLayoutfromJSON.dispose();\r\n    }\r\n}\r\n","import { getRelativeLocation, getGridLocation, } from './gridview';\r\nimport { Position } from '../dnd/droptarget';\r\nimport { tail, sequenceEquals } from '../array';\r\nimport { CompositeDisposable } from '../lifecycle';\r\nimport { BaseGrid, toTarget, } from './baseComponentGridview';\r\nimport { createComponent } from '../panel/componentFactory';\r\nimport { Emitter } from '../events';\r\nexport class GridviewComponent extends BaseGrid {\r\n    constructor(element, options) {\r\n        super(element, {\r\n            proportionalLayout: options.proportionalLayout,\r\n            orientation: options.orientation,\r\n            styles: options.styles,\r\n        });\r\n        this._onDidLayoutfromJSON = new Emitter();\r\n        this.onDidLayoutFromJSON = this._onDidLayoutfromJSON.event;\r\n        this._options = options;\r\n        if (!this.options.components) {\r\n            this.options.components = {};\r\n        }\r\n        if (!this.options.frameworkComponents) {\r\n            this.options.frameworkComponents = {};\r\n        }\r\n    }\r\n    get orientation() {\r\n        return this.gridview.orientation;\r\n    }\r\n    set orientation(value) {\r\n        this.gridview.orientation = value;\r\n    }\r\n    get options() {\r\n        return this._options;\r\n    }\r\n    get deserializer() {\r\n        return this._deserializer;\r\n    }\r\n    set deserializer(value) {\r\n        this._deserializer = value;\r\n    }\r\n    updateOptions(options) {\r\n        const hasOrientationChanged = typeof options.orientation === 'string' &&\r\n            this.options.orientation !== options.orientation;\r\n        this._options = Object.assign(Object.assign({}, this.options), options);\r\n        if (hasOrientationChanged) {\r\n            this.gridview.orientation = options.orientation;\r\n        }\r\n        this.layout(this.gridview.width, this.gridview.height, true);\r\n    }\r\n    removePanel(panel) {\r\n        this.removeGroup(panel);\r\n    }\r\n    /**\r\n     * Serialize the current state of the layout\r\n     *\r\n     * @returns A JSON respresentation of the layout\r\n     */\r\n    toJSON() {\r\n        var _a;\r\n        const data = this.gridview.serialize();\r\n        return {\r\n            grid: data,\r\n            activePanel: (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.id,\r\n        };\r\n    }\r\n    setVisible(panel, visible) {\r\n        this.gridview.setViewVisible(getGridLocation(panel.element), visible);\r\n    }\r\n    setActive(panel) {\r\n        this._groups.forEach((value, _key) => {\r\n            value.value.setActive(panel === value.value);\r\n        });\r\n    }\r\n    focus() {\r\n        var _a;\r\n        (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.focus();\r\n    }\r\n    fromJSON(serializedGridview) {\r\n        const { grid, activePanel } = serializedGridview;\r\n        const groups = Array.from(this._groups.values()); // reassign since group panels will mutate\r\n        for (const group of groups) {\r\n            group.disposable.dispose();\r\n            this.doRemoveGroup(group.value, { skipActive: true });\r\n        }\r\n        this.gridview.clear();\r\n        const queue = [];\r\n        this.gridview.deserialize(grid, {\r\n            fromJSON: (node) => {\r\n                const { data } = node;\r\n                const view = createComponent(data.id, data.component, this.options.components || {}, this.options.frameworkComponents || {}, this.options.frameworkComponentFactory\r\n                    ? {\r\n                        createComponent: this.options.frameworkComponentFactory\r\n                            .createComponent,\r\n                    }\r\n                    : undefined);\r\n                queue.push(() => view.init({\r\n                    params: data.params,\r\n                    minimumWidth: data.minimumWidth,\r\n                    maximumWidth: data.maximumWidth,\r\n                    minimumHeight: data.minimumHeight,\r\n                    maximumHeight: data.maximumHeight,\r\n                    priority: data.priority,\r\n                    snap: !!data.snap,\r\n                    accessor: this,\r\n                    isVisible: node.visible,\r\n                }));\r\n                this.registerPanel(view);\r\n                return view;\r\n            },\r\n        });\r\n        this.layout(this.width, this.height, true);\r\n        queue.forEach((f) => f());\r\n        if (typeof activePanel === 'string') {\r\n            const panel = this.getPanel(activePanel);\r\n            if (panel) {\r\n                this.doSetGroupActive(panel);\r\n            }\r\n        }\r\n        this._onDidLayoutfromJSON.fire();\r\n    }\r\n    movePanel(panel, options) {\r\n        var _a;\r\n        let relativeLocation;\r\n        const removedPanel = this.gridview.remove(panel);\r\n        const referenceGroup = (_a = this._groups.get(options.reference)) === null || _a === void 0 ? void 0 : _a.value;\r\n        if (!referenceGroup) {\r\n            throw new Error(`reference group ${options.reference} does not exist`);\r\n        }\r\n        const target = toTarget(options.direction);\r\n        if (target === Position.Center) {\r\n            throw new Error(`${target} not supported as an option`);\r\n        }\r\n        else {\r\n            const location = getGridLocation(referenceGroup.element);\r\n            relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\r\n        }\r\n        this.doAddGroup(removedPanel, relativeLocation, options.size);\r\n    }\r\n    addPanel(options) {\r\n        var _a, _b;\r\n        let relativeLocation = options.location || [0];\r\n        if ((_a = options.position) === null || _a === void 0 ? void 0 : _a.referencePanel) {\r\n            const referenceGroup = (_b = this._groups.get(options.position.referencePanel)) === null || _b === void 0 ? void 0 : _b.value;\r\n            if (!referenceGroup) {\r\n                throw new Error(`reference group ${options.position.referencePanel} does not exist`);\r\n            }\r\n            const target = toTarget(options.position.direction);\r\n            if (target === Position.Center) {\r\n                throw new Error(`${target} not supported as an option`);\r\n            }\r\n            else {\r\n                const location = getGridLocation(referenceGroup.element);\r\n                relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\r\n            }\r\n        }\r\n        const view = createComponent(options.id, options.component, this.options.components || {}, this.options.frameworkComponents || {}, this.options.frameworkComponentFactory\r\n            ? {\r\n                createComponent: this.options.frameworkComponentFactory\r\n                    .createComponent,\r\n            }\r\n            : undefined);\r\n        view.init({\r\n            params: options.params || {},\r\n            minimumWidth: options.minimumWidth,\r\n            maximumWidth: options.maximumWidth,\r\n            minimumHeight: options.minimumHeight,\r\n            maximumHeight: options.maximumHeight,\r\n            priority: options.priority,\r\n            snap: !!options.snap,\r\n            accessor: this,\r\n            isVisible: true,\r\n        });\r\n        this.registerPanel(view);\r\n        this.doAddGroup(view, relativeLocation, options.size);\r\n        return view;\r\n    }\r\n    registerPanel(panel) {\r\n        const disposable = new CompositeDisposable(panel.api.onDidFocusChange((event) => {\r\n            if (!event.isFocused) {\r\n                return;\r\n            }\r\n            this._groups.forEach((groupItem) => {\r\n                const group = groupItem.value;\r\n                if (group !== panel) {\r\n                    group.setActive(false);\r\n                }\r\n                else {\r\n                    group.setActive(true);\r\n                }\r\n            });\r\n        }));\r\n        this._groups.set(panel.id, {\r\n            value: panel,\r\n            disposable,\r\n        });\r\n    }\r\n    moveGroup(referenceGroup, groupId, target) {\r\n        const sourceGroup = this.getPanel(groupId);\r\n        if (!sourceGroup) {\r\n            throw new Error('invalid operation');\r\n        }\r\n        const referenceLocation = getGridLocation(referenceGroup.element);\r\n        const targetLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, target);\r\n        const [targetParentLocation, to] = tail(targetLocation);\r\n        const sourceLocation = getGridLocation(sourceGroup.element);\r\n        const [sourceParentLocation, from] = tail(sourceLocation);\r\n        if (sequenceEquals(sourceParentLocation, targetParentLocation)) {\r\n            // special case when 'swapping' two views within same grid location\r\n            // if a group has one tab - we are essentially moving the 'group'\r\n            // which is equivalent to swapping two views in this case\r\n            this.gridview.moveView(sourceParentLocation, from, to);\r\n            return;\r\n        }\r\n        // source group will become empty so delete the group\r\n        const targetGroup = this.doRemoveGroup(sourceGroup, {\r\n            skipActive: true,\r\n            skipDispose: true,\r\n        });\r\n        // after deleting the group we need to re-evaulate the ref location\r\n        const updatedReferenceLocation = getGridLocation(referenceGroup.element);\r\n        const location = getRelativeLocation(this.gridview.orientation, updatedReferenceLocation, target);\r\n        this.doAddGroup(targetGroup, location);\r\n    }\r\n    removeGroup(group) {\r\n        super.removeGroup(group);\r\n    }\r\n    dispose() {\r\n        super.dispose();\r\n        this._onDidLayoutfromJSON.dispose();\r\n    }\r\n}\r\n","import { CompositeDisposable, MutableDisposable, } from '../lifecycle';\r\nimport { Orientation, Sizing, Splitview, } from './core/splitview';\r\nimport { Emitter } from '../events';\r\nimport { createComponent } from '../panel/componentFactory';\r\n/**\r\n * A high-level implementation of splitview that works using 'panels'\r\n */\r\nexport class SplitviewComponent extends CompositeDisposable {\r\n    constructor(element, options) {\r\n        super();\r\n        this.element = element;\r\n        this._disposable = new MutableDisposable();\r\n        this._panels = new Map();\r\n        this._onDidLayoutfromJSON = new Emitter();\r\n        this.onDidLayoutFromJSON = this._onDidLayoutfromJSON.event;\r\n        this._onDidAddView = new Emitter();\r\n        this.onDidAddView = this._onDidAddView.event;\r\n        this._onDidRemoveView = new Emitter();\r\n        this.onDidRemoveView = this._onDidRemoveView.event;\r\n        this._onDidLayoutChange = new Emitter();\r\n        this.onDidLayoutChange = this._onDidLayoutChange.event;\r\n        this._options = options;\r\n        if (!options.components) {\r\n            options.components = {};\r\n        }\r\n        if (!options.frameworkComponents) {\r\n            options.frameworkComponents = {};\r\n        }\r\n        this.splitview = new Splitview(this.element, options);\r\n        this.addDisposables(this._disposable, this._onDidAddView, this._onDidLayoutfromJSON, this._onDidRemoveView, this._onDidLayoutChange);\r\n    }\r\n    get panels() {\r\n        return this.splitview.getViews();\r\n    }\r\n    get options() {\r\n        return this._options;\r\n    }\r\n    get length() {\r\n        return this._panels.size;\r\n    }\r\n    get orientation() {\r\n        return this.splitview.orientation;\r\n    }\r\n    get splitview() {\r\n        return this._splitview;\r\n    }\r\n    set splitview(value) {\r\n        this._splitview = value;\r\n        this._disposable.value = new CompositeDisposable(this._splitview.onDidSashEnd(() => {\r\n            this._onDidLayoutChange.fire(undefined);\r\n        }), this._splitview.onDidAddView((e) => this._onDidAddView.fire(e)), this._splitview.onDidRemoveView((e) => this._onDidRemoveView.fire(e)));\r\n    }\r\n    get minimumSize() {\r\n        return this.splitview.minimumSize;\r\n    }\r\n    get maximumSize() {\r\n        return this.splitview.maximumSize;\r\n    }\r\n    get height() {\r\n        return this.splitview.orientation === Orientation.HORIZONTAL\r\n            ? this.splitview.orthogonalSize\r\n            : this.splitview.size;\r\n    }\r\n    get width() {\r\n        return this.splitview.orientation === Orientation.HORIZONTAL\r\n            ? this.splitview.size\r\n            : this.splitview.orthogonalSize;\r\n    }\r\n    updateOptions(options) {\r\n        const hasOrientationChanged = typeof options.orientation === 'string' &&\r\n            this.options.orientation !== options.orientation;\r\n        this._options = Object.assign(Object.assign({}, this.options), options);\r\n        if (hasOrientationChanged) {\r\n            this.splitview.orientation = options.orientation;\r\n        }\r\n        this.splitview.layout(this.splitview.size, this.splitview.orthogonalSize);\r\n    }\r\n    focus() {\r\n        var _a;\r\n        (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.focus();\r\n    }\r\n    movePanel(from, to) {\r\n        this.splitview.moveView(from, to);\r\n    }\r\n    setVisible(panel, visible) {\r\n        const index = this.panels.indexOf(panel);\r\n        this.splitview.setViewVisible(index, visible);\r\n    }\r\n    setActive(view, skipFocus) {\r\n        this._activePanel = view;\r\n        this.panels\r\n            .filter((v) => v !== view)\r\n            .forEach((v) => {\r\n            v.api._onDidActiveChange.fire({ isActive: false });\r\n            if (!skipFocus) {\r\n                v.focus();\r\n            }\r\n        });\r\n        view.api._onDidActiveChange.fire({ isActive: true });\r\n        if (!skipFocus) {\r\n            view.focus();\r\n        }\r\n    }\r\n    removePanel(panel, sizing) {\r\n        const disposable = this._panels.get(panel.id);\r\n        if (!disposable) {\r\n            throw new Error(`unknown splitview panel ${panel.id}`);\r\n        }\r\n        disposable.disposable.dispose();\r\n        disposable.value.dispose();\r\n        this._panels.delete(panel.id);\r\n        const index = this.panels.findIndex((_) => _ === panel);\r\n        this.splitview.removeView(index, sizing);\r\n        const panels = this.panels;\r\n        if (panels.length > 0) {\r\n            this.setActive(panels[panels.length - 1]);\r\n        }\r\n    }\r\n    getPanel(id) {\r\n        return this.panels.find((view) => view.id === id);\r\n    }\r\n    addPanel(options) {\r\n        if (this._panels.has(options.id)) {\r\n            throw new Error(`panel ${options.id} already exists`);\r\n        }\r\n        const view = createComponent(options.id, options.component, this.options.components || {}, this.options.frameworkComponents || {}, this.options.frameworkWrapper\r\n            ? {\r\n                createComponent: this.options.frameworkWrapper.createComponent,\r\n            }\r\n            : undefined);\r\n        view.orientation = this.splitview.orientation;\r\n        view.init({\r\n            params: options.params || {},\r\n            minimumSize: options.minimumSize,\r\n            maximumSize: options.maximumSize,\r\n            snap: options.snap,\r\n            priority: options.priority,\r\n            accessor: this,\r\n        });\r\n        const size = typeof options.size === 'number' ? options.size : Sizing.Distribute;\r\n        const index = typeof options.index === 'number' ? options.index : undefined;\r\n        this.splitview.addView(view, size, index);\r\n        this.doAddView(view);\r\n        this.setActive(view);\r\n        return view;\r\n    }\r\n    layout(width, height) {\r\n        const [size, orthogonalSize] = this.splitview.orientation === Orientation.HORIZONTAL\r\n            ? [width, height]\r\n            : [height, width];\r\n        this.splitview.layout(size, orthogonalSize);\r\n    }\r\n    doAddView(view) {\r\n        const disposable = view.api.onDidFocusChange((event) => {\r\n            if (!event.isFocused) {\r\n                return;\r\n            }\r\n            this.setActive(view, true);\r\n        });\r\n        this._panels.set(view.id, { disposable, value: view });\r\n    }\r\n    toJSON() {\r\n        var _a;\r\n        const views = this.splitview\r\n            .getViews()\r\n            .map((view, i) => {\r\n            const size = this.splitview.getViewSize(i);\r\n            return {\r\n                size,\r\n                data: view.toJSON(),\r\n                snap: !!view.snap,\r\n                priority: view.priority,\r\n            };\r\n        });\r\n        return {\r\n            views,\r\n            activeView: (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.id,\r\n            size: this.splitview.size,\r\n            orientation: this.splitview.orientation,\r\n        };\r\n    }\r\n    fromJSON(serializedSplitview) {\r\n        const { views, orientation, size, activeView } = serializedSplitview;\r\n        for (const [_, value] of this._panels.entries()) {\r\n            value.disposable.dispose();\r\n            value.value.dispose();\r\n        }\r\n        this._panels.clear();\r\n        this.splitview.dispose();\r\n        const queue = [];\r\n        this.splitview = new Splitview(this.element, {\r\n            orientation,\r\n            proportionalLayout: this.options.proportionalLayout,\r\n            descriptor: {\r\n                size,\r\n                views: views.map((view) => {\r\n                    const data = view.data;\r\n                    if (this._panels.has(data.id)) {\r\n                        throw new Error(`panel ${data.id} already exists`);\r\n                    }\r\n                    const panel = createComponent(data.id, data.component, this.options.components || {}, this.options.frameworkComponents || {}, this.options.frameworkWrapper\r\n                        ? {\r\n                            createComponent: this.options.frameworkWrapper\r\n                                .createComponent,\r\n                        }\r\n                        : undefined);\r\n                    queue.push(() => {\r\n                        panel.init({\r\n                            params: data.params || {},\r\n                            minimumSize: data.minimumSize,\r\n                            maximumSize: data.maximumSize,\r\n                            snap: view.snap,\r\n                            priority: view.priority,\r\n                            accessor: this,\r\n                        });\r\n                    });\r\n                    panel.orientation = orientation;\r\n                    this.doAddView(panel);\r\n                    setTimeout(() => {\r\n                        // the original onDidAddView events are missed since they are fired before we can subcribe to them\r\n                        this._onDidAddView.fire(panel);\r\n                    }, 0);\r\n                    return { size: view.size, view: panel };\r\n                }),\r\n            },\r\n        });\r\n        this.layout(this.width, this.height);\r\n        queue.forEach((f) => f());\r\n        if (typeof activeView === 'string') {\r\n            const panel = this.getPanel(activeView);\r\n            if (panel) {\r\n                this.setActive(panel);\r\n            }\r\n        }\r\n        this._onDidLayoutfromJSON.fire();\r\n    }\r\n    dispose() {\r\n        for (const [_, value] of this._panels.entries()) {\r\n            value.disposable.dispose();\r\n            value.value.dispose();\r\n        }\r\n        this._panels.clear();\r\n        this.splitview.dispose();\r\n        super.dispose();\r\n    }\r\n}\r\n","import { Emitter } from '../events';\r\nimport { PanelApiImpl } from './panelApi';\r\nexport class SplitviewPanelApiImpl extends PanelApiImpl {\r\n    //\r\n    constructor(id) {\r\n        super(id);\r\n        this._onDidConstraintsChangeInternal = new Emitter();\r\n        this.onDidConstraintsChangeInternal = this._onDidConstraintsChangeInternal.event;\r\n        //\r\n        this._onDidConstraintsChange = new Emitter({\r\n            replay: true,\r\n        });\r\n        this.onDidConstraintsChange = this._onDidConstraintsChange.event;\r\n        //\r\n        this._onDidSizeChange = new Emitter();\r\n        this.onDidSizeChange = this._onDidSizeChange.event;\r\n        this.addDisposables(this._onDidConstraintsChangeInternal, this._onDidConstraintsChange, this._onDidSizeChange);\r\n    }\r\n    setConstraints(value) {\r\n        this._onDidConstraintsChangeInternal.fire(value);\r\n    }\r\n    setSize(event) {\r\n        this._onDidSizeChange.fire(event);\r\n    }\r\n}\r\n","import { Emitter } from '../events';\r\nimport { SplitviewPanelApiImpl } from './splitviewPanelApi';\r\nexport class PaneviewPanelApiImpl extends SplitviewPanelApiImpl {\r\n    constructor(id) {\r\n        super(id);\r\n        this._onDidExpansionChange = new Emitter({\r\n            replay: true,\r\n        });\r\n        this.onDidExpansionChange = this._onDidExpansionChange.event;\r\n        this._onMouseEnter = new Emitter({});\r\n        this.onMouseEnter = this._onMouseEnter.event;\r\n        this._onMouseLeave = new Emitter({});\r\n        this.onMouseLeave = this._onMouseLeave.event;\r\n        this.addDisposables(this._onDidExpansionChange, this._onMouseEnter, this._onMouseLeave);\r\n    }\r\n    set pane(pane) {\r\n        this._pane = pane;\r\n    }\r\n    setExpanded(isExpanded) {\r\n        var _a;\r\n        (_a = this._pane) === null || _a === void 0 ? void 0 : _a.setExpanded(isExpanded);\r\n    }\r\n    get isExpanded() {\r\n        var _a;\r\n        return !!((_a = this._pane) === null || _a === void 0 ? void 0 : _a.isExpanded());\r\n    }\r\n}\r\n","import { PaneviewPanelApiImpl } from '../api/paneviewPanelApi';\r\nimport { addClasses, removeClasses } from '../dom';\r\nimport { addDisposableListener, Emitter } from '../events';\r\nimport { BasePanelView, } from '../gridview/basePanelView';\r\nimport { Orientation } from '../splitview/core/splitview';\r\nexport class PaneviewPanel extends BasePanelView {\r\n    constructor(id, component, headerComponent, orientation, isExpanded, isHeaderVisible) {\r\n        super(id, component, new PaneviewPanelApiImpl(id));\r\n        this.headerComponent = headerComponent;\r\n        this._onDidChangeExpansionState = new Emitter({ replay: true });\r\n        this.onDidChangeExpansionState = this._onDidChangeExpansionState.event;\r\n        this._onDidChange = new Emitter();\r\n        this.onDidChange = this._onDidChange.event;\r\n        this.headerSize = 22;\r\n        this._orthogonalSize = 0;\r\n        this._size = 0;\r\n        this._minimumBodySize = 100;\r\n        this._maximumBodySize = Number.POSITIVE_INFINITY;\r\n        this._isExpanded = false;\r\n        this.expandedSize = 0;\r\n        this.api.pane = this; // TODO cannot use 'this' before 'super'\r\n        this._isExpanded = isExpanded;\r\n        this._headerVisible = isHeaderVisible;\r\n        this._onDidChangeExpansionState.fire(this.isExpanded()); // initialize value\r\n        this._orientation = orientation;\r\n        this.element.classList.add('pane');\r\n        this.addDisposables(this.api.onDidSizeChange((event) => {\r\n            this._onDidChange.fire(event.size);\r\n        }), addDisposableListener(this.element, 'mouseenter', (ev) => {\r\n            this.api._onMouseEnter.fire(ev);\r\n        }), addDisposableListener(this.element, 'mouseleave', (ev) => {\r\n            this.api._onMouseLeave.fire(ev);\r\n        }));\r\n        this.addDisposables(this._onDidChangeExpansionState, this.onDidChangeExpansionState((isPanelExpanded) => {\r\n            this.api._onDidExpansionChange.fire({\r\n                isExpanded: isPanelExpanded,\r\n            });\r\n        }), this.api.onDidFocusChange((e) => {\r\n            if (!this.header) {\r\n                return;\r\n            }\r\n            if (e.isFocused) {\r\n                addClasses(this.header, 'focused');\r\n            }\r\n            else {\r\n                removeClasses(this.header, 'focused');\r\n            }\r\n        }));\r\n        this.renderOnce();\r\n    }\r\n    set orientation(value) {\r\n        this._orientation = value;\r\n    }\r\n    get orientation() {\r\n        return this._orientation;\r\n    }\r\n    get minimumSize() {\r\n        const headerSize = this.headerSize;\r\n        const expanded = this.isExpanded();\r\n        const minimumBodySize = expanded ? this._minimumBodySize : 0;\r\n        return headerSize + minimumBodySize;\r\n    }\r\n    get maximumSize() {\r\n        const headerSize = this.headerSize;\r\n        const expanded = this.isExpanded();\r\n        const maximumBodySize = expanded ? this._maximumBodySize : 0;\r\n        return headerSize + maximumBodySize;\r\n    }\r\n    get size() {\r\n        return this._size;\r\n    }\r\n    get orthogonalSize() {\r\n        return this._orthogonalSize;\r\n    }\r\n    set orthogonalSize(size) {\r\n        this._orthogonalSize = size;\r\n    }\r\n    get minimumBodySize() {\r\n        return this._minimumBodySize;\r\n    }\r\n    set minimumBodySize(value) {\r\n        this._minimumBodySize = typeof value === 'number' ? value : 0;\r\n    }\r\n    get maximumBodySize() {\r\n        return this._maximumBodySize;\r\n    }\r\n    set maximumBodySize(value) {\r\n        this._maximumBodySize =\r\n            typeof value === 'number' ? value : Number.POSITIVE_INFINITY;\r\n    }\r\n    get headerVisible() {\r\n        return this._headerVisible;\r\n    }\r\n    set headerVisible(value) {\r\n        this._headerVisible = value;\r\n        this.header.style.display = value ? '' : 'none';\r\n    }\r\n    setVisible(isVisible) {\r\n        this.api._onDidVisibilityChange.fire({ isVisible });\r\n    }\r\n    setActive(isActive) {\r\n        this.api._onDidActiveChange.fire({ isActive });\r\n    }\r\n    isExpanded() {\r\n        return this._isExpanded;\r\n    }\r\n    setExpanded(expanded) {\r\n        if (this._isExpanded === expanded) {\r\n            return;\r\n        }\r\n        this._isExpanded = expanded;\r\n        if (expanded) {\r\n            if (this.animationTimer) {\r\n                clearTimeout(this.animationTimer);\r\n            }\r\n            if (this.body) {\r\n                this.element.appendChild(this.body);\r\n            }\r\n        }\r\n        else {\r\n            this.animationTimer = setTimeout(() => {\r\n                var _a;\r\n                (_a = this.body) === null || _a === void 0 ? void 0 : _a.remove();\r\n            }, 200);\r\n        }\r\n        this._onDidChange.fire(expanded ? this.width : undefined);\r\n        this._onDidChangeExpansionState.fire(expanded);\r\n    }\r\n    layout(size, orthogonalSize) {\r\n        this._size = size;\r\n        this._orthogonalSize = orthogonalSize;\r\n        const [width, height] = this.orientation === Orientation.HORIZONTAL\r\n            ? [size, orthogonalSize]\r\n            : [orthogonalSize, size];\r\n        if (this.isExpanded()) {\r\n            this.expandedSize = width;\r\n        }\r\n        super.layout(width, height);\r\n    }\r\n    init(parameters) {\r\n        var _a, _b;\r\n        super.init(parameters);\r\n        if (typeof parameters.minimumBodySize === 'number') {\r\n            this.minimumBodySize = parameters.minimumBodySize;\r\n        }\r\n        if (typeof parameters.maximumBodySize === 'number') {\r\n            this.maximumBodySize = parameters.maximumBodySize;\r\n        }\r\n        this.bodyPart = this.getBodyComponent();\r\n        this.headerPart = this.getHeaderComponent();\r\n        this.bodyPart.init(Object.assign(Object.assign({}, parameters), { api: this.api }));\r\n        this.headerPart.init(Object.assign(Object.assign({}, parameters), { api: this.api }));\r\n        (_a = this.body) === null || _a === void 0 ? void 0 : _a.append(this.bodyPart.element);\r\n        (_b = this.header) === null || _b === void 0 ? void 0 : _b.append(this.headerPart.element);\r\n        if (typeof parameters.isExpanded === 'boolean') {\r\n            this.setExpanded(parameters.isExpanded);\r\n        }\r\n    }\r\n    toJSON() {\r\n        const params = this._params;\r\n        return Object.assign(Object.assign({}, super.toJSON()), { headerComponent: this.headerComponent, title: params.title });\r\n    }\r\n    renderOnce() {\r\n        this.header = document.createElement('div');\r\n        this.header.tabIndex = 0;\r\n        this.header.className = 'pane-header';\r\n        this.header.style.height = `${this.headerSize}px`;\r\n        this.header.style.lineHeight = `${this.headerSize}px`;\r\n        this.header.style.minHeight = `${this.headerSize}px`;\r\n        this.header.style.maxHeight = `${this.headerSize}px`;\r\n        this.element.appendChild(this.header);\r\n        this.body = document.createElement('div');\r\n        this.body.className = 'pane-body';\r\n        this.element.appendChild(this.body);\r\n    }\r\n    // TODO slightly hacky by-pass of the component to create a body and header component\r\n    getComponent() {\r\n        return {\r\n            update: (params) => {\r\n                var _a, _b;\r\n                (_a = this.bodyPart) === null || _a === void 0 ? void 0 : _a.update({ params });\r\n                (_b = this.headerPart) === null || _b === void 0 ? void 0 : _b.update({ params });\r\n            },\r\n            dispose: () => {\r\n                var _a, _b;\r\n                (_a = this.bodyPart) === null || _a === void 0 ? void 0 : _a.dispose();\r\n                (_b = this.headerPart) === null || _b === void 0 ? void 0 : _b.dispose();\r\n            },\r\n        };\r\n    }\r\n}\r\n","import { DragHandler } from '../dnd/abstractDragHandler';\r\nimport { getPaneData, LocalSelectionTransfer, PaneTransfer, } from '../dnd/dataTransfer';\r\nimport { Droptarget, Position } from '../dnd/droptarget';\r\nimport { Emitter } from '../events';\r\nimport { PaneviewPanel, } from './paneviewPanel';\r\nexport class DraggablePaneviewPanel extends PaneviewPanel {\r\n    constructor(id, component, headerComponent, orientation, isExpanded, disableDnd) {\r\n        super(id, component, headerComponent, orientation, isExpanded, true);\r\n        this._onDidDrop = new Emitter();\r\n        this.onDidDrop = this._onDidDrop.event;\r\n        if (!disableDnd) {\r\n            this.initDragFeatures();\r\n        }\r\n    }\r\n    initDragFeatures() {\r\n        if (!this.header) {\r\n            return;\r\n        }\r\n        const id = this.id;\r\n        this.header.draggable = true;\r\n        this.handler = new (class PaneDragHandler extends DragHandler {\r\n            getData() {\r\n                LocalSelectionTransfer.getInstance().setData([new PaneTransfer('paneview', id)], PaneTransfer.prototype);\r\n                return {\r\n                    dispose: () => {\r\n                        LocalSelectionTransfer.getInstance().clearData(PaneTransfer.prototype);\r\n                    },\r\n                };\r\n            }\r\n        })(this.header);\r\n        this.target = new Droptarget(this.element, {\r\n            validOverlays: 'vertical',\r\n            canDisplayOverlay: () => {\r\n                const data = getPaneData();\r\n                if (!data) {\r\n                    return true;\r\n                }\r\n                return data.paneId !== this.id;\r\n            },\r\n        });\r\n        this.addDisposables(this._onDidDrop, this.handler, this.target, this.target.onDrop((event) => {\r\n            this.onDrop(event);\r\n        }));\r\n    }\r\n    onDrop(event) {\r\n        const data = getPaneData();\r\n        if (!data) {\r\n            this._onDidDrop.fire(Object.assign(Object.assign({}, event), { panel: this, getData: () => getPaneData() }));\r\n            return;\r\n        }\r\n        const containerApi = this._params\r\n            .containerApi;\r\n        const panelId = data.paneId;\r\n        const existingPanel = containerApi.getPanel(panelId);\r\n        if (!existingPanel) {\r\n            this._onDidDrop.fire(Object.assign(Object.assign({}, event), { panel: this, getData: () => getPaneData() }));\r\n            return;\r\n        }\r\n        const allPanels = containerApi.panels;\r\n        const fromIndex = allPanels.indexOf(existingPanel);\r\n        let toIndex = containerApi.panels.indexOf(this);\r\n        if (event.position === Position.Left ||\r\n            event.position === Position.Top) {\r\n            toIndex = Math.max(0, toIndex - 1);\r\n        }\r\n        if (event.position === Position.Right ||\r\n            event.position === Position.Bottom) {\r\n            if (fromIndex > toIndex) {\r\n                toIndex++;\r\n            }\r\n            toIndex = Math.min(allPanels.length - 1, toIndex);\r\n        }\r\n        containerApi.movePanel(fromIndex, toIndex);\r\n    }\r\n}\r\n","import { addDisposableListener } from '../events';\r\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\r\nexport class DefaultHeader extends CompositeDisposable {\r\n    constructor() {\r\n        super();\r\n        this.disposable = new MutableDisposable();\r\n        this.apiRef = { api: null };\r\n        this._element = document.createElement('div');\r\n        this.element.className = 'default-header';\r\n        this._content = document.createElement('span');\r\n        this._expander = document.createElement('a');\r\n        this.element.appendChild(this._content);\r\n        this.element.appendChild(this._expander);\r\n        this.addDisposables(addDisposableListener(this._expander, 'click', () => {\r\n            var _a;\r\n            (_a = this.apiRef.api) === null || _a === void 0 ? void 0 : _a.setExpanded(!this.apiRef.api.isExpanded);\r\n        }));\r\n    }\r\n    get element() {\r\n        return this._element;\r\n    }\r\n    init(params) {\r\n        this.apiRef.api = params.api;\r\n        this._content.textContent = params.title;\r\n        this._expander.textContent = params.api.isExpanded ? '<' : '>';\r\n        this.disposable.value = params.api.onDidExpansionChange((e) => {\r\n            this._expander.textContent = e.isExpanded ? '<' : '>';\r\n        });\r\n    }\r\n    update(_params) {\r\n        //\r\n    }\r\n    dispose() {\r\n        this.disposable.dispose();\r\n        super.dispose();\r\n    }\r\n}\r\n","import { PaneviewApi } from '../api/component.api';\r\nimport { createComponent } from '../panel/componentFactory';\r\nimport { Emitter } from '../events';\r\nimport { CompositeDisposable, MutableDisposable, } from '../lifecycle';\r\nimport { Orientation, Sizing, } from '../splitview/core/splitview';\r\nimport { Paneview } from './paneview';\r\nimport { DraggablePaneviewPanel, } from './draggablePaneviewPanel';\r\nimport { DefaultHeader } from './defaultPaneviewHeader';\r\nexport class PaneFramework extends DraggablePaneviewPanel {\r\n    constructor(options) {\r\n        super(options.id, options.component, options.headerComponent, options.orientation, options.isExpanded, options.disableDnd);\r\n        this.options = options;\r\n    }\r\n    getBodyComponent() {\r\n        return this.options.body;\r\n    }\r\n    getHeaderComponent() {\r\n        return this.options.header;\r\n    }\r\n}\r\nexport class PaneviewComponent extends CompositeDisposable {\r\n    constructor(element, options) {\r\n        super();\r\n        this.element = element;\r\n        this._disposable = new MutableDisposable();\r\n        this._viewDisposables = new Map();\r\n        this._onDidLayoutfromJSON = new Emitter();\r\n        this.onDidLayoutFromJSON = this._onDidLayoutfromJSON.event;\r\n        this._onDidLayoutChange = new Emitter();\r\n        this.onDidLayoutChange = this._onDidLayoutChange.event;\r\n        this._onDidDrop = new Emitter();\r\n        this.onDidDrop = this._onDidDrop.event;\r\n        this._onDidAddView = new Emitter();\r\n        this.onDidAddView = this._onDidAddView.event;\r\n        this._onDidRemoveView = new Emitter();\r\n        this.onDidRemoveView = this._onDidRemoveView.event;\r\n        this.addDisposables(this._onDidLayoutChange, this._onDidLayoutfromJSON, this._onDidDrop, this._onDidAddView, this._onDidRemoveView);\r\n        this._options = options;\r\n        if (!options.components) {\r\n            options.components = {};\r\n        }\r\n        if (!options.frameworkComponents) {\r\n            options.frameworkComponents = {};\r\n        }\r\n        this.paneview = new Paneview(this.element, {\r\n            // only allow paneview in the vertical orientation for now\r\n            orientation: Orientation.VERTICAL,\r\n        });\r\n        this.addDisposables(this._disposable);\r\n    }\r\n    get panels() {\r\n        return this.paneview.getPanes();\r\n    }\r\n    set paneview(value) {\r\n        this._paneview = value;\r\n        this._disposable.value = new CompositeDisposable(this._paneview.onDidChange(() => {\r\n            this._onDidLayoutChange.fire(undefined);\r\n        }), this._paneview.onDidAddView((e) => this._onDidAddView.fire(e)), this._paneview.onDidRemoveView((e) => this._onDidRemoveView.fire(e)));\r\n    }\r\n    get paneview() {\r\n        return this._paneview;\r\n    }\r\n    get minimumSize() {\r\n        return this.paneview.minimumSize;\r\n    }\r\n    get maximumSize() {\r\n        return this.paneview.maximumSize;\r\n    }\r\n    get height() {\r\n        return this.paneview.orientation === Orientation.HORIZONTAL\r\n            ? this.paneview.orthogonalSize\r\n            : this.paneview.size;\r\n    }\r\n    get width() {\r\n        return this.paneview.orientation === Orientation.HORIZONTAL\r\n            ? this.paneview.size\r\n            : this.paneview.orthogonalSize;\r\n    }\r\n    get options() {\r\n        return this._options;\r\n    }\r\n    focus() {\r\n        //\r\n    }\r\n    updateOptions(options) {\r\n        this._options = Object.assign(Object.assign({}, this.options), options);\r\n    }\r\n    addPanel(options) {\r\n        const body = createComponent(options.id, options.component, this.options.components || {}, this.options.frameworkComponents || {}, this.options.frameworkWrapper\r\n            ? {\r\n                createComponent: this.options.frameworkWrapper.body.createComponent,\r\n            }\r\n            : undefined);\r\n        let header;\r\n        if (options.headerComponent) {\r\n            header = createComponent(options.id, options.headerComponent, this.options.headerComponents || {}, this.options.headerframeworkComponents, this.options.frameworkWrapper\r\n                ? {\r\n                    createComponent: this.options.frameworkWrapper.header\r\n                        .createComponent,\r\n                }\r\n                : undefined);\r\n        }\r\n        else {\r\n            header = new DefaultHeader();\r\n        }\r\n        const view = new PaneFramework({\r\n            id: options.id,\r\n            component: options.component,\r\n            headerComponent: options.headerComponent,\r\n            header,\r\n            body,\r\n            orientation: Orientation.VERTICAL,\r\n            isExpanded: !!options.isExpanded,\r\n            disableDnd: !!this.options.disableDnd,\r\n        });\r\n        this.doAddPanel(view);\r\n        const size = typeof options.size === 'number' ? options.size : Sizing.Distribute;\r\n        const index = typeof options.index === 'number' ? options.index : undefined;\r\n        view.init({\r\n            params: options.params || {},\r\n            minimumBodySize: options.minimumBodySize,\r\n            maximumBodySize: options.maximumBodySize,\r\n            isExpanded: options.isExpanded,\r\n            title: options.title,\r\n            containerApi: new PaneviewApi(this),\r\n        });\r\n        this.paneview.addPane(view, size, index);\r\n        view.orientation = this.paneview.orientation;\r\n        return view;\r\n    }\r\n    removePanel(panel) {\r\n        const views = this.panels;\r\n        const index = views.findIndex((_) => _ === panel);\r\n        this.paneview.removePane(index);\r\n        this.doRemovePanel(panel);\r\n    }\r\n    movePanel(from, to) {\r\n        this.paneview.moveView(from, to);\r\n    }\r\n    getPanel(id) {\r\n        return this.panels.find((view) => view.id === id);\r\n    }\r\n    layout(width, height) {\r\n        const [size, orthogonalSize] = this.paneview.orientation === Orientation.HORIZONTAL\r\n            ? [width, height]\r\n            : [height, width];\r\n        this.paneview.layout(size, orthogonalSize);\r\n    }\r\n    toJSON() {\r\n        const maximum = (value) => value === Number.MAX_SAFE_INTEGER ||\r\n            value === Number.POSITIVE_INFINITY\r\n            ? undefined\r\n            : value;\r\n        const minimum = (value) => (value <= 0 ? undefined : value);\r\n        const views = this.paneview\r\n            .getPanes()\r\n            .map((view, i) => {\r\n            const size = this.paneview.getViewSize(i);\r\n            return {\r\n                size,\r\n                data: view.toJSON(),\r\n                minimumSize: minimum(view.minimumBodySize),\r\n                maximumSize: maximum(view.maximumBodySize),\r\n                expanded: view.isExpanded(),\r\n            };\r\n        });\r\n        return {\r\n            views,\r\n            size: this.paneview.size,\r\n        };\r\n    }\r\n    fromJSON(serializedPaneview) {\r\n        const { views, size } = serializedPaneview;\r\n        const queue = [];\r\n        for (const [_, value] of this._viewDisposables.entries()) {\r\n            value.dispose();\r\n        }\r\n        this._viewDisposables.clear();\r\n        this.paneview.dispose();\r\n        this.paneview = new Paneview(this.element, {\r\n            orientation: Orientation.VERTICAL,\r\n            descriptor: {\r\n                size,\r\n                views: views.map((view) => {\r\n                    const data = view.data;\r\n                    const body = createComponent(data.id, data.component, this.options.components || {}, this.options.frameworkComponents || {}, this.options.frameworkWrapper\r\n                        ? {\r\n                            createComponent: this.options.frameworkWrapper.body\r\n                                .createComponent,\r\n                        }\r\n                        : undefined);\r\n                    let header;\r\n                    if (data.headerComponent) {\r\n                        header = createComponent(data.id, data.headerComponent, this.options.headerComponents || {}, this.options.headerframeworkComponents || {}, this.options.frameworkWrapper\r\n                            ? {\r\n                                createComponent: this.options.frameworkWrapper.header\r\n                                    .createComponent,\r\n                            }\r\n                            : undefined);\r\n                    }\r\n                    else {\r\n                        header = new DefaultHeader();\r\n                    }\r\n                    const panel = new PaneFramework({\r\n                        id: data.id,\r\n                        component: data.component,\r\n                        headerComponent: data.headerComponent,\r\n                        header,\r\n                        body,\r\n                        orientation: Orientation.VERTICAL,\r\n                        isExpanded: !!view.expanded,\r\n                        disableDnd: !!this.options.disableDnd,\r\n                    });\r\n                    this.doAddPanel(panel);\r\n                    queue.push(() => {\r\n                        panel.init({\r\n                            params: data.params || {},\r\n                            minimumBodySize: view.minimumSize,\r\n                            maximumBodySize: view.maximumSize,\r\n                            title: data.title,\r\n                            isExpanded: !!view.expanded,\r\n                            containerApi: new PaneviewApi(this),\r\n                        });\r\n                        panel.orientation = this.paneview.orientation;\r\n                    });\r\n                    setTimeout(() => {\r\n                        // the original onDidAddView events are missed since they are fired before we can subcribe to them\r\n                        this._onDidAddView.fire(panel);\r\n                    }, 0);\r\n                    return { size: view.size, view: panel };\r\n                }),\r\n            },\r\n        });\r\n        this.layout(this.width, this.height);\r\n        queue.forEach((f) => f());\r\n        this._onDidLayoutfromJSON.fire();\r\n    }\r\n    doAddPanel(panel) {\r\n        const disposable = panel.onDidDrop((event) => {\r\n            this._onDidDrop.fire(event);\r\n        });\r\n        this._viewDisposables.set(panel.id, disposable);\r\n    }\r\n    doRemovePanel(panel) {\r\n        const disposable = this._viewDisposables.get(panel.id);\r\n        if (disposable) {\r\n            disposable.dispose();\r\n            this._viewDisposables.delete(panel.id);\r\n        }\r\n    }\r\n    dispose() {\r\n        super.dispose();\r\n        for (const [_, value] of this._viewDisposables.entries()) {\r\n            value.dispose();\r\n        }\r\n        this._viewDisposables.clear();\r\n        this.paneview.dispose();\r\n    }\r\n}\r\n","import { BasePanelView, } from '../gridview/basePanelView';\r\nimport { SplitviewPanelApiImpl } from '../api/splitviewPanelApi';\r\nimport { Orientation } from './core/splitview';\r\nimport { Emitter } from '../events';\r\nexport class SplitviewPanel extends BasePanelView {\r\n    constructor(id, componentName) {\r\n        super(id, componentName, new SplitviewPanelApiImpl(id));\r\n        this._evaluatedMinimumSize = 0;\r\n        this._evaluatedMaximumSize = Number.POSITIVE_INFINITY;\r\n        this._minimumSize = 0;\r\n        this._maximumSize = Number.POSITIVE_INFINITY;\r\n        this._snap = false;\r\n        this._onDidChange = new Emitter();\r\n        this.onDidChange = this._onDidChange.event;\r\n        this.addDisposables(this._onDidChange, this.api.onVisibilityChange((event) => {\r\n            const { isVisible } = event;\r\n            const { accessor } = this._params;\r\n            accessor.setVisible(this, isVisible);\r\n        }), this.api.onActiveChange(() => {\r\n            const { accessor } = this._params;\r\n            accessor.setActive(this);\r\n        }), this.api.onDidConstraintsChangeInternal((event) => {\r\n            if (typeof event.minimumSize === 'number' ||\r\n                typeof event.minimumSize === 'function') {\r\n                this._minimumSize = event.minimumSize;\r\n            }\r\n            if (typeof event.maximumSize === 'number' ||\r\n                typeof event.maximumSize === 'function') {\r\n                this._maximumSize = event.maximumSize;\r\n            }\r\n            this.updateConstraints();\r\n        }), this.api.onDidSizeChange((event) => {\r\n            this._onDidChange.fire(event.size);\r\n        }));\r\n    }\r\n    get priority() {\r\n        return this._priority;\r\n    }\r\n    set orientation(value) {\r\n        this._orientation = value;\r\n    }\r\n    get orientation() {\r\n        return this._orientation;\r\n    }\r\n    get minimumSize() {\r\n        const size = typeof this._minimumSize === 'function'\r\n            ? this._minimumSize()\r\n            : this._minimumSize;\r\n        if (size !== this._evaluatedMinimumSize) {\r\n            this._evaluatedMinimumSize = size;\r\n            this.updateConstraints();\r\n        }\r\n        return size;\r\n    }\r\n    get maximumSize() {\r\n        const size = typeof this._maximumSize === 'function'\r\n            ? this._maximumSize()\r\n            : this._maximumSize;\r\n        if (size !== this._evaluatedMaximumSize) {\r\n            this._evaluatedMaximumSize = size;\r\n            this.updateConstraints();\r\n        }\r\n        return size;\r\n    }\r\n    get snap() {\r\n        return this._snap;\r\n    }\r\n    setVisible(isVisible) {\r\n        this.api._onDidVisibilityChange.fire({ isVisible });\r\n    }\r\n    setActive(isActive) {\r\n        this.api._onDidActiveChange.fire({ isActive });\r\n    }\r\n    layout(size, orthogonalSize) {\r\n        const [width, height] = this.orientation === Orientation.HORIZONTAL\r\n            ? [size, orthogonalSize]\r\n            : [orthogonalSize, size];\r\n        super.layout(width, height);\r\n    }\r\n    init(parameters) {\r\n        super.init(parameters);\r\n        this._priority = parameters.priority;\r\n        if (parameters.minimumSize) {\r\n            this._minimumSize = parameters.minimumSize;\r\n        }\r\n        if (parameters.maximumSize) {\r\n            this._maximumSize = parameters.maximumSize;\r\n        }\r\n        if (parameters.snap) {\r\n            this._snap = parameters.snap;\r\n        }\r\n    }\r\n    toJSON() {\r\n        const maximum = (value) => value === Number.MAX_SAFE_INTEGER ||\r\n            value === Number.POSITIVE_INFINITY\r\n            ? undefined\r\n            : value;\r\n        const minimum = (value) => (value <= 0 ? undefined : value);\r\n        return Object.assign(Object.assign({}, super.toJSON()), { minimumSize: minimum(this.minimumSize), maximumSize: maximum(this.maximumSize) });\r\n    }\r\n    updateConstraints() {\r\n        this.api._onDidConstraintsChange.fire({\r\n            maximumSize: this._evaluatedMaximumSize,\r\n            minimumSize: this._evaluatedMinimumSize,\r\n        });\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\nimport { sequentialNumberGenerator } from '../math';\r\n/**\r\n * This component is intended to interface between vanilla-js and React hence we need to be\r\n * creative in how we update props.\r\n * A ref of the component is exposed with an update method; which when called stores the props\r\n * as a ref within this component and forcefully triggers a re-render of the component using\r\n * the ref of props we just set on the renderered component as the props passed to the inner\r\n * component\r\n */\r\nconst ReactComponentBridge = (props, ref) => {\r\n    const [_, triggerRender] = React.useState();\r\n    const _props = React.useRef(props.componentProps);\r\n    React.useImperativeHandle(ref, () => ({\r\n        update: (componentProps) => {\r\n            _props.current = Object.assign(Object.assign({}, _props.current), componentProps);\r\n            /**\r\n             * setting a arbitrary piece of state within this component will\r\n             * trigger a re-render.\r\n             * we use this rather than updating through a prop since we can\r\n             * pass a ref into the vanilla-js world.\r\n             */\r\n            triggerRender(Date.now());\r\n        },\r\n    }), []);\r\n    return React.createElement(props.component, _props.current);\r\n};\r\nReactComponentBridge.displayName = 'DockviewReactJsBridge';\r\n/**\r\n * Since we are storing the React.Portal references in a rendered array they\r\n * require a key property like any other React element rendered in an array\r\n * to prevent excessive re-rendering\r\n */\r\nconst uniquePortalKeyGenerator = sequentialNumberGenerator();\r\nexport const ReactPartContext = React.createContext({});\r\nexport class ReactPart {\r\n    constructor(parent, portalStore, component, parameters, context) {\r\n        this.parent = parent;\r\n        this.portalStore = portalStore;\r\n        this.component = component;\r\n        this.parameters = parameters;\r\n        this.context = context;\r\n        this.disposed = false;\r\n        this.createPortal();\r\n    }\r\n    update(props) {\r\n        var _a;\r\n        if (this.disposed) {\r\n            throw new Error('invalid operation: resource is already disposed');\r\n        }\r\n        (_a = this.componentInstance) === null || _a === void 0 ? void 0 : _a.update(props);\r\n    }\r\n    createPortal() {\r\n        if (this.disposed) {\r\n            throw new Error('invalid operation: resource is already disposed');\r\n        }\r\n        if (typeof this.component !== 'function') {\r\n            /**\r\n             * we know this isn't a React.FunctionComponent so throw an error here.\r\n             * if we do not intercept this the React library will throw a very obsure error\r\n             * for the same reason, at least at this point we will emit a sensible stacktrace.\r\n             */\r\n            throw new Error('Invalid Operation. dockview only supports React Functional Components.');\r\n        }\r\n        const bridgeComponent = React.createElement(React.forwardRef(ReactComponentBridge), {\r\n            component: this\r\n                .component,\r\n            componentProps: this.parameters,\r\n            ref: (element) => {\r\n                this.componentInstance = element;\r\n            },\r\n        });\r\n        const node = this.context\r\n            ? React.createElement(ReactPartContext.Provider, { value: this.context }, bridgeComponent)\r\n            : bridgeComponent;\r\n        const portal = ReactDOM.createPortal(node, this.parent, uniquePortalKeyGenerator.next());\r\n        this.ref = {\r\n            portal,\r\n            disposable: this.portalStore.addPortal(portal),\r\n        };\r\n    }\r\n    dispose() {\r\n        var _a;\r\n        (_a = this.ref) === null || _a === void 0 ? void 0 : _a.disposable.dispose();\r\n        this.disposed = true;\r\n    }\r\n}\r\n/**\r\n * A React Hook that returns an array of portals to be rendered by the user of this hook\r\n * and a disposable function to add a portal. Calling dispose removes this portal from the\r\n * portal array\r\n */\r\nexport const usePortalsLifecycle = () => {\r\n    const [portals, setPortals] = React.useState([]);\r\n    React.useDebugValue(`Portal count: ${portals.length}`);\r\n    const addPortal = React.useCallback((portal) => {\r\n        setPortals((existingPortals) => [...existingPortals, portal]);\r\n        let disposed = false;\r\n        return {\r\n            dispose: () => {\r\n                if (disposed) {\r\n                    throw new Error('invalid operation: resource already disposed');\r\n                }\r\n                disposed = true;\r\n                setPortals((existingPortals) => existingPortals.filter((p) => p !== portal));\r\n            },\r\n        };\r\n    }, []);\r\n    return [portals, addPortal];\r\n};\r\n// it does the job...\r\nexport function isReactElement(element) {\r\n    return element === null || element === void 0 ? void 0 : element.type;\r\n}\r\n","import { ReactPart } from '../react';\r\nimport { Emitter } from '../../events';\r\nexport class ReactPanelContentPart {\r\n    constructor(id, component, reactPortalStore) {\r\n        this.id = id;\r\n        this.component = component;\r\n        this.reactPortalStore = reactPortalStore;\r\n        this._onDidFocus = new Emitter();\r\n        this.onDidFocus = this._onDidFocus.event;\r\n        this._onDidBlur = new Emitter();\r\n        this.onDidBlur = this._onDidBlur.event;\r\n        this._element = document.createElement('div');\r\n        this._element.className = 'dockview-react-part';\r\n        this._actionsElement = document.createElement('div');\r\n        this._actionsElement.className = 'dockview-react-part';\r\n    }\r\n    get element() {\r\n        return this._element;\r\n    }\r\n    get actions() {\r\n        return this._actionsElement;\r\n    }\r\n    focus() {\r\n        // TODO\r\n    }\r\n    init(parameters) {\r\n        const context = {\r\n            api: parameters.api,\r\n            containerApi: parameters.containerApi,\r\n            actionsPortalElement: this._actionsElement,\r\n            tabPortalElement: parameters.tab,\r\n        };\r\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\r\n            params: parameters.params,\r\n            api: parameters.api,\r\n            containerApi: parameters.containerApi,\r\n        }, context);\r\n    }\r\n    toJSON() {\r\n        return {\r\n            id: this.id,\r\n        };\r\n    }\r\n    update(event) {\r\n        var _a;\r\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update(event.params);\r\n    }\r\n    updateParentGroup(group, _isPanelVisible) {\r\n        this._group = group;\r\n    }\r\n    layout(_width, _height) {\r\n        // noop\r\n    }\r\n    dispose() {\r\n        var _a, _b;\r\n        this._onDidFocus.dispose();\r\n        this._onDidBlur.dispose();\r\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\r\n        (_b = this.actionsPart) === null || _b === void 0 ? void 0 : _b.dispose();\r\n    }\r\n}\r\n","import { ReactPart } from '../react';\r\nexport class ReactPanelHeaderPart {\r\n    constructor(id, component, reactPortalStore) {\r\n        this.id = id;\r\n        this.component = component;\r\n        this.reactPortalStore = reactPortalStore;\r\n        this._element = document.createElement('div');\r\n        this._element.className = 'dockview-react-part';\r\n    }\r\n    get element() {\r\n        return this._element;\r\n    }\r\n    focus() {\r\n        //noop\r\n    }\r\n    init(parameters) {\r\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\r\n            params: parameters.params,\r\n            api: parameters.api,\r\n            containerApi: parameters.containerApi,\r\n        });\r\n    }\r\n    update(event) {\r\n        var _a;\r\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update(event.params);\r\n    }\r\n    toJSON() {\r\n        return {\r\n            id: this.id,\r\n        };\r\n    }\r\n    layout(_width, _height) {\r\n        // noop - retrieval from api\r\n    }\r\n    updateParentGroup(_group, _isPanelVisible) {\r\n        // noop - retrieval from api\r\n    }\r\n    dispose() {\r\n        var _a;\r\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\r\n    }\r\n}\r\n","import { DockviewGroupPanel } from '../dockview/dockviewGroupPanel';\r\nimport { createComponent } from '../panel/componentFactory';\r\nimport { DockviewApi } from '../api/component.api';\r\nimport { DefaultTab } from '../dockview/components/tab/defaultTab';\r\nimport { DefaultGroupPanelView } from '../dockview/defaultGroupPanelView';\r\nexport class ReactPanelDeserialzier {\r\n    constructor(layout) {\r\n        this.layout = layout;\r\n    }\r\n    fromJSON(panelData, group) {\r\n        var _a, _b, _c;\r\n        const panelId = panelData.id;\r\n        const params = panelData.params;\r\n        const title = panelData.title;\r\n        const suppressClosable = panelData.suppressClosable;\r\n        const viewData = panelData.view;\r\n        const view = new DefaultGroupPanelView({\r\n            content: createComponent(viewData.content.id, viewData.content.id, this.layout.options.components, this.layout.options.frameworkComponents, (_a = this.layout.options.frameworkComponentFactory) === null || _a === void 0 ? void 0 : _a.content),\r\n            tab: ((_b = viewData.tab) === null || _b === void 0 ? void 0 : _b.id)\r\n                ? createComponent(viewData.tab.id, viewData.tab.id, this.layout.options.tabComponents, this.layout.options.frameworkTabComponents, (_c = this.layout.options.frameworkComponentFactory) === null || _c === void 0 ? void 0 : _c.tab)\r\n                : new DefaultTab(),\r\n        });\r\n        const panel = new DockviewGroupPanel(panelId, this.layout, new DockviewApi(this.layout), group);\r\n        panel.init({\r\n            view,\r\n            title,\r\n            suppressClosable,\r\n            params: params || {},\r\n        });\r\n        return panel;\r\n    }\r\n}\r\n","import { ReactPart } from '../react';\r\nexport class ReactWatermarkPart {\r\n    constructor(id, component, reactPortalStore) {\r\n        this.id = id;\r\n        this.component = component;\r\n        this.reactPortalStore = reactPortalStore;\r\n        this._groupRef = {\r\n            value: undefined,\r\n        };\r\n        this._element = document.createElement('div');\r\n        this._element.className = 'dockview-react-part';\r\n    }\r\n    get element() {\r\n        return this._element;\r\n    }\r\n    init(parameters) {\r\n        this.parameters = parameters;\r\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\r\n            params: parameters.params,\r\n            api: parameters.api,\r\n            containerApi: parameters.containerApi,\r\n            close: () => {\r\n                if (this._groupRef.value) {\r\n                    parameters.containerApi.removeGroup(this._groupRef.value);\r\n                }\r\n            },\r\n        });\r\n    }\r\n    focus() {\r\n        // noop\r\n    }\r\n    update(params) {\r\n        var _a, _b;\r\n        if (this.parameters) {\r\n            this.parameters.params = params.params;\r\n        }\r\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update({ params: ((_b = this.parameters) === null || _b === void 0 ? void 0 : _b.params) || {} });\r\n    }\r\n    toJSON() {\r\n        return {\r\n            id: this.id,\r\n        };\r\n    }\r\n    layout(_width, _height) {\r\n        // noop - retrieval from api\r\n    }\r\n    updateParentGroup(group, _isPanelVisible) {\r\n        // noop - retrieval from api\r\n        this._groupRef.value = group;\r\n    }\r\n    dispose() {\r\n        var _a;\r\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { DockviewComponent, } from '../../dockview/dockviewComponent';\r\nimport { ReactPanelContentPart } from './reactContentPart';\r\nimport { ReactPanelHeaderPart } from './reactHeaderPart';\r\nimport { ReactPanelDeserialzier } from '../deserializer';\r\nimport { usePortalsLifecycle } from '../react';\r\nimport { DockviewApi } from '../../api/component.api';\r\nimport { ReactWatermarkPart } from './reactWatermarkPart';\r\nimport { watchElementResize } from '../../dom';\r\nexport const DockviewReact = React.forwardRef((props, ref) => {\r\n    const domRef = React.useRef(null);\r\n    const dockviewRef = React.useRef();\r\n    const [portals, addPortal] = usePortalsLifecycle();\r\n    React.useImperativeHandle(ref, () => domRef.current, []);\r\n    React.useEffect(() => {\r\n        if (props.disableAutoResizing) {\r\n            return () => {\r\n                //\r\n            };\r\n        }\r\n        const watcher = watchElementResize(domRef.current, (entry) => {\r\n            var _a;\r\n            const { width, height } = entry.contentRect;\r\n            (_a = dockviewRef.current) === null || _a === void 0 ? void 0 : _a.layout(width, height);\r\n        });\r\n        return () => {\r\n            watcher.dispose();\r\n        };\r\n    }, [props.disableAutoResizing]);\r\n    React.useEffect(() => {\r\n        var _a;\r\n        const factory = {\r\n            content: {\r\n                createComponent: (_id, componentId, component) => {\r\n                    return new ReactPanelContentPart(componentId, component, {\r\n                        addPortal,\r\n                    });\r\n                },\r\n            },\r\n            tab: {\r\n                createComponent: (_id, componentId, component) => {\r\n                    return new ReactPanelHeaderPart(componentId, component, {\r\n                        addPortal,\r\n                    });\r\n                },\r\n            },\r\n            watermark: {\r\n                createComponent: (_id, componentId, component) => {\r\n                    return new ReactWatermarkPart(componentId, component, {\r\n                        addPortal,\r\n                    });\r\n                },\r\n            },\r\n        };\r\n        const element = document.createElement('div');\r\n        const dockview = new DockviewComponent(element, {\r\n            frameworkComponentFactory: factory,\r\n            frameworkComponents: props.components,\r\n            frameworkTabComponents: props.tabComponents,\r\n            tabHeight: props.tabHeight,\r\n            watermarkFrameworkComponent: props.watermarkComponent,\r\n            styles: props.hideBorders\r\n                ? { separatorBorder: 'transparent' }\r\n                : undefined,\r\n        });\r\n        (_a = domRef.current) === null || _a === void 0 ? void 0 : _a.appendChild(dockview.element);\r\n        dockview.deserializer = new ReactPanelDeserialzier(dockview);\r\n        const { clientWidth, clientHeight } = domRef.current;\r\n        dockview.layout(clientWidth, clientHeight);\r\n        if (props.onReady) {\r\n            props.onReady({ api: new DockviewApi(dockview) });\r\n        }\r\n        dockviewRef.current = dockview;\r\n        return () => {\r\n            dockview.dispose();\r\n            element.remove();\r\n        };\r\n    }, []);\r\n    React.useEffect(() => {\r\n        if (!dockviewRef.current) {\r\n            return () => {\r\n                // noop\r\n            };\r\n        }\r\n        const disposable = dockviewRef.current.onDidDrop((event) => {\r\n            if (props.onDidDrop) {\r\n                props.onDidDrop(event);\r\n            }\r\n        });\r\n        return () => {\r\n            disposable.dispose();\r\n        };\r\n    }, [props.onDidDrop]);\r\n    React.useEffect(() => {\r\n        if (!dockviewRef.current) {\r\n            return;\r\n        }\r\n        dockviewRef.current.updateOptions({\r\n            frameworkComponents: props.components,\r\n        });\r\n    }, [props.components]);\r\n    React.useEffect(() => {\r\n        if (!dockviewRef.current) {\r\n            return;\r\n        }\r\n        dockviewRef.current.updateOptions({\r\n            watermarkFrameworkComponent: props.watermarkComponent,\r\n        });\r\n    }, [props.watermarkComponent]);\r\n    React.useEffect(() => {\r\n        if (!dockviewRef.current) {\r\n            return;\r\n        }\r\n        dockviewRef.current.updateOptions({\r\n            showDndOverlay: props.showDndOverlay,\r\n        });\r\n    }, [props.showDndOverlay]);\r\n    React.useEffect(() => {\r\n        if (!dockviewRef.current) {\r\n            return;\r\n        }\r\n        dockviewRef.current.updateOptions({\r\n            frameworkTabComponents: props.tabComponents,\r\n        });\r\n    }, [props.tabComponents]);\r\n    React.useEffect(() => {\r\n        if (!props.onTabContextMenu || !dockviewRef.current) {\r\n            return () => {\r\n                //noop\r\n            };\r\n        }\r\n        const disposable = dockviewRef.current.onTabContextMenu((event) => {\r\n            if (props.onTabContextMenu) {\r\n                props.onTabContextMenu(event);\r\n            }\r\n        });\r\n        return () => {\r\n            disposable.dispose();\r\n        };\r\n    }, [props.onTabContextMenu]);\r\n    return (React.createElement(\"div\", { className: props.className, style: { height: '100%', width: '100%' }, ref: domRef }, portals));\r\n});\r\nDockviewReact.displayName = 'DockviewComponent';\r\n","import { SplitviewApi } from '../../api/component.api';\r\nimport { SplitviewPanel } from '../../splitview/splitviewPanel';\r\nimport { ReactPart } from '../react';\r\nexport class ReactPanelView extends SplitviewPanel {\r\n    constructor(id, component, reactComponent, reactPortalStore) {\r\n        super(id, component);\r\n        this.reactComponent = reactComponent;\r\n        this.reactPortalStore = reactPortalStore;\r\n    }\r\n    getComponent() {\r\n        var _a;\r\n        return new ReactPart(this.element, this.reactPortalStore, this.reactComponent, {\r\n            params: ((_a = this._params) === null || _a === void 0 ? void 0 : _a.params) || {},\r\n            api: this.api,\r\n            containerApi: new SplitviewApi(this._params.accessor),\r\n        });\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { SplitviewApi } from '../../api/component.api';\r\nimport { SplitviewComponent, } from '../../splitview/splitviewComponent';\r\nimport { Orientation } from '../../splitview/core/splitview';\r\nimport { usePortalsLifecycle } from '../react';\r\nimport { ReactPanelView } from './view';\r\nimport { watchElementResize } from '../../dom';\r\nexport const SplitviewReact = React.forwardRef((props, ref) => {\r\n    const domRef = React.useRef(null);\r\n    const splitviewRef = React.useRef();\r\n    const [portals, addPortal] = usePortalsLifecycle();\r\n    React.useImperativeHandle(ref, () => domRef.current, []);\r\n    React.useEffect(() => {\r\n        if (props.disableAutoResizing) {\r\n            return () => {\r\n                //\r\n            };\r\n        }\r\n        const watcher = watchElementResize(domRef.current, (entry) => {\r\n            var _a;\r\n            const { width, height } = entry.contentRect;\r\n            (_a = splitviewRef.current) === null || _a === void 0 ? void 0 : _a.layout(width, height);\r\n        });\r\n        return () => {\r\n            watcher.dispose();\r\n        };\r\n    }, [props.disableAutoResizing]);\r\n    React.useEffect(() => {\r\n        const splitview = new SplitviewComponent(domRef.current, {\r\n            orientation: props.orientation || Orientation.HORIZONTAL,\r\n            frameworkComponents: props.components,\r\n            frameworkWrapper: {\r\n                createComponent: (id, componentId, component) => {\r\n                    return new ReactPanelView(id, componentId, component, {\r\n                        addPortal,\r\n                    });\r\n                },\r\n            },\r\n            proportionalLayout: typeof props.proportionalLayout === 'boolean'\r\n                ? props.proportionalLayout\r\n                : true,\r\n            styles: props.hideBorders\r\n                ? { separatorBorder: 'transparent' }\r\n                : undefined,\r\n        });\r\n        const { clientWidth, clientHeight } = domRef.current;\r\n        splitview.layout(clientWidth, clientHeight);\r\n        if (props.onReady) {\r\n            props.onReady({ api: new SplitviewApi(splitview) });\r\n        }\r\n        splitviewRef.current = splitview;\r\n        return () => {\r\n            splitview.dispose();\r\n        };\r\n    }, []);\r\n    React.useEffect(() => {\r\n        if (!splitviewRef.current) {\r\n            return;\r\n        }\r\n        splitviewRef.current.updateOptions({\r\n            frameworkComponents: props.components,\r\n        });\r\n    }, [props.components]);\r\n    return (React.createElement(\"div\", { className: props.className, style: { height: '100%', width: '100%' }, ref: domRef }, portals));\r\n});\r\nSplitviewReact.displayName = 'SplitviewComponent';\r\n","import { GridviewApi } from '../../api/component.api';\r\nimport { GridviewPanel, } from '../../gridview/gridviewPanel';\r\nimport { ReactPart } from '../react';\r\nexport class ReactGridPanelView extends GridviewPanel {\r\n    constructor(id, component, reactComponent, reactPortalStore) {\r\n        super(id, component);\r\n        this.reactComponent = reactComponent;\r\n        this.reactPortalStore = reactPortalStore;\r\n    }\r\n    getComponent() {\r\n        var _a;\r\n        return new ReactPart(this.element, this.reactPortalStore, this.reactComponent, {\r\n            params: ((_a = this._params) === null || _a === void 0 ? void 0 : _a.params) || {},\r\n            api: this.api,\r\n            containerApi: new GridviewApi(this._params.accessor),\r\n        });\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { GridviewComponent, } from '../../gridview/gridviewComponent';\r\nimport { Orientation } from '../../splitview/core/splitview';\r\nimport { ReactGridPanelView } from './view';\r\nimport { usePortalsLifecycle } from '../react';\r\nimport { GridviewApi } from '../../api/component.api';\r\nimport { watchElementResize } from '../../dom';\r\nexport const GridviewReact = React.forwardRef((props, ref) => {\r\n    const domRef = React.useRef(null);\r\n    const gridviewRef = React.useRef();\r\n    const [portals, addPortal] = usePortalsLifecycle();\r\n    React.useImperativeHandle(ref, () => domRef.current, []);\r\n    React.useEffect(() => {\r\n        if (props.disableAutoResizing) {\r\n            return () => {\r\n                //\r\n            };\r\n        }\r\n        const watcher = watchElementResize(domRef.current, (entry) => {\r\n            var _a;\r\n            const { width, height } = entry.contentRect;\r\n            (_a = gridviewRef.current) === null || _a === void 0 ? void 0 : _a.layout(width, height);\r\n        });\r\n        return () => {\r\n            watcher.dispose();\r\n        };\r\n    }, [props.disableAutoResizing]);\r\n    React.useEffect(() => {\r\n        var _a;\r\n        const element = document.createElement('div');\r\n        const gridview = new GridviewComponent(element, {\r\n            proportionalLayout: typeof props.proportionalLayout === 'boolean'\r\n                ? props.proportionalLayout\r\n                : true,\r\n            orientation: props.orientation || Orientation.HORIZONTAL,\r\n            frameworkComponents: props.components,\r\n            frameworkComponentFactory: {\r\n                createComponent: (id, componentId, component) => {\r\n                    return new ReactGridPanelView(id, componentId, component, {\r\n                        addPortal,\r\n                    });\r\n                },\r\n            },\r\n            styles: props.hideBorders\r\n                ? { separatorBorder: 'transparent' }\r\n                : undefined,\r\n        });\r\n        (_a = domRef.current) === null || _a === void 0 ? void 0 : _a.appendChild(gridview.element);\r\n        const { clientWidth, clientHeight } = domRef.current;\r\n        gridview.layout(clientWidth, clientHeight);\r\n        if (props.onReady) {\r\n            props.onReady({ api: new GridviewApi(gridview) });\r\n        }\r\n        gridviewRef.current = gridview;\r\n        return () => {\r\n            gridview.dispose();\r\n            element.remove();\r\n        };\r\n    }, []);\r\n    React.useEffect(() => {\r\n        if (!gridviewRef.current) {\r\n            return;\r\n        }\r\n        gridviewRef.current.updateOptions({\r\n            frameworkComponents: props.components,\r\n        });\r\n    }, [props.components]);\r\n    return (React.createElement(\"div\", { className: props.className, style: { height: '100%', width: '100%' }, ref: domRef }, portals));\r\n});\r\nGridviewReact.displayName = 'GridviewComponent';\r\n","import { ReactPart } from '../react';\r\nexport class PanePanelSection {\r\n    constructor(id, component, reactPortalStore) {\r\n        this.id = id;\r\n        this.component = component;\r\n        this.reactPortalStore = reactPortalStore;\r\n        this._element = document.createElement('div');\r\n        this._element.style.height = '100%';\r\n        this._element.style.width = '100%';\r\n    }\r\n    get element() {\r\n        return this._element;\r\n    }\r\n    init(parameters) {\r\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\r\n            params: parameters.params,\r\n            api: parameters.api,\r\n            title: parameters.title,\r\n            containerApi: parameters.containerApi,\r\n        });\r\n    }\r\n    toJSON() {\r\n        return {\r\n            id: this.id,\r\n        };\r\n    }\r\n    update(params) {\r\n        var _a;\r\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update(params.params);\r\n    }\r\n    dispose() {\r\n        var _a;\r\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { PaneviewComponent, } from '../../paneview/paneviewComponent';\r\nimport { usePortalsLifecycle } from '../react';\r\nimport { PaneviewApi } from '../../api/component.api';\r\nimport { PanePanelSection } from './view';\r\nimport { watchElementResize } from '../../dom';\r\nexport const PaneviewReact = React.forwardRef((props, ref) => {\r\n    const domRef = React.useRef(null);\r\n    const paneviewRef = React.useRef();\r\n    const [portals, addPortal] = usePortalsLifecycle();\r\n    React.useImperativeHandle(ref, () => domRef.current, []);\r\n    React.useEffect(() => {\r\n        if (props.disableAutoResizing) {\r\n            return () => {\r\n                //\r\n            };\r\n        }\r\n        const watcher = watchElementResize(domRef.current, (entry) => {\r\n            var _a;\r\n            const { width, height } = entry.contentRect;\r\n            (_a = paneviewRef.current) === null || _a === void 0 ? void 0 : _a.layout(width, height);\r\n        });\r\n        return () => {\r\n            watcher.dispose();\r\n        };\r\n    }, [props.disableAutoResizing]);\r\n    React.useEffect(() => {\r\n        const createComponent = (id, _componentId, component) => new PanePanelSection(id, component, {\r\n            addPortal,\r\n        });\r\n        const paneview = new PaneviewComponent(domRef.current, {\r\n            frameworkComponents: props.components,\r\n            components: {},\r\n            headerComponents: {},\r\n            disableDnd: props.disableDnd,\r\n            headerframeworkComponents: props.headerComponents,\r\n            frameworkWrapper: {\r\n                header: {\r\n                    createComponent,\r\n                },\r\n                body: {\r\n                    createComponent,\r\n                },\r\n            },\r\n        });\r\n        const api = new PaneviewApi(paneview);\r\n        const { clientWidth, clientHeight } = domRef.current;\r\n        paneview.layout(clientWidth, clientHeight);\r\n        if (props.onReady) {\r\n            props.onReady({ api });\r\n        }\r\n        paneviewRef.current = paneview;\r\n        return () => {\r\n            paneview.dispose();\r\n        };\r\n    }, []);\r\n    React.useEffect(() => {\r\n        if (!paneviewRef.current) {\r\n            return;\r\n        }\r\n        paneviewRef.current.updateOptions({\r\n            frameworkComponents: props.components,\r\n        });\r\n    }, [props.components]);\r\n    React.useEffect(() => {\r\n        if (!paneviewRef.current) {\r\n            return;\r\n        }\r\n        paneviewRef.current.updateOptions({\r\n            headerframeworkComponents: props.headerComponents,\r\n        });\r\n    }, [props.headerComponents]);\r\n    React.useEffect(() => {\r\n        if (!paneviewRef.current) {\r\n            return () => {\r\n                //\r\n            };\r\n        }\r\n        const paneview = paneviewRef.current;\r\n        const disposable = paneview.onDidDrop((event) => {\r\n            if (props.onDidDrop) {\r\n                props.onDidDrop(Object.assign(Object.assign({}, event), { api: new PaneviewApi(paneview) }));\r\n            }\r\n        });\r\n        return () => {\r\n            disposable.dispose();\r\n        };\r\n    }, [props.onDidDrop]);\r\n    return (React.createElement(\"div\", { className: props.className, style: { height: '100%', width: '100%' }, ref: domRef }, portals));\r\n});\r\nPaneviewReact.displayName = 'PaneviewComponent';\r\n"],"names":["TransferObject","constructor","PanelTransfer","viewId","groupId","panelId","super","this","PaneTransfer","paneId","LocalSelectionTransfer","static","INSTANCE","hasData","proto","clearData","undefined","data","getData","setData","getPanelData","panelTransfer","getInstance","prototype","getPaneData","paneTransfer","Event","Disposable","any","children","listener","disposables","map","child","dispose","forEach","d","Emitter","options","_listeners","_disposed","event","_event","_a","replay","_last","push","index","indexOf","splice","fire","e","addDisposableWindowListener","element","type","addEventListener","removeEventListener","addDisposableListener","TickDelayedEvent","_onFired","onEvent","timer","clearTimeout","setTimeout","NONE","CompositeDisposable","args","addDisposables","arg","MutableDisposable","_disposable","value","disposable","watchElementResize","cb","observer","ResizeObserver","entires","firstEntry","observe","unobserve","disconnect","removeClasses","classes","classname","classList","contains","remove","addClasses","add","toggleClass","className","isToggled","hasClass","isAncestor","testChild","testAncestor","parentNode","getElementsByTagName","tag","Array","slice","call","document","trackFocus","FocusTracker","_onDidFocus","onDidFocus","_onDidBlur","onDidBlur","hasFocus","activeElement","loosingFocus","onFocus","onBlur","window","_refreshStateHandler","HTMLElement","refreshState","clamp","min","max","Error","Math","sequentialNumberGenerator","next","toString","tail","arr","length","sequenceEquals","arr1","arr2","i","pushToStart","unshift","pushToEnd","range","from","to","result","ViewItem","container","view","size","_cachedVisibleSize","_size","cachedVisibleSize","visible","setVisible","viewMinimumSize","viewMaximumSize","toggle","minimumSize","maximumSize","priority","snap","enabled","style","pointerEvents","Orientation","SashState","LayoutPriority","Sizing","Position","Distribute","Split","Invisible","Splitview","views","sashes","_orthogonalSize","contentSize","_proportions","_onDidSashEnd","onDidSashEnd","_onDidAddView","onDidAddView","_onDidRemoveView","onDidRemoveView","_startSnappingEnabled","_endSnappingEnabled","resize","delta","sizes","x","lowPriorityIndexes","highPriorityIndexes","overloadMinDelta","Number","NEGATIVE_INFINITY","overloadMaxDelta","POSITIVE_INFINITY","snapBefore","snapAfter","upIndexes","downIndexes","upItems","upSizes","downItems","downSizes","minDeltaUp","reduce","_","maxDeltaUp","maxDeltaDown","minDeltaDown","minDelta","maxDelta","snapped","snapView","limitDelta","actualDelta","deltaUp","item","viewDelta","deltaDown","_orientation","orientation","createContainer","proportionalLayout","viewContainer","createViewContainer","sashContainer","createSashContainer","appendChild","styles","descriptor","viewDescriptor","sizing","addView","r","saveProportions","orthogonalSize","proportions","tmp","HORIZONTAL","startSnappingEnabled","updateSashEnablement","endSnappingEnabled","separatorBorder","removeProperty","setProperty","isViewVisible","setViewVisible","viewItem","distributeEmptySpace","layoutViews","getViewSize","resizeView","indexes","filter","Low","High","round","relayout","getViews","onDidChange","skipLayout","createElement","viewSize","newSize","removeChild","insertBefore","sash","onStart","iframes","iframe","start","clientX","clientY","sashIndex","array","fn","firstIndex","s","snapBeforeIndex","findFirstSnapIndex","snapAfterIndex","snappedViewItem","halfSize","floor","mousemove","mousemoveEvent","end","sashItem","distributeViewSizes","flexibleViewItems","flexibleSize","removeView","getViewCachedVisibleSize","moveView","layout","previousSize","lowPriorityIndex","emptyDelta","sum","offset","left","top","VERTICAL","width","height","previous","collapsesDown","expandsDown","reverseViews","reverse","collapsesUp","expandsUp","position","snappedBefore","snappedAfter","updateSash","MINIMUM","MAXIMUM","DISABLED","ENABLED","state","orientationClassname","Paneview","paneItems","skipAnimation","_onDidChange","splitview","getPanes","pane","onDidChangeExpansionState","setupAnimation","paneItem","addPane","removePane","skipDispose","animationTimer","DragAndDropObserver","callbacks","counter","registerListeners","onDragEnter","preventDefault","onDragOver","onDragLeave","onDragEnd","onDrop","Droptarget","_onDrop","clientWidth","clientHeight","xp","offsetX","yp","offsetY","quadrant","calculateQuadrant","validOverlays","canDisplayOverlay","target","overlay","_state","Center","append","isSmallX","isSmallY","toggleClasses","setState","removeDropTarget","stopPropagation","nativeEvent","isLeft","isRight","isTop","isBottom","Top","Left","Bottom","Right","overlayType","LeafNode","minimumWidth","maximumWidth","minimumHeight","maximumHeight","minimumOrthogonalSize","maximumOrthogonalSize","BranchNode","childDescriptors","_childrenDisposable","childDescriptor","node","c","setupChildrenEvents","Normal","priorities","some","p","isChildVisible","setChildVisible","moveChild","_removeChild","_addChild","getChildSize","resizeChild","addChild","getChildCachedVisibleSize","findLeaf","candiateNode","last","flipNode","orthogonal","totalSize","childSize","getGridLocation","parentElement","test","el","firstElementChild","lastElementChild","nextElementSibling","indexInParent","getRelativeLocation","rootOrientation","location","direction","getLocationOrientation","directionOrientation","getDirectionOrientation","rest","_index","serializeBranchNode","box","isGridBranchNode","toJSON","Gridview","root","serialize","getView","clear","deserialize","json","deserializer","_deserialize","_deserializeNode","isRoot","serializedChild","fromJSON","_root","oldRoot","progmaticSelect","getNode","_getViews","nodeCachedVisibleSize","path","n","l","parent","parentLocation","pathToParent","grandParent","parentIndex","__","newSiblingSize","newSiblingCachedVisibleSize","newParent","newSibling","sibling","isSiblingVisible","siblingSizing","SplitviewApi","component","panels","onDidLayoutFromJSON","onDidLayoutChange","updateOptions","removePanel","panel","focus","getPanel","id","addPanel","movePanel","PaneviewApi","onDidDrop","emitter","Object","assign","api","GridviewApi","onDidAddPanel","onDidAddGroup","onDidRemovePanel","onDidRemoveGroup","onDidActivePanelChange","onDidActiveGroupChange","groups","force","DockviewApi","totalPanels","onDidLayoutfromJSON","activePanel","activeGroup","getTabHeight","tabHeight","setTabHeight","getGroupPanel","addEmptyGroup","moveToNext","moveToPrevious","closeAllGroups","removeGroup","group","getGroup","ContentContainer","_element","tabIndex","show","display","hide","openPanel","content","_width","_height","closePanel","_b","_c","DockviewDropTargets","MouseEventKind","GroupChangeKind2","DragHandler","_onDragStart","onDragStart","configure","dataTransfer","effectAllowed","Tab","accessor","_onChanged","onChanged","_onDropped","draggable","arguments","defaultPrevented","kind","CLICK","CONTEXT_MENU","droptarget","model","setActive","isActive","setContent","part","TabsContainer","tabs","selectedIndex","_hidden","actionContainer","tabContainer","voidContainer","voidDropTarget","Panel","button","doSetGroupActive","hidden","setActionElement","actions","tab","at","findIndex","_isGroupActive","addTab","delete","tabToRemove","setActivePanel","isActivePanel","find","tabToAdd","alreadyFocused","isContentFocused","fireMouseEvent","skipFocus","Groupview","_locked","mostRecentlyUsed","_panels","_onMove","onMove","_onDidGroupChange","onDidGroupChange","_onDidDrop","tabsContainer","contentContainer","dropTarget","locked","header","hideHeader","handleDropEvent","_activePanel","isEmpty","MAX_SAFE_INTEGER","hasWatermark","watermark","initialize","doAddPanel","updateContainer","activeView","normalizedIndex","suppressRoll","containsPanel","includes","init","_params","update","skipSetActive","updateParentGroup","doSetActivePanel","groupItemOrId","panelToRemove","_removePanel","closeAllPanels","arrPanelCpy","doClose","isPanelActive","updateActions","isGroupActive","doRemovePanel","nextPanel","REMOVE_PANEL","hasExistingPanel","updateMru","ADD_PANEL","PANEL_ACTIVE","createWatermarkComponent","containerApi","params","title","showDndOverlay","itemId","nextLayoutId","toTarget","BaseGrid","_id","_groups","Map","_onDidLayoutChange","_onDidRemoveGroup","_onDidAddGroup","_onDidActiveGroupChange","_bufferOnDidLayoutChange","gridview","values","_activeGroup","isVisible","doAddGroup","doRemoveGroup","has","get","skipActive","forceResize","PanelApiImpl","_isFocused","_isActive","_isVisible","_onDidDimensionChange","onDidDimensionsChange","_onDidChangeFocus","onDidFocusChange","_onFocusEvent","onFocusEvent","_onDidVisibilityChange","onDidVisibilityChange","_onVisibilityChange","onVisibilityChange","_onDidActiveChange","onDidActiveChange","_onActiveChange","onActiveChange","isFocused","GridviewPanelApiImpl","_onDidConstraintsChangeInternal","onDidConstraintsChangeInternal","_onDidConstraintsChange","onDidConstraintsChange","_onDidSizeChange","onDidSizeChange","setConstraints","setSize","DockviewPanelApiImpl","_onDidTitleChange","onDidTitleChange","_titleChanged","titleChanged","_suppressClosableChanged","suppressClosableChanged","_group","suppressClosable","isOldGroupActive","setTitle","close","DockviewGroupPanel","mutableDisposable","_suppressClosable","_title","_view","setSuppressClosable","keys","isPanelVisible","ActionContainer","_list","Watermark","emptySpace","flexGrow","closeAnchor","ev","render","_visible","isOneGroup","DefaultDeserializer","panelDeserializer","active","createGroup","createPanel","createComponent","componentName","components","frameworkComponents","createFrameworkComponent","fallback","Component","FrameworkComponent","DefaultTab","_isPanelVisible","_content","_actionContainer","action","textContent","changed","BasePanelView","outline","overflow","parameters","getComponent","GridviewPanel","_evaluatedMinimumWidth","_evaluatedMaximumWidth","_evaluatedMinimumHeight","_evaluatedMaximumHeight","_minimumWidth","_minimumHeight","_maximumWidth","_maximumHeight","_snap","_priority","updateConstraints","maximum","minimum","GroupviewApi","GroupPanel","_model","DefaultGroupPanelView","renderers","_tab","_actions","nextGroupId","DockviewComponent","_onTabInteractionEvent","onTabInteractionEvent","_onTabContextMenu","onTabContextMenu","_onDidRemovePanel","_onDidAddPanel","_onDidLayoutfromJSON","_onDidActivePanelChange","_options","frameworkTabComponents","tabComponents","watermarkComponent","watermarkFrameworkComponent","_api","flatMap","_deserializer","hasOrientationChanged","includePanel","grid","collection","panelData","entry","entries","referenceGroup","referencePanel","findGroup","relativeLocation","createGroupAtLocation","removeEmptyGroup","frameworkComponentFactory","moveGroupOrPanel","sourceGroup","referenceLocation","targetLocation","targetParentLocation","sourceLocation","sourceParentLocation","targetGroup","updatedReferenceLocation","groupItem","dropLocation","isGroupAlreadyFocused","console","warn","set","createContentComponent","createTabComponent","tabComponent","GridviewComponent","_key","serializedGridview","queue","registerPanel","f","removedPanel","reference","moveGroup","SplitviewComponent","_splitview","v","frameworkWrapper","doAddView","serializedSplitview","SplitviewPanelApiImpl","PaneviewPanelApiImpl","_onDidExpansionChange","onDidExpansionChange","_onMouseEnter","onMouseEnter","_onMouseLeave","onMouseLeave","_pane","setExpanded","isExpanded","PaneviewPanel","headerComponent","isHeaderVisible","_onDidChangeExpansionState","headerSize","_minimumBodySize","_maximumBodySize","_isExpanded","expandedSize","_headerVisible","isPanelExpanded","renderOnce","minimumBodySize","maximumBodySize","headerVisible","expanded","body","bodyPart","getBodyComponent","headerPart","getHeaderComponent","lineHeight","minHeight","maxHeight","DraggablePaneviewPanel","disableDnd","initDragFeatures","handler","existingPanel","allPanels","fromIndex","toIndex","DefaultHeader","apiRef","_expander","PaneFramework","PaneviewComponent","_viewDisposables","paneview","_paneview","headerComponents","headerframeworkComponents","serializedPaneview","SplitviewPanel","_evaluatedMinimumSize","_evaluatedMaximumSize","_minimumSize","_maximumSize","ReactComponentBridge","props","ref","triggerRender","_props","componentProps","current","Date","now","displayName","uniquePortalKeyGenerator","ReactPartContext","ReactPart","portalStore","context","disposed","createPortal","componentInstance","bridgeComponent","Provider","portal","addPortal","usePortalsLifecycle","portals","setPortals","existingPortals","ReactPanelContentPart","reactPortalStore","_actionsElement","actionsPortalElement","tabPortalElement","actionsPart","ReactPanelHeaderPart","ReactPanelDeserialzier","viewData","ReactWatermarkPart","_groupRef","DockviewReact","domRef","dockviewRef","disableAutoResizing","watcher","contentRect","factory","componentId","dockview","hideBorders","onReady","ReactPanelView","reactComponent","SplitviewReact","splitviewRef","ReactGridPanelView","GridviewReact","gridviewRef","PanePanelSection","PaneviewReact","paneviewRef","_componentId"],"sourceRoot":""}