{"version":3,"file":"assets/js/4edc808e.5b44fef5.js","mappings":"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","sources":["webpack://dockview-docs/./node_modules/@mdx-js/react/dist/esm.js","webpack://dockview-docs/./src/components/simpleDockview.tsx","webpack://dockview-docs/./src/components/simpleGridview.tsx","webpack://dockview-docs/./src/components/simplePaneview.tsx","webpack://dockview-docs/./src/components/simpleSplitview.tsx","webpack://dockview-docs/./docs/index.mdx"],"sourcesContent":["import React from 'react';\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nvar isFunction = function isFunction(obj) {\n  return typeof obj === 'function';\n};\n\nvar MDXContext = /*#__PURE__*/React.createContext({});\nvar withMDXComponents = function withMDXComponents(Component) {\n  return function (props) {\n    var allComponents = useMDXComponents(props.components);\n    return /*#__PURE__*/React.createElement(Component, _extends({}, props, {\n      components: allComponents\n    }));\n  };\n};\nvar useMDXComponents = function useMDXComponents(components) {\n  var contextComponents = React.useContext(MDXContext);\n  var allComponents = contextComponents;\n\n  if (components) {\n    allComponents = isFunction(components) ? components(contextComponents) : _objectSpread2(_objectSpread2({}, contextComponents), components);\n  }\n\n  return allComponents;\n};\nvar MDXProvider = function MDXProvider(props) {\n  var allComponents = useMDXComponents(props.components);\n  return /*#__PURE__*/React.createElement(MDXContext.Provider, {\n    value: allComponents\n  }, props.children);\n};\n\nvar TYPE_PROP_NAME = 'mdxType';\nvar DEFAULTS = {\n  inlineCode: 'code',\n  wrapper: function wrapper(_ref) {\n    var children = _ref.children;\n    return /*#__PURE__*/React.createElement(React.Fragment, {}, children);\n  }\n};\nvar MDXCreateElement = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var propComponents = props.components,\n      mdxType = props.mdxType,\n      originalType = props.originalType,\n      parentName = props.parentName,\n      etc = _objectWithoutProperties(props, [\"components\", \"mdxType\", \"originalType\", \"parentName\"]);\n\n  var components = useMDXComponents(propComponents);\n  var type = mdxType;\n  var Component = components[\"\".concat(parentName, \".\").concat(type)] || components[type] || DEFAULTS[type] || originalType;\n\n  if (propComponents) {\n    return /*#__PURE__*/React.createElement(Component, _objectSpread2(_objectSpread2({\n      ref: ref\n    }, etc), {}, {\n      components: propComponents\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _objectSpread2({\n    ref: ref\n  }, etc));\n});\nMDXCreateElement.displayName = 'MDXCreateElement';\nfunction createElement (type, props) {\n  var args = arguments;\n  var mdxType = props && props.mdxType;\n\n  if (typeof type === 'string' || mdxType) {\n    var argsLength = args.length;\n    var createElementArgArray = new Array(argsLength);\n    createElementArgArray[0] = MDXCreateElement;\n    var newProps = {};\n\n    for (var key in props) {\n      if (hasOwnProperty.call(props, key)) {\n        newProps[key] = props[key];\n      }\n    }\n\n    newProps.originalType = type;\n    newProps[TYPE_PROP_NAME] = typeof type === 'string' ? type : mdxType;\n    createElementArgArray[1] = newProps;\n\n    for (var i = 2; i < argsLength; i++) {\n      createElementArgArray[i] = args[i];\n    }\n\n    return React.createElement.apply(null, createElementArgArray);\n  }\n\n  return React.createElement.apply(null, args);\n}\n\nexport { MDXContext, MDXProvider, createElement as mdx, useMDXComponents, withMDXComponents };\n","import {\n    DockviewReact,\n    DockviewReadyEvent,\n    IDockviewPanelProps,\n    PanelApi,\n} from 'dockview';\nimport * as React from 'react';\n\nconst components = {\n    default: (props: IDockviewPanelProps<{ title: string }>) => {\n        return <div style={{ padding: '20px' }}>{props.params.title}</div>;\n    },\n};\n\nconst RenderWhenVisible = <T,>(\n    props: T & {\n        children: React.FunctionComponent<T>;\n        api: Pick<PanelApi, 'isVisible' | 'onDidVisibilityChange'>;\n    }\n) => {\n    const [visible, setVisible] = React.useState<boolean>(props.api.isVisible);\n\n    React.useEffect(() => {\n        const disposable = props.api.onDidVisibilityChange((event) =>\n            setVisible(event.isVisible)\n        );\n\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.api]);\n\n    if (!visible) {\n        return null;\n    }\n\n    return React.createElement(props.children, props);\n};\n\nexport const SimpleDockview = () => {\n    const onReady = (event: DockviewReadyEvent) => {\n        const panel = event.api.addPanel({\n            id: 'panel_1',\n            component: 'default',\n            params: {\n                title: 'Panel 1',\n            },\n        });\n\n        panel.group.locked = true;\n        panel.group.header.hidden = true;\n\n        event.api.addPanel({\n            id: 'panel_2',\n            component: 'default',\n            params: {\n                title: 'Panel 2',\n            },\n        });\n\n        event.api.addPanel({\n            id: 'panel_3',\n            component: 'default',\n            params: {\n                title: 'Panel 3',\n            },\n        });\n\n        event.api.addPanel({\n            id: 'panel_4',\n            component: 'default',\n            params: {\n                title: 'Panel 4',\n            },\n            position: { referencePanel: 'panel_1', direction: 'right' },\n        });\n\n        const panel5 = event.api.addPanel({\n            id: 'panel_5',\n            component: 'default',\n            params: {\n                title: 'Panel 5',\n            },\n            position: { referencePanel: 'panel_3', direction: 'right' },\n        });\n\n        // panel5.group!.model.header.hidden = true;\n        // panel5.group!.model.locked = true;\n\n        event.api.addPanel({\n            id: 'panel_6',\n            component: 'default',\n            params: {\n                title: 'Panel 6',\n            },\n            position: { referencePanel: 'panel_5', direction: 'below' },\n        });\n\n        event.api.addPanel({\n            id: 'panel_7',\n            component: 'default',\n            params: {\n                title: 'Panel 7',\n            },\n            position: { referencePanel: 'panel_6', direction: 'right' },\n        });\n    };\n\n    return (\n        <DockviewReact\n            components={components}\n            onReady={onReady}\n            className=\"dockview-theme-dark\"\n        />\n    );\n};\n","import {\n    IGridviewPanelProps,\n    Orientation,\n    GridviewReact,\n    GridviewReadyEvent,\n} from 'dockview';\nimport * as React from 'react';\n\nconst components = {\n    default: (props: IGridviewPanelProps<{ title: string }>) => {\n        return <div style={{ padding: '20px' }}>{props.params.title}</div>;\n    },\n};\n\nexport const SimpleGridview = () => {\n    const onReady = (event: GridviewReadyEvent) => {\n        event.api.addPanel({\n            id: 'panel_1',\n            component: 'default',\n            params: {\n                title: 'Panel 1',\n            },\n        });\n\n        event.api.addPanel({\n            id: 'panel_2',\n            component: 'default',\n            params: {\n                title: 'Panel 2',\n            },\n        });\n\n        event.api.addPanel({\n            id: 'panel_3',\n            component: 'default',\n            params: {\n                title: 'Panel 3',\n            },\n        });\n\n        event.api.addPanel({\n            id: 'panel_4',\n            component: 'default',\n            params: {\n                title: 'Panel 4',\n            },\n            position: { referencePanel: 'panel_1', direction: 'right' },\n        });\n\n        event.api.addPanel({\n            id: 'panel_5',\n            component: 'default',\n            params: {\n                title: 'Panel 5',\n            },\n            position: { referencePanel: 'panel_3', direction: 'right' },\n        });\n\n        event.api.addPanel({\n            id: 'panel_6',\n            component: 'default',\n            params: {\n                title: 'Panel 6',\n            },\n            position: { referencePanel: 'panel_5', direction: 'below' },\n            minimumWidth: 10,\n        });\n\n        event.api.addPanel({\n            id: 'panel_7',\n            component: 'default',\n            params: {\n                title: 'Panel 7',\n            },\n            position: { referencePanel: 'panel_6', direction: 'right' },\n            minimumWidth: 10,\n        });\n\n        event.api.addPanel({\n            id: 'panel_8',\n            component: 'default',\n            params: {\n                title: 'Panel 8',\n            },\n            position: { referencePanel: 'panel_6', direction: 'right' },\n            minimumWidth: 10,\n        });\n    };\n\n    return (\n        <GridviewReact\n            components={components}\n            onReady={onReady}\n            proportionalLayout={false}\n            orientation={Orientation.VERTICAL}\n            className=\"dockview-theme-dark\"\n        />\n    );\n};\n","import {\n    IPaneviewPanelProps,\n    PaneviewReact,\n    PaneviewReadyEvent,\n} from 'dockview';\nimport * as React from 'react';\n\nconst components = {\n    default: (props: IPaneviewPanelProps<{ title: string }>) => {\n        return (\n            <div\n                style={{\n                    padding: '10px',\n                    height: '100%',\n                    backgroundColor: 'rgb(60,60,60)',\n                }}\n            >\n                {props.params.title}\n            </div>\n        );\n    },\n};\n\nconst MyHeaderComponent = (props: IPaneviewPanelProps<{ title: string }>) => {\n    const [expanded, setExpanded] = React.useState<boolean>(\n        props.api.isExpanded\n    );\n\n    React.useEffect(() => {\n        const disposable = props.api.onDidExpansionChange((event) => {\n            setExpanded(event.isExpanded);\n        });\n\n        return () => {\n            disposable.dispose();\n        };\n    }, []);\n\n    const onClick = () => {\n        props.api.setExpanded(!expanded);\n    };\n\n    return (\n        <div\n            style={{\n                padding: '10px',\n                height: '100%',\n                backgroundColor: 'rgb(60,60,60)',\n            }}\n        >\n            <a\n                onClick={onClick}\n                className={expanded ? 'expanded' : 'collapsed'}\n            />\n            <span>{props.params.title}</span>\n        </div>\n    );\n};\n\nconst headerComponents = {\n    myHeaderComponent: MyHeaderComponent,\n};\n\nexport const SimplePaneview = () => {\n    const onReady = (event: PaneviewReadyEvent) => {\n        event.api.addPanel({\n            id: 'panel_1',\n            component: 'default',\n            params: {\n                title: 'Panel 1',\n            },\n            title: 'Panel 1',\n        });\n\n        event.api.addPanel({\n            id: 'panel_2',\n            component: 'default',\n            params: {\n                title: 'Panel 2',\n            },\n            title: 'Panel 2',\n        });\n\n        event.api.addPanel({\n            id: 'panel_3',\n            component: 'default',\n            params: {\n                title: 'Panel 3',\n            },\n            title: 'Panel 3',\n        });\n    };\n\n    return (\n        <PaneviewReact\n            components={components}\n            headerComponents={headerComponents}\n            onReady={onReady}\n            className=\"dockview-theme-dark\"\n        />\n    );\n};\n","import {\n    ISplitviewPanelProps,\n    Orientation,\n    SplitviewReact,\n    SplitviewReadyEvent,\n} from 'dockview';\nimport * as React from 'react';\n\nconst components = {\n    default: (props: ISplitviewPanelProps<{ title: string }>) => {\n        return <div style={{ padding: '20px' }}>{props.params.title}</div>;\n    },\n};\n\nexport const SimpleSplitview = (props: { proportional?: boolean }) => {\n    const onReady = (event: SplitviewReadyEvent) => {\n        event.api.addPanel({\n            id: 'panel_1',\n            component: 'default',\n            params: {\n                title: 'Panel 1',\n            },\n            minimumSize: 100,\n        });\n\n        event.api.addPanel({\n            id: 'panel_2',\n            component: 'default',\n            params: {\n                title: 'Panel 2',\n            },\n            minimumSize: 100,\n        });\n\n        event.api.addPanel({\n            id: 'panel_3',\n            component: 'default',\n            params: {\n                title: 'Panel 3',\n            },\n            minimumSize: 100,\n        });\n    };\n\n    return (\n        <SplitviewReact\n            components={components}\n            proportionalLayout={props.proportional}\n            onReady={onReady}\n            orientation={Orientation.HORIZONTAL}\n            className=\"dockview-theme-dark\"\n        />\n    );\n};\n","\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\n/* @jsxFrag mdx.Fragment */\n\nimport React from 'react';\nimport { mdx } from '@mdx-js/react';\n\n\nexport const frontMatter = {\n\tsidebar_position: 0\n};\nexport const contentTitle = 'Dockview';\nexport const metadata = {\n  \"unversionedId\": \"index\",\n  \"id\": \"index\",\n  \"title\": \"Dockview\",\n  \"description\": \"Introduction\",\n  \"source\": \"@site/docs/index.mdx\",\n  \"sourceDirName\": \".\",\n  \"slug\": \"/\",\n  \"permalink\": \"/docs2/docs/\",\n  \"draft\": false,\n  \"editUrl\": \"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/index.mdx\",\n  \"tags\": [],\n  \"version\": \"current\",\n  \"sidebarPosition\": 0,\n  \"frontMatter\": {\n    \"sidebar_position\": 0\n  },\n  \"sidebar\": \"tutorialSidebar\",\n  \"next\": {\n    \"title\": \"Basics\",\n    \"permalink\": \"/docs2/docs/basics\"\n  }\n};\nexport const assets = {\n\n};\n\nimport { SimpleSplitview } from '../src/components/simpleSplitview';\nimport { SimpleGridview } from '../src/components/simpleGridview';\nimport { SimplePaneview } from '../src/components/simplePaneview';\nimport { SimpleDockview } from '../src/components/simpleDockview';\nexport const toc = [{\n  value: 'Introduction',\n  id: 'introduction',\n  level: 2\n}, {\n  value: 'Features',\n  id: 'features',\n  level: 2\n}, {\n  value: 'Quick start',\n  id: 'quick-start',\n  level: 2\n}];\n\nconst layoutProps = {\n  toc\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"dockview\"\n    }}>{`Dockview`}</h1>\n    <h2 {...{\n      \"id\": \"introduction\"\n    }}>{`Introduction`}</h2>\n    <p><strong parentName=\"p\">{`dockview`}</strong>{` is a zero dependency layout manager that supports tab, grids and splitviews.`}</p>\n    <h2 {...{\n      \"id\": \"features\"\n    }}>{`Features`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`Themable and customizable`}</li>\n      <li parentName=\"ul\">{`Support for the serialization and deserialization of layouts`}</li>\n      <li parentName=\"ul\">{`Drag and drop support`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"quick-start\"\n    }}>{`Quick start`}</h2>\n    <p><inlineCode parentName=\"p\">{`dockview`}</inlineCode>{` has a peer dependency on `}<inlineCode parentName=\"p\">{`react >= 16.8.0`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`react-dom >= 16.8.0`}</inlineCode>{`. To install `}<inlineCode parentName=\"p\">{`dockview`}</inlineCode>{` you can run:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`npm install dockview\n`}</code></pre>\n    <p>{`You must also import the dockview stylesheet found under `}<a parentName=\"p\" {...{\n        \"href\": \"https://unpkg.com/browse/dockview@latest/dist/styles/dockview.css\"\n      }}><inlineCode parentName=\"a\">{`dockview/dict/styles/dockview.css`}</inlineCode></a>{`,\ndepending on your solution this might be:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-css\"\n      }}>{`@import './node_modules/dockview/dist/styles/dockview.css';\n`}</code></pre>\n    <p>{`A dark and light theme are provided, one of these classes (or a custom theme) must be attached at any point above your components in the HTML tree. To cover the entire web page you might attach the class to the `}<inlineCode parentName=\"p\">{`body`}</inlineCode>{` component:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-html\"\n      }}>{`<body classname=\"dockview-theme-dark\">\n    ...\n</body>\n<body classname=\"dockview-theme-light\">\n    ...\n</body>\n`}</code></pre>\n    <p>{`There are 4 components you may want to use:`}</p>\n    <p>{`Splitview`}</p>\n    <div style={{\n      height: '100px',\n      backgroundColor: 'rgb(30,30,30)',\n      color: 'white',\n      margin: '20px 0px'\n    }}>\n    <SimpleSplitview mdxType=\"SimpleSplitview\" />\n    </div>\n    <div style={{\n      height: '300px',\n      backgroundColor: 'rgb(30,30,30)',\n      color: 'white',\n      margin: '20px 0px'\n    }}>\n    <SimpleGridview mdxType=\"SimpleGridview\" />\n    </div>\n    <div style={{\n      height: '300px',\n      backgroundColor: 'rgb(30,30,30)',\n      color: 'white',\n      margin: '20px 0px'\n    }}>\n    <SimplePaneview mdxType=\"SimplePaneview\" />\n    </div>\n    <div style={{\n      height: '300px',\n      backgroundColor: 'rgb(30,30,30)',\n      color: 'white',\n      margin: '20px 0px'\n    }}>\n    <SimpleDockview mdxType=\"SimpleDockview\" />\n    </div>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`import {\n    DockviewReact,\n    DockviewReadyEvent,\n    PanelCollection,\n    IDockviewPanelProps,\n    IDockviewPanelHeaderProps,\n} from 'dockview';\n\nconst components: PanelCollection<IDockviewPanelProps> = {\n    default: (props: IDockviewPanelProps<{ someProps: string }>) => {\n        return <div>{props.params.someProps}</div>;\n    },\n};\n\nconst headers: PanelCollection<IDockviewPanelHeaderProps> = {\n    customTab: (props: IDockviewPanelHeaderProps) => {\n        return (\n            <div>\n                <span>{props.api.title}</span>\n                <span onClick={() => props.api.close()}>{'[x]'}</span>\n            </div>\n        );\n    },\n};\n\nconst Component = () => {\n    const onReady = (event: DockviewReadyEvent) => {\n        event.api.addPanel({\n            id: 'panel1',\n            component: 'default',\n            tabComponent: 'customTab', // optional custom header\n            params: {\n                someProps: 'Hello',\n            },\n        });\n        event.api.addPanel({\n            id: 'panel2',\n            component: 'default',\n            params: {\n                someProps: 'World',\n            },\n            position: { referencePanel: 'panel1', direction: 'below' },\n        });\n    };\n\n    return (\n        <DockviewReact\n            components={components}\n            tabComponents={headers} // optional headers renderer\n            onReady={onReady}\n        />\n    );\n};\n`}</code></pre>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","sourceSymbolKeys","prototype","propertyIsEnumerable","call","MDXContext","useMDXComponents","components","contextComponents","allComponents","MDXProvider","props","Provider","children","DEFAULTS","inlineCode","wrapper","_ref","MDXCreateElement","ref","propComponents","mdxType","originalType","parentName","etc","type","Component","concat","createElement","args","argsLength","createElementArgArray","Array","newProps","hasOwnProperty","displayName","default","style","padding","params","title","SimpleDockview","onReady","event","panel","api","addPanel","id","component","group","locked","header","hidden","position","referencePanel","direction","className","SimpleGridview","minimumWidth","proportionalLayout","orientation","Orientation","height","backgroundColor","headerComponents","myHeaderComponent","React","isExpanded","expanded","setExpanded","disposable","onDidExpansionChange","dispose","onClick","SimplePaneview","SimpleSplitview","proportional","minimumSize","frontMatter","sidebar_position","contentTitle","metadata","assets","toc","level","layoutProps","MDXContent","color","margin","isMDXComponent"],"sourceRoot":""}