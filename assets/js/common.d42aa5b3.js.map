{"version":3,"file":"assets/js/common.d42aa5b3.js","mappings":"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","sources":["webpack://dockview-docs/../../node_modules/@mdx-js/react/dist/esm.js","webpack://dockview-docs/../dockview-core/dist/esm/events.js","webpack://dockview-docs/../dockview-core/dist/esm/lifecycle.js","webpack://dockview-docs/../dockview-core/dist/esm/dom.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/dataTransfer.js","webpack://dockview-docs/../dockview-core/dist/esm/math.js","webpack://dockview-docs/../dockview-core/dist/esm/array.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/viewItem.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/splitview.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/paneview.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/leafNode.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/branchNode.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/gridview.js","webpack://dockview-docs/../dockview-core/dist/esm/api/component.api.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/dnd.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/droptarget.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/panel/content.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/types.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/abstractDragHandler.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/tab/tab.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/groupDragHandler.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/ghost.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/titlebar/voidContainer.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/titlebar/tabsContainer.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewGroupPanelModel.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/baseComponentGridview.js","webpack://dockview-docs/../dockview-core/dist/esm/api/panelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/api/splitviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/api/paneviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/basePanelView.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/paneviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/draggablePaneviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/api/gridviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/gridviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewGroupPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/api/dockviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/svg.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/tab/defaultTab.js","webpack://dockview-docs/../dockview-core/dist/esm/panel/componentFactory.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewPanelModel.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/deserializer.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/watermark/watermark.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/options.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/gridviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/splitviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/defaultPaneviewHeader.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/paneviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/splitviewPanel.js","webpack://dockview-docs/../dockview/dist/esm/react.js","webpack://dockview-docs/../dockview/dist/esm/dockview/reactContentPart.js","webpack://dockview-docs/../dockview/dist/esm/dockview/reactHeaderPart.js","webpack://dockview-docs/../dockview/dist/esm/dockview/reactWatermarkPart.js","webpack://dockview-docs/../dockview/dist/esm/dockview/groupControlsRenderer.js","webpack://dockview-docs/../dockview/dist/esm/dockview/dockview.js","webpack://dockview-docs/../dockview/dist/esm/svg.js","webpack://dockview-docs/../dockview/dist/esm/dockview/defaultTab.js","webpack://dockview-docs/../dockview/dist/esm/splitview/view.js","webpack://dockview-docs/../dockview/dist/esm/splitview/splitview.js","webpack://dockview-docs/../dockview/dist/esm/gridview/view.js","webpack://dockview-docs/../dockview/dist/esm/gridview/gridview.js","webpack://dockview-docs/../dockview/dist/esm/paneview/view.js","webpack://dockview-docs/../dockview/dist/esm/paneview/paneview.js"],"sourcesContent":["import React from 'react';\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nvar isFunction = function isFunction(obj) {\n  return typeof obj === 'function';\n};\n\nvar MDXContext = /*#__PURE__*/React.createContext({});\nvar withMDXComponents = function withMDXComponents(Component) {\n  return function (props) {\n    var allComponents = useMDXComponents(props.components);\n    return /*#__PURE__*/React.createElement(Component, _extends({}, props, {\n      components: allComponents\n    }));\n  };\n};\nvar useMDXComponents = function useMDXComponents(components) {\n  var contextComponents = React.useContext(MDXContext);\n  var allComponents = contextComponents;\n\n  if (components) {\n    allComponents = isFunction(components) ? components(contextComponents) : _objectSpread2(_objectSpread2({}, contextComponents), components);\n  }\n\n  return allComponents;\n};\nvar MDXProvider = function MDXProvider(props) {\n  var allComponents = useMDXComponents(props.components);\n  return /*#__PURE__*/React.createElement(MDXContext.Provider, {\n    value: allComponents\n  }, props.children);\n};\n\nvar TYPE_PROP_NAME = 'mdxType';\nvar DEFAULTS = {\n  inlineCode: 'code',\n  wrapper: function wrapper(_ref) {\n    var children = _ref.children;\n    return /*#__PURE__*/React.createElement(React.Fragment, {}, children);\n  }\n};\nvar MDXCreateElement = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var propComponents = props.components,\n      mdxType = props.mdxType,\n      originalType = props.originalType,\n      parentName = props.parentName,\n      etc = _objectWithoutProperties(props, [\"components\", \"mdxType\", \"originalType\", \"parentName\"]);\n\n  var components = useMDXComponents(propComponents);\n  var type = mdxType;\n  var Component = components[\"\".concat(parentName, \".\").concat(type)] || components[type] || DEFAULTS[type] || originalType;\n\n  if (propComponents) {\n    return /*#__PURE__*/React.createElement(Component, _objectSpread2(_objectSpread2({\n      ref: ref\n    }, etc), {}, {\n      components: propComponents\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _objectSpread2({\n    ref: ref\n  }, etc));\n});\nMDXCreateElement.displayName = 'MDXCreateElement';\nfunction createElement (type, props) {\n  var args = arguments;\n  var mdxType = props && props.mdxType;\n\n  if (typeof type === 'string' || mdxType) {\n    var argsLength = args.length;\n    var createElementArgArray = new Array(argsLength);\n    createElementArgArray[0] = MDXCreateElement;\n    var newProps = {};\n\n    for (var key in props) {\n      if (hasOwnProperty.call(props, key)) {\n        newProps[key] = props[key];\n      }\n    }\n\n    newProps.originalType = type;\n    newProps[TYPE_PROP_NAME] = typeof type === 'string' ? type : mdxType;\n    createElementArgArray[1] = newProps;\n\n    for (var i = 2; i < argsLength; i++) {\n      createElementArgArray[i] = args[i];\n    }\n\n    return React.createElement.apply(null, createElementArgArray);\n  }\n\n  return React.createElement.apply(null, args);\n}\n\nexport { MDXContext, MDXProvider, createElement as mdx, useMDXComponents, withMDXComponents };\n","export var Event;\n(function (Event) {\n    Event.any = (...children) => {\n        return (listener) => {\n            const disposables = children.map((child) => child(listener));\n            return {\n                dispose: () => {\n                    disposables.forEach((d) => {\n                        d.dispose();\n                    });\n                },\n            };\n        };\n    };\n})(Event || (Event = {}));\n// dumb event emitter with better typings than nodes event emitter\n// https://github.com/microsoft/vscode/blob/master/src/vs/base/common/event.ts\nexport class Emitter {\n    constructor(options) {\n        this.options = options;\n        this._listeners = [];\n        this._disposed = false;\n    }\n    get event() {\n        if (!this._event) {\n            this._event = (listener) => {\n                var _a;\n                if (((_a = this.options) === null || _a === void 0 ? void 0 : _a.replay) && this._last !== undefined) {\n                    listener(this._last);\n                }\n                this._listeners.push(listener);\n                return {\n                    dispose: () => {\n                        const index = this._listeners.indexOf(listener);\n                        if (index > -1) {\n                            this._listeners.splice(index, 1);\n                        }\n                    },\n                };\n            };\n        }\n        return this._event;\n    }\n    fire(e) {\n        this._last = e;\n        for (const listener of this._listeners) {\n            listener(e);\n        }\n    }\n    dispose() {\n        this._listeners = [];\n        this._disposed = true;\n    }\n}\nexport function addDisposableWindowListener(element, type, listener, options) {\n    element.addEventListener(type, listener, options);\n    return {\n        dispose: () => {\n            element.removeEventListener(type, listener);\n        },\n    };\n}\nexport function addDisposableListener(element, type, listener, options) {\n    element.addEventListener(type, listener, options);\n    return {\n        dispose: () => {\n            element.removeEventListener(type, listener);\n        },\n    };\n}\nexport class TickDelayedEvent {\n    constructor() {\n        this._onFired = new Emitter();\n        this.onEvent = this._onFired.event;\n    }\n    fire() {\n        if (this.timer) {\n            clearTimeout(this.timer);\n        }\n        this.timer = setTimeout(() => {\n            this._onFired.fire();\n            clearTimeout(this.timer);\n        });\n    }\n    dispose() {\n        this._onFired.dispose();\n    }\n}\n","export var Disposable;\n(function (Disposable) {\n    Disposable.NONE = {\n        dispose: () => {\n            // noop\n        },\n    };\n})(Disposable || (Disposable = {}));\nexport class CompositeDisposable {\n    static from(...args) {\n        return new CompositeDisposable(...args);\n    }\n    constructor(...args) {\n        this.disposables = args;\n    }\n    addDisposables(...args) {\n        args.forEach((arg) => this.disposables.push(arg));\n    }\n    dispose() {\n        this.disposables.forEach((arg) => arg.dispose());\n    }\n}\nexport class MutableDisposable {\n    constructor() {\n        this._disposable = Disposable.NONE;\n    }\n    set value(disposable) {\n        if (this._disposable) {\n            this._disposable.dispose();\n        }\n        this._disposable = disposable;\n    }\n    dispose() {\n        if (this._disposable) {\n            this._disposable.dispose();\n            this._disposable = Disposable.NONE;\n        }\n    }\n}\n","import { Emitter, addDisposableListener, addDisposableWindowListener, } from './events';\nimport { CompositeDisposable } from './lifecycle';\nexport function watchElementResize(element, cb) {\n    const observer = new ResizeObserver((entires) => {\n        const firstEntry = entires[0];\n        cb(firstEntry);\n    });\n    observer.observe(element);\n    return {\n        dispose: () => {\n            observer.unobserve(element);\n            observer.disconnect();\n        },\n    };\n}\nexport const removeClasses = (element, ...classes) => {\n    for (const classname of classes) {\n        if (element.classList.contains(classname)) {\n            element.classList.remove(classname);\n        }\n    }\n};\nexport const addClasses = (element, ...classes) => {\n    for (const classname of classes) {\n        if (!element.classList.contains(classname)) {\n            element.classList.add(classname);\n        }\n    }\n};\nexport const toggleClass = (element, className, isToggled) => {\n    const hasClass = element.classList.contains(className);\n    if (isToggled && !hasClass) {\n        element.classList.add(className);\n    }\n    if (!isToggled && hasClass) {\n        element.classList.remove(className);\n    }\n};\nexport function isAncestor(testChild, testAncestor) {\n    while (testChild) {\n        if (testChild === testAncestor) {\n            return true;\n        }\n        testChild = testChild.parentNode;\n    }\n    return false;\n}\nexport function getElementsByTagName(tag) {\n    return Array.prototype.slice.call(document.getElementsByTagName(tag), 0);\n}\nexport function trackFocus(element) {\n    return new FocusTracker(element);\n}\n/**\n * Track focus on an element. Ensure tabIndex is set when an HTMLElement is not focusable by default\n */\nclass FocusTracker extends CompositeDisposable {\n    constructor(element) {\n        super();\n        this._onDidFocus = new Emitter();\n        this.onDidFocus = this._onDidFocus.event;\n        this._onDidBlur = new Emitter();\n        this.onDidBlur = this._onDidBlur.event;\n        let hasFocus = isAncestor(document.activeElement, element);\n        let loosingFocus = false;\n        const onFocus = () => {\n            loosingFocus = false;\n            if (!hasFocus) {\n                hasFocus = true;\n                this._onDidFocus.fire();\n            }\n        };\n        const onBlur = () => {\n            if (hasFocus) {\n                loosingFocus = true;\n                window.setTimeout(() => {\n                    if (loosingFocus) {\n                        loosingFocus = false;\n                        hasFocus = false;\n                        this._onDidBlur.fire();\n                    }\n                }, 0);\n            }\n        };\n        this._refreshStateHandler = () => {\n            const currentNodeHasFocus = isAncestor(document.activeElement, element);\n            if (currentNodeHasFocus !== hasFocus) {\n                if (hasFocus) {\n                    onBlur();\n                }\n                else {\n                    onFocus();\n                }\n            }\n        };\n        if (element instanceof HTMLElement) {\n            this.addDisposables(addDisposableListener(element, 'focus', onFocus, true));\n            this.addDisposables(addDisposableListener(element, 'blur', onBlur, true));\n        }\n        else {\n            this.addDisposables(addDisposableWindowListener(element, 'focus', onFocus, true));\n            this.addDisposables(addDisposableWindowListener(element, 'blur', onBlur, true));\n        }\n    }\n    refreshState() {\n        this._refreshStateHandler();\n    }\n    dispose() {\n        super.dispose();\n        this._onDidBlur.dispose();\n        this._onDidFocus.dispose();\n    }\n}\n","class TransferObject {\n    constructor() {\n        //\n    }\n}\nexport class PanelTransfer extends TransferObject {\n    constructor(viewId, groupId, panelId) {\n        super();\n        this.viewId = viewId;\n        this.groupId = groupId;\n        this.panelId = panelId;\n    }\n}\nexport class PaneTransfer extends TransferObject {\n    constructor(viewId, paneId) {\n        super();\n        this.viewId = viewId;\n        this.paneId = paneId;\n    }\n}\n/**\n * A singleton to store transfer data during drag & drop operations that are only valid within the application.\n */\nexport class LocalSelectionTransfer {\n    constructor() {\n        // protect against external instantiation\n    }\n    static getInstance() {\n        return LocalSelectionTransfer.INSTANCE;\n    }\n    hasData(proto) {\n        return proto && proto === this.proto;\n    }\n    clearData(proto) {\n        if (this.hasData(proto)) {\n            this.proto = undefined;\n            this.data = undefined;\n        }\n    }\n    getData(proto) {\n        if (this.hasData(proto)) {\n            return this.data;\n        }\n        return undefined;\n    }\n    setData(data, proto) {\n        if (proto) {\n            this.data = data;\n            this.proto = proto;\n        }\n    }\n}\nLocalSelectionTransfer.INSTANCE = new LocalSelectionTransfer();\nexport function getPanelData() {\n    const panelTransfer = LocalSelectionTransfer.getInstance();\n    const isPanelEvent = panelTransfer.hasData(PanelTransfer.prototype);\n    if (!isPanelEvent) {\n        return undefined;\n    }\n    return panelTransfer.getData(PanelTransfer.prototype)[0];\n}\nexport function getPaneData() {\n    const paneTransfer = LocalSelectionTransfer.getInstance();\n    const isPanelEvent = paneTransfer.hasData(PaneTransfer.prototype);\n    if (!isPanelEvent) {\n        return undefined;\n    }\n    return paneTransfer.getData(PaneTransfer.prototype)[0];\n}\n","export const clamp = (value, min, max) => {\n    if (min > max) {\n        throw new Error(`${min} > ${max} is an invalid condition`);\n    }\n    return Math.min(max, Math.max(value, min));\n};\nexport const sequentialNumberGenerator = () => {\n    let value = 1;\n    return { next: () => (value++).toString() };\n};\nexport const range = (from, to) => {\n    const result = [];\n    if (typeof to !== 'number') {\n        to = from;\n        from = 0;\n    }\n    if (from <= to) {\n        for (let i = from; i < to; i++) {\n            result.push(i);\n        }\n    }\n    else {\n        for (let i = from; i > to; i--) {\n            result.push(i);\n        }\n    }\n    return result;\n};\n","export function tail(arr) {\n    if (arr.length === 0) {\n        throw new Error('Invalid tail call');\n    }\n    return [arr.slice(0, arr.length - 1), arr[arr.length - 1]];\n}\nexport function last(arr) {\n    return arr.length > 0 ? arr[arr.length - 1] : undefined;\n}\nexport function sequenceEquals(arr1, arr2) {\n    if (arr1.length !== arr2.length) {\n        return false;\n    }\n    for (let i = 0; i < arr1.length; i++) {\n        if (arr1[i] !== arr2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Pushes an element to the start of the array, if found.\n */\nexport function pushToStart(arr, value) {\n    const index = arr.indexOf(value);\n    if (index > -1) {\n        arr.splice(index, 1);\n        arr.unshift(value);\n    }\n}\n/**\n * Pushes an element to the end of the array, if found.\n */\nexport function pushToEnd(arr, value) {\n    const index = arr.indexOf(value);\n    if (index > -1) {\n        arr.splice(index, 1);\n        arr.push(value);\n    }\n}\nexport function firstIndex(array, fn) {\n    for (let i = 0; i < array.length; i++) {\n        const element = array[i];\n        if (fn(element)) {\n            return i;\n        }\n    }\n    return -1;\n}\n","import { clamp } from '../math';\nexport class ViewItem {\n    set size(size) {\n        this._size = size;\n    }\n    get size() {\n        return this._size;\n    }\n    get cachedVisibleSize() {\n        return this._cachedVisibleSize;\n    }\n    get visible() {\n        return typeof this._cachedVisibleSize === 'undefined';\n    }\n    get minimumSize() {\n        return this.visible ? this.view.minimumSize : 0;\n    }\n    get viewMinimumSize() {\n        return this.view.minimumSize;\n    }\n    get maximumSize() {\n        return this.visible ? this.view.maximumSize : 0;\n    }\n    get viewMaximumSize() {\n        return this.view.maximumSize;\n    }\n    get priority() {\n        return this.view.priority;\n    }\n    get snap() {\n        return !!this.view.snap;\n    }\n    set enabled(enabled) {\n        this.container.style.pointerEvents = enabled ? '' : 'none';\n    }\n    constructor(container, view, size, disposable) {\n        this.container = container;\n        this.view = view;\n        this.disposable = disposable;\n        this._cachedVisibleSize = undefined;\n        if (typeof size === 'number') {\n            this._size = size;\n            this._cachedVisibleSize = undefined;\n            container.classList.add('visible');\n        }\n        else {\n            this._size = 0;\n            this._cachedVisibleSize = size.cachedVisibleSize;\n        }\n    }\n    setVisible(visible, size) {\n        var _a;\n        if (visible === this.visible) {\n            return;\n        }\n        if (visible) {\n            this.size = clamp((_a = this._cachedVisibleSize) !== null && _a !== void 0 ? _a : 0, this.viewMinimumSize, this.viewMaximumSize);\n            this._cachedVisibleSize = undefined;\n        }\n        else {\n            this._cachedVisibleSize =\n                typeof size === 'number' ? size : this.size;\n            this.size = 0;\n        }\n        this.container.classList.toggle('visible', visible);\n        if (this.view.setVisible) {\n            this.view.setVisible(visible);\n        }\n    }\n    dispose() {\n        this.disposable.dispose();\n        return this.view;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/splitview\n *--------------------------------------------------------------------------------------------*/\nimport { removeClasses, addClasses, toggleClass, getElementsByTagName, } from '../dom';\nimport { clamp } from '../math';\nimport { Emitter } from '../events';\nimport { pushToStart, pushToEnd, firstIndex } from '../array';\nimport { range } from '../math';\nimport { ViewItem } from './viewItem';\nexport var Orientation;\n(function (Orientation) {\n    Orientation[\"HORIZONTAL\"] = \"HORIZONTAL\";\n    Orientation[\"VERTICAL\"] = \"VERTICAL\";\n})(Orientation || (Orientation = {}));\nexport var SashState;\n(function (SashState) {\n    SashState[SashState[\"MAXIMUM\"] = 0] = \"MAXIMUM\";\n    SashState[SashState[\"MINIMUM\"] = 1] = \"MINIMUM\";\n    SashState[SashState[\"DISABLED\"] = 2] = \"DISABLED\";\n    SashState[SashState[\"ENABLED\"] = 3] = \"ENABLED\";\n})(SashState || (SashState = {}));\nexport var LayoutPriority;\n(function (LayoutPriority) {\n    LayoutPriority[\"Low\"] = \"low\";\n    LayoutPriority[\"High\"] = \"high\";\n    LayoutPriority[\"Normal\"] = \"normal\";\n})(LayoutPriority || (LayoutPriority = {}));\nexport var Sizing;\n(function (Sizing) {\n    Sizing.Distribute = { type: 'distribute' };\n    function Split(index) {\n        return { type: 'split', index };\n    }\n    Sizing.Split = Split;\n    function Invisible(cachedVisibleSize) {\n        return { type: 'invisible', cachedVisibleSize };\n    }\n    Sizing.Invisible = Invisible;\n})(Sizing || (Sizing = {}));\nexport class Splitview {\n    get size() {\n        return this._size;\n    }\n    set size(value) {\n        this._size = value;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    set orthogonalSize(value) {\n        this._orthogonalSize = value;\n    }\n    get length() {\n        return this.views.length;\n    }\n    get proportions() {\n        return this._proportions ? [...this._proportions] : undefined;\n    }\n    get orientation() {\n        return this._orientation;\n    }\n    set orientation(value) {\n        this._orientation = value;\n        const tmp = this.size;\n        this.size = this.orthogonalSize;\n        this.orthogonalSize = tmp;\n        removeClasses(this.element, 'horizontal', 'vertical');\n        this.element.classList.add(this.orientation == Orientation.HORIZONTAL\n            ? 'horizontal'\n            : 'vertical');\n    }\n    get minimumSize() {\n        return this.views.reduce((r, item) => r + item.minimumSize, 0);\n    }\n    get maximumSize() {\n        return this.length === 0\n            ? Number.POSITIVE_INFINITY\n            : this.views.reduce((r, item) => r + item.maximumSize, 0);\n    }\n    get startSnappingEnabled() {\n        return this._startSnappingEnabled;\n    }\n    set startSnappingEnabled(startSnappingEnabled) {\n        if (this._startSnappingEnabled === startSnappingEnabled) {\n            return;\n        }\n        this._startSnappingEnabled = startSnappingEnabled;\n        this.updateSashEnablement();\n    }\n    get endSnappingEnabled() {\n        return this._endSnappingEnabled;\n    }\n    set endSnappingEnabled(endSnappingEnabled) {\n        if (this._endSnappingEnabled === endSnappingEnabled) {\n            return;\n        }\n        this._endSnappingEnabled = endSnappingEnabled;\n        this.updateSashEnablement();\n    }\n    constructor(container, options) {\n        this.container = container;\n        this.views = [];\n        this.sashes = [];\n        this._size = 0;\n        this._orthogonalSize = 0;\n        this.contentSize = 0;\n        this._proportions = undefined;\n        this._startSnappingEnabled = true;\n        this._endSnappingEnabled = true;\n        this._onDidSashEnd = new Emitter();\n        this.onDidSashEnd = this._onDidSashEnd.event;\n        this._onDidAddView = new Emitter();\n        this.onDidAddView = this._onDidAddView.event;\n        this._onDidRemoveView = new Emitter();\n        this.onDidRemoveView = this._onDidRemoveView.event;\n        this.resize = (index, delta, sizes = this.views.map((x) => x.size), lowPriorityIndexes, highPriorityIndexes, overloadMinDelta = Number.NEGATIVE_INFINITY, overloadMaxDelta = Number.POSITIVE_INFINITY, snapBefore, snapAfter) => {\n            if (index < 0 || index > this.views.length) {\n                return 0;\n            }\n            const upIndexes = range(index, -1);\n            const downIndexes = range(index + 1, this.views.length);\n            //\n            if (highPriorityIndexes) {\n                for (const i of highPriorityIndexes) {\n                    pushToStart(upIndexes, i);\n                    pushToStart(downIndexes, i);\n                }\n            }\n            if (lowPriorityIndexes) {\n                for (const i of lowPriorityIndexes) {\n                    pushToEnd(upIndexes, i);\n                    pushToEnd(downIndexes, i);\n                }\n            }\n            //\n            const upItems = upIndexes.map((i) => this.views[i]);\n            const upSizes = upIndexes.map((i) => sizes[i]);\n            //\n            const downItems = downIndexes.map((i) => this.views[i]);\n            const downSizes = downIndexes.map((i) => sizes[i]);\n            //\n            const minDeltaUp = upIndexes.reduce((_, i) => _ + this.views[i].minimumSize - sizes[i], 0);\n            const maxDeltaUp = upIndexes.reduce((_, i) => _ + this.views[i].maximumSize - sizes[i], 0);\n            //\n            const maxDeltaDown = downIndexes.length === 0\n                ? Number.POSITIVE_INFINITY\n                : downIndexes.reduce((_, i) => _ + sizes[i] - this.views[i].minimumSize, 0);\n            const minDeltaDown = downIndexes.length === 0\n                ? Number.NEGATIVE_INFINITY\n                : downIndexes.reduce((_, i) => _ + sizes[i] - this.views[i].maximumSize, 0);\n            //\n            const minDelta = Math.max(minDeltaUp, minDeltaDown);\n            const maxDelta = Math.min(maxDeltaDown, maxDeltaUp);\n            //\n            let snapped = false;\n            if (snapBefore) {\n                const snapView = this.views[snapBefore.index];\n                const visible = delta >= snapBefore.limitDelta;\n                snapped = visible !== snapView.visible;\n                snapView.setVisible(visible, snapBefore.size);\n            }\n            if (!snapped && snapAfter) {\n                const snapView = this.views[snapAfter.index];\n                const visible = delta < snapAfter.limitDelta;\n                snapped = visible !== snapView.visible;\n                snapView.setVisible(visible, snapAfter.size);\n            }\n            if (snapped) {\n                return this.resize(index, delta, sizes, lowPriorityIndexes, highPriorityIndexes, overloadMinDelta, overloadMaxDelta);\n            }\n            //\n            const tentativeDelta = clamp(delta, minDelta, maxDelta);\n            let actualDelta = 0;\n            //\n            let deltaUp = tentativeDelta;\n            for (let i = 0; i < upItems.length; i++) {\n                const item = upItems[i];\n                const size = clamp(upSizes[i] + deltaUp, item.minimumSize, item.maximumSize);\n                const viewDelta = size - upSizes[i];\n                actualDelta += viewDelta;\n                deltaUp -= viewDelta;\n                item.size = size;\n            }\n            //\n            let deltaDown = actualDelta;\n            for (let i = 0; i < downItems.length; i++) {\n                const item = downItems[i];\n                const size = clamp(downSizes[i] - deltaDown, item.minimumSize, item.maximumSize);\n                const viewDelta = size - downSizes[i];\n                deltaDown += viewDelta;\n                item.size = size;\n            }\n            //\n            return delta;\n        };\n        this._orientation = options.orientation;\n        this.element = this.createContainer();\n        this.proportionalLayout =\n            options.proportionalLayout === undefined\n                ? true\n                : !!options.proportionalLayout;\n        this.viewContainer = this.createViewContainer();\n        this.sashContainer = this.createSashContainer();\n        this.element.appendChild(this.sashContainer);\n        this.element.appendChild(this.viewContainer);\n        this.container.appendChild(this.element);\n        this.style(options.styles);\n        // We have an existing set of view, add them now\n        if (options.descriptor) {\n            this._size = options.descriptor.size;\n            options.descriptor.views.forEach((viewDescriptor, index) => {\n                const sizing = viewDescriptor.visible === undefined ||\n                    viewDescriptor.visible\n                    ? viewDescriptor.size\n                    : {\n                        type: 'invisible',\n                        cachedVisibleSize: viewDescriptor.size,\n                    };\n                const view = viewDescriptor.view;\n                this.addView(view, sizing, index, true\n                // true skip layout\n                );\n            });\n            // Initialize content size and proportions for first layout\n            this.contentSize = this.views.reduce((r, i) => r + i.size, 0);\n            this.saveProportions();\n        }\n    }\n    style(styles) {\n        if ((styles === null || styles === void 0 ? void 0 : styles.separatorBorder) === 'transparent') {\n            removeClasses(this.element, 'separator-border');\n            this.element.style.removeProperty('--dv-separator-border');\n        }\n        else {\n            addClasses(this.element, 'separator-border');\n            if (styles === null || styles === void 0 ? void 0 : styles.separatorBorder) {\n                this.element.style.setProperty('--dv-separator-border', styles.separatorBorder);\n            }\n        }\n    }\n    isViewVisible(index) {\n        if (index < 0 || index >= this.views.length) {\n            throw new Error('Index out of bounds');\n        }\n        const viewItem = this.views[index];\n        return viewItem.visible;\n    }\n    setViewVisible(index, visible) {\n        if (index < 0 || index >= this.views.length) {\n            throw new Error('Index out of bounds');\n        }\n        toggleClass(this.container, 'visible', visible);\n        const viewItem = this.views[index];\n        toggleClass(this.container, 'visible', visible);\n        viewItem.setVisible(visible, viewItem.size);\n        this.distributeEmptySpace(index);\n        this.layoutViews();\n        this.saveProportions();\n    }\n    getViewSize(index) {\n        if (index < 0 || index >= this.views.length) {\n            return -1;\n        }\n        return this.views[index].size;\n    }\n    resizeView(index, size) {\n        if (index < 0 || index >= this.views.length) {\n            return;\n        }\n        const indexes = range(this.views.length).filter((i) => i !== index);\n        const lowPriorityIndexes = [\n            ...indexes.filter((i) => this.views[i].priority === LayoutPriority.Low),\n            index,\n        ];\n        const highPriorityIndexes = indexes.filter((i) => this.views[i].priority === LayoutPriority.High);\n        const item = this.views[index];\n        size = Math.round(size);\n        size = clamp(size, item.minimumSize, Math.min(item.maximumSize, this._size));\n        item.size = size;\n        this.relayout(lowPriorityIndexes, highPriorityIndexes);\n    }\n    getViews() {\n        return this.views.map((x) => x.view);\n    }\n    onDidChange(item, size) {\n        const index = this.views.indexOf(item);\n        if (index < 0 || index >= this.views.length) {\n            return;\n        }\n        size = typeof size === 'number' ? size : item.size;\n        size = clamp(size, item.minimumSize, item.maximumSize);\n        item.size = size;\n        this.relayout([index]);\n    }\n    addView(view, size = { type: 'distribute' }, index = this.views.length, skipLayout) {\n        const container = document.createElement('div');\n        container.className = 'view';\n        container.appendChild(view.element);\n        let viewSize;\n        if (typeof size === 'number') {\n            viewSize = size;\n        }\n        else if (size.type === 'split') {\n            viewSize = this.getViewSize(size.index) / 2;\n        }\n        else if (size.type === 'invisible') {\n            viewSize = { cachedVisibleSize: size.cachedVisibleSize };\n        }\n        else {\n            viewSize = view.minimumSize;\n        }\n        const disposable = view.onDidChange((newSize) => this.onDidChange(viewItem, newSize.size));\n        const dispose = () => {\n            disposable === null || disposable === void 0 ? void 0 : disposable.dispose();\n            this.viewContainer.removeChild(container);\n        };\n        const viewItem = new ViewItem(container, view, viewSize, { dispose });\n        if (index === this.views.length) {\n            this.viewContainer.appendChild(container);\n        }\n        else {\n            this.viewContainer.insertBefore(container, this.viewContainer.children.item(index));\n        }\n        this.views.splice(index, 0, viewItem);\n        if (this.views.length > 1) {\n            //add sash\n            const sash = document.createElement('div');\n            sash.className = 'sash';\n            const onStart = (event) => {\n                for (const item of this.views) {\n                    item.enabled = false;\n                }\n                const iframes = [\n                    ...getElementsByTagName('iframe'),\n                    ...getElementsByTagName('webview'),\n                ];\n                for (const iframe of iframes) {\n                    iframe.style.pointerEvents = 'none';\n                }\n                const start = this._orientation === Orientation.HORIZONTAL\n                    ? event.clientX\n                    : event.clientY;\n                const sashIndex = firstIndex(this.sashes, (s) => s.container === sash);\n                //\n                const sizes = this.views.map((x) => x.size);\n                //\n                let snapBefore;\n                let snapAfter;\n                const upIndexes = range(sashIndex, -1);\n                const downIndexes = range(sashIndex + 1, this.views.length);\n                const minDeltaUp = upIndexes.reduce((r, i) => r + (this.views[i].minimumSize - sizes[i]), 0);\n                const maxDeltaUp = upIndexes.reduce((r, i) => r + (this.views[i].viewMaximumSize - sizes[i]), 0);\n                const maxDeltaDown = downIndexes.length === 0\n                    ? Number.POSITIVE_INFINITY\n                    : downIndexes.reduce((r, i) => r + (sizes[i] - this.views[i].minimumSize), 0);\n                const minDeltaDown = downIndexes.length === 0\n                    ? Number.NEGATIVE_INFINITY\n                    : downIndexes.reduce((r, i) => r +\n                        (sizes[i] - this.views[i].viewMaximumSize), 0);\n                const minDelta = Math.max(minDeltaUp, minDeltaDown);\n                const maxDelta = Math.min(maxDeltaDown, maxDeltaUp);\n                const snapBeforeIndex = this.findFirstSnapIndex(upIndexes);\n                const snapAfterIndex = this.findFirstSnapIndex(downIndexes);\n                if (typeof snapBeforeIndex === 'number') {\n                    const snappedViewItem = this.views[snapBeforeIndex];\n                    const halfSize = Math.floor(snappedViewItem.viewMinimumSize / 2);\n                    snapBefore = {\n                        index: snapBeforeIndex,\n                        limitDelta: snappedViewItem.visible\n                            ? minDelta - halfSize\n                            : minDelta + halfSize,\n                        size: snappedViewItem.size,\n                    };\n                }\n                if (typeof snapAfterIndex === 'number') {\n                    const snappedViewItem = this.views[snapAfterIndex];\n                    const halfSize = Math.floor(snappedViewItem.viewMinimumSize / 2);\n                    snapAfter = {\n                        index: snapAfterIndex,\n                        limitDelta: snappedViewItem.visible\n                            ? maxDelta + halfSize\n                            : maxDelta - halfSize,\n                        size: snappedViewItem.size,\n                    };\n                }\n                //\n                const mousemove = (mousemoveEvent) => {\n                    const current = this._orientation === Orientation.HORIZONTAL\n                        ? mousemoveEvent.clientX\n                        : mousemoveEvent.clientY;\n                    const delta = current - start;\n                    this.resize(sashIndex, delta, sizes, undefined, undefined, minDelta, maxDelta, snapBefore, snapAfter);\n                    this.distributeEmptySpace();\n                    this.layoutViews();\n                };\n                const end = () => {\n                    for (const item of this.views) {\n                        item.enabled = true;\n                    }\n                    for (const iframe of iframes) {\n                        iframe.style.pointerEvents = 'auto';\n                    }\n                    this.saveProportions();\n                    document.removeEventListener('mousemove', mousemove);\n                    document.removeEventListener('mouseup', end);\n                    document.removeEventListener('mouseend', end);\n                    this._onDidSashEnd.fire(undefined);\n                };\n                document.addEventListener('mousemove', mousemove);\n                document.addEventListener('mouseup', end);\n                document.addEventListener('mouseend', end);\n            };\n            sash.addEventListener('mousedown', onStart);\n            const sashItem = {\n                container: sash,\n                disposable: () => {\n                    sash.removeEventListener('mousedown', onStart);\n                    this.sashContainer.removeChild(sash);\n                },\n            };\n            this.sashContainer.appendChild(sash);\n            this.sashes.push(sashItem);\n        }\n        if (!skipLayout) {\n            this.relayout([index]);\n        }\n        if (!skipLayout &&\n            typeof size !== 'number' &&\n            size.type === 'distribute') {\n            this.distributeViewSizes();\n        }\n        this._onDidAddView.fire(view);\n    }\n    distributeViewSizes() {\n        const flexibleViewItems = [];\n        let flexibleSize = 0;\n        for (const item of this.views) {\n            if (item.maximumSize - item.minimumSize > 0) {\n                flexibleViewItems.push(item);\n                flexibleSize += item.size;\n            }\n        }\n        const size = Math.floor(flexibleSize / flexibleViewItems.length);\n        for (const item of flexibleViewItems) {\n            item.size = clamp(size, item.minimumSize, item.maximumSize);\n        }\n        const indexes = range(this.views.length);\n        const lowPriorityIndexes = indexes.filter((i) => this.views[i].priority === LayoutPriority.Low);\n        const highPriorityIndexes = indexes.filter((i) => this.views[i].priority === LayoutPriority.High);\n        this.relayout(lowPriorityIndexes, highPriorityIndexes);\n    }\n    removeView(index, sizing, skipLayout = false) {\n        // Remove view\n        const viewItem = this.views.splice(index, 1)[0];\n        viewItem.dispose();\n        // Remove sash\n        if (this.views.length >= 1) {\n            const sashIndex = Math.max(index - 1, 0);\n            const sashItem = this.sashes.splice(sashIndex, 1)[0];\n            sashItem.disposable();\n        }\n        if (!skipLayout) {\n            this.relayout();\n        }\n        if (sizing && sizing.type === 'distribute') {\n            this.distributeViewSizes();\n        }\n        this._onDidRemoveView.fire(viewItem.view);\n        return viewItem.view;\n    }\n    getViewCachedVisibleSize(index) {\n        if (index < 0 || index >= this.views.length) {\n            throw new Error('Index out of bounds');\n        }\n        const viewItem = this.views[index];\n        return viewItem.cachedVisibleSize;\n    }\n    moveView(from, to) {\n        const cachedVisibleSize = this.getViewCachedVisibleSize(from);\n        const sizing = typeof cachedVisibleSize === 'undefined'\n            ? this.getViewSize(from)\n            : Sizing.Invisible(cachedVisibleSize);\n        const view = this.removeView(from, undefined, true);\n        this.addView(view, sizing, to);\n    }\n    layout(size, orthogonalSize) {\n        const previousSize = Math.max(this.size, this.contentSize);\n        this.size = size;\n        this.orthogonalSize = orthogonalSize;\n        if (!this.proportions) {\n            const indexes = range(this.views.length);\n            const lowPriorityIndexes = indexes.filter((i) => this.views[i].priority === LayoutPriority.Low);\n            const highPriorityIndexes = indexes.filter((i) => this.views[i].priority === LayoutPriority.High);\n            this.resize(this.views.length - 1, size - previousSize, undefined, lowPriorityIndexes, highPriorityIndexes);\n        }\n        else {\n            for (let i = 0; i < this.views.length; i++) {\n                const item = this.views[i];\n                item.size = clamp(Math.round(this.proportions[i] * size), item.minimumSize, item.maximumSize);\n            }\n        }\n        this.distributeEmptySpace();\n        this.layoutViews();\n    }\n    relayout(lowPriorityIndexes, highPriorityIndexes) {\n        const contentSize = this.views.reduce((r, i) => r + i.size, 0);\n        this.resize(this.views.length - 1, this._size - contentSize, undefined, lowPriorityIndexes, highPriorityIndexes);\n        this.distributeEmptySpace();\n        this.layoutViews();\n        this.saveProportions();\n    }\n    distributeEmptySpace(lowPriorityIndex) {\n        const contentSize = this.views.reduce((r, i) => r + i.size, 0);\n        let emptyDelta = this.size - contentSize;\n        const indexes = range(this.views.length - 1, -1);\n        const lowPriorityIndexes = indexes.filter((i) => this.views[i].priority === LayoutPriority.Low);\n        const highPriorityIndexes = indexes.filter((i) => this.views[i].priority === LayoutPriority.High);\n        for (const index of highPriorityIndexes) {\n            pushToStart(indexes, index);\n        }\n        for (const index of lowPriorityIndexes) {\n            pushToEnd(indexes, index);\n        }\n        if (typeof lowPriorityIndex === 'number') {\n            pushToEnd(indexes, lowPriorityIndex);\n        }\n        for (let i = 0; emptyDelta !== 0 && i < indexes.length; i++) {\n            const item = this.views[indexes[i]];\n            const size = clamp(item.size + emptyDelta, item.minimumSize, item.maximumSize);\n            const viewDelta = size - item.size;\n            emptyDelta -= viewDelta;\n            item.size = size;\n        }\n    }\n    saveProportions() {\n        if (this.proportionalLayout && this.contentSize > 0) {\n            this._proportions = this.views.map((i) => i.size / this.contentSize);\n        }\n    }\n    layoutViews() {\n        this.contentSize = this.views.reduce((r, i) => r + i.size, 0);\n        let sum = 0;\n        const x = [];\n        this.updateSashEnablement();\n        for (let i = 0; i < this.views.length - 1; i++) {\n            sum += this.views[i].size;\n            x.push(sum);\n            const offset = Math.min(Math.max(0, sum - 2), this.size - 4);\n            if (this._orientation === Orientation.HORIZONTAL) {\n                this.sashes[i].container.style.left = `${offset}px`;\n                this.sashes[i].container.style.top = `0px`;\n            }\n            if (this._orientation === Orientation.VERTICAL) {\n                this.sashes[i].container.style.left = `0px`;\n                this.sashes[i].container.style.top = `${offset}px`;\n            }\n        }\n        this.views.forEach((view, i) => {\n            if (this._orientation === Orientation.HORIZONTAL) {\n                view.container.style.width = `${view.size}px`;\n                view.container.style.left = i == 0 ? '0px' : `${x[i - 1]}px`;\n                view.container.style.top = '';\n                view.container.style.height = '';\n            }\n            if (this._orientation === Orientation.VERTICAL) {\n                view.container.style.height = `${view.size}px`;\n                view.container.style.top = i == 0 ? '0px' : `${x[i - 1]}px`;\n                view.container.style.width = '';\n                view.container.style.left = '';\n            }\n            view.view.layout(view.size, this._orthogonalSize);\n        });\n    }\n    findFirstSnapIndex(indexes) {\n        // visible views first\n        for (const index of indexes) {\n            const viewItem = this.views[index];\n            if (!viewItem.visible) {\n                continue;\n            }\n            if (viewItem.snap) {\n                return index;\n            }\n        }\n        // then, hidden views\n        for (const index of indexes) {\n            const viewItem = this.views[index];\n            if (viewItem.visible &&\n                viewItem.maximumSize - viewItem.minimumSize > 0) {\n                return undefined;\n            }\n            if (!viewItem.visible && viewItem.snap) {\n                return index;\n            }\n        }\n        return undefined;\n    }\n    updateSashEnablement() {\n        let previous = false;\n        const collapsesDown = this.views.map((i) => (previous = i.size - i.minimumSize > 0 || previous));\n        previous = false;\n        const expandsDown = this.views.map((i) => (previous = i.maximumSize - i.size > 0 || previous));\n        const reverseViews = [...this.views].reverse();\n        previous = false;\n        const collapsesUp = reverseViews\n            .map((i) => (previous = i.size - i.minimumSize > 0 || previous))\n            .reverse();\n        previous = false;\n        const expandsUp = reverseViews\n            .map((i) => (previous = i.maximumSize - i.size > 0 || previous))\n            .reverse();\n        let position = 0;\n        for (let index = 0; index < this.sashes.length; index++) {\n            const sash = this.sashes[index];\n            const viewItem = this.views[index];\n            position += viewItem.size;\n            const min = !(collapsesDown[index] && expandsUp[index + 1]);\n            const max = !(expandsDown[index] && collapsesUp[index + 1]);\n            if (min && max) {\n                const upIndexes = range(index, -1);\n                const downIndexes = range(index + 1, this.views.length);\n                const snapBeforeIndex = this.findFirstSnapIndex(upIndexes);\n                const snapAfterIndex = this.findFirstSnapIndex(downIndexes);\n                const snappedBefore = typeof snapBeforeIndex === 'number' &&\n                    !this.views[snapBeforeIndex].visible;\n                const snappedAfter = typeof snapAfterIndex === 'number' &&\n                    !this.views[snapAfterIndex].visible;\n                if (snappedBefore &&\n                    collapsesUp[index] &&\n                    (position > 0 || this.startSnappingEnabled)) {\n                    this.updateSash(sash, SashState.MINIMUM);\n                }\n                else if (snappedAfter &&\n                    collapsesDown[index] &&\n                    (position < this.contentSize || this.endSnappingEnabled)) {\n                    this.updateSash(sash, SashState.MAXIMUM);\n                }\n                else {\n                    this.updateSash(sash, SashState.DISABLED);\n                }\n            }\n            else if (min && !max) {\n                this.updateSash(sash, SashState.MINIMUM);\n            }\n            else if (!min && max) {\n                this.updateSash(sash, SashState.MAXIMUM);\n            }\n            else {\n                this.updateSash(sash, SashState.ENABLED);\n            }\n        }\n    }\n    updateSash(sash, state) {\n        toggleClass(sash.container, 'disabled', state === SashState.DISABLED);\n        toggleClass(sash.container, 'enabled', state === SashState.ENABLED);\n        toggleClass(sash.container, 'maximum', state === SashState.MAXIMUM);\n        toggleClass(sash.container, 'minimum', state === SashState.MINIMUM);\n    }\n    createViewContainer() {\n        const element = document.createElement('div');\n        element.className = 'view-container';\n        return element;\n    }\n    createSashContainer() {\n        const element = document.createElement('div');\n        element.className = 'sash-container';\n        return element;\n    }\n    createContainer() {\n        const element = document.createElement('div');\n        const orientationClassname = this._orientation === Orientation.HORIZONTAL\n            ? 'horizontal'\n            : 'vertical';\n        element.className = `split-view-container ${orientationClassname}`;\n        return element;\n    }\n    dispose() {\n        this._onDidSashEnd.dispose();\n        this._onDidAddView.dispose();\n        this._onDidRemoveView.dispose();\n        for (let i = 0; i < this.element.children.length; i++) {\n            if (this.element.children.item(i) === this.element) {\n                this.element.removeChild(this.element);\n                break;\n            }\n        }\n        this.element.remove();\n    }\n}\n","import { Splitview, Orientation, } from '../splitview/splitview';\nimport { CompositeDisposable } from '../lifecycle';\nimport { Emitter } from '../events';\nimport { addClasses, removeClasses } from '../dom';\nexport class Paneview extends CompositeDisposable {\n    get onDidAddView() {\n        return this.splitview.onDidAddView;\n    }\n    get onDidRemoveView() {\n        return this.splitview.onDidRemoveView;\n    }\n    get minimumSize() {\n        return this.splitview.minimumSize;\n    }\n    get maximumSize() {\n        return this.splitview.maximumSize;\n    }\n    get orientation() {\n        return this.splitview.orientation;\n    }\n    get size() {\n        return this.splitview.size;\n    }\n    get orthogonalSize() {\n        return this.splitview.orthogonalSize;\n    }\n    constructor(container, options) {\n        var _a;\n        super();\n        this.paneItems = [];\n        this.skipAnimation = false;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._orientation = (_a = options.orientation) !== null && _a !== void 0 ? _a : Orientation.VERTICAL;\n        this.element = document.createElement('div');\n        this.element.className = 'pane-container';\n        container.appendChild(this.element);\n        this.splitview = new Splitview(this.element, {\n            orientation: this._orientation,\n            proportionalLayout: false,\n            descriptor: options.descriptor,\n        });\n        // if we've added views from the descriptor we need to\n        // add the panes to our Pane array and setup animation\n        this.getPanes().forEach((pane) => {\n            const disposable = new CompositeDisposable(pane.onDidChangeExpansionState(() => {\n                this.setupAnimation();\n                this._onDidChange.fire(undefined);\n            }));\n            const paneItem = {\n                pane,\n                disposable: {\n                    dispose: () => {\n                        disposable.dispose();\n                    },\n                },\n            };\n            this.paneItems.push(paneItem);\n            pane.orthogonalSize = this.splitview.orthogonalSize;\n        });\n        this.addDisposables(this._onDidChange, this.splitview.onDidSashEnd(() => {\n            this._onDidChange.fire(undefined);\n        }), this.splitview.onDidAddView(() => {\n            this._onDidChange.fire();\n        }), this.splitview.onDidRemoveView(() => {\n            this._onDidChange.fire();\n        }));\n    }\n    addPane(pane, size, index = this.splitview.length, skipLayout = false) {\n        const disposable = pane.onDidChangeExpansionState(() => {\n            this.setupAnimation();\n            this._onDidChange.fire(undefined);\n        });\n        const paneItem = {\n            pane,\n            disposable: {\n                dispose: () => {\n                    disposable.dispose();\n                },\n            },\n        };\n        this.paneItems.splice(index, 0, paneItem);\n        pane.orthogonalSize = this.splitview.orthogonalSize;\n        this.splitview.addView(pane, size, index, skipLayout);\n    }\n    getViewSize(index) {\n        return this.splitview.getViewSize(index);\n    }\n    getPanes() {\n        return this.splitview.getViews();\n    }\n    removePane(index, options = { skipDispose: false }) {\n        const paneItem = this.paneItems.splice(index, 1)[0];\n        this.splitview.removeView(index);\n        if (!options.skipDispose) {\n            paneItem.disposable.dispose();\n            paneItem.pane.dispose();\n        }\n        return paneItem;\n    }\n    moveView(from, to) {\n        if (from === to) {\n            return;\n        }\n        const view = this.removePane(from, { skipDispose: true });\n        this.skipAnimation = true;\n        try {\n            this.addPane(view.pane, view.pane.size, to, false);\n        }\n        finally {\n            this.skipAnimation = false;\n        }\n    }\n    layout(size, orthogonalSize) {\n        this.splitview.layout(size, orthogonalSize);\n    }\n    setupAnimation() {\n        if (this.skipAnimation) {\n            return;\n        }\n        if (this.animationTimer) {\n            clearTimeout(this.animationTimer);\n            this.animationTimer = undefined;\n        }\n        addClasses(this.element, 'animated');\n        this.animationTimer = setTimeout(() => {\n            this.animationTimer = undefined;\n            removeClasses(this.element, 'animated');\n        }, 200);\n    }\n    dispose() {\n        super.dispose();\n        if (this.animationTimer) {\n            clearTimeout(this.animationTimer);\n            this.animationTimer = undefined;\n        }\n        this.paneItems.forEach((paneItem) => {\n            paneItem.disposable.dispose();\n            paneItem.pane.dispose();\n        });\n        this.paneItems = [];\n        this.splitview.dispose();\n        this.element.remove();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/grid\n *--------------------------------------------------------------------------------------------*/\nimport { Orientation } from '../splitview/splitview';\nimport { Emitter } from '../events';\nexport class LeafNode {\n    get minimumWidth() {\n        return this.view.minimumWidth;\n    }\n    get maximumWidth() {\n        return this.view.maximumWidth;\n    }\n    get minimumHeight() {\n        return this.view.minimumHeight;\n    }\n    get maximumHeight() {\n        return this.view.maximumHeight;\n    }\n    get priority() {\n        return this.view.priority;\n    }\n    get snap() {\n        return this.view.snap;\n    }\n    get minimumSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumHeight\n            : this.minimumWidth;\n    }\n    get maximumSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumHeight\n            : this.maximumWidth;\n    }\n    get minimumOrthogonalSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumWidth\n            : this.minimumHeight;\n    }\n    get maximumOrthogonalSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumWidth\n            : this.maximumHeight;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    get size() {\n        return this._size;\n    }\n    get element() {\n        return this.view.element;\n    }\n    get width() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.orthogonalSize\n            : this.size;\n    }\n    get height() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.size\n            : this.orthogonalSize;\n    }\n    constructor(view, orientation, orthogonalSize, size = 0) {\n        this.view = view;\n        this.orientation = orientation;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._orthogonalSize = orthogonalSize;\n        this._size = size;\n        this._disposable = this.view.onDidChange((event) => {\n            if (event) {\n                this._onDidChange.fire({\n                    size: this.orientation === Orientation.VERTICAL\n                        ? event.width\n                        : event.height,\n                    orthogonalSize: this.orientation === Orientation.VERTICAL\n                        ? event.height\n                        : event.width,\n                });\n            }\n            else {\n                this._onDidChange.fire({});\n            }\n        });\n    }\n    setVisible(visible) {\n        if (this.view.setVisible) {\n            this.view.setVisible(visible);\n            this._onDidChange.fire({});\n        }\n    }\n    layout(size, orthogonalSize) {\n        this._size = size;\n        this._orthogonalSize = orthogonalSize;\n        this.view.layout(this.width, this.height);\n    }\n    dispose() {\n        this._onDidChange.dispose();\n        this._disposable.dispose();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/grid\n *--------------------------------------------------------------------------------------------*/\nimport { Splitview, Orientation, LayoutPriority, } from '../splitview/splitview';\nimport { Emitter, Event } from '../events';\nimport { LeafNode } from './leafNode';\nimport { CompositeDisposable, Disposable } from '../lifecycle';\nexport class BranchNode extends CompositeDisposable {\n    get width() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.size\n            : this.orthogonalSize;\n    }\n    get height() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.orthogonalSize\n            : this.size;\n    }\n    get minimumSize() {\n        return this.children.length === 0\n            ? 0\n            : Math.max(...this.children.map((c) => c.minimumOrthogonalSize));\n    }\n    get maximumSize() {\n        return Math.min(...this.children.map((c) => c.maximumOrthogonalSize));\n    }\n    get minimumOrthogonalSize() {\n        return this.splitview.minimumSize;\n    }\n    get maximumOrthogonalSize() {\n        return this.splitview.maximumSize;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    get size() {\n        return this._size;\n    }\n    get minimumWidth() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumOrthogonalSize\n            : this.minimumSize;\n    }\n    get minimumHeight() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumSize\n            : this.minimumOrthogonalSize;\n    }\n    get maximumWidth() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumOrthogonalSize\n            : this.maximumSize;\n    }\n    get maximumHeight() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumSize\n            : this.maximumOrthogonalSize;\n    }\n    get priority() {\n        if (this.children.length === 0) {\n            return LayoutPriority.Normal;\n        }\n        const priorities = this.children.map((c) => typeof c.priority === 'undefined'\n            ? LayoutPriority.Normal\n            : c.priority);\n        if (priorities.some((p) => p === LayoutPriority.High)) {\n            return LayoutPriority.High;\n        }\n        else if (priorities.some((p) => p === LayoutPriority.Low)) {\n            return LayoutPriority.Low;\n        }\n        return LayoutPriority.Normal;\n    }\n    constructor(orientation, proportionalLayout, styles, size, orthogonalSize, childDescriptors) {\n        super();\n        this.orientation = orientation;\n        this.proportionalLayout = proportionalLayout;\n        this.styles = styles;\n        this._childrenDisposable = Disposable.NONE;\n        this.children = [];\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._orthogonalSize = orthogonalSize;\n        this._size = size;\n        this.element = document.createElement('div');\n        this.element.className = 'branch-node';\n        if (!childDescriptors) {\n            this.splitview = new Splitview(this.element, {\n                orientation: this.orientation,\n                proportionalLayout,\n                styles,\n            });\n            this.splitview.layout(this.size, this.orthogonalSize);\n        }\n        else {\n            const descriptor = {\n                views: childDescriptors.map((childDescriptor) => {\n                    return {\n                        view: childDescriptor.node,\n                        size: childDescriptor.node.size,\n                        visible: childDescriptor.node instanceof LeafNode &&\n                            childDescriptor.visible !== undefined\n                            ? childDescriptor.visible\n                            : true,\n                    };\n                }),\n                size: this.size,\n            };\n            this.children = childDescriptors.map((c) => c.node);\n            this.splitview = new Splitview(this.element, {\n                orientation: this.orientation,\n                descriptor,\n                proportionalLayout,\n            });\n        }\n        this.addDisposables(this._onDidChange, this.splitview.onDidSashEnd(() => {\n            this._onDidChange.fire({});\n        }));\n        this.setupChildrenEvents();\n    }\n    setVisible(visible) {\n        for (const child of this.children) {\n            child.setVisible(visible);\n        }\n    }\n    isChildVisible(index) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        return this.splitview.isViewVisible(index);\n    }\n    setChildVisible(index, visible) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        if (this.splitview.isViewVisible(index) === visible) {\n            return;\n        }\n        this.splitview.setViewVisible(index, visible);\n    }\n    moveChild(from, to) {\n        if (from === to) {\n            return;\n        }\n        if (from < 0 || from >= this.children.length) {\n            throw new Error('Invalid from index');\n        }\n        if (from < to) {\n            to--;\n        }\n        this.splitview.moveView(from, to);\n        const child = this._removeChild(from);\n        this._addChild(child, to);\n    }\n    getChildSize(index) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        return this.splitview.getViewSize(index);\n    }\n    resizeChild(index, size) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        this.splitview.resizeView(index, size);\n    }\n    layout(size, orthogonalSize) {\n        this._size = orthogonalSize;\n        this._orthogonalSize = size;\n        this.splitview.layout(this.size, this.orthogonalSize);\n    }\n    addChild(node, size, index, skipLayout) {\n        if (index < 0 || index > this.children.length) {\n            throw new Error('Invalid index');\n        }\n        this.splitview.addView(node, size, index, skipLayout);\n        this._addChild(node, index);\n    }\n    getChildCachedVisibleSize(index) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        return this.splitview.getViewCachedVisibleSize(index);\n    }\n    removeChild(index, sizing) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        this.splitview.removeView(index, sizing);\n        this._removeChild(index);\n    }\n    _addChild(node, index) {\n        this.children.splice(index, 0, node);\n        this.setupChildrenEvents();\n    }\n    _removeChild(index) {\n        const [child] = this.children.splice(index, 1);\n        this.setupChildrenEvents();\n        return child;\n    }\n    setupChildrenEvents() {\n        this._childrenDisposable.dispose();\n        this._childrenDisposable = Event.any(...this.children.map((c) => c.onDidChange))((e) => {\n            /**\n             * indicate a change has occured to allows any re-rendering but don't bubble\n             * event because that was specific to this branch\n             */\n            this._onDidChange.fire({ size: e.orthogonalSize });\n        });\n    }\n    dispose() {\n        super.dispose();\n        this._childrenDisposable.dispose();\n        this.children.forEach((child) => child.dispose());\n        this.splitview.dispose();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/grid\n *--------------------------------------------------------------------------------------------*/\nimport { Orientation, Sizing, } from '../splitview/splitview';\nimport { tail } from '../array';\nimport { LeafNode } from './leafNode';\nimport { BranchNode } from './branchNode';\nimport { Emitter } from '../events';\nimport { MutableDisposable } from '../lifecycle';\nfunction findLeaf(candiateNode, last) {\n    if (candiateNode instanceof LeafNode) {\n        return candiateNode;\n    }\n    if (candiateNode instanceof BranchNode) {\n        return findLeaf(candiateNode.children[last ? candiateNode.children.length - 1 : 0], last);\n    }\n    throw new Error('invalid node');\n}\nfunction flipNode(node, size, orthogonalSize) {\n    if (node instanceof BranchNode) {\n        const result = new BranchNode(orthogonal(node.orientation), node.proportionalLayout, node.styles, size, orthogonalSize);\n        let totalSize = 0;\n        for (let i = node.children.length - 1; i >= 0; i--) {\n            const child = node.children[i];\n            const childSize = child instanceof BranchNode ? child.orthogonalSize : child.size;\n            let newSize = node.size === 0\n                ? 0\n                : Math.round((size * childSize) / node.size);\n            totalSize += newSize;\n            // The last view to add should adjust to rounding errors\n            if (i === 0) {\n                newSize += size - totalSize;\n            }\n            result.addChild(flipNode(child, orthogonalSize, newSize), newSize, 0, true);\n        }\n        return result;\n    }\n    else {\n        return new LeafNode(node.view, orthogonal(node.orientation), orthogonalSize);\n    }\n}\nexport function indexInParent(element) {\n    const parentElement = element.parentElement;\n    if (!parentElement) {\n        throw new Error('Invalid grid element');\n    }\n    let el = parentElement.firstElementChild;\n    let index = 0;\n    while (el !== element && el !== parentElement.lastElementChild && el) {\n        el = el.nextElementSibling;\n        index++;\n    }\n    return index;\n}\n/**\n * Find the grid location of a specific DOM element by traversing the parent\n * chain and finding each child index on the way.\n *\n * This will break as soon as DOM structures of the Splitview or Gridview change.\n */\nexport function getGridLocation(element) {\n    const parentElement = element.parentElement;\n    if (!parentElement) {\n        throw new Error('Invalid grid element');\n    }\n    if (/\\bgrid-view\\b/.test(parentElement.className)) {\n        return [];\n    }\n    const index = indexInParent(parentElement);\n    const ancestor = parentElement.parentElement.parentElement.parentElement;\n    return [...getGridLocation(ancestor), index];\n}\nexport function getRelativeLocation(rootOrientation, location, direction) {\n    const orientation = getLocationOrientation(rootOrientation, location);\n    const directionOrientation = getDirectionOrientation(direction);\n    if (orientation === directionOrientation) {\n        const [rest, _index] = tail(location);\n        let index = _index;\n        if (direction === 'right' || direction === 'bottom') {\n            index += 1;\n        }\n        return [...rest, index];\n    }\n    else {\n        const index = direction === 'right' || direction === 'bottom' ? 1 : 0;\n        return [...location, index];\n    }\n}\nexport function getDirectionOrientation(direction) {\n    return direction === 'top' || direction === 'bottom'\n        ? Orientation.VERTICAL\n        : Orientation.HORIZONTAL;\n}\nexport function getLocationOrientation(rootOrientation, location) {\n    return location.length % 2 === 0\n        ? orthogonal(rootOrientation)\n        : rootOrientation;\n}\nexport const orthogonal = (orientation) => orientation === Orientation.HORIZONTAL\n    ? Orientation.VERTICAL\n    : Orientation.HORIZONTAL;\nexport function isGridBranchNode(node) {\n    return !!node.children;\n}\nconst serializeBranchNode = (node, orientation) => {\n    const size = orientation === Orientation.VERTICAL ? node.box.width : node.box.height;\n    if (!isGridBranchNode(node)) {\n        if (typeof node.cachedVisibleSize === 'number') {\n            return {\n                type: 'leaf',\n                data: node.view.toJSON(),\n                size: node.cachedVisibleSize,\n                visible: false,\n            };\n        }\n        return { type: 'leaf', data: node.view.toJSON(), size };\n    }\n    return {\n        type: 'branch',\n        data: node.children.map((c) => serializeBranchNode(c, orthogonal(orientation))),\n        size,\n    };\n};\nexport class Gridview {\n    get length() {\n        return this._root ? this._root.children.length : 0;\n    }\n    get orientation() {\n        return this.root.orientation;\n    }\n    set orientation(orientation) {\n        if (this.root.orientation === orientation) {\n            return;\n        }\n        const { size, orthogonalSize } = this.root;\n        this.root = flipNode(this.root, orthogonalSize, size);\n        this.root.layout(size, orthogonalSize);\n    }\n    get width() {\n        return this.root.width;\n    }\n    get height() {\n        return this.root.height;\n    }\n    get minimumWidth() {\n        return this.root.minimumWidth;\n    }\n    get minimumHeight() {\n        return this.root.minimumHeight;\n    }\n    get maximumWidth() {\n        return this.root.maximumHeight;\n    }\n    get maximumHeight() {\n        return this.root.maximumHeight;\n    }\n    serialize() {\n        const root = serializeBranchNode(this.getView(), this.orientation);\n        return {\n            root,\n            width: this.width,\n            height: this.height,\n            orientation: this.orientation,\n        };\n    }\n    dispose() {\n        this.disposable.dispose();\n        this._onDidChange.dispose();\n        this.root.dispose();\n        this.element.remove();\n    }\n    clear() {\n        const orientation = this.root.orientation;\n        this.root = new BranchNode(orientation, this.proportionalLayout, this.styles, this.root.size, this.root.orthogonalSize);\n    }\n    deserialize(json, deserializer) {\n        const orientation = json.orientation;\n        const height = orientation === Orientation.VERTICAL ? json.height : json.width;\n        this._deserialize(json.root, orientation, deserializer, height);\n    }\n    _deserialize(root, orientation, deserializer, orthogonalSize) {\n        this.root = this._deserializeNode(root, orientation, deserializer, orthogonalSize, true);\n    }\n    _deserializeNode(node, orientation, deserializer, orthogonalSize, isRoot = false) {\n        let result;\n        if (node.type === 'branch') {\n            const serializedChildren = node.data;\n            const children = serializedChildren.map((serializedChild) => {\n                return {\n                    node: this._deserializeNode(serializedChild, orthogonal(orientation), deserializer, node.size),\n                    visible: serializedChild.visible,\n                };\n            });\n            // HORIZONTAL => height=orthogonalsize width=size\n            // VERTICAL => height=size width=orthogonalsize\n            result = new BranchNode(orientation, this.proportionalLayout, this.styles, isRoot ? orthogonalSize : node.size, isRoot ? node.size : orthogonalSize, children);\n        }\n        else {\n            result = new LeafNode(deserializer.fromJSON(node), orientation, orthogonalSize, node.size);\n        }\n        return result;\n    }\n    get root() {\n        return this._root;\n    }\n    set root(root) {\n        const oldRoot = this._root;\n        if (oldRoot) {\n            oldRoot.dispose();\n            this.element.removeChild(oldRoot.element);\n        }\n        this._root = root;\n        this.element.appendChild(this._root.element);\n        this.disposable.value = this._root.onDidChange((e) => {\n            this._onDidChange.fire(e);\n        });\n    }\n    /**\n     * If the root is orientated as a VERTICAL node then nest the existing root within a new HORIZIONTAL root node\n     * If the root is orientated as a HORIZONTAL node then nest the existing root within a new VERITCAL root node\n     */\n    insertOrthogonalSplitviewAtRoot() {\n        if (!this._root) {\n            return;\n        }\n        const oldRoot = this.root;\n        oldRoot.element.remove();\n        this._root = new BranchNode(orthogonal(oldRoot.orientation), this.proportionalLayout, this.styles, this.root.orthogonalSize, this.root.size);\n        if (oldRoot.children.length === 1) {\n            // can remove one level of redundant branching if there is only a single child\n            const childReference = oldRoot.children[0];\n            oldRoot.removeChild(0); // remove to prevent disposal when disposing of unwanted root\n            oldRoot.dispose();\n            this._root.addChild(childReference, Sizing.Distribute, 0);\n        }\n        else {\n            this._root.addChild(oldRoot, Sizing.Distribute, 0);\n        }\n        this.element.appendChild(this._root.element);\n        this.disposable.value = this._root.onDidChange((e) => {\n            this._onDidChange.fire(e);\n        });\n    }\n    next(location) {\n        return this.progmaticSelect(location);\n    }\n    previous(location) {\n        return this.progmaticSelect(location, true);\n    }\n    getView(location) {\n        const node = location ? this.getNode(location)[1] : this.root;\n        return this._getViews(node, this.orientation);\n    }\n    _getViews(node, orientation, cachedVisibleSize) {\n        const box = { height: node.height, width: node.width };\n        if (node instanceof LeafNode) {\n            return { box, view: node.view, cachedVisibleSize };\n        }\n        const children = [];\n        for (let i = 0; i < node.children.length; i++) {\n            const child = node.children[i];\n            const nodeCachedVisibleSize = node.getChildCachedVisibleSize(i);\n            children.push(this._getViews(child, orthogonal(orientation), nodeCachedVisibleSize));\n        }\n        return { box, children };\n    }\n    progmaticSelect(location, reverse = false) {\n        const [path, node] = this.getNode(location);\n        if (!(node instanceof LeafNode)) {\n            throw new Error('invalid location');\n        }\n        for (let i = path.length - 1; i > -1; i--) {\n            const n = path[i];\n            const l = location[i] || 0;\n            const canProgressInCurrentLevel = reverse\n                ? l - 1 > -1\n                : l + 1 < n.children.length;\n            if (canProgressInCurrentLevel) {\n                return findLeaf(n.children[reverse ? l - 1 : l + 1], reverse);\n            }\n        }\n        return findLeaf(this.root, reverse);\n    }\n    constructor(proportionalLayout, styles, orientation) {\n        this.proportionalLayout = proportionalLayout;\n        this.styles = styles;\n        this.disposable = new MutableDisposable();\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this.element = document.createElement('div');\n        this.element.className = 'grid-view';\n        this.root = new BranchNode(orientation, proportionalLayout, styles, 0, 0);\n    }\n    isViewVisible(location) {\n        const [rest, index] = tail(location);\n        const [, parent] = this.getNode(rest);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid from location');\n        }\n        return parent.isChildVisible(index);\n    }\n    setViewVisible(location, visible) {\n        const [rest, index] = tail(location);\n        const [, parent] = this.getNode(rest);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid from location');\n        }\n        parent.setChildVisible(index, visible);\n    }\n    moveView(parentLocation, from, to) {\n        const [, parent] = this.getNode(parentLocation);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid location');\n        }\n        parent.moveChild(from, to);\n    }\n    addView(view, size, location) {\n        const [rest, index] = tail(location);\n        const [pathToParent, parent] = this.getNode(rest);\n        if (parent instanceof BranchNode) {\n            const node = new LeafNode(view, orthogonal(parent.orientation), parent.orthogonalSize);\n            parent.addChild(node, size, index);\n        }\n        else {\n            const [grandParent, ..._] = [...pathToParent].reverse();\n            const [parentIndex, ...__] = [...rest].reverse();\n            let newSiblingSize = 0;\n            const newSiblingCachedVisibleSize = grandParent.getChildCachedVisibleSize(parentIndex);\n            if (typeof newSiblingCachedVisibleSize === 'number') {\n                newSiblingSize = Sizing.Invisible(newSiblingCachedVisibleSize);\n            }\n            grandParent.removeChild(parentIndex);\n            const newParent = new BranchNode(parent.orientation, this.proportionalLayout, this.styles, parent.size, parent.orthogonalSize);\n            grandParent.addChild(newParent, parent.size, parentIndex);\n            const newSibling = new LeafNode(parent.view, grandParent.orientation, parent.size);\n            newParent.addChild(newSibling, newSiblingSize, 0);\n            if (typeof size !== 'number' && size.type === 'split') {\n                size = { type: 'split', index: 0 };\n            }\n            const node = new LeafNode(view, grandParent.orientation, parent.size);\n            newParent.addChild(node, size, index);\n        }\n    }\n    remove(view, sizing) {\n        const location = getGridLocation(view.element);\n        return this.removeView(location, sizing);\n    }\n    removeView(location, sizing) {\n        const [rest, index] = tail(location);\n        const [pathToParent, parent] = this.getNode(rest);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid location');\n        }\n        const node = parent.children[index];\n        if (!(node instanceof LeafNode)) {\n            throw new Error('Invalid location');\n        }\n        parent.removeChild(index, sizing);\n        if (parent.children.length === 0) {\n            return node.view;\n        }\n        if (parent.children.length > 1) {\n            return node.view;\n        }\n        const sibling = parent.children[0];\n        if (pathToParent.length === 0) {\n            // parent is root\n            if (sibling instanceof LeafNode) {\n                return node.view;\n            }\n            // we must promote sibling to be the new root\n            parent.removeChild(0, sizing);\n            this.root = sibling;\n            return node.view;\n        }\n        const [grandParent, ..._] = [...pathToParent].reverse();\n        const [parentIndex, ...__] = [...rest].reverse();\n        const isSiblingVisible = parent.isChildVisible(0);\n        parent.removeChild(0, sizing);\n        const sizes = grandParent.children.map((_size, i) => grandParent.getChildSize(i));\n        grandParent.removeChild(parentIndex, sizing);\n        if (sibling instanceof BranchNode) {\n            sizes.splice(parentIndex, 1, ...sibling.children.map((c) => c.size));\n            for (let i = 0; i < sibling.children.length; i++) {\n                const child = sibling.children[i];\n                grandParent.addChild(child, child.size, parentIndex + i);\n            }\n        }\n        else {\n            const newSibling = new LeafNode(sibling.view, orthogonal(sibling.orientation), sibling.size);\n            const siblingSizing = isSiblingVisible\n                ? sibling.orthogonalSize\n                : Sizing.Invisible(sibling.orthogonalSize);\n            grandParent.addChild(newSibling, siblingSizing, parentIndex);\n        }\n        for (let i = 0; i < sizes.length; i++) {\n            grandParent.resizeChild(i, sizes[i]);\n        }\n        return node.view;\n    }\n    layout(width, height) {\n        const [size, orthogonalSize] = this.root.orientation === Orientation.HORIZONTAL\n            ? [height, width]\n            : [width, height];\n        this.root.layout(size, orthogonalSize);\n    }\n    getNode(location, node = this.root, path = []) {\n        if (location.length === 0) {\n            return [path, node];\n        }\n        if (!(node instanceof BranchNode)) {\n            throw new Error('Invalid location');\n        }\n        const [index, ...rest] = location;\n        if (index < 0 || index >= node.children.length) {\n            throw new Error('Invalid location');\n        }\n        const child = node.children[index];\n        path.push(node);\n        return this.getNode(rest, child, path);\n    }\n}\n","import { Emitter } from '../events';\nexport class SplitviewApi {\n    get minimumSize() {\n        return this.component.minimumSize;\n    }\n    get maximumSize() {\n        return this.component.maximumSize;\n    }\n    get height() {\n        return this.component.height;\n    }\n    get width() {\n        return this.component.width;\n    }\n    get length() {\n        return this.component.length;\n    }\n    get orientation() {\n        return this.component.orientation;\n    }\n    get panels() {\n        return this.component.panels;\n    }\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    get onDidAddView() {\n        return this.component.onDidAddView;\n    }\n    get onDidRemoveView() {\n        return this.component.onDidRemoveView;\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    updateOptions(options) {\n        this.component.updateOptions(options);\n    }\n    removePanel(panel, sizing) {\n        this.component.removePanel(panel, sizing);\n    }\n    focus() {\n        this.component.focus();\n    }\n    getPanel(id) {\n        return this.component.getPanel(id);\n    }\n    layout(width, height) {\n        return this.component.layout(width, height);\n    }\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    movePanel(from, to) {\n        this.component.movePanel(from, to);\n    }\n    fromJSON(data) {\n        this.component.fromJSON(data);\n    }\n    toJSON() {\n        return this.component.toJSON();\n    }\n    clear() {\n        this.component.clear();\n    }\n}\nexport class PaneviewApi {\n    get minimumSize() {\n        return this.component.minimumSize;\n    }\n    get maximumSize() {\n        return this.component.maximumSize;\n    }\n    get height() {\n        return this.component.height;\n    }\n    get width() {\n        return this.component.width;\n    }\n    get panels() {\n        return this.component.panels;\n    }\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    get onDidAddView() {\n        return this.component.onDidAddView;\n    }\n    get onDidRemoveView() {\n        return this.component.onDidRemoveView;\n    }\n    get onDidDrop() {\n        const emitter = new Emitter();\n        const disposable = this.component.onDidDrop((e) => {\n            emitter.fire(Object.assign(Object.assign({}, e), { api: this }));\n        });\n        emitter.dispose = () => {\n            disposable.dispose();\n            emitter.dispose();\n        };\n        return emitter.event;\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    removePanel(panel) {\n        this.component.removePanel(panel);\n    }\n    getPanel(id) {\n        return this.component.getPanel(id);\n    }\n    movePanel(from, to) {\n        this.component.movePanel(from, to);\n    }\n    focus() {\n        this.component.focus();\n    }\n    layout(width, height) {\n        this.component.layout(width, height);\n    }\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    fromJSON(data) {\n        this.component.fromJSON(data);\n    }\n    toJSON() {\n        return this.component.toJSON();\n    }\n    clear() {\n        this.component.clear();\n    }\n}\nexport class GridviewApi {\n    get minimumHeight() {\n        return this.component.minimumHeight;\n    }\n    get maximumHeight() {\n        return this.component.maximumHeight;\n    }\n    get minimumWidth() {\n        return this.component.minimumWidth;\n    }\n    get maximumWidth() {\n        return this.component.maximumWidth;\n    }\n    get width() {\n        return this.component.width;\n    }\n    get height() {\n        return this.component.height;\n    }\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    get onDidAddPanel() {\n        return this.component.onDidAddGroup;\n    }\n    get onDidRemovePanel() {\n        return this.component.onDidRemoveGroup;\n    }\n    get onDidActivePanelChange() {\n        return this.component.onDidActiveGroupChange;\n    }\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    get panels() {\n        return this.component.groups;\n    }\n    get orientation() {\n        return this.component.orientation;\n    }\n    set orientation(value) {\n        this.component.updateOptions({ orientation: value });\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    focus() {\n        this.component.focus();\n    }\n    layout(width, height, force = false) {\n        this.component.layout(width, height, force);\n    }\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    removePanel(panel, sizing) {\n        this.component.removePanel(panel, sizing);\n    }\n    movePanel(panel, options) {\n        this.component.movePanel(panel, options);\n    }\n    getPanel(id) {\n        return this.component.getPanel(id);\n    }\n    fromJSON(data) {\n        return this.component.fromJSON(data);\n    }\n    toJSON() {\n        return this.component.toJSON();\n    }\n    clear() {\n        this.component.clear();\n    }\n}\nexport class DockviewApi {\n    get id() {\n        return this.component.id;\n    }\n    get width() {\n        return this.component.width;\n    }\n    get height() {\n        return this.component.height;\n    }\n    get minimumHeight() {\n        return this.component.minimumHeight;\n    }\n    get maximumHeight() {\n        return this.component.maximumHeight;\n    }\n    get minimumWidth() {\n        return this.component.minimumWidth;\n    }\n    get maximumWidth() {\n        return this.component.maximumWidth;\n    }\n    get size() {\n        return this.component.size;\n    }\n    get totalPanels() {\n        return this.component.totalPanels;\n    }\n    get onDidActiveGroupChange() {\n        return this.component.onDidActiveGroupChange;\n    }\n    get onDidAddGroup() {\n        return this.component.onDidAddGroup;\n    }\n    get onDidRemoveGroup() {\n        return this.component.onDidRemoveGroup;\n    }\n    get onDidActivePanelChange() {\n        return this.component.onDidActivePanelChange;\n    }\n    get onDidAddPanel() {\n        return this.component.onDidAddPanel;\n    }\n    get onDidRemovePanel() {\n        return this.component.onDidRemovePanel;\n    }\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    get onDidDrop() {\n        return this.component.onDidDrop;\n    }\n    get panels() {\n        return this.component.panels;\n    }\n    get groups() {\n        return this.component.groups;\n    }\n    get activePanel() {\n        return this.component.activePanel;\n    }\n    get activeGroup() {\n        return this.component.activeGroup;\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    getTabHeight() {\n        return this.component.tabHeight;\n    }\n    setTabHeight(height) {\n        this.component.tabHeight = height;\n    }\n    focus() {\n        this.component.focus();\n    }\n    getPanel(id) {\n        return this.component.getGroupPanel(id);\n    }\n    layout(width, height, force = false) {\n        this.component.layout(width, height, force);\n    }\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    addGroup(options) {\n        return this.component.addGroup(options);\n    }\n    moveToNext(options) {\n        this.component.moveToNext(options);\n    }\n    moveToPrevious(options) {\n        this.component.moveToPrevious(options);\n    }\n    closeAllGroups() {\n        return this.component.closeAllGroups();\n    }\n    removeGroup(group) {\n        this.component.removeGroup(group);\n    }\n    getGroup(id) {\n        return this.component.getPanel(id);\n    }\n    fromJSON(data) {\n        this.component.fromJSON(data);\n    }\n    toJSON() {\n        return this.component.toJSON();\n    }\n    clear() {\n        this.component.clear();\n    }\n}\n","import { addDisposableListener } from '../events';\nimport { CompositeDisposable } from '../lifecycle';\nexport class DragAndDropObserver extends CompositeDisposable {\n    constructor(element, callbacks) {\n        super();\n        this.element = element;\n        this.callbacks = callbacks;\n        this.target = null;\n        this.registerListeners();\n    }\n    registerListeners() {\n        this.addDisposables(addDisposableListener(this.element, 'dragenter', (e) => {\n            this.target = e.target;\n            this.callbacks.onDragEnter(e);\n        }, true));\n        this.addDisposables(addDisposableListener(this.element, 'dragover', (e) => {\n            e.preventDefault(); // needed so that the drop event fires (https://stackoverflow.com/questions/21339924/drop-event-not-firing-in-chrome)\n            if (this.callbacks.onDragOver) {\n                this.callbacks.onDragOver(e);\n            }\n        }, true));\n        this.addDisposables(addDisposableListener(this.element, 'dragleave', (e) => {\n            if (this.target === e.target) {\n                this.target = null;\n                this.callbacks.onDragLeave(e);\n            }\n        }));\n        this.addDisposables(addDisposableListener(this.element, 'dragend', (e) => {\n            this.target = null;\n            this.callbacks.onDragEnd(e);\n        }));\n        this.addDisposables(addDisposableListener(this.element, 'drop', (e) => {\n            this.callbacks.onDrop(e);\n        }));\n    }\n}\n","import { toggleClass } from '../dom';\nimport { Emitter } from '../events';\nimport { CompositeDisposable } from '../lifecycle';\nimport { DragAndDropObserver } from './dnd';\nimport { clamp } from '../math';\nfunction numberOrFallback(maybeNumber, fallback) {\n    return typeof maybeNumber === 'number' ? maybeNumber : fallback;\n}\nexport function directionToPosition(direction) {\n    switch (direction) {\n        case 'above':\n            return 'top';\n        case 'below':\n            return 'bottom';\n        case 'left':\n            return 'left';\n        case 'right':\n            return 'right';\n        case 'within':\n            return 'center';\n        default:\n            throw new Error(`invalid direction '${direction}'`);\n    }\n}\nexport function positionToDirection(position) {\n    switch (position) {\n        case 'top':\n            return 'above';\n        case 'bottom':\n            return 'below';\n        case 'left':\n            return 'left';\n        case 'right':\n            return 'right';\n        case 'center':\n            return 'within';\n        default:\n            throw new Error(`invalid position '${position}'`);\n    }\n}\nexport class Droptarget extends CompositeDisposable {\n    get state() {\n        return this._state;\n    }\n    constructor(element, options) {\n        super();\n        this.element = element;\n        this.options = options;\n        this._onDrop = new Emitter();\n        this.onDrop = this._onDrop.event;\n        // use a set to take advantage of #<set>.has\n        const acceptedTargetZonesSet = new Set(this.options.acceptedTargetZones);\n        this.addDisposables(this._onDrop, new DragAndDropObserver(this.element, {\n            onDragEnter: () => undefined,\n            onDragOver: (e) => {\n                const width = this.element.clientWidth;\n                const height = this.element.clientHeight;\n                if (width === 0 || height === 0) {\n                    return; // avoid div!0\n                }\n                const rect = e.currentTarget.getBoundingClientRect();\n                const x = e.clientX - rect.left;\n                const y = e.clientY - rect.top;\n                const quadrant = this.calculateQuadrant(acceptedTargetZonesSet, x, y, width, height);\n                if (quadrant === null) {\n                    // no drop target should be displayed\n                    this.removeDropTarget();\n                    return;\n                }\n                if (typeof this.options.canDisplayOverlay === 'boolean') {\n                    if (!this.options.canDisplayOverlay) {\n                        return;\n                    }\n                }\n                else if (!this.options.canDisplayOverlay(e, quadrant)) {\n                    return;\n                }\n                if (!this.target) {\n                    this.target = document.createElement('div');\n                    this.target.className = 'drop-target-dropzone';\n                    this.overlay = document.createElement('div');\n                    this.overlay.className = 'drop-target-selection';\n                    this._state = 'center';\n                    this.target.appendChild(this.overlay);\n                    this.element.classList.add('drop-target');\n                    this.element.append(this.target);\n                }\n                if (this.options.acceptedTargetZones.length === 0) {\n                    return;\n                }\n                if (!this.target || !this.overlay) {\n                    return;\n                }\n                this.toggleClasses(quadrant, width, height);\n                this.setState(quadrant);\n            },\n            onDragLeave: () => {\n                this.removeDropTarget();\n            },\n            onDragEnd: () => {\n                this.removeDropTarget();\n            },\n            onDrop: (e) => {\n                e.preventDefault();\n                e.stopPropagation();\n                const state = this._state;\n                this.removeDropTarget();\n                if (state) {\n                    this._onDrop.fire({ position: state, nativeEvent: e });\n                }\n            },\n        }));\n    }\n    dispose() {\n        this.removeDropTarget();\n    }\n    toggleClasses(quadrant, width, height) {\n        var _a, _b, _c, _d;\n        if (!this.overlay) {\n            return;\n        }\n        const isSmallX = width < 100;\n        const isSmallY = height < 100;\n        const isLeft = quadrant === 'left';\n        const isRight = quadrant === 'right';\n        const isTop = quadrant === 'top';\n        const isBottom = quadrant === 'bottom';\n        const rightClass = !isSmallX && isRight;\n        const leftClass = !isSmallX && isLeft;\n        const topClass = !isSmallY && isTop;\n        const bottomClass = !isSmallY && isBottom;\n        let size = 0.5;\n        if (((_b = (_a = this.options.overlayModel) === null || _a === void 0 ? void 0 : _a.size) === null || _b === void 0 ? void 0 : _b.type) === 'percentage') {\n            size = clamp(this.options.overlayModel.size.value, 0, 100) / 100;\n        }\n        if (((_d = (_c = this.options.overlayModel) === null || _c === void 0 ? void 0 : _c.size) === null || _d === void 0 ? void 0 : _d.type) === 'pixels') {\n            if (rightClass || leftClass) {\n                size =\n                    clamp(0, this.options.overlayModel.size.value, width) /\n                        width;\n            }\n            if (topClass || bottomClass) {\n                size =\n                    clamp(0, this.options.overlayModel.size.value, height) /\n                        height;\n            }\n        }\n        const translate = (1 - size) / 2;\n        const scale = size;\n        let transform;\n        if (rightClass) {\n            transform = `translateX(${100 * translate}%) scaleX(${scale})`;\n        }\n        else if (leftClass) {\n            transform = `translateX(-${100 * translate}%) scaleX(${scale})`;\n        }\n        else if (topClass) {\n            transform = `translateY(-${100 * translate}%) scaleY(${scale})`;\n        }\n        else if (bottomClass) {\n            transform = `translateY(${100 * translate}%) scaleY(${scale})`;\n        }\n        else {\n            transform = '';\n        }\n        this.overlay.style.transform = transform;\n        toggleClass(this.overlay, 'small-right', isSmallX && isRight);\n        toggleClass(this.overlay, 'small-left', isSmallX && isLeft);\n        toggleClass(this.overlay, 'small-top', isSmallY && isTop);\n        toggleClass(this.overlay, 'small-bottom', isSmallY && isBottom);\n    }\n    setState(quadrant) {\n        switch (quadrant) {\n            case 'top':\n                this._state = 'top';\n                break;\n            case 'left':\n                this._state = 'left';\n                break;\n            case 'bottom':\n                this._state = 'bottom';\n                break;\n            case 'right':\n                this._state = 'right';\n                break;\n            case 'center':\n                this._state = 'center';\n                break;\n        }\n    }\n    calculateQuadrant(overlayType, x, y, width, height) {\n        var _a, _b, _c, _d, _e, _f;\n        const isPercentage = ((_a = this.options.overlayModel) === null || _a === void 0 ? void 0 : _a.activationSize) === undefined ||\n            ((_c = (_b = this.options.overlayModel) === null || _b === void 0 ? void 0 : _b.activationSize) === null || _c === void 0 ? void 0 : _c.type) === 'percentage';\n        const value = numberOrFallback((_f = (_e = (_d = this.options) === null || _d === void 0 ? void 0 : _d.overlayModel) === null || _e === void 0 ? void 0 : _e.activationSize) === null || _f === void 0 ? void 0 : _f.value, 20);\n        if (isPercentage) {\n            return calculateQuadrantAsPercentage(overlayType, x, y, width, height, value);\n        }\n        return calculateQuadrantAsPixels(overlayType, x, y, width, height, value);\n    }\n    removeDropTarget() {\n        if (this.target) {\n            this._state = undefined;\n            this.element.removeChild(this.target);\n            this.target = undefined;\n            this.overlay = undefined;\n            this.element.classList.remove('drop-target');\n        }\n    }\n}\nexport function calculateQuadrantAsPercentage(overlayType, x, y, width, height, threshold) {\n    const xp = (100 * x) / width;\n    const yp = (100 * y) / height;\n    if (overlayType.has('left') && xp < threshold) {\n        return 'left';\n    }\n    if (overlayType.has('right') && xp > 100 - threshold) {\n        return 'right';\n    }\n    if (overlayType.has('top') && yp < threshold) {\n        return 'top';\n    }\n    if (overlayType.has('bottom') && yp > 100 - threshold) {\n        return 'bottom';\n    }\n    if (!overlayType.has('center')) {\n        return null;\n    }\n    return 'center';\n}\nexport function calculateQuadrantAsPixels(overlayType, x, y, width, height, threshold) {\n    if (overlayType.has('left') && x < threshold) {\n        return 'left';\n    }\n    if (overlayType.has('right') && x > width - threshold) {\n        return 'right';\n    }\n    if (overlayType.has('top') && y < threshold) {\n        return 'top';\n    }\n    if (overlayType.has('bottom') && y > height - threshold) {\n        return 'bottom';\n    }\n    if (!overlayType.has('center')) {\n        return null;\n    }\n    return 'center';\n}\n","import { CompositeDisposable, MutableDisposable, } from '../../../lifecycle';\nimport { Emitter } from '../../../events';\nimport { trackFocus } from '../../../dom';\nexport class ContentContainer extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor() {\n        super();\n        this.disposable = new MutableDisposable();\n        this._onDidFocus = new Emitter();\n        this.onDidFocus = this._onDidFocus.event;\n        this._onDidBlur = new Emitter();\n        this.onDidBlur = this._onDidBlur.event;\n        this._element = document.createElement('div');\n        this._element.className = 'content-container';\n        this._element.tabIndex = -1;\n        this.addDisposables(this._onDidFocus, this._onDidBlur);\n        // for hosted containers\n        // 1) register a drop target on the host\n        // 2) register window dragStart events to disable pointer events\n        // 3) register dragEnd events\n        // 4) register mouseMove events (if no buttons are present we take this as a dragEnd event)\n    }\n    show() {\n        this.element.style.display = '';\n    }\n    hide() {\n        this.element.style.display = 'none';\n    }\n    openPanel(panel) {\n        var _a;\n        if (this.panel === panel) {\n            return;\n        }\n        if (this.panel) {\n            if ((_a = this.panel.view) === null || _a === void 0 ? void 0 : _a.content) {\n                this._element.removeChild(this.panel.view.content.element);\n            }\n            this.panel = undefined;\n        }\n        this.panel = panel;\n        const disposable = new CompositeDisposable();\n        if (this.panel.view) {\n            const _onDidFocus = this.panel.view.content.onDidFocus;\n            const _onDidBlur = this.panel.view.content.onDidBlur;\n            const { onDidFocus, onDidBlur } = trackFocus(this._element);\n            disposable.addDisposables(onDidFocus(() => this._onDidFocus.fire()), onDidBlur(() => this._onDidBlur.fire()));\n            if (_onDidFocus) {\n                disposable.addDisposables(_onDidFocus(() => this._onDidFocus.fire()));\n            }\n            if (_onDidBlur) {\n                disposable.addDisposables(_onDidBlur(() => this._onDidBlur.fire()));\n            }\n            this._element.appendChild(this.panel.view.content.element);\n        }\n        this.disposable.value = disposable;\n    }\n    layout(_width, _height) {\n        // noop\n    }\n    closePanel() {\n        var _a, _b, _c;\n        if ((_c = (_b = (_a = this.panel) === null || _a === void 0 ? void 0 : _a.view) === null || _b === void 0 ? void 0 : _b.content) === null || _c === void 0 ? void 0 : _c.element) {\n            this._element.removeChild(this.panel.view.content.element);\n            this.panel = undefined;\n        }\n    }\n    dispose() {\n        this.disposable.dispose();\n        super.dispose();\n    }\n}\n","export var DockviewDropTargets;\n(function (DockviewDropTargets) {\n    DockviewDropTargets[DockviewDropTargets[\"Tab\"] = 0] = \"Tab\";\n    DockviewDropTargets[DockviewDropTargets[\"Panel\"] = 1] = \"Panel\";\n    DockviewDropTargets[DockviewDropTargets[\"TabContainer\"] = 2] = \"TabContainer\";\n    DockviewDropTargets[DockviewDropTargets[\"Edge\"] = 3] = \"Edge\";\n})(DockviewDropTargets || (DockviewDropTargets = {}));\n","import { getElementsByTagName } from '../dom';\nimport { addDisposableListener, Emitter } from '../events';\nimport { CompositeDisposable, MutableDisposable, } from '../lifecycle';\nexport class DragHandler extends CompositeDisposable {\n    constructor(el) {\n        super();\n        this.el = el;\n        this.disposable = new MutableDisposable();\n        this._onDragStart = new Emitter();\n        this.onDragStart = this._onDragStart.event;\n        this.iframes = [];\n        this.configure();\n    }\n    configure() {\n        this.addDisposables(this._onDragStart, addDisposableListener(this.el, 'dragstart', (event) => {\n            this.iframes = [\n                ...getElementsByTagName('iframe'),\n                ...getElementsByTagName('webview'),\n            ];\n            for (const iframe of this.iframes) {\n                iframe.style.pointerEvents = 'none';\n            }\n            this.el.classList.add('dv-dragged');\n            setTimeout(() => this.el.classList.remove('dv-dragged'), 0);\n            this.disposable.value = this.getData(event.dataTransfer);\n            if (event.dataTransfer) {\n                event.dataTransfer.effectAllowed = 'move';\n            }\n        }), addDisposableListener(this.el, 'dragend', () => {\n            for (const iframe of this.iframes) {\n                iframe.style.pointerEvents = 'auto';\n            }\n            this.iframes = [];\n            this.disposable.dispose();\n        }));\n    }\n}\n","import { addDisposableListener, Emitter } from '../../../events';\nimport { CompositeDisposable } from '../../../lifecycle';\nimport { getPanelData, LocalSelectionTransfer, PanelTransfer, } from '../../../dnd/dataTransfer';\nimport { toggleClass } from '../../../dom';\nimport { DockviewDropTargets } from '../../types';\nimport { Droptarget } from '../../../dnd/droptarget';\nimport { DragHandler } from '../../../dnd/abstractDragHandler';\nexport class Tab extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor(panelId, accessor, group) {\n        super();\n        this.panelId = panelId;\n        this.accessor = accessor;\n        this.group = group;\n        this._onChanged = new Emitter();\n        this.onChanged = this._onChanged.event;\n        this._onDropped = new Emitter();\n        this.onDrop = this._onDropped.event;\n        this.addDisposables(this._onChanged, this._onDropped);\n        this._element = document.createElement('div');\n        this._element.className = 'tab';\n        this._element.tabIndex = 0;\n        this._element.draggable = true;\n        toggleClass(this.element, 'inactive-tab', true);\n        this.addDisposables(new (class Handler extends DragHandler {\n            constructor() {\n                super(...arguments);\n                this.panelTransfer = LocalSelectionTransfer.getInstance();\n            }\n            getData() {\n                this.panelTransfer.setData([new PanelTransfer(accessor.id, group.id, panelId)], PanelTransfer.prototype);\n                return {\n                    dispose: () => {\n                        this.panelTransfer.clearData(PanelTransfer.prototype);\n                    },\n                };\n            }\n            dispose() {\n                //\n            }\n        })(this._element));\n        this.addDisposables(addDisposableListener(this._element, 'mousedown', (event) => {\n            if (event.defaultPrevented) {\n                return;\n            }\n            /**\n             * TODO: alternative to stopPropagation\n             *\n             * I need to stop the event propagation here since otherwise it'll be intercepted by event handlers\n             * on the tabs-container. I cannot use event.preventDefault() since I need the on DragStart event to occur\n             */\n            event.stopPropagation();\n            this._onChanged.fire(event);\n        }));\n        this.droptarget = new Droptarget(this._element, {\n            acceptedTargetZones: ['center'],\n            canDisplayOverlay: (event, position) => {\n                if (this.group.locked) {\n                    return false;\n                }\n                const data = getPanelData();\n                if (data && this.accessor.id === data.viewId) {\n                    if (data.panelId === null &&\n                        data.groupId === this.group.id) {\n                        // don't allow group move to drop on self\n                        return false;\n                    }\n                    return this.panelId !== data.panelId;\n                }\n                return this.group.model.canDisplayOverlay(event, position, DockviewDropTargets.Tab);\n            },\n        });\n        this.addDisposables(this.droptarget.onDrop((event) => {\n            this._onDropped.fire(event);\n        }));\n    }\n    setActive(isActive) {\n        toggleClass(this.element, 'active-tab', isActive);\n        toggleClass(this.element, 'inactive-tab', !isActive);\n    }\n    setContent(part) {\n        if (this.content) {\n            this._element.removeChild(this.content.element);\n        }\n        this.content = part;\n        this._element.appendChild(this.content.element);\n    }\n    dispose() {\n        super.dispose();\n        this.droptarget.dispose();\n    }\n}\n","import { DragHandler } from './abstractDragHandler';\nimport { LocalSelectionTransfer, PanelTransfer } from './dataTransfer';\nimport { addGhostImage } from './ghost';\nexport class GroupDragHandler extends DragHandler {\n    constructor(element, accessorId, group) {\n        super(element);\n        this.accessorId = accessorId;\n        this.group = group;\n        this.panelTransfer = LocalSelectionTransfer.getInstance();\n    }\n    getData(dataTransfer) {\n        this.panelTransfer.setData([new PanelTransfer(this.accessorId, this.group.id, null)], PanelTransfer.prototype);\n        const style = window.getComputedStyle(this.el);\n        const bgColor = style.getPropertyValue('--dv-activegroup-visiblepanel-tab-background-color');\n        const color = style.getPropertyValue('--dv-activegroup-visiblepanel-tab-color');\n        if (dataTransfer) {\n            const ghostElement = document.createElement('div');\n            ghostElement.style.backgroundColor = bgColor;\n            ghostElement.style.color = color;\n            ghostElement.style.padding = '2px 8px';\n            ghostElement.style.height = '24px';\n            ghostElement.style.fontSize = '11px';\n            ghostElement.style.lineHeight = '20px';\n            ghostElement.style.borderRadius = '12px';\n            ghostElement.style.position = 'absolute';\n            ghostElement.textContent = `Multiple Panels (${this.group.size})`;\n            addGhostImage(dataTransfer, ghostElement);\n        }\n        return {\n            dispose: () => {\n                this.panelTransfer.clearData(PanelTransfer.prototype);\n            },\n        };\n    }\n    dispose() {\n        //\n    }\n}\n","import { addClasses, removeClasses } from '../dom';\nexport function addGhostImage(dataTransfer, ghostElement) {\n    // class dockview provides to force ghost image to be drawn on a different layer and prevent weird rendering issues\n    addClasses(ghostElement, 'dv-dragged');\n    document.body.appendChild(ghostElement);\n    dataTransfer.setDragImage(ghostElement, 0, 0);\n    setTimeout(() => {\n        removeClasses(ghostElement, 'dv-dragged');\n        ghostElement.remove();\n    }, 0);\n}\n","import { last } from '../../../array';\nimport { getPanelData } from '../../../dnd/dataTransfer';\nimport { Droptarget } from '../../../dnd/droptarget';\nimport { GroupDragHandler } from '../../../dnd/groupDragHandler';\nimport { addDisposableListener, Emitter } from '../../../events';\nimport { CompositeDisposable } from '../../../lifecycle';\nimport { DockviewDropTargets } from '../../types';\nexport class VoidContainer extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor(accessor, group) {\n        super();\n        this.accessor = accessor;\n        this.group = group;\n        this._onDrop = new Emitter();\n        this.onDrop = this._onDrop.event;\n        this._element = document.createElement('div');\n        this._element.className = 'void-container';\n        this._element.tabIndex = 0;\n        this._element.draggable = true;\n        this.addDisposables(this._onDrop, addDisposableListener(this._element, 'click', () => {\n            this.accessor.doSetGroupActive(this.group);\n        }));\n        const handler = new GroupDragHandler(this._element, accessor.id, group);\n        this.voidDropTarget = new Droptarget(this._element, {\n            acceptedTargetZones: ['center'],\n            canDisplayOverlay: (event, position) => {\n                var _a;\n                const data = getPanelData();\n                if (data && this.accessor.id === data.viewId) {\n                    if (data.panelId === null &&\n                        data.groupId === this.group.id) {\n                        // don't allow group move to drop on self\n                        return false;\n                    }\n                    // don't show the overlay if the tab being dragged is the last panel of this group\n                    return ((_a = last(this.group.panels)) === null || _a === void 0 ? void 0 : _a.id) !== data.panelId;\n                }\n                return group.model.canDisplayOverlay(event, position, DockviewDropTargets.Panel);\n            },\n        });\n        this.addDisposables(handler, this.voidDropTarget.onDrop((event) => {\n            this._onDrop.fire(event);\n        }), this.voidDropTarget);\n    }\n}\n","import { CompositeDisposable, } from '../../../lifecycle';\nimport { addDisposableListener, Emitter } from '../../../events';\nimport { Tab } from '../tab/tab';\nimport { VoidContainer } from './voidContainer';\nimport { toggleClass } from '../../../dom';\nexport class TabsContainer extends CompositeDisposable {\n    get panels() {\n        return this.tabs.map((_) => _.value.panelId);\n    }\n    get size() {\n        return this.tabs.length;\n    }\n    get height() {\n        return this._height;\n    }\n    set height(value) {\n        this._height = value;\n        if (typeof value !== 'number') {\n            this.element.style.removeProperty('--dv-tabs-and-actions-container-height');\n        }\n        else {\n            this.element.style.setProperty('--dv-tabs-and-actions-container-height', `${value}px`);\n        }\n    }\n    get hidden() {\n        return this._hidden;\n    }\n    set hidden(value) {\n        this._hidden = value;\n        this.element.style.display = value ? 'none' : '';\n    }\n    show() {\n        if (!this.hidden) {\n            this.element.style.display = '';\n        }\n    }\n    hide() {\n        this._element.style.display = 'none';\n    }\n    setActionElement(element) {\n        if (this.actions === element) {\n            return;\n        }\n        if (this.actions) {\n            this.actions.remove();\n            this.actions = undefined;\n        }\n        if (element) {\n            this.actionContainer.appendChild(element);\n            this.actions = element;\n        }\n    }\n    get element() {\n        return this._element;\n    }\n    isActive(tab) {\n        return (this.selectedIndex > -1 &&\n            this.tabs[this.selectedIndex].value === tab);\n    }\n    indexOf(id) {\n        return this.tabs.findIndex((tab) => tab.value.panelId === id);\n    }\n    constructor(accessor, group) {\n        super();\n        this.accessor = accessor;\n        this.group = group;\n        this.tabs = [];\n        this.selectedIndex = -1;\n        this._hidden = false;\n        this._onDrop = new Emitter();\n        this.onDrop = this._onDrop.event;\n        this.addDisposables(this._onDrop);\n        this._element = document.createElement('div');\n        this._element.className = 'tabs-and-actions-container';\n        this.height = accessor.options.tabHeight;\n        toggleClass(this._element, 'dv-full-width-single-tab', this.accessor.options.singleTabMode === 'fullwidth');\n        this.addDisposables(this.accessor.onDidAddPanel((e) => {\n            if (e.api.group === this.group) {\n                toggleClass(this._element, 'dv-single-tab', this.size === 1);\n            }\n        }), this.accessor.onDidRemovePanel((e) => {\n            if (e.api.group === this.group) {\n                toggleClass(this._element, 'dv-single-tab', this.size === 1);\n            }\n        }));\n        this.actionContainer = document.createElement('div');\n        this.actionContainer.className = 'action-container';\n        this.tabContainer = document.createElement('div');\n        this.tabContainer.className = 'tabs-container';\n        this.voidContainer = new VoidContainer(this.accessor, this.group);\n        this._element.appendChild(this.tabContainer);\n        this._element.appendChild(this.voidContainer.element);\n        this._element.appendChild(this.actionContainer);\n        this.addDisposables(this.voidContainer, this.voidContainer.onDrop((event) => {\n            this._onDrop.fire({\n                event: event.nativeEvent,\n                index: this.tabs.length,\n            });\n        }), addDisposableListener(this.tabContainer, 'mousedown', (event) => {\n            if (event.defaultPrevented) {\n                return;\n            }\n            const isLeftClick = event.button === 0;\n            if (isLeftClick) {\n                this.accessor.doSetGroupActive(this.group);\n            }\n        }));\n    }\n    setActive(_isGroupActive) {\n        // noop\n    }\n    addTab(tab, index = this.tabs.length) {\n        if (index < 0 || index > this.tabs.length) {\n            throw new Error('invalid location');\n        }\n        this.tabContainer.insertBefore(tab.value.element, this.tabContainer.children[index]);\n        this.tabs = [\n            ...this.tabs.slice(0, index),\n            tab,\n            ...this.tabs.slice(index),\n        ];\n        if (this.selectedIndex < 0) {\n            this.selectedIndex = index;\n        }\n    }\n    delete(id) {\n        const index = this.tabs.findIndex((tab) => tab.value.panelId === id);\n        const tabToRemove = this.tabs.splice(index, 1)[0];\n        const { value, disposable } = tabToRemove;\n        disposable.dispose();\n        value.element.remove();\n    }\n    setActivePanel(panel) {\n        this.tabs.forEach((tab) => {\n            const isActivePanel = panel.id === tab.value.panelId;\n            tab.value.setActive(isActivePanel);\n        });\n    }\n    openPanel(panel, index = this.tabs.length) {\n        var _a;\n        if (this.tabs.find((tab) => tab.value.panelId === panel.id)) {\n            return;\n        }\n        const tabToAdd = new Tab(panel.id, this.accessor, this.group);\n        if (!((_a = panel.view) === null || _a === void 0 ? void 0 : _a.tab)) {\n            throw new Error('invalid header component');\n        }\n        tabToAdd.setContent(panel.view.tab);\n        const disposable = CompositeDisposable.from(tabToAdd.onChanged((event) => {\n            var _a;\n            const alreadyFocused = panel.id === ((_a = this.group.model.activePanel) === null || _a === void 0 ? void 0 : _a.id) &&\n                this.group.model.isContentFocused;\n            const isLeftClick = event.button === 0;\n            if (!isLeftClick || event.defaultPrevented) {\n                return;\n            }\n            this.group.model.openPanel(panel, {\n                skipFocus: alreadyFocused,\n            });\n        }), tabToAdd.onDrop((event) => {\n            this._onDrop.fire({\n                event: event.nativeEvent,\n                index: this.tabs.findIndex((x) => x.value === tabToAdd),\n            });\n        }));\n        const value = { value: tabToAdd, disposable };\n        this.addTab(value, index);\n    }\n    closePanel(panel) {\n        this.delete(panel.id);\n    }\n    dispose() {\n        super.dispose();\n        this.tabs.forEach((tab) => {\n            tab.disposable.dispose();\n        });\n        this.tabs = [];\n    }\n}\n","import { DockviewApi } from '../api/component.api';\nimport { getPanelData } from '../dnd/dataTransfer';\nimport { Droptarget } from '../dnd/droptarget';\nimport { isAncestor, toggleClass } from '../dom';\nimport { addDisposableListener, Emitter } from '../events';\nimport { CompositeDisposable } from '../lifecycle';\nimport { ContentContainer, } from './components/panel/content';\nimport { TabsContainer, } from './components/titlebar/tabsContainer';\nimport { DockviewDropTargets } from './types';\nexport class DockviewGroupPanelModel extends CompositeDisposable {\n    get element() {\n        throw new Error('not supported');\n    }\n    get activePanel() {\n        return this._activePanel;\n    }\n    get locked() {\n        return this._locked;\n    }\n    set locked(value) {\n        this._locked = value;\n        toggleClass(this.container, 'locked-groupview', value);\n    }\n    get isActive() {\n        return this._isGroupActive;\n    }\n    get panels() {\n        return this._panels;\n    }\n    get size() {\n        return this._panels.length;\n    }\n    get isEmpty() {\n        return this._panels.length === 0;\n    }\n    get minimumHeight() {\n        return 100;\n    }\n    get maximumHeight() {\n        return Number.MAX_SAFE_INTEGER;\n    }\n    get minimumWidth() {\n        return 100;\n    }\n    get maximumWidth() {\n        return Number.MAX_SAFE_INTEGER;\n    }\n    get hasWatermark() {\n        return !!(this.watermark && this.container.contains(this.watermark.element));\n    }\n    get header() {\n        return this.tabsContainer;\n    }\n    get isContentFocused() {\n        if (!document.activeElement) {\n            return false;\n        }\n        return isAncestor(document.activeElement, this.contentContainer.element);\n    }\n    constructor(container, accessor, id, options, groupPanel) {\n        super();\n        this.container = container;\n        this.accessor = accessor;\n        this.id = id;\n        this.options = options;\n        this.groupPanel = groupPanel;\n        this._isGroupActive = false;\n        this._locked = false;\n        this.mostRecentlyUsed = [];\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._width = 0;\n        this._height = 0;\n        this._panels = [];\n        this._onMove = new Emitter();\n        this.onMove = this._onMove.event;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onDidAddPanel = new Emitter();\n        this.onDidAddPanel = this._onDidAddPanel.event;\n        this._onDidRemovePanel = new Emitter();\n        this.onDidRemovePanel = this._onDidRemovePanel.event;\n        this._onDidActivePanelChange = new Emitter();\n        this.onDidActivePanelChange = this._onDidActivePanelChange.event;\n        this.container.classList.add('groupview');\n        this.tabsContainer = new TabsContainer(this.accessor, this.groupPanel);\n        this.contentContainer = new ContentContainer();\n        this.dropTarget = new Droptarget(this.contentContainer.element, {\n            acceptedTargetZones: ['top', 'bottom', 'left', 'right', 'center'],\n            canDisplayOverlay: (event, position) => {\n                if (this.locked && position === 'center') {\n                    return false;\n                }\n                const data = getPanelData();\n                if (data && data.viewId === this.accessor.id) {\n                    if (data.groupId === this.id) {\n                        if (position === 'center') {\n                            // don't allow to drop on self for center position\n                            return false;\n                        }\n                        if (data.panelId === null) {\n                            // don't allow group move to drop anywhere on self\n                            return false;\n                        }\n                    }\n                    const groupHasOnePanelAndIsActiveDragElement = this._panels.length === 1 && data.groupId === this.id;\n                    return !groupHasOnePanelAndIsActiveDragElement;\n                }\n                return this.canDisplayOverlay(event, position, DockviewDropTargets.Panel);\n            },\n        });\n        container.append(this.tabsContainer.element, this.contentContainer.element);\n        this.header.hidden = !!options.hideHeader;\n        this.locked = !!options.locked;\n        this.addDisposables(this._onMove, this._onDidChange, this._onDidDrop, this._onDidAddPanel, this._onDidRemovePanel, this._onDidActivePanelChange, this.tabsContainer.onDrop((event) => {\n            this.handleDropEvent(event.event, 'center', event.index);\n        }), this.contentContainer.onDidFocus(() => {\n            this.accessor.doSetGroupActive(this.groupPanel, true);\n        }), this.contentContainer.onDidBlur(() => {\n            // noop\n        }), this.dropTarget.onDrop((event) => {\n            this.handleDropEvent(event.nativeEvent, event.position);\n        }));\n    }\n    initialize() {\n        var _a, _b;\n        if ((_a = this.options) === null || _a === void 0 ? void 0 : _a.panels) {\n            this.options.panels.forEach((panel) => {\n                this.doAddPanel(panel);\n            });\n        }\n        if ((_b = this.options) === null || _b === void 0 ? void 0 : _b.activePanel) {\n            this.openPanel(this.options.activePanel);\n        }\n        // must be run after the constructor otherwise this.parent may not be\n        // correctly initialized\n        this.setActive(this.isActive, true, true);\n        this.updateContainer();\n        if (this.accessor.options.createGroupControlElement) {\n            this._control = this.accessor.options.createGroupControlElement(this.groupPanel);\n            this.addDisposables(this._control);\n            this._control.init({\n                containerApi: new DockviewApi(this.accessor),\n                api: this.groupPanel.api,\n            });\n            this.tabsContainer.setActionElement(this._control.element);\n        }\n    }\n    indexOf(panel) {\n        return this.tabsContainer.indexOf(panel.id);\n    }\n    toJSON() {\n        var _a;\n        const result = {\n            views: this.tabsContainer.panels,\n            activeView: (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.id,\n            id: this.id,\n        };\n        if (this.locked) {\n            result.locked = true;\n        }\n        if (this.header.hidden) {\n            result.hideHeader = true;\n        }\n        return result;\n    }\n    moveToNext(options) {\n        if (!options) {\n            options = {};\n        }\n        if (!options.panel) {\n            options.panel = this.activePanel;\n        }\n        const index = options.panel ? this.panels.indexOf(options.panel) : -1;\n        let normalizedIndex;\n        if (index < this.panels.length - 1) {\n            normalizedIndex = index + 1;\n        }\n        else if (!options.suppressRoll) {\n            normalizedIndex = 0;\n        }\n        else {\n            return;\n        }\n        this.openPanel(this.panels[normalizedIndex]);\n    }\n    moveToPrevious(options) {\n        if (!options) {\n            options = {};\n        }\n        if (!options.panel) {\n            options.panel = this.activePanel;\n        }\n        if (!options.panel) {\n            return;\n        }\n        const index = this.panels.indexOf(options.panel);\n        let normalizedIndex;\n        if (index > 0) {\n            normalizedIndex = index - 1;\n        }\n        else if (!options.suppressRoll) {\n            normalizedIndex = this.panels.length - 1;\n        }\n        else {\n            return;\n        }\n        this.openPanel(this.panels[normalizedIndex]);\n    }\n    containsPanel(panel) {\n        return this.panels.includes(panel);\n    }\n    init(_params) {\n        //noop\n    }\n    update(_params) {\n        //noop\n    }\n    focus() {\n        var _a, _b;\n        (_b = (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.focus) === null || _b === void 0 ? void 0 : _b.call(_a);\n    }\n    openPanel(panel, options = {}) {\n        if (typeof options.index !== 'number' ||\n            options.index > this.panels.length) {\n            options.index = this.panels.length;\n        }\n        const skipSetPanelActive = !!options.skipSetPanelActive;\n        const skipSetGroupActive = !!options.skipSetGroupActive;\n        // ensure the group is updated before we fire any events\n        panel.updateParentGroup(this.groupPanel, true);\n        if (this._activePanel === panel) {\n            if (!skipSetGroupActive) {\n                this.accessor.doSetGroupActive(this.groupPanel);\n            }\n            return;\n        }\n        this.doAddPanel(panel, options.index, skipSetPanelActive);\n        if (!skipSetPanelActive) {\n            this.doSetActivePanel(panel);\n        }\n        if (!skipSetGroupActive) {\n            this.accessor.doSetGroupActive(this.groupPanel, !!options.skipFocus);\n        }\n        this.updateContainer();\n    }\n    removePanel(groupItemOrId) {\n        const id = typeof groupItemOrId === 'string'\n            ? groupItemOrId\n            : groupItemOrId.id;\n        const panelToRemove = this._panels.find((panel) => panel.id === id);\n        if (!panelToRemove) {\n            throw new Error('invalid operation');\n        }\n        return this._removePanel(panelToRemove);\n    }\n    closeAllPanels() {\n        if (this.panels.length > 0) {\n            // take a copy since we will be edting the array as we iterate through\n            const arrPanelCpy = [...this.panels];\n            for (const panel of arrPanelCpy) {\n                this.doClose(panel);\n            }\n        }\n        else {\n            this.accessor.removeGroup(this.groupPanel);\n        }\n    }\n    closePanel(panel) {\n        this.doClose(panel);\n    }\n    doClose(panel) {\n        this.accessor.removePanel(panel);\n    }\n    isPanelActive(panel) {\n        return this._activePanel === panel;\n    }\n    updateActions(element) {\n        this.tabsContainer.setActionElement(element);\n    }\n    setActive(isGroupActive, skipFocus = false, force = false) {\n        var _a, _b, _c, _d;\n        if (!force && this.isActive === isGroupActive) {\n            if (!skipFocus) {\n                (_b = (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.focus) === null || _b === void 0 ? void 0 : _b.call(_a);\n            }\n            return;\n        }\n        this._isGroupActive = isGroupActive;\n        toggleClass(this.container, 'active-group', isGroupActive);\n        toggleClass(this.container, 'inactive-group', !isGroupActive);\n        this.tabsContainer.setActive(this.isActive);\n        if (!this._activePanel && this.panels.length > 0) {\n            this.doSetActivePanel(this.panels[0]);\n        }\n        this.updateContainer();\n        if (isGroupActive) {\n            if (!skipFocus) {\n                (_d = (_c = this._activePanel) === null || _c === void 0 ? void 0 : _c.focus) === null || _d === void 0 ? void 0 : _d.call(_c);\n            }\n        }\n    }\n    layout(width, height) {\n        var _a;\n        this._width = width;\n        this._height = height;\n        this.contentContainer.layout(this._width, this._height);\n        if ((_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.layout) {\n            this._activePanel.layout(this._width, this._height);\n        }\n    }\n    _removePanel(panel) {\n        const isActivePanel = this._activePanel === panel;\n        this.doRemovePanel(panel);\n        if (isActivePanel && this.panels.length > 0) {\n            const nextPanel = this.mostRecentlyUsed[0];\n            this.openPanel(nextPanel);\n        }\n        if (this._activePanel && this.panels.length === 0) {\n            this.doSetActivePanel(undefined);\n        }\n        this.updateContainer();\n        return panel;\n    }\n    doRemovePanel(panel) {\n        const index = this.panels.indexOf(panel);\n        if (this._activePanel === panel) {\n            this.contentContainer.closePanel();\n        }\n        this.tabsContainer.delete(panel.id);\n        this._panels.splice(index, 1);\n        if (this.mostRecentlyUsed.includes(panel)) {\n            this.mostRecentlyUsed.splice(this.mostRecentlyUsed.indexOf(panel), 1);\n        }\n        this._onDidRemovePanel.fire({ panel });\n    }\n    doAddPanel(panel, index = this.panels.length, skipSetActive = false) {\n        const existingPanel = this._panels.indexOf(panel);\n        const hasExistingPanel = existingPanel > -1;\n        this.tabsContainer.openPanel(panel, index);\n        if (!skipSetActive) {\n            this.contentContainer.openPanel(panel);\n        }\n        this.tabsContainer.show();\n        this.contentContainer.show();\n        if (hasExistingPanel) {\n            // TODO - need to ensure ordering hasn't changed and if it has need to re-order this.panels\n            return;\n        }\n        this.updateMru(panel);\n        this.panels.splice(index, 0, panel);\n        this._onDidAddPanel.fire({ panel });\n    }\n    doSetActivePanel(panel) {\n        this._activePanel = panel;\n        if (panel) {\n            this.tabsContainer.setActivePanel(panel);\n            panel.layout(this._width, this._height);\n            this.updateMru(panel);\n            this._onDidActivePanelChange.fire({ panel });\n        }\n    }\n    updateMru(panel) {\n        if (this.mostRecentlyUsed.includes(panel)) {\n            this.mostRecentlyUsed.splice(this.mostRecentlyUsed.indexOf(panel), 1);\n        }\n        this.mostRecentlyUsed = [panel, ...this.mostRecentlyUsed];\n    }\n    updateContainer() {\n        var _a, _b;\n        toggleClass(this.container, 'empty', this.isEmpty);\n        this.panels.forEach((panel) => panel.updateParentGroup(this.groupPanel, this.isActive));\n        if (this.isEmpty && !this.watermark) {\n            const watermark = this.accessor.createWatermarkComponent();\n            watermark.init({\n                containerApi: new DockviewApi(this.accessor),\n                group: this.groupPanel,\n            });\n            this.watermark = watermark;\n            addDisposableListener(this.watermark.element, 'click', () => {\n                if (!this.isActive) {\n                    this.accessor.doSetGroupActive(this.groupPanel);\n                }\n            });\n            this.tabsContainer.hide();\n            this.contentContainer.element.appendChild(this.watermark.element);\n            this.watermark.updateParentGroup(this.groupPanel, true);\n        }\n        if (!this.isEmpty && this.watermark) {\n            this.watermark.element.remove();\n            (_b = (_a = this.watermark).dispose) === null || _b === void 0 ? void 0 : _b.call(_a);\n            this.watermark = undefined;\n            this.tabsContainer.show();\n        }\n    }\n    canDisplayOverlay(event, position, target) {\n        // custom overlay handler\n        if (this.accessor.options.showDndOverlay) {\n            return this.accessor.options.showDndOverlay({\n                nativeEvent: event,\n                target,\n                group: this.accessor.getPanel(this.id),\n                position,\n                getData: getPanelData,\n            });\n        }\n        return false;\n    }\n    handleDropEvent(event, position, index) {\n        const data = getPanelData();\n        if (data && data.viewId === this.accessor.id) {\n            if (data.panelId === null) {\n                // this is a group move dnd event\n                const { groupId } = data;\n                this._onMove.fire({\n                    target: position,\n                    groupId: groupId,\n                    index,\n                });\n                return;\n            }\n            const fromSameGroup = this.tabsContainer.indexOf(data.panelId) !== -1;\n            if (fromSameGroup && this.tabsContainer.size === 1) {\n                return;\n            }\n            const { groupId, panelId } = data;\n            const isSameGroup = this.id === groupId;\n            if (isSameGroup && !position) {\n                const oldIndex = this.tabsContainer.indexOf(panelId);\n                if (oldIndex === index) {\n                    return;\n                }\n            }\n            this._onMove.fire({\n                target: position,\n                groupId: data.groupId,\n                itemId: data.panelId,\n                index,\n            });\n        }\n        else {\n            this._onDidDrop.fire({\n                nativeEvent: event,\n                position,\n                index,\n                getData: () => getPanelData(),\n            });\n        }\n    }\n    dispose() {\n        var _a, _b;\n        super.dispose();\n        (_b = (_a = this.watermark) === null || _a === void 0 ? void 0 : _a.dispose) === null || _b === void 0 ? void 0 : _b.call(_a);\n        for (const panel of this.panels) {\n            panel.dispose();\n        }\n        this.dropTarget.dispose();\n        this.tabsContainer.dispose();\n        this.contentContainer.dispose();\n    }\n}\n","import { Emitter, Event, TickDelayedEvent } from '../events';\nimport { getGridLocation, Gridview } from './gridview';\nimport { CompositeDisposable } from '../lifecycle';\nimport { sequentialNumberGenerator } from '../math';\nimport { Sizing } from '../splitview/splitview';\nconst nextLayoutId = sequentialNumberGenerator();\nexport function toTarget(direction) {\n    switch (direction) {\n        case 'left':\n            return 'left';\n        case 'right':\n            return 'right';\n        case 'above':\n            return 'top';\n        case 'below':\n            return 'bottom';\n        case 'within':\n        default:\n            return 'center';\n    }\n}\nexport class BaseGrid extends CompositeDisposable {\n    get id() {\n        return this._id;\n    }\n    get element() {\n        return this._element;\n    }\n    get size() {\n        return this._groups.size;\n    }\n    get groups() {\n        return Array.from(this._groups.values()).map((_) => _.value);\n    }\n    get width() {\n        return this.gridview.width;\n    }\n    get height() {\n        return this.gridview.height;\n    }\n    get minimumHeight() {\n        return this.gridview.minimumHeight;\n    }\n    get maximumHeight() {\n        return this.gridview.maximumHeight;\n    }\n    get minimumWidth() {\n        return this.gridview.minimumWidth;\n    }\n    get maximumWidth() {\n        return this.gridview.maximumWidth;\n    }\n    get activeGroup() {\n        return this._activeGroup;\n    }\n    constructor(_element, options) {\n        super();\n        this._element = _element;\n        this._id = nextLayoutId.next();\n        this._groups = new Map();\n        this._onDidLayoutChange = new Emitter();\n        this.onDidLayoutChange = this._onDidLayoutChange.event;\n        this._onDidRemoveGroup = new Emitter();\n        this.onDidRemoveGroup = this._onDidRemoveGroup.event;\n        this._onDidAddGroup = new Emitter();\n        this.onDidAddGroup = this._onDidAddGroup.event;\n        this._onDidActiveGroupChange = new Emitter();\n        this.onDidActiveGroupChange = this._onDidActiveGroupChange.event;\n        this._bufferOnDidLayoutChange = new TickDelayedEvent();\n        this.gridview = new Gridview(!!options.proportionalLayout, options.styles, options.orientation);\n        this.element.appendChild(this.gridview.element);\n        this.layout(0, 0, true); // set some elements height/widths\n        this.addDisposables(this.gridview.onDidChange(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }));\n        this.addDisposables(Event.any(this.onDidAddGroup, this.onDidRemoveGroup, this.onDidActiveGroupChange)(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), this._bufferOnDidLayoutChange.onEvent(() => {\n            this._onDidLayoutChange.fire();\n        }), this._bufferOnDidLayoutChange);\n    }\n    setVisible(panel, visible) {\n        this.gridview.setViewVisible(getGridLocation(panel.element), visible);\n        this._onDidLayoutChange.fire();\n    }\n    isVisible(panel) {\n        return this.gridview.isViewVisible(getGridLocation(panel.element));\n    }\n    doAddGroup(group, location = [0], size) {\n        this.gridview.addView(group, size !== null && size !== void 0 ? size : Sizing.Distribute, location);\n        this._onDidAddGroup.fire(group);\n        this.doSetGroupActive(group);\n    }\n    doRemoveGroup(group, options) {\n        if (!this._groups.has(group.id)) {\n            throw new Error('invalid operation');\n        }\n        const item = this._groups.get(group.id);\n        const view = this.gridview.remove(group, Sizing.Distribute);\n        if (item && !(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n            item.disposable.dispose();\n            item.value.dispose();\n            this._groups.delete(group.id);\n        }\n        this._onDidRemoveGroup.fire(group);\n        if (!(options === null || options === void 0 ? void 0 : options.skipActive) && this._activeGroup === group) {\n            const groups = Array.from(this._groups.values());\n            this.doSetGroupActive(groups.length > 0 ? groups[0].value : undefined);\n        }\n        return view;\n    }\n    getPanel(id) {\n        var _a;\n        return (_a = this._groups.get(id)) === null || _a === void 0 ? void 0 : _a.value;\n    }\n    doSetGroupActive(group, skipFocus) {\n        var _a, _b, _c;\n        if (this._activeGroup === group) {\n            return;\n        }\n        if (this._activeGroup) {\n            this._activeGroup.setActive(false);\n            if (!skipFocus) {\n                (_b = (_a = this._activeGroup).focus) === null || _b === void 0 ? void 0 : _b.call(_a);\n            }\n        }\n        if (group) {\n            group.setActive(true);\n            if (!skipFocus) {\n                (_c = group.focus) === null || _c === void 0 ? void 0 : _c.call(group);\n            }\n        }\n        this._activeGroup = group;\n        this._onDidActiveGroupChange.fire(group);\n    }\n    removeGroup(group) {\n        this.doRemoveGroup(group);\n    }\n    moveToNext(options) {\n        var _a;\n        if (!options) {\n            options = {};\n        }\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.next(location)) === null || _a === void 0 ? void 0 : _a.view;\n        this.doSetGroupActive(next);\n    }\n    moveToPrevious(options) {\n        var _a;\n        if (!options) {\n            options = {};\n        }\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.previous(location)) === null || _a === void 0 ? void 0 : _a.view;\n        this.doSetGroupActive(next);\n    }\n    layout(width, height, forceResize) {\n        const different = forceResize || width !== this.width || height !== this.height;\n        if (!different) {\n            return;\n        }\n        this.element.style.height = `${height}px`;\n        this.element.style.width = `${width}px`;\n        this.gridview.layout(width, height);\n    }\n    dispose() {\n        super.dispose();\n        this._onDidActiveGroupChange.dispose();\n        this._onDidAddGroup.dispose();\n        this._onDidRemoveGroup.dispose();\n        this._onDidLayoutChange.dispose();\n        for (const group of this.groups) {\n            group.dispose();\n        }\n        this.gridview.dispose();\n    }\n}\n","import { Emitter } from '../events';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\n/**\n * A core api implementation that should be used across all panel-like objects\n */\nexport class PanelApiImpl extends CompositeDisposable {\n    //\n    get isFocused() {\n        return this._isFocused;\n    }\n    get isActive() {\n        return this._isActive;\n    }\n    get isVisible() {\n        return this._isVisible;\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    constructor(id) {\n        super();\n        this.id = id;\n        this._isFocused = false;\n        this._isActive = false;\n        this._isVisible = true;\n        this._width = 0;\n        this._height = 0;\n        this.panelUpdatesDisposable = new MutableDisposable();\n        this._onDidDimensionChange = new Emitter({\n            replay: true,\n        });\n        this.onDidDimensionsChange = this._onDidDimensionChange.event;\n        //\n        this._onDidChangeFocus = new Emitter({\n            replay: true,\n        });\n        this.onDidFocusChange = this._onDidChangeFocus.event;\n        //\n        this._onFocusEvent = new Emitter();\n        this.onFocusEvent = this._onFocusEvent.event;\n        //\n        this._onDidVisibilityChange = new Emitter({\n            replay: true,\n        });\n        this.onDidVisibilityChange = this._onDidVisibilityChange.event;\n        //\n        this._onVisibilityChange = new Emitter();\n        this.onVisibilityChange = this._onVisibilityChange.event;\n        //\n        this._onDidActiveChange = new Emitter({\n            replay: true,\n        });\n        this.onDidActiveChange = this._onDidActiveChange.event;\n        //\n        this._onActiveChange = new Emitter();\n        this.onActiveChange = this._onActiveChange.event;\n        //\n        this._onUpdateParameters = new Emitter();\n        this.onUpdateParameters = this._onUpdateParameters.event;\n        this.addDisposables(this.panelUpdatesDisposable, this._onDidDimensionChange, this._onDidChangeFocus, this._onDidVisibilityChange, this._onDidActiveChange, this._onFocusEvent, this._onActiveChange, this._onVisibilityChange, this._onUpdateParameters, this.onDidFocusChange((event) => {\n            this._isFocused = event.isFocused;\n        }), this.onDidActiveChange((event) => {\n            this._isActive = event.isActive;\n        }), this.onDidVisibilityChange((event) => {\n            this._isVisible = event.isVisible;\n        }), this.onDidDimensionsChange((event) => {\n            this._width = event.width;\n            this._height = event.height;\n        }));\n    }\n    initialize(panel) {\n        this.panelUpdatesDisposable.value = this._onUpdateParameters.event((parameters) => {\n            panel.update({\n                params: {\n                    params: parameters,\n                },\n            });\n        });\n    }\n    setVisible(isVisible) {\n        this._onVisibilityChange.fire({ isVisible });\n    }\n    setActive() {\n        this._onActiveChange.fire();\n    }\n    updateParameters(parameters) {\n        this._onUpdateParameters.fire(parameters);\n    }\n    dispose() {\n        super.dispose();\n    }\n}\n","import { Emitter } from '../events';\nimport { PanelApiImpl } from './panelApi';\nexport class SplitviewPanelApiImpl extends PanelApiImpl {\n    //\n    constructor(id) {\n        super(id);\n        this._onDidConstraintsChangeInternal = new Emitter();\n        this.onDidConstraintsChangeInternal = this._onDidConstraintsChangeInternal.event;\n        //\n        this._onDidConstraintsChange = new Emitter({\n            replay: true,\n        });\n        this.onDidConstraintsChange = this._onDidConstraintsChange.event;\n        //\n        this._onDidSizeChange = new Emitter();\n        this.onDidSizeChange = this._onDidSizeChange.event;\n        this.addDisposables(this._onDidConstraintsChangeInternal, this._onDidConstraintsChange, this._onDidSizeChange);\n    }\n    setConstraints(value) {\n        this._onDidConstraintsChangeInternal.fire(value);\n    }\n    setSize(event) {\n        this._onDidSizeChange.fire(event);\n    }\n}\n","import { Emitter } from '../events';\nimport { SplitviewPanelApiImpl } from './splitviewPanelApi';\nexport class PaneviewPanelApiImpl extends SplitviewPanelApiImpl {\n    set pane(pane) {\n        this._pane = pane;\n    }\n    constructor(id) {\n        super(id);\n        this._onDidExpansionChange = new Emitter({\n            replay: true,\n        });\n        this.onDidExpansionChange = this._onDidExpansionChange.event;\n        this._onMouseEnter = new Emitter({});\n        this.onMouseEnter = this._onMouseEnter.event;\n        this._onMouseLeave = new Emitter({});\n        this.onMouseLeave = this._onMouseLeave.event;\n        this.addDisposables(this._onDidExpansionChange, this._onMouseEnter, this._onMouseLeave);\n    }\n    setExpanded(isExpanded) {\n        var _a;\n        (_a = this._pane) === null || _a === void 0 ? void 0 : _a.setExpanded(isExpanded);\n    }\n    get isExpanded() {\n        var _a;\n        return !!((_a = this._pane) === null || _a === void 0 ? void 0 : _a.isExpanded());\n    }\n}\n","import { trackFocus } from '../dom';\nimport { CompositeDisposable } from '../lifecycle';\nexport class BasePanelView extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    get params() {\n        var _a;\n        return (_a = this._params) === null || _a === void 0 ? void 0 : _a.params;\n    }\n    constructor(id, component, api) {\n        super();\n        this.id = id;\n        this.component = component;\n        this.api = api;\n        this._height = 0;\n        this._width = 0;\n        this._element = document.createElement('div');\n        this._element.tabIndex = -1;\n        this._element.style.outline = 'none';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n        this._element.style.overflow = 'hidden';\n        const { onDidFocus, onDidBlur } = trackFocus(this._element);\n        this.addDisposables(this.api, onDidFocus(() => {\n            this.api._onDidChangeFocus.fire({ isFocused: true });\n        }), onDidBlur(() => {\n            this.api._onDidChangeFocus.fire({ isFocused: false });\n        }));\n    }\n    focus() {\n        this.api._onFocusEvent.fire();\n    }\n    layout(width, height) {\n        this._width = width;\n        this._height = height;\n        this.api._onDidDimensionChange.fire({ width, height });\n        if (this.part) {\n            if (this._params) {\n                this.part.update(this._params.params);\n            }\n        }\n    }\n    init(parameters) {\n        this._params = parameters;\n        this.part = this.getComponent();\n    }\n    update(event) {\n        var _a, _b;\n        this._params = Object.assign(Object.assign({}, this._params), { params: Object.assign(Object.assign({}, (_a = this._params) === null || _a === void 0 ? void 0 : _a.params), event.params) });\n        (_b = this.part) === null || _b === void 0 ? void 0 : _b.update({ params: this._params.params });\n    }\n    toJSON() {\n        var _a, _b;\n        const params = (_b = (_a = this._params) === null || _a === void 0 ? void 0 : _a.params) !== null && _b !== void 0 ? _b : {};\n        return {\n            id: this.id,\n            component: this.component,\n            params: Object.keys(params).length > 0 ? params : undefined,\n        };\n    }\n    dispose() {\n        var _a;\n        super.dispose();\n        this.api.dispose();\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import { PaneviewPanelApiImpl } from '../api/paneviewPanelApi';\nimport { addClasses, removeClasses } from '../dom';\nimport { addDisposableListener, Emitter } from '../events';\nimport { BasePanelView, } from '../gridview/basePanelView';\nimport { Orientation } from '../splitview/splitview';\nexport class PaneviewPanel extends BasePanelView {\n    set orientation(value) {\n        this._orientation = value;\n    }\n    get orientation() {\n        return this._orientation;\n    }\n    get minimumSize() {\n        const headerSize = this.headerSize;\n        const expanded = this.isExpanded();\n        const minimumBodySize = expanded ? this._minimumBodySize : 0;\n        return headerSize + minimumBodySize;\n    }\n    get maximumSize() {\n        const headerSize = this.headerSize;\n        const expanded = this.isExpanded();\n        const maximumBodySize = expanded ? this._maximumBodySize : 0;\n        return headerSize + maximumBodySize;\n    }\n    get size() {\n        return this._size;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    set orthogonalSize(size) {\n        this._orthogonalSize = size;\n    }\n    get minimumBodySize() {\n        return this._minimumBodySize;\n    }\n    set minimumBodySize(value) {\n        this._minimumBodySize = typeof value === 'number' ? value : 0;\n    }\n    get maximumBodySize() {\n        return this._maximumBodySize;\n    }\n    set maximumBodySize(value) {\n        this._maximumBodySize =\n            typeof value === 'number' ? value : Number.POSITIVE_INFINITY;\n    }\n    get headerVisible() {\n        return this._headerVisible;\n    }\n    set headerVisible(value) {\n        this._headerVisible = value;\n        this.header.style.display = value ? '' : 'none';\n    }\n    constructor(id, component, headerComponent, orientation, isExpanded, isHeaderVisible) {\n        super(id, component, new PaneviewPanelApiImpl(id));\n        this.headerComponent = headerComponent;\n        this._onDidChangeExpansionState = new Emitter({ replay: true });\n        this.onDidChangeExpansionState = this._onDidChangeExpansionState.event;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this.headerSize = 22;\n        this._orthogonalSize = 0;\n        this._size = 0;\n        this._minimumBodySize = 100;\n        this._maximumBodySize = Number.POSITIVE_INFINITY;\n        this._isExpanded = false;\n        this.expandedSize = 0;\n        this.api.pane = this; // TODO cannot use 'this' before 'super'\n        this.api.initialize(this);\n        this._isExpanded = isExpanded;\n        this._headerVisible = isHeaderVisible;\n        this._onDidChangeExpansionState.fire(this.isExpanded()); // initialize value\n        this._orientation = orientation;\n        this.element.classList.add('pane');\n        this.addDisposables(this.api.onDidSizeChange((event) => {\n            this._onDidChange.fire({ size: event.size });\n        }), addDisposableListener(this.element, 'mouseenter', (ev) => {\n            this.api._onMouseEnter.fire(ev);\n        }), addDisposableListener(this.element, 'mouseleave', (ev) => {\n            this.api._onMouseLeave.fire(ev);\n        }));\n        this.addDisposables(this._onDidChangeExpansionState, this.onDidChangeExpansionState((isPanelExpanded) => {\n            this.api._onDidExpansionChange.fire({\n                isExpanded: isPanelExpanded,\n            });\n        }), this.api.onDidFocusChange((e) => {\n            if (!this.header) {\n                return;\n            }\n            if (e.isFocused) {\n                addClasses(this.header, 'focused');\n            }\n            else {\n                removeClasses(this.header, 'focused');\n            }\n        }));\n        this.renderOnce();\n    }\n    setVisible(isVisible) {\n        this.api._onDidVisibilityChange.fire({ isVisible });\n    }\n    setActive(isActive) {\n        this.api._onDidActiveChange.fire({ isActive });\n    }\n    isExpanded() {\n        return this._isExpanded;\n    }\n    setExpanded(expanded) {\n        if (this._isExpanded === expanded) {\n            return;\n        }\n        this._isExpanded = expanded;\n        if (expanded) {\n            if (this.animationTimer) {\n                clearTimeout(this.animationTimer);\n            }\n            if (this.body) {\n                this.element.appendChild(this.body);\n            }\n        }\n        else {\n            this.animationTimer = setTimeout(() => {\n                var _a;\n                (_a = this.body) === null || _a === void 0 ? void 0 : _a.remove();\n            }, 200);\n        }\n        this._onDidChange.fire(expanded ? { size: this.width } : {});\n        this._onDidChangeExpansionState.fire(expanded);\n    }\n    layout(size, orthogonalSize) {\n        this._size = size;\n        this._orthogonalSize = orthogonalSize;\n        const [width, height] = this.orientation === Orientation.HORIZONTAL\n            ? [size, orthogonalSize]\n            : [orthogonalSize, size];\n        if (this.isExpanded()) {\n            this.expandedSize = width;\n        }\n        super.layout(width, height);\n    }\n    init(parameters) {\n        var _a, _b;\n        super.init(parameters);\n        if (typeof parameters.minimumBodySize === 'number') {\n            this.minimumBodySize = parameters.minimumBodySize;\n        }\n        if (typeof parameters.maximumBodySize === 'number') {\n            this.maximumBodySize = parameters.maximumBodySize;\n        }\n        this.bodyPart = this.getBodyComponent();\n        this.headerPart = this.getHeaderComponent();\n        this.bodyPart.init(Object.assign(Object.assign({}, parameters), { api: this.api }));\n        this.headerPart.init(Object.assign(Object.assign({}, parameters), { api: this.api }));\n        (_a = this.body) === null || _a === void 0 ? void 0 : _a.append(this.bodyPart.element);\n        (_b = this.header) === null || _b === void 0 ? void 0 : _b.append(this.headerPart.element);\n        if (typeof parameters.isExpanded === 'boolean') {\n            this.setExpanded(parameters.isExpanded);\n        }\n    }\n    toJSON() {\n        const params = this._params;\n        return Object.assign(Object.assign({}, super.toJSON()), { headerComponent: this.headerComponent, title: params.title });\n    }\n    renderOnce() {\n        this.header = document.createElement('div');\n        this.header.tabIndex = 0;\n        this.header.className = 'pane-header';\n        this.header.style.height = `${this.headerSize}px`;\n        this.header.style.lineHeight = `${this.headerSize}px`;\n        this.header.style.minHeight = `${this.headerSize}px`;\n        this.header.style.maxHeight = `${this.headerSize}px`;\n        this.element.appendChild(this.header);\n        this.body = document.createElement('div');\n        this.body.className = 'pane-body';\n        this.element.appendChild(this.body);\n    }\n    // TODO slightly hacky by-pass of the component to create a body and header component\n    getComponent() {\n        return {\n            update: (params) => {\n                var _a, _b;\n                (_a = this.bodyPart) === null || _a === void 0 ? void 0 : _a.update({ params });\n                (_b = this.headerPart) === null || _b === void 0 ? void 0 : _b.update({ params });\n            },\n            dispose: () => {\n                var _a, _b;\n                (_a = this.bodyPart) === null || _a === void 0 ? void 0 : _a.dispose();\n                (_b = this.headerPart) === null || _b === void 0 ? void 0 : _b.dispose();\n            },\n        };\n    }\n}\n","import { PaneviewApi } from '../api/component.api';\nimport { DragHandler } from '../dnd/abstractDragHandler';\nimport { getPaneData, LocalSelectionTransfer, PaneTransfer, } from '../dnd/dataTransfer';\nimport { Droptarget } from '../dnd/droptarget';\nimport { Emitter } from '../events';\nimport { PaneviewPanel, } from './paneviewPanel';\nexport class DraggablePaneviewPanel extends PaneviewPanel {\n    constructor(accessor, id, component, headerComponent, orientation, isExpanded, disableDnd) {\n        super(id, component, headerComponent, orientation, isExpanded, true);\n        this.accessor = accessor;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        if (!disableDnd) {\n            this.initDragFeatures();\n        }\n    }\n    initDragFeatures() {\n        if (!this.header) {\n            return;\n        }\n        const id = this.id;\n        const accessorId = this.accessor.id;\n        this.header.draggable = true;\n        this.handler = new (class PaneDragHandler extends DragHandler {\n            getData() {\n                LocalSelectionTransfer.getInstance().setData([new PaneTransfer(accessorId, id)], PaneTransfer.prototype);\n                return {\n                    dispose: () => {\n                        LocalSelectionTransfer.getInstance().clearData(PaneTransfer.prototype);\n                    },\n                };\n            }\n        })(this.header);\n        this.target = new Droptarget(this.element, {\n            acceptedTargetZones: ['top', 'bottom'],\n            overlayModel: {\n                activationSize: { type: 'percentage', value: 50 },\n            },\n            canDisplayOverlay: (event) => {\n                const data = getPaneData();\n                if (data) {\n                    if (data.paneId !== this.id &&\n                        data.viewId === this.accessor.id) {\n                        return true;\n                    }\n                }\n                if (this.accessor.options.showDndOverlay) {\n                    return this.accessor.options.showDndOverlay({\n                        nativeEvent: event,\n                        getData: getPaneData,\n                        panel: this,\n                    });\n                }\n                return false;\n            },\n        });\n        this.addDisposables(this._onDidDrop, this.handler, this.target, this.target.onDrop((event) => {\n            this.onDrop(event);\n        }));\n    }\n    onDrop(event) {\n        const data = getPaneData();\n        if (!data || data.viewId !== this.accessor.id) {\n            // if there is no local drag event for this panel\n            // or if the drag event was creating by another Paneview instance\n            this._onDidDrop.fire(Object.assign(Object.assign({}, event), { panel: this, api: new PaneviewApi(this.accessor), getData: getPaneData }));\n            return;\n        }\n        const containerApi = this._params\n            .containerApi;\n        const panelId = data.paneId;\n        const existingPanel = containerApi.getPanel(panelId);\n        if (!existingPanel) {\n            // if the panel doesn't exist\n            this._onDidDrop.fire(Object.assign(Object.assign({}, event), { panel: this, getData: getPaneData, api: new PaneviewApi(this.accessor) }));\n            return;\n        }\n        const allPanels = containerApi.panels;\n        const fromIndex = allPanels.indexOf(existingPanel);\n        let toIndex = containerApi.panels.indexOf(this);\n        if (event.position === 'left' || event.position === 'top') {\n            toIndex = Math.max(0, toIndex - 1);\n        }\n        if (event.position === 'right' || event.position === 'bottom') {\n            if (fromIndex > toIndex) {\n                toIndex++;\n            }\n            toIndex = Math.min(allPanels.length - 1, toIndex);\n        }\n        containerApi.movePanel(fromIndex, toIndex);\n    }\n}\n","import { Emitter } from '../events';\nimport { PanelApiImpl } from './panelApi';\nexport class GridviewPanelApiImpl extends PanelApiImpl {\n    constructor(id, panel) {\n        super(id);\n        this._onDidConstraintsChangeInternal = new Emitter();\n        this.onDidConstraintsChangeInternal = this._onDidConstraintsChangeInternal.event;\n        this._onDidConstraintsChange = new Emitter({\n            replay: true,\n        });\n        this.onDidConstraintsChange = this._onDidConstraintsChange.event;\n        this._onDidSizeChange = new Emitter();\n        this.onDidSizeChange = this._onDidSizeChange.event;\n        this.addDisposables(this._onDidConstraintsChangeInternal, this._onDidConstraintsChange, this._onDidSizeChange);\n        if (panel) {\n            this.initialize(panel);\n        }\n    }\n    setConstraints(value) {\n        this._onDidConstraintsChangeInternal.fire(value);\n    }\n    setSize(event) {\n        this._onDidSizeChange.fire(event);\n    }\n}\n","import { BasePanelView, } from './basePanelView';\nimport { GridviewPanelApiImpl, } from '../api/gridviewPanelApi';\nimport { Emitter } from '../events';\nexport class GridviewPanel extends BasePanelView {\n    get priority() {\n        return this._priority;\n    }\n    get snap() {\n        return this._snap;\n    }\n    get minimumWidth() {\n        const width = typeof this._minimumWidth === 'function'\n            ? this._minimumWidth()\n            : this._minimumWidth;\n        if (width !== this._evaluatedMinimumWidth) {\n            this._evaluatedMinimumWidth = width;\n            this.updateConstraints();\n        }\n        return width;\n    }\n    get minimumHeight() {\n        const height = typeof this._minimumHeight === 'function'\n            ? this._minimumHeight()\n            : this._minimumHeight;\n        if (height !== this._evaluatedMinimumHeight) {\n            this._evaluatedMinimumHeight = height;\n            this.updateConstraints();\n        }\n        return height;\n    }\n    get maximumHeight() {\n        const height = typeof this._maximumHeight === 'function'\n            ? this._maximumHeight()\n            : this._maximumHeight;\n        if (height !== this._evaluatedMaximumHeight) {\n            this._evaluatedMaximumHeight = height;\n            this.updateConstraints();\n        }\n        return height;\n    }\n    get maximumWidth() {\n        const width = typeof this._maximumWidth === 'function'\n            ? this._maximumWidth()\n            : this._maximumWidth;\n        if (width !== this._evaluatedMaximumWidth) {\n            this._evaluatedMaximumWidth = width;\n            this.updateConstraints();\n        }\n        return width;\n    }\n    get isActive() {\n        return this.api.isActive;\n    }\n    constructor(id, component) {\n        super(id, component, new GridviewPanelApiImpl(id));\n        this._evaluatedMinimumWidth = 0;\n        this._evaluatedMaximumWidth = Number.MAX_SAFE_INTEGER;\n        this._evaluatedMinimumHeight = 0;\n        this._evaluatedMaximumHeight = Number.MAX_SAFE_INTEGER;\n        this._minimumWidth = 0;\n        this._minimumHeight = 0;\n        this._maximumWidth = Number.MAX_SAFE_INTEGER;\n        this._maximumHeight = Number.MAX_SAFE_INTEGER;\n        this._snap = false;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this.api.initialize(this); // TODO: required to by-pass 'super before this' requirement\n        this.addDisposables(this._onDidChange, this.api.onVisibilityChange((event) => {\n            const { isVisible } = event;\n            const { accessor } = this._params;\n            accessor.setVisible(this, isVisible);\n        }), this.api.onActiveChange(() => {\n            const { accessor } = this._params;\n            accessor.setActive(this);\n        }), this.api.onDidConstraintsChangeInternal((event) => {\n            if (typeof event.minimumWidth === 'number' ||\n                typeof event.minimumWidth === 'function') {\n                this._minimumWidth = event.minimumWidth;\n            }\n            if (typeof event.minimumHeight === 'number' ||\n                typeof event.minimumHeight === 'function') {\n                this._minimumHeight = event.minimumHeight;\n            }\n            if (typeof event.maximumWidth === 'number' ||\n                typeof event.maximumWidth === 'function') {\n                this._maximumWidth = event.maximumWidth;\n            }\n            if (typeof event.maximumHeight === 'number' ||\n                typeof event.maximumHeight === 'function') {\n                this._maximumHeight = event.maximumHeight;\n            }\n        }), this.api.onDidSizeChange((event) => {\n            this._onDidChange.fire({\n                height: event.height,\n                width: event.width,\n            });\n        }));\n    }\n    setVisible(isVisible) {\n        this.api._onDidVisibilityChange.fire({ isVisible });\n    }\n    setActive(isActive) {\n        this.api._onDidActiveChange.fire({ isActive });\n    }\n    init(parameters) {\n        if (parameters.maximumHeight) {\n            this._maximumHeight = parameters.maximumHeight;\n        }\n        if (parameters.minimumHeight) {\n            this._minimumHeight = parameters.minimumHeight;\n        }\n        if (parameters.maximumWidth) {\n            this._maximumWidth = parameters.maximumWidth;\n        }\n        if (parameters.minimumWidth) {\n            this._minimumWidth = parameters.minimumWidth;\n        }\n        this._priority = parameters.priority;\n        this._snap = !!parameters.snap;\n        super.init(parameters);\n        if (typeof parameters.isVisible === 'boolean') {\n            this.setVisible(parameters.isVisible);\n        }\n    }\n    updateConstraints() {\n        this.api._onDidConstraintsChange.fire({\n            minimumWidth: this._evaluatedMinimumWidth,\n            maximumWidth: this._evaluatedMaximumWidth,\n            minimumHeight: this._evaluatedMinimumHeight,\n            maximumHeight: this._evaluatedMaximumHeight,\n        });\n    }\n    toJSON() {\n        const state = super.toJSON();\n        const maximum = (value) => value === Number.MAX_SAFE_INTEGER ? undefined : value;\n        const minimum = (value) => (value <= 0 ? undefined : value);\n        return Object.assign(Object.assign({}, state), { minimumHeight: minimum(this.minimumHeight), maximumHeight: maximum(this.maximumHeight), minimumWidth: minimum(this.minimumWidth), maximumWidth: maximum(this.maximumWidth), snap: this.snap, priority: this.priority });\n    }\n}\n","import { DockviewGroupPanelModel, } from './dockviewGroupPanelModel';\nimport { GridviewPanel } from '../gridview/gridviewPanel';\nexport class DockviewGroupPanel extends GridviewPanel {\n    get panels() {\n        return this._model.panels;\n    }\n    get activePanel() {\n        return this._model.activePanel;\n    }\n    get size() {\n        return this._model.size;\n    }\n    get model() {\n        return this._model;\n    }\n    get minimumHeight() {\n        return this._model.minimumHeight;\n    }\n    get maximumHeight() {\n        return this._model.maximumHeight;\n    }\n    get minimumWidth() {\n        return this._model.minimumWidth;\n    }\n    get maximumWidth() {\n        return this._model.maximumWidth;\n    }\n    get locked() {\n        return this._model.locked;\n    }\n    set locked(value) {\n        this._model.locked = value;\n    }\n    get header() {\n        return this._model.header;\n    }\n    constructor(accessor, id, options) {\n        super(id, 'groupview_default');\n        this._model = new DockviewGroupPanelModel(this.element, accessor, id, options, this);\n    }\n    initialize() {\n        this._model.initialize();\n    }\n    setActive(isActive) {\n        super.setActive(isActive);\n        this.model.setActive(isActive);\n    }\n    layout(width, height) {\n        super.layout(width, height);\n        this.model.layout(width, height);\n    }\n    getComponent() {\n        return this._model;\n    }\n    toJSON() {\n        // TODO fix typing\n        return this.model.toJSON();\n    }\n}\n","import { Emitter } from '../events';\nimport { GridviewPanelApiImpl } from './gridviewPanelApi';\nimport { MutableDisposable } from '../lifecycle';\nexport class DockviewPanelApiImpl extends GridviewPanelApiImpl {\n    get title() {\n        return this.panel.title;\n    }\n    get isGroupActive() {\n        var _a;\n        return !!((_a = this.group) === null || _a === void 0 ? void 0 : _a.isActive);\n    }\n    set group(value) {\n        const isOldGroupActive = this.isGroupActive;\n        this._group = value;\n        this._onDidGroupChange.fire();\n        if (this._group) {\n            this.disposable.value = this._group.api.onDidActiveChange(() => {\n                this._onDidActiveGroupChange.fire();\n            });\n            if (this.isGroupActive !== isOldGroupActive) {\n                this._onDidActiveGroupChange.fire();\n            }\n        }\n    }\n    get group() {\n        return this._group;\n    }\n    constructor(panel, group) {\n        super(panel.id);\n        this.panel = panel;\n        this._onDidTitleChange = new Emitter();\n        this.onDidTitleChange = this._onDidTitleChange.event;\n        this._onDidActiveGroupChange = new Emitter();\n        this.onDidActiveGroupChange = this._onDidActiveGroupChange.event;\n        this._onDidGroupChange = new Emitter();\n        this.onDidGroupChange = this._onDidGroupChange.event;\n        this.disposable = new MutableDisposable();\n        this.initialize(panel);\n        this._group = group;\n        this.addDisposables(this.disposable, this._onDidTitleChange, this._onDidGroupChange, this._onDidActiveGroupChange);\n    }\n    setTitle(title) {\n        this.panel.update({ params: { title } });\n    }\n    close() {\n        this.group.model.closePanel(this.panel);\n    }\n}\n","import { DockviewPanelApiImpl, } from '../api/dockviewPanelApi';\nimport { CompositeDisposable } from '../lifecycle';\nexport class DockviewPanel extends CompositeDisposable {\n    get params() {\n        return this._params;\n    }\n    get title() {\n        return this._title;\n    }\n    get group() {\n        return this._group;\n    }\n    constructor(id, accessor, containerApi, group, view) {\n        super();\n        this.id = id;\n        this.containerApi = containerApi;\n        this.view = view;\n        this._title = '';\n        this._group = group;\n        this.api = new DockviewPanelApiImpl(this, this._group);\n        this.addDisposables(this.api.onActiveChange(() => {\n            accessor.setActivePanel(this);\n        }), this.api.onDidSizeChange((event) => {\n            // forward the resize event to the group since if you want to resize a panel\n            // you are actually just resizing the panels parent which is the group\n            this.group.api.setSize(event);\n        }));\n    }\n    init(params) {\n        var _a;\n        this._params = params.params;\n        this.setTitle(params.title);\n        (_a = this.view) === null || _a === void 0 ? void 0 : _a.init(Object.assign(Object.assign({}, params), { api: this.api, containerApi: this.containerApi }));\n    }\n    focus() {\n        this.api._onFocusEvent.fire();\n    }\n    toJSON() {\n        return {\n            id: this.id,\n            contentComponent: this.view.contentComponent,\n            tabComponent: this.view.tabComponent,\n            params: Object.keys(this._params || {}).length > 0\n                ? this._params\n                : undefined,\n            title: this.title,\n        };\n    }\n    setTitle(title) {\n        var _a, _b;\n        const didTitleChange = title !== ((_a = this._params) === null || _a === void 0 ? void 0 : _a.title);\n        if (didTitleChange) {\n            this._title = title;\n            (_b = this.view) === null || _b === void 0 ? void 0 : _b.update({\n                params: {\n                    params: this._params,\n                    title: this.title,\n                },\n            });\n            this.api._onDidTitleChange.fire({ title });\n        }\n    }\n    update(event) {\n        var _a;\n        const params = event.params;\n        this._params = Object.assign(Object.assign({}, (this._params || {})), event.params.params);\n        if (params.title !== this.title) {\n            this._title = params.title;\n            this.api._onDidTitleChange.fire({ title: this.title });\n        }\n        (_a = this.view) === null || _a === void 0 ? void 0 : _a.update({\n            params: {\n                params: this._params,\n                title: this.title,\n            },\n        });\n    }\n    updateParentGroup(group, isGroupActive) {\n        this._group = group;\n        this.api.group = group;\n        const isPanelVisible = this._group.model.isPanelActive(this);\n        this.api._onDidActiveChange.fire({\n            isActive: isGroupActive && isPanelVisible,\n        });\n        this.api._onDidVisibilityChange.fire({\n            isVisible: isPanelVisible,\n        });\n        this.view.updateParentGroup(this._group, this._group.model.isPanelActive(this));\n    }\n    layout(width, height) {\n        var _a;\n        // the obtain the correct dimensions of the content panel we must deduct the tab height\n        this.api._onDidDimensionChange.fire({\n            width,\n            height: height - (this.group.model.header.height || 0),\n        });\n        (_a = this.view) === null || _a === void 0 ? void 0 : _a.layout(width, height);\n    }\n    dispose() {\n        var _a;\n        this.api.dispose();\n        (_a = this.view) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","const createSvgElementFromPath = (params) => {\n    const svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n    svg.setAttributeNS(null, 'height', params.height);\n    svg.setAttributeNS(null, 'width', params.width);\n    svg.setAttributeNS(null, 'viewBox', params.viewbox);\n    svg.setAttributeNS(null, 'aria-hidden', 'false');\n    svg.setAttributeNS(null, 'focusable', 'false');\n    svg.classList.add('dockview-svg');\n    const path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n    path.setAttributeNS(null, 'd', params.path);\n    svg.appendChild(path);\n    return svg;\n};\nexport const createCloseButton = () => createSvgElementFromPath({\n    width: '11',\n    height: '11',\n    viewbox: '0 0 28 28',\n    path: 'M2.1 27.3L0 25.2L11.55 13.65L0 2.1L2.1 0L13.65 11.55L25.2 0L27.3 2.1L15.75 13.65L27.3 25.2L25.2 27.3L13.65 15.75L2.1 27.3Z',\n});\nexport const createExpandMoreButton = () => createSvgElementFromPath({\n    width: '11',\n    height: '11',\n    viewbox: '0 0 24 15',\n    path: 'M12 14.15L0 2.15L2.15 0L12 9.9L21.85 0.0499992L24 2.2L12 14.15Z',\n});\nexport const createChevronRightButton = () => createSvgElementFromPath({\n    width: '11',\n    height: '11',\n    viewbox: '0 0 15 25',\n    path: 'M2.15 24.1L0 21.95L9.9 12.05L0 2.15L2.15 0L14.2 12.05L2.15 24.1Z',\n});\n","import { CompositeDisposable } from '../../../lifecycle';\nimport { addDisposableListener } from '../../../events';\nimport { createCloseButton } from '../../../svg';\nexport class DefaultTab extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor() {\n        super();\n        //\n        this.params = {};\n        this._element = document.createElement('div');\n        this._element.className = 'default-tab';\n        //\n        this._content = document.createElement('div');\n        this._content.className = 'tab-content';\n        //\n        this._actionContainer = document.createElement('div');\n        this._actionContainer.className = 'action-container';\n        //\n        this._list = document.createElement('ul');\n        this._list.className = 'tab-list';\n        //\n        this.action = document.createElement('div');\n        this.action.className = 'tab-action';\n        this.action.appendChild(createCloseButton());\n        //\n        this._element.appendChild(this._content);\n        this._element.appendChild(this._actionContainer);\n        this._actionContainer.appendChild(this._list);\n        this._list.appendChild(this.action);\n        //\n        this.addDisposables(addDisposableListener(this._actionContainer, 'mousedown', (ev) => {\n            ev.preventDefault();\n        }));\n        this.render();\n    }\n    update(event) {\n        this.params = Object.assign(Object.assign({}, this.params), event.params);\n        this.render();\n    }\n    focus() {\n        //noop\n    }\n    init(params) {\n        this.params = params;\n        this._content.textContent = params.title;\n        addDisposableListener(this.action, 'click', (ev) => {\n            ev.preventDefault(); //\n            this.params.api.close();\n        });\n    }\n    onGroupChange(_group) {\n        this.render();\n    }\n    onPanelVisibleChange(_isPanelVisible) {\n        this.render();\n    }\n    layout(_width, _height) {\n        // noop\n    }\n    render() {\n        if (this._content.textContent !== this.params.title) {\n            this._content.textContent = this.params.title;\n        }\n    }\n}\n","export function createComponent(id, componentName, components = {}, frameworkComponents = {}, createFrameworkComponent, fallback) {\n    const Component = typeof componentName === 'string'\n        ? components[componentName]\n        : undefined;\n    const FrameworkComponent = typeof componentName === 'string'\n        ? frameworkComponents[componentName]\n        : undefined;\n    if (Component && FrameworkComponent) {\n        throw new Error(`Cannot create '${id}'. component '${componentName}' registered as both a component and frameworkComponent`);\n    }\n    if (FrameworkComponent) {\n        if (!createFrameworkComponent) {\n            throw new Error(`Cannot create '${id}' for framework component '${componentName}'. you must register a frameworkPanelWrapper to use framework components`);\n        }\n        return createFrameworkComponent.createComponent(id, componentName, FrameworkComponent);\n    }\n    if (!Component) {\n        if (fallback) {\n            return fallback();\n        }\n        throw new Error(`Cannot create '${id}', no component '${componentName}' provided`);\n    }\n    return new Component(id, componentName);\n}\n","import { DefaultTab } from './components/tab/defaultTab';\nimport { createComponent } from '../panel/componentFactory';\nexport class DockviewPanelModel {\n    get content() {\n        return this._content;\n    }\n    get tab() {\n        return this._tab;\n    }\n    constructor(accessor, id, contentComponent, tabComponent) {\n        var _a;\n        this.accessor = accessor;\n        this.id = id;\n        this.contentComponent = contentComponent;\n        this.tabComponent = tabComponent;\n        this._group = null;\n        this._isPanelVisible = null;\n        this._content = this.createContentComponent(this.id, contentComponent);\n        this._tab =\n            (_a = this.createTabComponent(this.id, tabComponent)) !== null && _a !== void 0 ? _a : new DefaultTab();\n    }\n    init(params) {\n        this.content.init(Object.assign(Object.assign({}, params), { tab: this.tab }));\n        this.tab.init(params);\n    }\n    updateParentGroup(group, isPanelVisible) {\n        if (group !== this._group) {\n            this._group = group;\n            if (this._content.onGroupChange) {\n                this._content.onGroupChange(group);\n            }\n            if (this._tab.onGroupChange) {\n                this._tab.onGroupChange(group);\n            }\n        }\n        if (isPanelVisible !== this._isPanelVisible) {\n            this._isPanelVisible = isPanelVisible;\n            if (this._content.onPanelVisibleChange) {\n                this._content.onPanelVisibleChange(isPanelVisible);\n            }\n            if (this._tab.onPanelVisibleChange) {\n                this._tab.onPanelVisibleChange(isPanelVisible);\n            }\n        }\n    }\n    layout(width, height) {\n        var _a, _b;\n        (_b = (_a = this.content).layout) === null || _b === void 0 ? void 0 : _b.call(_a, width, height);\n    }\n    update(event) {\n        var _a, _b, _c, _d;\n        (_b = (_a = this.content).update) === null || _b === void 0 ? void 0 : _b.call(_a, event);\n        (_d = (_c = this.tab).update) === null || _d === void 0 ? void 0 : _d.call(_c, event);\n    }\n    dispose() {\n        var _a, _b, _c, _d;\n        (_b = (_a = this.content).dispose) === null || _b === void 0 ? void 0 : _b.call(_a);\n        (_d = (_c = this.tab).dispose) === null || _d === void 0 ? void 0 : _d.call(_c);\n    }\n    createContentComponent(id, componentName) {\n        var _a;\n        return createComponent(id, componentName, this.accessor.options.components || {}, this.accessor.options.frameworkComponents, (_a = this.accessor.options.frameworkComponentFactory) === null || _a === void 0 ? void 0 : _a.content);\n    }\n    createTabComponent(id, componentName) {\n        var _a;\n        return createComponent(id, componentName, this.accessor.options.tabComponents || {}, this.accessor.options.frameworkTabComponents, (_a = this.accessor.options.frameworkComponentFactory) === null || _a === void 0 ? void 0 : _a.tab, () => new DefaultTab());\n    }\n}\n","import { DockviewPanel } from './dockviewPanel';\nimport { createComponent } from '../panel/componentFactory';\nimport { DefaultTab } from './components/tab/defaultTab';\nimport { DockviewPanelModel } from './dockviewPanelModel';\nimport { DockviewApi } from '../api/component.api';\nexport class DefaultDockviewDeserialzier {\n    constructor(layout) {\n        this.layout = layout;\n    }\n    fromJSON(panelData, group) {\n        var _a, _b, _c;\n        const panelId = panelData.id;\n        const params = panelData.params;\n        const title = panelData.title;\n        const viewData = panelData.view;\n        const contentComponent = viewData\n            ? viewData.content.id\n            : panelData.contentComponent || 'unknown';\n        const tabComponent = viewData\n            ? (_a = viewData.tab) === null || _a === void 0 ? void 0 : _a.id\n            : panelData.tabComponent;\n        let tab;\n        if (tabComponent) {\n            tab = createComponent(panelId, tabComponent, this.layout.options.tabComponents, this.layout.options.frameworkTabComponents, (_b = this.layout.options.frameworkComponentFactory) === null || _b === void 0 ? void 0 : _b.tab, () => new DefaultTab());\n        }\n        else if (this.layout.options.defaultTabComponent) {\n            tab = createComponent(panelId, this.layout.options.defaultTabComponent, this.layout.options.tabComponents, this.layout.options.frameworkTabComponents, (_c = this.layout.options.frameworkComponentFactory) === null || _c === void 0 ? void 0 : _c.tab, () => new DefaultTab());\n        }\n        else {\n            tab = new DefaultTab();\n        }\n        const view = new DockviewPanelModel(this.layout, panelId, contentComponent, tabComponent);\n        const panel = new DockviewPanel(panelId, this.layout, new DockviewApi(this.layout), group, view);\n        panel.init({\n            title: title || panelId,\n            params: params || {},\n        });\n        return panel;\n    }\n}\n","import { addDisposableListener } from '../../../events';\nimport { toggleClass } from '../../../dom';\nimport { CompositeDisposable } from '../../../lifecycle';\nimport { createCloseButton } from '../../../svg';\nexport class Watermark extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor() {\n        super();\n        this._element = document.createElement('div');\n        this._element.className = 'watermark';\n        const title = document.createElement('div');\n        title.className = 'watermark-title';\n        const emptySpace = document.createElement('span');\n        emptySpace.style.flexGrow = '1';\n        const content = document.createElement('div');\n        content.className = 'watermark-content';\n        this._element.appendChild(title);\n        this._element.appendChild(content);\n        const actionsContainer = document.createElement('div');\n        actionsContainer.className = 'actions-container';\n        const closeAnchor = document.createElement('div');\n        closeAnchor.className = 'close-action';\n        closeAnchor.appendChild(createCloseButton());\n        actionsContainer.appendChild(closeAnchor);\n        title.appendChild(emptySpace);\n        title.appendChild(actionsContainer);\n        this.addDisposables(addDisposableListener(closeAnchor, 'click', (ev) => {\n            var _a;\n            ev.preventDefault();\n            if (this.group) {\n                (_a = this.params) === null || _a === void 0 ? void 0 : _a.containerApi.removeGroup(this.group);\n            }\n        }));\n    }\n    update(_event) {\n        // noop\n    }\n    focus() {\n        // noop\n    }\n    layout(_width, _height) {\n        // noop\n    }\n    init(_params) {\n        this.render();\n    }\n    updateParentGroup(group, _visible) {\n        this.group = group;\n        this.render();\n    }\n    dispose() {\n        super.dispose();\n    }\n    render() {\n        const isOneGroup = !!(this.params && this.params.containerApi.size <= 1);\n        toggleClass(this.element, 'has-actions', isOneGroup);\n    }\n}\n","import { getRelativeLocation, getGridLocation, } from '../gridview/gridview';\nimport { directionToPosition, Droptarget } from '../dnd/droptarget';\nimport { tail, sequenceEquals } from '../array';\nimport { DockviewPanel } from './dockviewPanel';\nimport { CompositeDisposable } from '../lifecycle';\nimport { Event, Emitter } from '../events';\nimport { Watermark } from './components/watermark/watermark';\nimport { DockviewDropTargets, } from './types';\nimport { sequentialNumberGenerator } from '../math';\nimport { DefaultDockviewDeserialzier } from './deserializer';\nimport { createComponent } from '../panel/componentFactory';\nimport { isGroupOptionsWithGroup, isGroupOptionsWithPanel, isPanelOptionsWithGroup, isPanelOptionsWithPanel, } from './options';\nimport { BaseGrid, toTarget, } from '../gridview/baseComponentGridview';\nimport { DockviewApi } from '../api/component.api';\nimport { Orientation, Sizing } from '../splitview/splitview';\nimport { DockviewGroupPanel } from './dockviewGroupPanel';\nimport { DockviewPanelModel } from './dockviewPanelModel';\nimport { getPanelData } from '../dnd/dataTransfer';\nexport class DockviewComponent extends BaseGrid {\n    get orientation() {\n        return this.gridview.orientation;\n    }\n    get totalPanels() {\n        return this.panels.length;\n    }\n    get panels() {\n        return this.groups.flatMap((group) => group.panels);\n    }\n    get options() {\n        return this._options;\n    }\n    get activePanel() {\n        const activeGroup = this.activeGroup;\n        if (!activeGroup) {\n            return undefined;\n        }\n        return activeGroup.activePanel;\n    }\n    set tabHeight(height) {\n        this.options.tabHeight = height;\n        this._groups.forEach((value) => {\n            value.value.model.header.height = height;\n        });\n    }\n    get tabHeight() {\n        return this.options.tabHeight;\n    }\n    constructor(element, options) {\n        super(element, {\n            proportionalLayout: true,\n            orientation: options.orientation || Orientation.HORIZONTAL,\n            styles: options.styles,\n        });\n        this.nextGroupId = sequentialNumberGenerator();\n        this._deserializer = new DefaultDockviewDeserialzier(this);\n        this.watermark = null;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onDidRemovePanel = new Emitter();\n        this.onDidRemovePanel = this._onDidRemovePanel.event;\n        this._onDidAddPanel = new Emitter();\n        this.onDidAddPanel = this._onDidAddPanel.event;\n        this._onDidLayoutFromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutFromJSON.event;\n        this._onDidActivePanelChange = new Emitter();\n        this.onDidActivePanelChange = this._onDidActivePanelChange.event;\n        this.element.classList.add('dv-dockview');\n        this.addDisposables(this._onDidDrop, Event.any(this.onDidAddGroup, this.onDidRemoveGroup)(() => {\n            this.updateWatermark();\n        }), Event.any(this.onDidAddPanel, this.onDidRemovePanel, this.onDidActivePanelChange)(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }));\n        this._options = options;\n        if (!this.options.components) {\n            this.options.components = {};\n        }\n        if (!this.options.frameworkComponents) {\n            this.options.frameworkComponents = {};\n        }\n        if (!this.options.frameworkTabComponents) {\n            this.options.frameworkTabComponents = {};\n        }\n        if (!this.options.tabComponents) {\n            this.options.tabComponents = {};\n        }\n        if (!this.options.watermarkComponent &&\n            !this.options.watermarkFrameworkComponent) {\n            this.options.watermarkComponent = Watermark;\n        }\n        const dropTarget = new Droptarget(this.element, {\n            canDisplayOverlay: (event, position) => {\n                const data = getPanelData();\n                if (data) {\n                    if (data.viewId !== this.id) {\n                        return false;\n                    }\n                    return true;\n                }\n                if (this.options.showDndOverlay) {\n                    return this.options.showDndOverlay({\n                        nativeEvent: event,\n                        position: position,\n                        target: DockviewDropTargets.Edge,\n                        getData: getPanelData,\n                    });\n                }\n                return false;\n            },\n            acceptedTargetZones: ['top', 'bottom', 'left', 'right'],\n            overlayModel: {\n                activationSize: { type: 'pixels', value: 10 },\n                size: { type: 'pixels', value: 20 },\n            },\n        });\n        this.addDisposables(dropTarget, dropTarget.onDrop((event) => {\n            const data = getPanelData();\n            if (data) {\n                this.moveGroupOrPanel(this.orthogonalize(event.position), data.groupId, data.panelId || undefined, 'center');\n            }\n            else {\n                this._onDidDrop.fire(Object.assign(Object.assign({}, event), { api: this._api, group: null, getData: getPanelData }));\n            }\n        }));\n        this._api = new DockviewApi(this);\n        this.updateWatermark();\n    }\n    orthogonalize(position) {\n        switch (position) {\n            case 'top':\n            case 'bottom':\n                if (this.gridview.orientation === Orientation.HORIZONTAL) {\n                    // we need to add to a vertical splitview but the current root is a horizontal splitview.\n                    // insert a vertical splitview at the root level and add the existing view as a child\n                    this.gridview.insertOrthogonalSplitviewAtRoot();\n                }\n                break;\n            case 'left':\n            case 'right':\n                if (this.gridview.orientation === Orientation.VERTICAL) {\n                    // we need to add to a horizontal splitview but the current root is a vertical splitview.\n                    // insert a horiziontal splitview at the root level and add the existing view as a child\n                    this.gridview.insertOrthogonalSplitviewAtRoot();\n                }\n                break;\n            default:\n                break;\n        }\n        switch (position) {\n            case 'top':\n            case 'left':\n                return this.createGroupAtLocation([0]); // insert into first position\n            case 'bottom':\n            case 'right':\n                return this.createGroupAtLocation([this.gridview.length]); // insert into last position\n            default:\n                throw new Error(`unsupported position ${position}`);\n        }\n    }\n    updateOptions(options) {\n        const hasOrientationChanged = typeof options.orientation === 'string' &&\n            this.gridview.orientation !== options.orientation;\n        this._options = Object.assign(Object.assign({}, this.options), options);\n        if (hasOrientationChanged) {\n            this.gridview.orientation = options.orientation;\n        }\n        this.layout(this.gridview.width, this.gridview.height, true);\n    }\n    focus() {\n        var _a;\n        (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    getGroupPanel(id) {\n        return this.panels.find((panel) => panel.id === id);\n    }\n    setActivePanel(panel) {\n        this.doSetGroupActive(panel.group);\n        panel.group.model.openPanel(panel);\n    }\n    moveToNext(options = {}) {\n        var _a;\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        if (options.includePanel && options.group) {\n            if (options.group.activePanel !==\n                options.group.panels[options.group.panels.length - 1]) {\n                options.group.model.moveToNext({ suppressRoll: true });\n                return;\n            }\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.next(location)) === null || _a === void 0 ? void 0 : _a.view;\n        this.doSetGroupActive(next);\n    }\n    moveToPrevious(options = {}) {\n        var _a;\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        if (options.includePanel && options.group) {\n            if (options.group.activePanel !== options.group.panels[0]) {\n                options.group.model.moveToPrevious({ suppressRoll: true });\n                return;\n            }\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.previous(location)) === null || _a === void 0 ? void 0 : _a.view;\n        if (next) {\n            this.doSetGroupActive(next);\n        }\n    }\n    /**\n     * Serialize the current state of the layout\n     *\n     * @returns A JSON respresentation of the layout\n     */\n    toJSON() {\n        var _a;\n        const data = this.gridview.serialize();\n        const panels = this.panels.reduce((collection, panel) => {\n            collection[panel.id] = panel.toJSON();\n            return collection;\n        }, {});\n        return {\n            grid: data,\n            panels,\n            activeGroup: (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.id,\n            options: { tabHeight: this.tabHeight },\n        };\n    }\n    fromJSON(data) {\n        this.clear();\n        const { grid, panels, options, activeGroup } = data;\n        if (typeof (options === null || options === void 0 ? void 0 : options.tabHeight) === 'number') {\n            this.tabHeight = options.tabHeight;\n        }\n        if (grid.root.type !== 'branch' || !Array.isArray(grid.root.data)) {\n            throw new Error('root must be of type branch');\n        }\n        this.gridview.deserialize(grid, {\n            fromJSON: (node) => {\n                const { id, locked, hideHeader, views, activeView } = node.data;\n                const group = this.createGroup({\n                    id,\n                    locked: !!locked,\n                    hideHeader: !!hideHeader,\n                });\n                this._onDidAddGroup.fire(group);\n                for (const child of views) {\n                    const panel = this._deserializer.fromJSON(panels[child], group);\n                    const isActive = typeof activeView === 'string' &&\n                        activeView === panel.id;\n                    group.model.openPanel(panel, {\n                        skipSetPanelActive: !isActive,\n                        skipSetGroupActive: true,\n                    });\n                }\n                if (!group.activePanel && group.panels.length > 0) {\n                    group.model.openPanel(group.panels[group.panels.length - 1], {\n                        skipSetGroupActive: true,\n                    });\n                }\n                return group;\n            },\n        });\n        if (typeof activeGroup === 'string') {\n            const panel = this.getPanel(activeGroup);\n            if (panel) {\n                this.doSetGroupActive(panel);\n            }\n        }\n        this.gridview.layout(this.width, this.height);\n        this._onDidLayoutFromJSON.fire();\n    }\n    clear() {\n        const groups = Array.from(this._groups.values()).map((_) => _.value);\n        const hasActiveGroup = !!this.activeGroup;\n        const hasActivePanel = !!this.activePanel;\n        for (const group of groups) {\n            // remove the group will automatically remove the panels\n            this.removeGroup(group, true);\n        }\n        if (hasActiveGroup) {\n            this.doSetGroupActive(undefined);\n        }\n        if (hasActivePanel) {\n            this._onDidActivePanelChange.fire(undefined);\n        }\n        this.gridview.clear();\n    }\n    closeAllGroups() {\n        for (const entry of this._groups.entries()) {\n            const [_, group] = entry;\n            group.value.model.closeAllPanels();\n        }\n    }\n    addPanel(options) {\n        var _a, _b;\n        if (this.panels.find((_) => _.id === options.id)) {\n            throw new Error(`panel with id ${options.id} already exists`);\n        }\n        let referenceGroup;\n        if (options.position) {\n            if (isPanelOptionsWithPanel(options.position)) {\n                const referencePanel = typeof options.position.referencePanel === 'string'\n                    ? this.getGroupPanel(options.position.referencePanel)\n                    : options.position.referencePanel;\n                if (!referencePanel) {\n                    throw new Error(`referencePanel ${options.position.referencePanel} does not exist`);\n                }\n                referenceGroup = this.findGroup(referencePanel);\n            }\n            else if (isPanelOptionsWithGroup(options.position)) {\n                referenceGroup =\n                    typeof options.position.referenceGroup === 'string'\n                        ? (_a = this._groups.get(options.position.referenceGroup)) === null || _a === void 0 ? void 0 : _a.value\n                        : options.position.referenceGroup;\n                if (!referenceGroup) {\n                    throw new Error(`referencePanel ${options.position.referenceGroup} does not exist`);\n                }\n            }\n            else {\n                const group = this.orthogonalize(directionToPosition(options.position.direction));\n                const panel = this.createPanel(options, group);\n                group.model.openPanel(panel);\n                return panel;\n            }\n        }\n        else {\n            referenceGroup = this.activeGroup;\n        }\n        let panel;\n        if (referenceGroup) {\n            const target = toTarget(((_b = options.position) === null || _b === void 0 ? void 0 : _b.direction) || 'within');\n            if (target === 'center') {\n                panel = this.createPanel(options, referenceGroup);\n                referenceGroup.model.openPanel(panel);\n            }\n            else {\n                const location = getGridLocation(referenceGroup.element);\n                const relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n                const group = this.createGroupAtLocation(relativeLocation);\n                panel = this.createPanel(options, group);\n                group.model.openPanel(panel);\n            }\n        }\n        else {\n            const group = this.createGroupAtLocation();\n            panel = this.createPanel(options, group);\n            group.model.openPanel(panel);\n        }\n        return panel;\n    }\n    removePanel(panel, options = {\n        removeEmptyGroup: true,\n        skipDispose: false,\n    }) {\n        const group = panel.group;\n        if (!group) {\n            throw new Error(`cannot remove panel ${panel.id}. it's missing a group.`);\n        }\n        group.model.removePanel(panel);\n        panel.dispose();\n        if (group.size === 0 && options.removeEmptyGroup) {\n            this.removeGroup(group);\n        }\n    }\n    createWatermarkComponent() {\n        var _a;\n        return createComponent('watermark-id', 'watermark-name', this.options.watermarkComponent\n            ? { 'watermark-name': this.options.watermarkComponent }\n            : {}, this.options.watermarkFrameworkComponent\n            ? { 'watermark-name': this.options.watermarkFrameworkComponent }\n            : {}, (_a = this.options.frameworkComponentFactory) === null || _a === void 0 ? void 0 : _a.watermark);\n    }\n    updateWatermark() {\n        var _a, _b;\n        if (this.groups.length === 0) {\n            if (!this.watermark) {\n                this.watermark = this.createWatermarkComponent();\n                this.watermark.init({\n                    containerApi: new DockviewApi(this),\n                });\n                const watermarkContainer = document.createElement('div');\n                watermarkContainer.className = 'dv-watermark-container';\n                watermarkContainer.appendChild(this.watermark.element);\n                this.element.appendChild(watermarkContainer);\n            }\n        }\n        else if (this.watermark) {\n            this.watermark.element.parentElement.remove();\n            (_b = (_a = this.watermark).dispose) === null || _b === void 0 ? void 0 : _b.call(_a);\n            this.watermark = null;\n        }\n    }\n    addGroup(options) {\n        var _a;\n        const group = this.createGroup();\n        if (options) {\n            let referenceGroup;\n            if (isGroupOptionsWithPanel(options)) {\n                const referencePanel = typeof options.referencePanel === 'string'\n                    ? this.panels.find((panel) => panel.id === options.referencePanel)\n                    : options.referencePanel;\n                if (!referencePanel) {\n                    throw new Error(`reference panel ${options.referencePanel} does not exist`);\n                }\n                referenceGroup = this.findGroup(referencePanel);\n                if (!referenceGroup) {\n                    throw new Error(`reference group for reference panel ${options.referencePanel} does not exist`);\n                }\n            }\n            else if (isGroupOptionsWithGroup(options)) {\n                referenceGroup =\n                    typeof options.referenceGroup === 'string'\n                        ? (_a = this._groups.get(options.referenceGroup)) === null || _a === void 0 ? void 0 : _a.value\n                        : options.referenceGroup;\n                if (!referenceGroup) {\n                    throw new Error(`reference group ${options.referenceGroup} does not exist`);\n                }\n            }\n            else {\n                const group = this.orthogonalize(directionToPosition(options.direction));\n                return group;\n            }\n            const target = toTarget(options.direction || 'within');\n            const location = getGridLocation(referenceGroup.element);\n            const relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n            this.doAddGroup(group, relativeLocation);\n            return group;\n        }\n        else {\n            this.doAddGroup(group);\n            return group;\n        }\n    }\n    removeGroup(group, skipActive = false) {\n        const panels = [...group.panels]; // reassign since group panels will mutate\n        for (const panel of panels) {\n            this.removePanel(panel, {\n                removeEmptyGroup: false,\n                skipDispose: false,\n            });\n        }\n        super.doRemoveGroup(group, { skipActive });\n    }\n    moveGroupOrPanel(referenceGroup, groupId, itemId, target, index) {\n        var _a;\n        const sourceGroup = groupId\n            ? (_a = this._groups.get(groupId)) === null || _a === void 0 ? void 0 : _a.value\n            : undefined;\n        if (itemId === undefined) {\n            if (sourceGroup) {\n                this.moveGroup(sourceGroup, referenceGroup, target);\n            }\n            return;\n        }\n        if (!target || target === 'center') {\n            const groupItem = (sourceGroup === null || sourceGroup === void 0 ? void 0 : sourceGroup.model.removePanel(itemId)) ||\n                this.panels.find((panel) => panel.id === itemId);\n            if (!groupItem) {\n                throw new Error(`No panel with id ${itemId}`);\n            }\n            if ((sourceGroup === null || sourceGroup === void 0 ? void 0 : sourceGroup.model.size) === 0) {\n                this.doRemoveGroup(sourceGroup);\n            }\n            referenceGroup.model.openPanel(groupItem, { index });\n        }\n        else {\n            const referenceLocation = getGridLocation(referenceGroup.element);\n            const targetLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, target);\n            if (sourceGroup && sourceGroup.size < 2) {\n                const [targetParentLocation, to] = tail(targetLocation);\n                const sourceLocation = getGridLocation(sourceGroup.element);\n                const [sourceParentLocation, from] = tail(sourceLocation);\n                if (sequenceEquals(sourceParentLocation, targetParentLocation)) {\n                    // special case when 'swapping' two views within same grid location\n                    // if a group has one tab - we are essentially moving the 'group'\n                    // which is equivalent to swapping two views in this case\n                    this.gridview.moveView(sourceParentLocation, from, to);\n                }\n                else {\n                    // source group will become empty so delete the group\n                    const targetGroup = this.doRemoveGroup(sourceGroup, {\n                        skipActive: true,\n                        skipDispose: true,\n                    });\n                    // after deleting the group we need to re-evaulate the ref location\n                    const updatedReferenceLocation = getGridLocation(referenceGroup.element);\n                    const location = getRelativeLocation(this.gridview.orientation, updatedReferenceLocation, target);\n                    this.doAddGroup(targetGroup, location);\n                }\n            }\n            else {\n                const groupItem = (sourceGroup === null || sourceGroup === void 0 ? void 0 : sourceGroup.model.removePanel(itemId)) ||\n                    this.panels.find((panel) => panel.id === itemId);\n                if (!groupItem) {\n                    throw new Error(`No panel with id ${itemId}`);\n                }\n                const dropLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, target);\n                const group = this.createGroupAtLocation(dropLocation);\n                group.model.openPanel(groupItem);\n            }\n        }\n    }\n    moveGroup(sourceGroup, referenceGroup, target) {\n        if (sourceGroup) {\n            if (!target || target === 'center') {\n                const activePanel = sourceGroup.activePanel;\n                const panels = [...sourceGroup.panels].map((p) => sourceGroup.model.removePanel(p.id));\n                if ((sourceGroup === null || sourceGroup === void 0 ? void 0 : sourceGroup.model.size) === 0) {\n                    this.doRemoveGroup(sourceGroup);\n                }\n                for (const panel of panels) {\n                    referenceGroup.model.openPanel(panel, {\n                        skipSetPanelActive: panel !== activePanel,\n                    });\n                }\n            }\n            else {\n                this.gridview.removeView(getGridLocation(sourceGroup.element));\n                const referenceLocation = getGridLocation(referenceGroup.element);\n                const dropLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, target);\n                this.gridview.addView(sourceGroup, Sizing.Distribute, dropLocation);\n            }\n        }\n    }\n    doSetGroupActive(group, skipFocus) {\n        var _a, _b;\n        const isGroupAlreadyFocused = this._activeGroup === group;\n        super.doSetGroupActive(group, skipFocus);\n        if (!isGroupAlreadyFocused && ((_a = this._activeGroup) === null || _a === void 0 ? void 0 : _a.activePanel)) {\n            this._onDidActivePanelChange.fire((_b = this._activeGroup) === null || _b === void 0 ? void 0 : _b.activePanel);\n        }\n    }\n    createGroup(options) {\n        if (!options) {\n            options = { tabHeight: this.tabHeight };\n        }\n        if (typeof options.tabHeight !== 'number') {\n            options.tabHeight = this.tabHeight;\n        }\n        let id = options === null || options === void 0 ? void 0 : options.id;\n        if (id && this._groups.has(options.id)) {\n            console.warn(`Duplicate group id ${options === null || options === void 0 ? void 0 : options.id}. reassigning group id to avoid errors`);\n            id = undefined;\n        }\n        if (!id) {\n            id = this.nextGroupId.next();\n            while (this._groups.has(id)) {\n                id = this.nextGroupId.next();\n            }\n        }\n        const view = new DockviewGroupPanel(this, id, options);\n        view.init({ params: {}, accessor: null }); // required to initialized .part and allow for correct disposal of group\n        if (!this._groups.has(view.id)) {\n            const disposable = new CompositeDisposable(view.model.onMove((event) => {\n                const { groupId, itemId, target, index } = event;\n                this.moveGroupOrPanel(view, groupId, itemId, target, index);\n            }), view.model.onDidDrop((event) => {\n                this._onDidDrop.fire(Object.assign(Object.assign({}, event), { api: this._api, group: view }));\n            }), view.model.onDidAddPanel((event) => {\n                this._onDidAddPanel.fire(event.panel);\n            }), view.model.onDidRemovePanel((event) => {\n                this._onDidRemovePanel.fire(event.panel);\n            }), view.model.onDidActivePanelChange((event) => {\n                this._onDidActivePanelChange.fire(event.panel);\n            }));\n            this._groups.set(view.id, { value: view, disposable });\n        }\n        // TODO: must be called after the above listeners have been setup,\n        // not an ideal pattern\n        view.initialize();\n        if (typeof this.options.tabHeight === 'number') {\n            view.model.header.height = this.options.tabHeight;\n        }\n        return view;\n    }\n    createPanel(options, group) {\n        const contentComponent = options.component;\n        const tabComponent = options.tabComponent || this.options.defaultTabComponent;\n        const view = new DockviewPanelModel(this, options.id, contentComponent, tabComponent);\n        const panel = new DockviewPanel(options.id, this, this._api, group, view);\n        panel.init({\n            title: options.title || options.id,\n            params: (options === null || options === void 0 ? void 0 : options.params) || {},\n        });\n        return panel;\n    }\n    createGroupAtLocation(location = [0]) {\n        const group = this.createGroup();\n        this.doAddGroup(group, location);\n        return group;\n    }\n    findGroup(panel) {\n        var _a;\n        return (_a = Array.from(this._groups.values()).find((group) => group.value.model.containsPanel(panel))) === null || _a === void 0 ? void 0 : _a.value;\n    }\n    dispose() {\n        super.dispose();\n        this._onDidActivePanelChange.dispose();\n        this._onDidAddPanel.dispose();\n        this._onDidRemovePanel.dispose();\n        this._onDidLayoutFromJSON.dispose();\n    }\n}\n","export function isPanelOptionsWithPanel(data) {\n    if (data.referencePanel) {\n        return true;\n    }\n    return false;\n}\nexport function isPanelOptionsWithGroup(data) {\n    if (data.referenceGroup) {\n        return true;\n    }\n    return false;\n}\nexport function isGroupOptionsWithPanel(data) {\n    if (data.referencePanel) {\n        return true;\n    }\n    return false;\n}\nexport function isGroupOptionsWithGroup(data) {\n    if (data.referenceGroup) {\n        return true;\n    }\n    return false;\n}\n","import { getRelativeLocation, getGridLocation, } from './gridview';\nimport { tail, sequenceEquals } from '../array';\nimport { CompositeDisposable } from '../lifecycle';\nimport { BaseGrid, toTarget, } from './baseComponentGridview';\nimport { createComponent } from '../panel/componentFactory';\nimport { Emitter } from '../events';\nexport class GridviewComponent extends BaseGrid {\n    get orientation() {\n        return this.gridview.orientation;\n    }\n    set orientation(value) {\n        this.gridview.orientation = value;\n    }\n    get options() {\n        return this._options;\n    }\n    get deserializer() {\n        return this._deserializer;\n    }\n    set deserializer(value) {\n        this._deserializer = value;\n    }\n    constructor(element, options) {\n        super(element, {\n            proportionalLayout: options.proportionalLayout,\n            orientation: options.orientation,\n            styles: options.styles,\n        });\n        this._onDidLayoutfromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutfromJSON.event;\n        this._options = options;\n        if (!this.options.components) {\n            this.options.components = {};\n        }\n        if (!this.options.frameworkComponents) {\n            this.options.frameworkComponents = {};\n        }\n    }\n    updateOptions(options) {\n        const hasOrientationChanged = typeof options.orientation === 'string' &&\n            this.gridview.orientation !== options.orientation;\n        this._options = Object.assign(Object.assign({}, this.options), options);\n        if (hasOrientationChanged) {\n            this.gridview.orientation = options.orientation;\n        }\n        this.layout(this.gridview.width, this.gridview.height, true);\n    }\n    removePanel(panel) {\n        this.removeGroup(panel);\n    }\n    /**\n     * Serialize the current state of the layout\n     *\n     * @returns A JSON respresentation of the layout\n     */\n    toJSON() {\n        var _a;\n        const data = this.gridview.serialize();\n        return {\n            grid: data,\n            activePanel: (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.id,\n        };\n    }\n    setVisible(panel, visible) {\n        this.gridview.setViewVisible(getGridLocation(panel.element), visible);\n    }\n    setActive(panel) {\n        this._groups.forEach((value, _key) => {\n            value.value.setActive(panel === value.value);\n        });\n    }\n    focus() {\n        var _a;\n        (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    fromJSON(serializedGridview) {\n        this.clear();\n        const { grid, activePanel } = serializedGridview;\n        const queue = [];\n        this.gridview.deserialize(grid, {\n            fromJSON: (node) => {\n                const { data } = node;\n                const view = createComponent(data.id, data.component, this.options.components || {}, this.options.frameworkComponents || {}, this.options.frameworkComponentFactory\n                    ? {\n                        createComponent: this.options.frameworkComponentFactory\n                            .createComponent,\n                    }\n                    : undefined);\n                queue.push(() => view.init({\n                    params: data.params,\n                    minimumWidth: data.minimumWidth,\n                    maximumWidth: data.maximumWidth,\n                    minimumHeight: data.minimumHeight,\n                    maximumHeight: data.maximumHeight,\n                    priority: data.priority,\n                    snap: !!data.snap,\n                    accessor: this,\n                    isVisible: node.visible,\n                }));\n                this._onDidAddGroup.fire(view);\n                this.registerPanel(view);\n                return view;\n            },\n        });\n        this.layout(this.width, this.height, true);\n        queue.forEach((f) => f());\n        if (typeof activePanel === 'string') {\n            const panel = this.getPanel(activePanel);\n            if (panel) {\n                this.doSetGroupActive(panel);\n            }\n        }\n        this._onDidLayoutfromJSON.fire();\n    }\n    clear() {\n        const hasActiveGroup = this.activeGroup;\n        const groups = Array.from(this._groups.values()); // reassign since group panels will mutate\n        for (const group of groups) {\n            group.disposable.dispose();\n            this.doRemoveGroup(group.value, { skipActive: true });\n        }\n        if (hasActiveGroup) {\n            this.doSetGroupActive(undefined);\n        }\n        this.gridview.clear();\n    }\n    movePanel(panel, options) {\n        var _a;\n        let relativeLocation;\n        const removedPanel = this.gridview.remove(panel);\n        const referenceGroup = (_a = this._groups.get(options.reference)) === null || _a === void 0 ? void 0 : _a.value;\n        if (!referenceGroup) {\n            throw new Error(`reference group ${options.reference} does not exist`);\n        }\n        const target = toTarget(options.direction);\n        if (target === 'center') {\n            throw new Error(`${target} not supported as an option`);\n        }\n        else {\n            const location = getGridLocation(referenceGroup.element);\n            relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n        }\n        this.doAddGroup(removedPanel, relativeLocation, options.size);\n    }\n    addPanel(options) {\n        var _a, _b;\n        let relativeLocation = options.location || [0];\n        if ((_a = options.position) === null || _a === void 0 ? void 0 : _a.referencePanel) {\n            const referenceGroup = (_b = this._groups.get(options.position.referencePanel)) === null || _b === void 0 ? void 0 : _b.value;\n            if (!referenceGroup) {\n                throw new Error(`reference group ${options.position.referencePanel} does not exist`);\n            }\n            const target = toTarget(options.position.direction);\n            if (target === 'center') {\n                throw new Error(`${target} not supported as an option`);\n            }\n            else {\n                const location = getGridLocation(referenceGroup.element);\n                relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n            }\n        }\n        const view = createComponent(options.id, options.component, this.options.components || {}, this.options.frameworkComponents || {}, this.options.frameworkComponentFactory\n            ? {\n                createComponent: this.options.frameworkComponentFactory\n                    .createComponent,\n            }\n            : undefined);\n        view.init({\n            params: options.params || {},\n            minimumWidth: options.minimumWidth,\n            maximumWidth: options.maximumWidth,\n            minimumHeight: options.minimumHeight,\n            maximumHeight: options.maximumHeight,\n            priority: options.priority,\n            snap: !!options.snap,\n            accessor: this,\n            isVisible: true,\n        });\n        this.registerPanel(view);\n        this.doAddGroup(view, relativeLocation, options.size);\n        return view;\n    }\n    registerPanel(panel) {\n        const disposable = new CompositeDisposable(panel.api.onDidFocusChange((event) => {\n            if (!event.isFocused) {\n                return;\n            }\n            this._groups.forEach((groupItem) => {\n                const group = groupItem.value;\n                if (group !== panel) {\n                    group.setActive(false);\n                }\n                else {\n                    group.setActive(true);\n                }\n            });\n        }));\n        this._groups.set(panel.id, {\n            value: panel,\n            disposable,\n        });\n    }\n    moveGroup(referenceGroup, groupId, target) {\n        const sourceGroup = this.getPanel(groupId);\n        if (!sourceGroup) {\n            throw new Error('invalid operation');\n        }\n        const referenceLocation = getGridLocation(referenceGroup.element);\n        const targetLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, target);\n        const [targetParentLocation, to] = tail(targetLocation);\n        const sourceLocation = getGridLocation(sourceGroup.element);\n        const [sourceParentLocation, from] = tail(sourceLocation);\n        if (sequenceEquals(sourceParentLocation, targetParentLocation)) {\n            // special case when 'swapping' two views within same grid location\n            // if a group has one tab - we are essentially moving the 'group'\n            // which is equivalent to swapping two views in this case\n            this.gridview.moveView(sourceParentLocation, from, to);\n            return;\n        }\n        // source group will become empty so delete the group\n        const targetGroup = this.doRemoveGroup(sourceGroup, {\n            skipActive: true,\n            skipDispose: true,\n        });\n        // after deleting the group we need to re-evaulate the ref location\n        const updatedReferenceLocation = getGridLocation(referenceGroup.element);\n        const location = getRelativeLocation(this.gridview.orientation, updatedReferenceLocation, target);\n        this.doAddGroup(targetGroup, location);\n    }\n    removeGroup(group) {\n        super.removeGroup(group);\n    }\n    dispose() {\n        super.dispose();\n        this._onDidLayoutfromJSON.dispose();\n    }\n}\n","import { CompositeDisposable, MutableDisposable, } from '../lifecycle';\nimport { Orientation, Sizing, Splitview, } from './splitview';\nimport { Emitter } from '../events';\nimport { createComponent } from '../panel/componentFactory';\n/**\n * A high-level implementation of splitview that works using 'panels'\n */\nexport class SplitviewComponent extends CompositeDisposable {\n    get panels() {\n        return this.splitview.getViews();\n    }\n    get options() {\n        return this._options;\n    }\n    get length() {\n        return this._panels.size;\n    }\n    get orientation() {\n        return this.splitview.orientation;\n    }\n    get splitview() {\n        return this._splitview;\n    }\n    set splitview(value) {\n        this._splitview = value;\n        this._disposable.value = new CompositeDisposable(this._splitview.onDidSashEnd(() => {\n            this._onDidLayoutChange.fire(undefined);\n        }), this._splitview.onDidAddView((e) => this._onDidAddView.fire(e)), this._splitview.onDidRemoveView((e) => this._onDidRemoveView.fire(e)));\n    }\n    get minimumSize() {\n        return this.splitview.minimumSize;\n    }\n    get maximumSize() {\n        return this.splitview.maximumSize;\n    }\n    get height() {\n        return this.splitview.orientation === Orientation.HORIZONTAL\n            ? this.splitview.orthogonalSize\n            : this.splitview.size;\n    }\n    get width() {\n        return this.splitview.orientation === Orientation.HORIZONTAL\n            ? this.splitview.size\n            : this.splitview.orthogonalSize;\n    }\n    constructor(element, options) {\n        super();\n        this.element = element;\n        this._disposable = new MutableDisposable();\n        this._panels = new Map();\n        this._onDidLayoutfromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutfromJSON.event;\n        this._onDidAddView = new Emitter();\n        this.onDidAddView = this._onDidAddView.event;\n        this._onDidRemoveView = new Emitter();\n        this.onDidRemoveView = this._onDidRemoveView.event;\n        this._onDidLayoutChange = new Emitter();\n        this.onDidLayoutChange = this._onDidLayoutChange.event;\n        this._options = options;\n        if (!options.components) {\n            options.components = {};\n        }\n        if (!options.frameworkComponents) {\n            options.frameworkComponents = {};\n        }\n        this.splitview = new Splitview(this.element, options);\n        this.addDisposables(this._disposable, this._onDidAddView, this._onDidLayoutfromJSON, this._onDidRemoveView, this._onDidLayoutChange);\n    }\n    updateOptions(options) {\n        const hasOrientationChanged = typeof options.orientation === 'string' &&\n            this.options.orientation !== options.orientation;\n        this._options = Object.assign(Object.assign({}, this.options), options);\n        if (hasOrientationChanged) {\n            this.splitview.orientation = options.orientation;\n        }\n        this.splitview.layout(this.splitview.size, this.splitview.orthogonalSize);\n    }\n    focus() {\n        var _a;\n        (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    movePanel(from, to) {\n        this.splitview.moveView(from, to);\n    }\n    setVisible(panel, visible) {\n        const index = this.panels.indexOf(panel);\n        this.splitview.setViewVisible(index, visible);\n    }\n    setActive(view, skipFocus) {\n        this._activePanel = view;\n        this.panels\n            .filter((v) => v !== view)\n            .forEach((v) => {\n            v.api._onDidActiveChange.fire({ isActive: false });\n            if (!skipFocus) {\n                v.focus();\n            }\n        });\n        view.api._onDidActiveChange.fire({ isActive: true });\n        if (!skipFocus) {\n            view.focus();\n        }\n    }\n    removePanel(panel, sizing) {\n        const disposable = this._panels.get(panel.id);\n        if (!disposable) {\n            throw new Error(`unknown splitview panel ${panel.id}`);\n        }\n        disposable.disposable.dispose();\n        disposable.value.dispose();\n        this._panels.delete(panel.id);\n        const index = this.panels.findIndex((_) => _ === panel);\n        this.splitview.removeView(index, sizing);\n        const panels = this.panels;\n        if (panels.length > 0) {\n            this.setActive(panels[panels.length - 1]);\n        }\n    }\n    getPanel(id) {\n        return this.panels.find((view) => view.id === id);\n    }\n    addPanel(options) {\n        if (this._panels.has(options.id)) {\n            throw new Error(`panel ${options.id} already exists`);\n        }\n        const view = createComponent(options.id, options.component, this.options.components || {}, this.options.frameworkComponents || {}, this.options.frameworkWrapper\n            ? {\n                createComponent: this.options.frameworkWrapper.createComponent,\n            }\n            : undefined);\n        view.orientation = this.splitview.orientation;\n        view.init({\n            params: options.params || {},\n            minimumSize: options.minimumSize,\n            maximumSize: options.maximumSize,\n            snap: options.snap,\n            priority: options.priority,\n            accessor: this,\n        });\n        const size = typeof options.size === 'number' ? options.size : Sizing.Distribute;\n        const index = typeof options.index === 'number' ? options.index : undefined;\n        this.splitview.addView(view, size, index);\n        this.doAddView(view);\n        this.setActive(view);\n        return view;\n    }\n    layout(width, height) {\n        const [size, orthogonalSize] = this.splitview.orientation === Orientation.HORIZONTAL\n            ? [width, height]\n            : [height, width];\n        this.splitview.layout(size, orthogonalSize);\n    }\n    doAddView(view) {\n        const disposable = view.api.onDidFocusChange((event) => {\n            if (!event.isFocused) {\n                return;\n            }\n            this.setActive(view, true);\n        });\n        this._panels.set(view.id, { disposable, value: view });\n    }\n    toJSON() {\n        var _a;\n        const views = this.splitview\n            .getViews()\n            .map((view, i) => {\n            const size = this.splitview.getViewSize(i);\n            return {\n                size,\n                data: view.toJSON(),\n                snap: !!view.snap,\n                priority: view.priority,\n            };\n        });\n        return {\n            views,\n            activeView: (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.id,\n            size: this.splitview.size,\n            orientation: this.splitview.orientation,\n        };\n    }\n    fromJSON(serializedSplitview) {\n        this.clear();\n        const { views, orientation, size, activeView } = serializedSplitview;\n        const queue = [];\n        this.splitview = new Splitview(this.element, {\n            orientation,\n            proportionalLayout: this.options.proportionalLayout,\n            descriptor: {\n                size,\n                views: views.map((view) => {\n                    const data = view.data;\n                    if (this._panels.has(data.id)) {\n                        throw new Error(`panel ${data.id} already exists`);\n                    }\n                    const panel = createComponent(data.id, data.component, this.options.components || {}, this.options.frameworkComponents || {}, this.options.frameworkWrapper\n                        ? {\n                            createComponent: this.options.frameworkWrapper\n                                .createComponent,\n                        }\n                        : undefined);\n                    queue.push(() => {\n                        panel.init({\n                            params: data.params || {},\n                            minimumSize: data.minimumSize,\n                            maximumSize: data.maximumSize,\n                            snap: view.snap,\n                            priority: view.priority,\n                            accessor: this,\n                        });\n                    });\n                    panel.orientation = orientation;\n                    this.doAddView(panel);\n                    setTimeout(() => {\n                        // the original onDidAddView events are missed since they are fired before we can subcribe to them\n                        this._onDidAddView.fire(panel);\n                    }, 0);\n                    return { size: view.size, view: panel };\n                }),\n            },\n        });\n        this.layout(this.width, this.height);\n        queue.forEach((f) => f());\n        if (typeof activeView === 'string') {\n            const panel = this.getPanel(activeView);\n            if (panel) {\n                this.setActive(panel);\n            }\n        }\n        this._onDidLayoutfromJSON.fire();\n    }\n    clear() {\n        for (const [_, value] of this._panels.entries()) {\n            value.disposable.dispose();\n            value.value.dispose();\n        }\n        this._panels.clear();\n        this.splitview.dispose();\n    }\n    dispose() {\n        for (const [_, value] of this._panels.entries()) {\n            value.disposable.dispose();\n            value.value.dispose();\n        }\n        this._panels.clear();\n        this.splitview.dispose();\n        super.dispose();\n    }\n}\n","import { addDisposableListener } from '../events';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nimport { toggleClass } from '../dom';\nimport { createChevronRightButton, createExpandMoreButton } from '../svg';\nexport class DefaultHeader extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor() {\n        super();\n        this._expandedIcon = createExpandMoreButton();\n        this._collapsedIcon = createChevronRightButton();\n        this.disposable = new MutableDisposable();\n        this.apiRef = { api: null };\n        this._element = document.createElement('div');\n        this.element.className = 'default-header';\n        this._content = document.createElement('span');\n        this._expander = document.createElement('div');\n        this._expander.className = 'dockview-pane-header-icon';\n        this.element.appendChild(this._expander);\n        this.element.appendChild(this._content);\n        this.addDisposables(addDisposableListener(this._element, 'click', () => {\n            var _a;\n            (_a = this.apiRef.api) === null || _a === void 0 ? void 0 : _a.setExpanded(!this.apiRef.api.isExpanded);\n        }));\n    }\n    init(params) {\n        this.apiRef.api = params.api;\n        this._content.textContent = params.title;\n        this.updateIcon();\n        this.disposable.value = params.api.onDidExpansionChange(() => {\n            this.updateIcon();\n        });\n    }\n    updateIcon() {\n        var _a;\n        const isExpanded = !!((_a = this.apiRef.api) === null || _a === void 0 ? void 0 : _a.isExpanded);\n        toggleClass(this._expander, 'collapsed', !isExpanded);\n        if (isExpanded) {\n            if (this._expander.contains(this._collapsedIcon)) {\n                this._collapsedIcon.remove();\n            }\n            if (!this._expander.contains(this._expandedIcon)) {\n                this._expander.appendChild(this._expandedIcon);\n            }\n        }\n        else {\n            if (this._expander.contains(this._expandedIcon)) {\n                this._expandedIcon.remove();\n            }\n            if (!this._expander.contains(this._collapsedIcon)) {\n                this._expander.appendChild(this._collapsedIcon);\n            }\n        }\n    }\n    update(_params) {\n        //\n    }\n    dispose() {\n        this.disposable.dispose();\n        super.dispose();\n    }\n}\n","import { PaneviewApi } from '../api/component.api';\nimport { createComponent } from '../panel/componentFactory';\nimport { Emitter } from '../events';\nimport { CompositeDisposable, MutableDisposable, } from '../lifecycle';\nimport { Orientation, Sizing } from '../splitview/splitview';\nimport { Paneview } from './paneview';\nimport { DraggablePaneviewPanel, } from './draggablePaneviewPanel';\nimport { DefaultHeader } from './defaultPaneviewHeader';\nimport { sequentialNumberGenerator } from '../math';\nconst nextLayoutId = sequentialNumberGenerator();\nexport class PaneFramework extends DraggablePaneviewPanel {\n    constructor(options) {\n        super(options.accessor, options.id, options.component, options.headerComponent, options.orientation, options.isExpanded, options.disableDnd);\n        this.options = options;\n    }\n    getBodyComponent() {\n        return this.options.body;\n    }\n    getHeaderComponent() {\n        return this.options.header;\n    }\n}\nexport class PaneviewComponent extends CompositeDisposable {\n    get id() {\n        return this._id;\n    }\n    get panels() {\n        return this.paneview.getPanes();\n    }\n    set paneview(value) {\n        this._paneview = value;\n        this._disposable.value = new CompositeDisposable(this._paneview.onDidChange(() => {\n            this._onDidLayoutChange.fire(undefined);\n        }), this._paneview.onDidAddView((e) => this._onDidAddView.fire(e)), this._paneview.onDidRemoveView((e) => this._onDidRemoveView.fire(e)));\n    }\n    get paneview() {\n        return this._paneview;\n    }\n    get minimumSize() {\n        return this.paneview.minimumSize;\n    }\n    get maximumSize() {\n        return this.paneview.maximumSize;\n    }\n    get height() {\n        return this.paneview.orientation === Orientation.HORIZONTAL\n            ? this.paneview.orthogonalSize\n            : this.paneview.size;\n    }\n    get width() {\n        return this.paneview.orientation === Orientation.HORIZONTAL\n            ? this.paneview.size\n            : this.paneview.orthogonalSize;\n    }\n    get options() {\n        return this._options;\n    }\n    constructor(element, options) {\n        super();\n        this.element = element;\n        this._id = nextLayoutId.next();\n        this._disposable = new MutableDisposable();\n        this._viewDisposables = new Map();\n        this._onDidLayoutfromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutfromJSON.event;\n        this._onDidLayoutChange = new Emitter();\n        this.onDidLayoutChange = this._onDidLayoutChange.event;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onDidAddView = new Emitter();\n        this.onDidAddView = this._onDidAddView.event;\n        this._onDidRemoveView = new Emitter();\n        this.onDidRemoveView = this._onDidRemoveView.event;\n        this.addDisposables(this._onDidLayoutChange, this._onDidLayoutfromJSON, this._onDidDrop, this._onDidAddView, this._onDidRemoveView);\n        this._options = options;\n        if (!options.components) {\n            options.components = {};\n        }\n        if (!options.frameworkComponents) {\n            options.frameworkComponents = {};\n        }\n        this.paneview = new Paneview(this.element, {\n            // only allow paneview in the vertical orientation for now\n            orientation: Orientation.VERTICAL,\n        });\n        this.addDisposables(this._disposable);\n    }\n    focus() {\n        //noop\n    }\n    updateOptions(options) {\n        this._options = Object.assign(Object.assign({}, this.options), options);\n    }\n    addPanel(options) {\n        const body = createComponent(options.id, options.component, this.options.components || {}, this.options.frameworkComponents || {}, this.options.frameworkWrapper\n            ? {\n                createComponent: this.options.frameworkWrapper.body.createComponent,\n            }\n            : undefined);\n        let header;\n        if (options.headerComponent) {\n            header = createComponent(options.id, options.headerComponent, this.options.headerComponents || {}, this.options.headerframeworkComponents, this.options.frameworkWrapper\n                ? {\n                    createComponent: this.options.frameworkWrapper.header\n                        .createComponent,\n                }\n                : undefined);\n        }\n        else {\n            header = new DefaultHeader();\n        }\n        const view = new PaneFramework({\n            id: options.id,\n            component: options.component,\n            headerComponent: options.headerComponent,\n            header,\n            body,\n            orientation: Orientation.VERTICAL,\n            isExpanded: !!options.isExpanded,\n            disableDnd: !!this.options.disableDnd,\n            accessor: this,\n        });\n        this.doAddPanel(view);\n        const size = typeof options.size === 'number' ? options.size : Sizing.Distribute;\n        const index = typeof options.index === 'number' ? options.index : undefined;\n        view.init({\n            params: options.params || {},\n            minimumBodySize: options.minimumBodySize,\n            maximumBodySize: options.maximumBodySize,\n            isExpanded: options.isExpanded,\n            title: options.title,\n            containerApi: new PaneviewApi(this),\n        });\n        this.paneview.addPane(view, size, index);\n        view.orientation = this.paneview.orientation;\n        return view;\n    }\n    removePanel(panel) {\n        const views = this.panels;\n        const index = views.findIndex((_) => _ === panel);\n        this.paneview.removePane(index);\n        this.doRemovePanel(panel);\n    }\n    movePanel(from, to) {\n        this.paneview.moveView(from, to);\n    }\n    getPanel(id) {\n        return this.panels.find((view) => view.id === id);\n    }\n    layout(width, height) {\n        const [size, orthogonalSize] = this.paneview.orientation === Orientation.HORIZONTAL\n            ? [width, height]\n            : [height, width];\n        this.paneview.layout(size, orthogonalSize);\n    }\n    toJSON() {\n        const maximum = (value) => value === Number.MAX_SAFE_INTEGER ||\n            value === Number.POSITIVE_INFINITY\n            ? undefined\n            : value;\n        const minimum = (value) => (value <= 0 ? undefined : value);\n        const views = this.paneview\n            .getPanes()\n            .map((view, i) => {\n            const size = this.paneview.getViewSize(i);\n            return {\n                size,\n                data: view.toJSON(),\n                minimumSize: minimum(view.minimumBodySize),\n                maximumSize: maximum(view.maximumBodySize),\n                expanded: view.isExpanded(),\n            };\n        });\n        return {\n            views,\n            size: this.paneview.size,\n        };\n    }\n    fromJSON(serializedPaneview) {\n        this.clear();\n        const { views, size } = serializedPaneview;\n        const queue = [];\n        this.paneview = new Paneview(this.element, {\n            orientation: Orientation.VERTICAL,\n            descriptor: {\n                size,\n                views: views.map((view) => {\n                    const data = view.data;\n                    const body = createComponent(data.id, data.component, this.options.components || {}, this.options.frameworkComponents || {}, this.options.frameworkWrapper\n                        ? {\n                            createComponent: this.options.frameworkWrapper.body\n                                .createComponent,\n                        }\n                        : undefined);\n                    let header;\n                    if (data.headerComponent) {\n                        header = createComponent(data.id, data.headerComponent, this.options.headerComponents || {}, this.options.headerframeworkComponents || {}, this.options.frameworkWrapper\n                            ? {\n                                createComponent: this.options.frameworkWrapper.header\n                                    .createComponent,\n                            }\n                            : undefined);\n                    }\n                    else {\n                        header = new DefaultHeader();\n                    }\n                    const panel = new PaneFramework({\n                        id: data.id,\n                        component: data.component,\n                        headerComponent: data.headerComponent,\n                        header,\n                        body,\n                        orientation: Orientation.VERTICAL,\n                        isExpanded: !!view.expanded,\n                        disableDnd: !!this.options.disableDnd,\n                        accessor: this,\n                    });\n                    this.doAddPanel(panel);\n                    queue.push(() => {\n                        panel.init({\n                            params: data.params || {},\n                            minimumBodySize: view.minimumSize,\n                            maximumBodySize: view.maximumSize,\n                            title: data.title,\n                            isExpanded: !!view.expanded,\n                            containerApi: new PaneviewApi(this),\n                        });\n                        panel.orientation = this.paneview.orientation;\n                    });\n                    setTimeout(() => {\n                        // the original onDidAddView events are missed since they are fired before we can subcribe to them\n                        this._onDidAddView.fire(panel);\n                    }, 0);\n                    return { size: view.size, view: panel };\n                }),\n            },\n        });\n        this.layout(this.width, this.height);\n        queue.forEach((f) => f());\n        this._onDidLayoutfromJSON.fire();\n    }\n    clear() {\n        for (const [_, value] of this._viewDisposables.entries()) {\n            value.dispose();\n        }\n        this._viewDisposables.clear();\n        this.paneview.dispose();\n    }\n    doAddPanel(panel) {\n        const disposable = panel.onDidDrop((event) => {\n            this._onDidDrop.fire(event);\n        });\n        this._viewDisposables.set(panel.id, disposable);\n    }\n    doRemovePanel(panel) {\n        const disposable = this._viewDisposables.get(panel.id);\n        if (disposable) {\n            disposable.dispose();\n            this._viewDisposables.delete(panel.id);\n        }\n    }\n    dispose() {\n        super.dispose();\n        for (const [_, value] of this._viewDisposables.entries()) {\n            value.dispose();\n        }\n        this._viewDisposables.clear();\n        this.paneview.dispose();\n    }\n}\n","import { BasePanelView, } from '../gridview/basePanelView';\nimport { SplitviewPanelApiImpl } from '../api/splitviewPanelApi';\nimport { Orientation } from './splitview';\nimport { Emitter } from '../events';\nexport class SplitviewPanel extends BasePanelView {\n    get priority() {\n        return this._priority;\n    }\n    set orientation(value) {\n        this._orientation = value;\n    }\n    get orientation() {\n        return this._orientation;\n    }\n    get minimumSize() {\n        const size = typeof this._minimumSize === 'function'\n            ? this._minimumSize()\n            : this._minimumSize;\n        if (size !== this._evaluatedMinimumSize) {\n            this._evaluatedMinimumSize = size;\n            this.updateConstraints();\n        }\n        return size;\n    }\n    get maximumSize() {\n        const size = typeof this._maximumSize === 'function'\n            ? this._maximumSize()\n            : this._maximumSize;\n        if (size !== this._evaluatedMaximumSize) {\n            this._evaluatedMaximumSize = size;\n            this.updateConstraints();\n        }\n        return size;\n    }\n    get snap() {\n        return this._snap;\n    }\n    constructor(id, componentName) {\n        super(id, componentName, new SplitviewPanelApiImpl(id));\n        this._evaluatedMinimumSize = 0;\n        this._evaluatedMaximumSize = Number.POSITIVE_INFINITY;\n        this._minimumSize = 0;\n        this._maximumSize = Number.POSITIVE_INFINITY;\n        this._snap = false;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this.api.initialize(this);\n        this.addDisposables(this._onDidChange, this.api.onVisibilityChange((event) => {\n            const { isVisible } = event;\n            const { accessor } = this._params;\n            accessor.setVisible(this, isVisible);\n        }), this.api.onActiveChange(() => {\n            const { accessor } = this._params;\n            accessor.setActive(this);\n        }), this.api.onDidConstraintsChangeInternal((event) => {\n            if (typeof event.minimumSize === 'number' ||\n                typeof event.minimumSize === 'function') {\n                this._minimumSize = event.minimumSize;\n            }\n            if (typeof event.maximumSize === 'number' ||\n                typeof event.maximumSize === 'function') {\n                this._maximumSize = event.maximumSize;\n            }\n            this.updateConstraints();\n        }), this.api.onDidSizeChange((event) => {\n            this._onDidChange.fire({ size: event.size });\n        }));\n    }\n    setVisible(isVisible) {\n        this.api._onDidVisibilityChange.fire({ isVisible });\n    }\n    setActive(isActive) {\n        this.api._onDidActiveChange.fire({ isActive });\n    }\n    layout(size, orthogonalSize) {\n        const [width, height] = this.orientation === Orientation.HORIZONTAL\n            ? [size, orthogonalSize]\n            : [orthogonalSize, size];\n        super.layout(width, height);\n    }\n    init(parameters) {\n        super.init(parameters);\n        this._priority = parameters.priority;\n        if (parameters.minimumSize) {\n            this._minimumSize = parameters.minimumSize;\n        }\n        if (parameters.maximumSize) {\n            this._maximumSize = parameters.maximumSize;\n        }\n        if (parameters.snap) {\n            this._snap = parameters.snap;\n        }\n    }\n    toJSON() {\n        const maximum = (value) => value === Number.MAX_SAFE_INTEGER ||\n            value === Number.POSITIVE_INFINITY\n            ? undefined\n            : value;\n        const minimum = (value) => (value <= 0 ? undefined : value);\n        return Object.assign(Object.assign({}, super.toJSON()), { minimumSize: minimum(this.minimumSize), maximumSize: maximum(this.maximumSize) });\n    }\n    updateConstraints() {\n        this.api._onDidConstraintsChange.fire({\n            maximumSize: this._evaluatedMaximumSize,\n            minimumSize: this._evaluatedMinimumSize,\n        });\n    }\n}\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\n/**\n * This component is intended to interface between vanilla-js and React hence we need to be\n * creative in how we update props.\n * A ref of the component is exposed with an update method; which when called stores the props\n * as a ref within this component and forcefully triggers a re-render of the component using\n * the ref of props we just set on the renderered component as the props passed to the inner\n * component\n */\nconst ReactComponentBridge = (props, ref) => {\n    const [_, triggerRender] = React.useState();\n    const _props = React.useRef(props.componentProps);\n    React.useImperativeHandle(ref, () => ({\n        update: (componentProps) => {\n            _props.current = Object.assign(Object.assign({}, _props.current), componentProps);\n            /**\n             * setting a arbitrary piece of state within this component will\n             * trigger a re-render.\n             * we use this rather than updating through a prop since we can\n             * pass a ref into the vanilla-js world.\n             */\n            triggerRender(Date.now());\n        },\n    }), []);\n    return React.createElement(props.component, _props.current);\n};\nReactComponentBridge.displayName = 'DockviewReactJsBridge';\n/**\n * Since we are storing the React.Portal references in a rendered array they\n * require a key property like any other React element rendered in an array\n * to prevent excessive re-rendering\n */\nconst uniquePortalKeyGenerator = (() => {\n    let value = 1;\n    return { next: () => `dockview_react_portal_key_${(value++).toString()}` };\n})();\nexport const ReactPartContext = React.createContext({});\nexport class ReactPart {\n    constructor(parent, portalStore, component, parameters, context) {\n        this.parent = parent;\n        this.portalStore = portalStore;\n        this.component = component;\n        this.parameters = parameters;\n        this.context = context;\n        this._initialProps = {};\n        this.disposed = false;\n        this.createPortal();\n    }\n    update(props) {\n        if (this.disposed) {\n            throw new Error('invalid operation: resource is already disposed');\n        }\n        if (!this.componentInstance) {\n            // if the component is yet to be mounted store the props\n            this._initialProps = Object.assign(Object.assign({}, this._initialProps), props);\n        }\n        else {\n            this.componentInstance.update(props);\n        }\n    }\n    createPortal() {\n        if (this.disposed) {\n            throw new Error('invalid operation: resource is already disposed');\n        }\n        if (typeof this.component !== 'function') {\n            /**\n             * we know this isn't a React.FunctionComponent so throw an error here.\n             * if we do not intercept this the React library will throw a very obsure error\n             * for the same reason, at least at this point we will emit a sensible stacktrace.\n             */\n            throw new Error('Invalid Operation. dockview only supports React Functional Components.');\n        }\n        const bridgeComponent = React.createElement(React.forwardRef(ReactComponentBridge), {\n            component: this\n                .component,\n            componentProps: this.parameters,\n            ref: (element) => {\n                this.componentInstance = element;\n                if (Object.keys(this._initialProps).length > 0) {\n                    this.componentInstance.update(this._initialProps);\n                    this._initialProps = {}; // don't keep a reference to the users object once no longer required\n                }\n            },\n        });\n        const node = this.context\n            ? React.createElement(ReactPartContext.Provider, { value: this.context }, bridgeComponent)\n            : bridgeComponent;\n        const portal = ReactDOM.createPortal(node, this.parent, uniquePortalKeyGenerator.next());\n        this.ref = {\n            portal,\n            disposable: this.portalStore.addPortal(portal),\n        };\n    }\n    dispose() {\n        var _a;\n        (_a = this.ref) === null || _a === void 0 ? void 0 : _a.disposable.dispose();\n        this.disposed = true;\n    }\n}\n/**\n * A React Hook that returns an array of portals to be rendered by the user of this hook\n * and a disposable function to add a portal. Calling dispose removes this portal from the\n * portal array\n */\nexport const usePortalsLifecycle = () => {\n    const [portals, setPortals] = React.useState([]);\n    React.useDebugValue(`Portal count: ${portals.length}`);\n    const addPortal = React.useCallback((portal) => {\n        setPortals((existingPortals) => [...existingPortals, portal]);\n        let disposed = false;\n        return {\n            dispose: () => {\n                if (disposed) {\n                    throw new Error('invalid operation: resource already disposed');\n                }\n                disposed = true;\n                setPortals((existingPortals) => existingPortals.filter((p) => p !== portal));\n            },\n        };\n    }, []);\n    return [portals, addPortal];\n};\n// it does the job...\nexport function isReactElement(element) {\n    return element === null || element === void 0 ? void 0 : element.type;\n}\n","import { ReactPart } from '../react';\nimport { DockviewEmitter, } from 'dockview-core';\nexport class ReactPanelContentPart {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._onDidFocus = new DockviewEmitter();\n        this.onDidFocus = this._onDidFocus.event;\n        this._onDidBlur = new DockviewEmitter();\n        this.onDidBlur = this._onDidBlur.event;\n        this._element = document.createElement('div');\n        this._element.className = 'dockview-react-part';\n    }\n    focus() {\n        // TODO\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            params: parameters.params,\n            api: parameters.api,\n            containerApi: parameters.containerApi,\n        });\n    }\n    update(event) {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update(event.params);\n    }\n    layout(_width, _height) {\n        // noop\n    }\n    dispose() {\n        var _a;\n        this._onDidFocus.dispose();\n        this._onDidBlur.dispose();\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import { ReactPart } from '../react';\nexport class ReactPanelHeaderPart {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._element = document.createElement('div');\n        this._element.className = 'dockview-react-part';\n    }\n    focus() {\n        //noop\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            params: parameters.params,\n            api: parameters.api,\n            containerApi: parameters.containerApi,\n        });\n    }\n    update(event) {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update(event.params);\n    }\n    layout(_width, _height) {\n        // noop - retrieval from api\n    }\n    dispose() {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import { ReactPart } from '../react';\nexport class ReactWatermarkPart {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._element = document.createElement('div');\n        this._element.className = 'dockview-react-part';\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            group: parameters.group,\n            containerApi: parameters.containerApi,\n            close: () => {\n                if (parameters.group) {\n                    parameters.containerApi.removeGroup(parameters.group);\n                }\n            },\n        });\n    }\n    focus() {\n        // noop\n    }\n    update(params) {\n        var _a, _b;\n        if (this.parameters) {\n            this.parameters.params = params.params;\n        }\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update({ params: ((_b = this.parameters) === null || _b === void 0 ? void 0 : _b.params) || {} });\n    }\n    layout(_width, _height) {\n        // noop - retrieval from api\n    }\n    updateParentGroup(_group, _isPanelVisible) {\n        // noop\n    }\n    dispose() {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import { ReactPart } from '../react';\nimport { DockviewCompositeDisposable, DockviewMutableDisposable, } from 'dockview-core';\nexport class ReactGroupControlsRendererPart {\n    get element() {\n        return this._element;\n    }\n    get part() {\n        return this._part;\n    }\n    get group() {\n        return this._group;\n    }\n    constructor(component, reactPortalStore, _group) {\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._group = _group;\n        this.mutableDisposable = new DockviewMutableDisposable();\n        this._element = document.createElement('div');\n        this._element.className = 'dockview-react-part';\n    }\n    focus() {\n        // TODO\n    }\n    init(parameters) {\n        this.mutableDisposable.value = new DockviewCompositeDisposable(this._group.model.onDidAddPanel(() => {\n            this.updatePanels();\n        }), this._group.model.onDidRemovePanel(() => {\n            this.updatePanels();\n        }), this._group.model.onDidActivePanelChange(() => {\n            this.updateActivePanel();\n        }), parameters.api.onDidActiveChange(() => {\n            this.updateGroupActive();\n        }));\n        this._part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            api: parameters.api,\n            containerApi: parameters.containerApi,\n            panels: this._group.model.panels,\n            activePanel: this._group.model.activePanel,\n            isGroupActive: this._group.api.isActive,\n        });\n    }\n    update(event) {\n        var _a;\n        (_a = this._part) === null || _a === void 0 ? void 0 : _a.update(event.params);\n    }\n    dispose() {\n        var _a;\n        this.mutableDisposable.dispose();\n        (_a = this._part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n    updatePanels() {\n        this.update({ params: { panels: this._group.model.panels } });\n    }\n    updateActivePanel() {\n        this.update({\n            params: {\n                activePanel: this._group.model.activePanel,\n            },\n        });\n    }\n    updateGroupActive() {\n        this.update({\n            params: {\n                isGroupActive: this._group.api.isActive,\n            },\n        });\n    }\n}\n","import * as React from 'react';\nimport { DockviewComponent, DockviewApi, watchElementResize, } from 'dockview-core';\nimport { ReactPanelContentPart } from './reactContentPart';\nimport { ReactPanelHeaderPart } from './reactHeaderPart';\nimport { usePortalsLifecycle } from '../react';\nimport { ReactWatermarkPart } from './reactWatermarkPart';\nimport { ReactGroupControlsRendererPart, } from './groupControlsRenderer';\nfunction createGroupControlElement(component, store) {\n    return component\n        ? (groupPanel) => {\n            return new ReactGroupControlsRendererPart(component, store, groupPanel);\n        }\n        : undefined;\n}\nconst DEFAULT_REACT_TAB = 'props.defaultTabComponent';\nexport const DockviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const dockviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    React.useEffect(() => {\n        if (props.disableAutoResizing) {\n            return () => {\n                //\n            };\n        }\n        const watcher = watchElementResize(domRef.current, (entry) => {\n            var _a;\n            const { width, height } = entry.contentRect;\n            (_a = dockviewRef.current) === null || _a === void 0 ? void 0 : _a.layout(width, height);\n        });\n        return () => {\n            watcher.dispose();\n        };\n    }, [props.disableAutoResizing]);\n    React.useEffect(() => {\n        var _a;\n        const factory = {\n            content: {\n                createComponent: (_id, componentId, component) => {\n                    return new ReactPanelContentPart(componentId, component, {\n                        addPortal,\n                    });\n                },\n            },\n            tab: {\n                createComponent: (_id, componentId, component) => {\n                    return new ReactPanelHeaderPart(componentId, component, {\n                        addPortal,\n                    });\n                },\n            },\n            watermark: {\n                createComponent: (_id, componentId, component) => {\n                    return new ReactWatermarkPart(componentId, component, {\n                        addPortal,\n                    });\n                },\n            },\n        };\n        const element = document.createElement('div');\n        const frameworkTabComponents = props.tabComponents || {};\n        if (props.defaultTabComponent) {\n            frameworkTabComponents[DEFAULT_REACT_TAB] =\n                props.defaultTabComponent;\n        }\n        const dockview = new DockviewComponent(element, {\n            frameworkComponentFactory: factory,\n            frameworkComponents: props.components,\n            frameworkTabComponents,\n            tabHeight: props.tabHeight,\n            watermarkFrameworkComponent: props.watermarkComponent,\n            defaultTabComponent: props.defaultTabComponent\n                ? DEFAULT_REACT_TAB\n                : undefined,\n            styles: props.hideBorders\n                ? { separatorBorder: 'transparent' }\n                : undefined,\n            showDndOverlay: props.showDndOverlay,\n            createGroupControlElement: createGroupControlElement(props.groupControlComponent, { addPortal }),\n            singleTabMode: props.singleTabMode,\n        });\n        (_a = domRef.current) === null || _a === void 0 ? void 0 : _a.appendChild(dockview.element);\n        const { clientWidth, clientHeight } = domRef.current;\n        dockview.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api: new DockviewApi(dockview) });\n        }\n        dockviewRef.current = dockview;\n        return () => {\n            dockview.dispose();\n            element.remove();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const disposable = dockviewRef.current.onDidDrop((event) => {\n            if (props.onDidDrop) {\n                props.onDidDrop(event);\n            }\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.onDidDrop]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            frameworkComponents: props.components,\n        });\n    }, [props.components]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            watermarkFrameworkComponent: props.watermarkComponent,\n        });\n    }, [props.watermarkComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            showDndOverlay: props.showDndOverlay,\n        });\n    }, [props.showDndOverlay]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            frameworkTabComponents: props.tabComponents,\n        });\n    }, [props.tabComponents]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        const frameworkTabComponents = props.tabComponents || {};\n        if (props.defaultTabComponent) {\n            frameworkTabComponents[DEFAULT_REACT_TAB] =\n                props.defaultTabComponent;\n        }\n        dockviewRef.current.updateOptions({\n            defaultTabComponent: props.defaultTabComponent\n                ? DEFAULT_REACT_TAB\n                : undefined,\n            frameworkTabComponents,\n        });\n    }, [props.defaultTabComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createGroupControlElement: createGroupControlElement(props.groupControlComponent, { addPortal }),\n        });\n    }, [props.groupControlComponent]);\n    return (React.createElement(\"div\", { className: props.className, style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nDockviewReact.displayName = 'DockviewComponent';\n","import * as React from 'react';\nexport const CloseButton = () => (React.createElement(\"svg\", { height: \"11\", width: \"11\", viewBox: \"0 0 28 28\", \"aria-hidden\": 'false', focusable: false, className: \"dockview-svg\" },\n    React.createElement(\"path\", { d: \"M2.1 27.3L0 25.2L11.55 13.65L0 2.1L2.1 0L13.65 11.55L25.2 0L27.3 2.1L15.75 13.65L27.3 25.2L25.2 27.3L13.65 15.75L2.1 27.3Z\" })));\nexport const ExpandMore = () => {\n    return (React.createElement(\"svg\", { width: \"11\", height: \"11\", viewBox: \"0 0 24 15\", \"aria-hidden\": 'false', focusable: false, className: \"dockview-svg\" },\n        React.createElement(\"path\", { d: \"M12 14.15L0 2.15L2.15 0L12 9.9L21.85 0.0499992L24 2.2L12 14.15Z\" })));\n};\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from 'react';\nimport { CloseButton } from '../svg';\nexport const DockviewDefaultTab = (_a) => {\n    var { api, containerApi: _containerApi, params: _params } = _a, rest = __rest(_a, [\"api\", \"containerApi\", \"params\"]);\n    const onClose = React.useCallback((event) => {\n        event.stopPropagation();\n        api.close();\n    }, [api]);\n    const onClick = React.useCallback((event) => {\n        api.setActive();\n        if (rest.onClick) {\n            rest.onClick(event);\n        }\n    }, [api, rest.onClick]);\n    const iconClassname = React.useMemo(() => {\n        const cn = ['dockview-react-tab-action'];\n        return cn.join(',');\n    }, []);\n    return (React.createElement(\"div\", Object.assign({}, rest, { onClick: onClick, className: \"dockview-react-tab\" }),\n        React.createElement(\"span\", { className: \"dockview-react-tab-title\" }, api.title),\n        React.createElement(\"div\", { className: iconClassname, onClick: onClose },\n            React.createElement(CloseButton, null))));\n};\n","import { SplitviewApi, SplitviewPanel, } from 'dockview-core';\nimport { ReactPart } from '../react';\nexport class ReactPanelView extends SplitviewPanel {\n    constructor(id, component, reactComponent, reactPortalStore) {\n        super(id, component);\n        this.reactComponent = reactComponent;\n        this.reactPortalStore = reactPortalStore;\n    }\n    getComponent() {\n        var _a;\n        return new ReactPart(this.element, this.reactPortalStore, this.reactComponent, {\n            params: ((_a = this._params) === null || _a === void 0 ? void 0 : _a.params) || {},\n            api: this.api,\n            containerApi: new SplitviewApi(this._params.accessor),\n        });\n    }\n}\n","import * as React from 'react';\nimport { SplitviewApi, SplitviewComponent, Orientation, watchElementResize, } from 'dockview-core';\nimport { usePortalsLifecycle } from '../react';\nimport { ReactPanelView } from './view';\nexport const SplitviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const splitviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    React.useEffect(() => {\n        if (props.disableAutoResizing) {\n            return () => {\n                //\n            };\n        }\n        const watcher = watchElementResize(domRef.current, (entry) => {\n            var _a;\n            const { width, height } = entry.contentRect;\n            (_a = splitviewRef.current) === null || _a === void 0 ? void 0 : _a.layout(width, height);\n        });\n        return () => {\n            watcher.dispose();\n        };\n    }, [props.disableAutoResizing]);\n    React.useEffect(() => {\n        const splitview = new SplitviewComponent(domRef.current, {\n            orientation: props.orientation || Orientation.HORIZONTAL,\n            frameworkComponents: props.components,\n            frameworkWrapper: {\n                createComponent: (id, componentId, component) => {\n                    return new ReactPanelView(id, componentId, component, {\n                        addPortal,\n                    });\n                },\n            },\n            proportionalLayout: typeof props.proportionalLayout === 'boolean'\n                ? props.proportionalLayout\n                : true,\n            styles: props.hideBorders\n                ? { separatorBorder: 'transparent' }\n                : undefined,\n        });\n        const { clientWidth, clientHeight } = domRef.current;\n        splitview.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api: new SplitviewApi(splitview) });\n        }\n        splitviewRef.current = splitview;\n        return () => {\n            splitview.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!splitviewRef.current) {\n            return;\n        }\n        splitviewRef.current.updateOptions({\n            frameworkComponents: props.components,\n        });\n    }, [props.components]);\n    return (React.createElement(\"div\", { className: props.className, style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nSplitviewReact.displayName = 'SplitviewComponent';\n","import { GridviewApi, GridviewPanel, } from 'dockview-core';\nimport { ReactPart } from '../react';\nexport class ReactGridPanelView extends GridviewPanel {\n    constructor(id, component, reactComponent, reactPortalStore) {\n        super(id, component);\n        this.reactComponent = reactComponent;\n        this.reactPortalStore = reactPortalStore;\n    }\n    getComponent() {\n        var _a;\n        return new ReactPart(this.element, this.reactPortalStore, this.reactComponent, {\n            params: ((_a = this._params) === null || _a === void 0 ? void 0 : _a.params) || {},\n            api: this.api,\n            containerApi: new GridviewApi(this._params.accessor),\n        });\n    }\n}\n","import * as React from 'react';\nimport { GridviewComponent, Orientation, GridviewApi, watchElementResize, } from 'dockview-core';\nimport { ReactGridPanelView } from './view';\nimport { usePortalsLifecycle } from '../react';\nexport const GridviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const gridviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    React.useEffect(() => {\n        if (props.disableAutoResizing) {\n            return () => {\n                //\n            };\n        }\n        const watcher = watchElementResize(domRef.current, (entry) => {\n            var _a;\n            const { width, height } = entry.contentRect;\n            (_a = gridviewRef.current) === null || _a === void 0 ? void 0 : _a.layout(width, height);\n        });\n        return () => {\n            watcher.dispose();\n        };\n    }, [props.disableAutoResizing]);\n    React.useEffect(() => {\n        var _a;\n        const element = document.createElement('div');\n        const gridview = new GridviewComponent(element, {\n            proportionalLayout: typeof props.proportionalLayout === 'boolean'\n                ? props.proportionalLayout\n                : true,\n            orientation: props.orientation || Orientation.HORIZONTAL,\n            frameworkComponents: props.components,\n            frameworkComponentFactory: {\n                createComponent: (id, componentId, component) => {\n                    return new ReactGridPanelView(id, componentId, component, {\n                        addPortal,\n                    });\n                },\n            },\n            styles: props.hideBorders\n                ? { separatorBorder: 'transparent' }\n                : undefined,\n        });\n        (_a = domRef.current) === null || _a === void 0 ? void 0 : _a.appendChild(gridview.element);\n        const { clientWidth, clientHeight } = domRef.current;\n        gridview.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api: new GridviewApi(gridview) });\n        }\n        gridviewRef.current = gridview;\n        return () => {\n            gridview.dispose();\n            element.remove();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!gridviewRef.current) {\n            return;\n        }\n        gridviewRef.current.updateOptions({\n            frameworkComponents: props.components,\n        });\n    }, [props.components]);\n    return (React.createElement(\"div\", { className: props.className, style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nGridviewReact.displayName = 'GridviewComponent';\n","import { ReactPart } from '../react';\nexport class PanePanelSection {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._element = document.createElement('div');\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            params: parameters.params,\n            api: parameters.api,\n            title: parameters.title,\n            containerApi: parameters.containerApi,\n        });\n    }\n    toJSON() {\n        return {\n            id: this.id,\n        };\n    }\n    update(params) {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update(params.params);\n    }\n    dispose() {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import * as React from 'react';\nimport { PaneviewComponent, PaneviewApi, watchElementResize, } from 'dockview-core';\nimport { usePortalsLifecycle } from '../react';\nimport { PanePanelSection } from './view';\nexport const PaneviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const paneviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    React.useEffect(() => {\n        if (props.disableAutoResizing) {\n            return () => {\n                //\n            };\n        }\n        const watcher = watchElementResize(domRef.current, (entry) => {\n            var _a;\n            const { width, height } = entry.contentRect;\n            (_a = paneviewRef.current) === null || _a === void 0 ? void 0 : _a.layout(width, height);\n        });\n        return () => {\n            watcher.dispose();\n        };\n    }, [props.disableAutoResizing]);\n    React.useEffect(() => {\n        const createComponent = (id, _componentId, component) => new PanePanelSection(id, component, {\n            addPortal,\n        });\n        const paneview = new PaneviewComponent(domRef.current, {\n            frameworkComponents: props.components,\n            components: {},\n            headerComponents: {},\n            disableDnd: props.disableDnd,\n            headerframeworkComponents: props.headerComponents,\n            frameworkWrapper: {\n                header: {\n                    createComponent,\n                },\n                body: {\n                    createComponent,\n                },\n            },\n            showDndOverlay: props.showDndOverlay,\n        });\n        const api = new PaneviewApi(paneview);\n        const { clientWidth, clientHeight } = domRef.current;\n        paneview.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api });\n        }\n        paneviewRef.current = paneview;\n        return () => {\n            paneview.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return;\n        }\n        paneviewRef.current.updateOptions({\n            frameworkComponents: props.components,\n        });\n    }, [props.components]);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return;\n        }\n        paneviewRef.current.updateOptions({\n            headerframeworkComponents: props.headerComponents,\n        });\n    }, [props.headerComponents]);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return () => {\n                //\n            };\n        }\n        const paneview = paneviewRef.current;\n        const disposable = paneview.onDidDrop((event) => {\n            if (props.onDidDrop) {\n                props.onDidDrop(Object.assign(Object.assign({}, event), { api: new PaneviewApi(paneview) }));\n            }\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.onDidDrop]);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return;\n        }\n        paneviewRef.current.updateOptions({\n            showDndOverlay: props.showDndOverlay,\n        });\n    }, [props.showDndOverlay]);\n    return (React.createElement(\"div\", { className: props.className, style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nPaneviewReact.displayName = 'PaneviewComponent';\n"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","sourceSymbolKeys","prototype","propertyIsEnumerable","call","MDXContext","useMDXComponents","components","contextComponents","allComponents","MDXProvider","props","Provider","children","TYPE_PROP_NAME","DEFAULTS","inlineCode","wrapper","_ref","MDXCreateElement","ref","propComponents","mdxType","originalType","parentName","etc","type","Component","concat","createElement","args","argsLength","createElementArgArray","Array","newProps","hasOwnProperty","displayName","Event","Disposable","any","_len","_key","listener","disposables","map","child","dispose","d","Emitter","constructor","options","this","_listeners","_disposed","event","_event","_a","replay","undefined","_last","index","splice","fire","e","addDisposableWindowListener","element","addEventListener","removeEventListener","addDisposableListener","TickDelayedEvent","_onFired","onEvent","timer","clearTimeout","setTimeout","NONE","CompositeDisposable","static","_len2","_key2","addDisposables","_len3","_key3","arg","MutableDisposable","_disposable","disposable","watchElementResize","cb","observer","ResizeObserver","entires","firstEntry","observe","unobserve","disconnect","removeClasses","classes","classname","classList","contains","remove","addClasses","add","toggleClass","className","isToggled","hasClass","isAncestor","testChild","testAncestor","parentNode","getElementsByTagName","tag","slice","document","trackFocus","FocusTracker","super","_onDidFocus","onDidFocus","_onDidBlur","onDidBlur","hasFocus","activeElement","loosingFocus","onFocus","onBlur","window","_refreshStateHandler","HTMLElement","refreshState","TransferObject","PanelTransfer","viewId","groupId","panelId","PaneTransfer","paneId","LocalSelectionTransfer","INSTANCE","hasData","proto","clearData","data","getData","setData","getPanelData","panelTransfer","getInstance","getPaneData","paneTransfer","clamp","min","max","Error","Math","sequentialNumberGenerator","next","toString","range","from","to","result","tail","arr","sequenceEquals","arr1","arr2","pushToStart","unshift","pushToEnd","ViewItem","size","_size","cachedVisibleSize","_cachedVisibleSize","visible","minimumSize","view","viewMinimumSize","maximumSize","viewMaximumSize","priority","snap","enabled","container","style","pointerEvents","setVisible","toggle","Orientation","SashState","LayoutPriority","Sizing","Distribute","Split","Invisible","Splitview","orthogonalSize","_orthogonalSize","views","proportions","_proportions","orientation","_orientation","tmp","HORIZONTAL","reduce","r","item","Number","POSITIVE_INFINITY","startSnappingEnabled","_startSnappingEnabled","updateSashEnablement","endSnappingEnabled","_endSnappingEnabled","_this","sashes","contentSize","_onDidSashEnd","onDidSashEnd","_onDidAddView","onDidAddView","_onDidRemoveView","onDidRemoveView","resize","delta","sizes","lowPriorityIndexes","highPriorityIndexes","overloadMinDelta","overloadMaxDelta","snapBefore","snapAfter","x","NEGATIVE_INFINITY","upIndexes","downIndexes","upItems","upSizes","downItems","downSizes","minDeltaUp","_","maxDeltaUp","maxDeltaDown","minDeltaDown","minDelta","maxDelta","snapped","snapView","limitDelta","actualDelta","deltaUp","viewDelta","deltaDown","createContainer","proportionalLayout","viewContainer","createViewContainer","sashContainer","createSashContainer","appendChild","styles","descriptor","viewDescriptor","sizing","addView","saveProportions","separatorBorder","removeProperty","setProperty","isViewVisible","setViewVisible","viewItem","distributeEmptySpace","layoutViews","getViewSize","resizeView","indexes","Low","High","round","relayout","getViews","onDidChange","skipLayout","viewSize","newSize","removeChild","insertBefore","sash","onStart","iframes","iframe","start","clientX","clientY","sashIndex","array","fn","firstIndex","s","snapBeforeIndex","findFirstSnapIndex","snapAfterIndex","snappedViewItem","halfSize","floor","mousemove","mousemoveEvent","end","sashItem","distributeViewSizes","flexibleViewItems","flexibleSize","removeView","getViewCachedVisibleSize","moveView","layout","previousSize","lowPriorityIndex","emptyDelta","sum","offset","left","top","VERTICAL","width","height","previous","collapsesDown","expandsDown","reverseViews","reverse","collapsesUp","expandsUp","position","snappedBefore","snappedAfter","updateSash","MINIMUM","MAXIMUM","DISABLED","ENABLED","state","orientationClassname","Paneview","splitview","paneItems","skipAnimation","_onDidChange","getPanes","pane","onDidChangeExpansionState","setupAnimation","paneItem","addPane","removePane","skipDispose","animationTimer","LeafNode","minimumWidth","maximumWidth","minimumHeight","maximumHeight","minimumOrthogonalSize","maximumOrthogonalSize","BranchNode","c","Normal","priorities","some","p","childDescriptors","_childrenDisposable","childDescriptor","node","setupChildrenEvents","isChildVisible","setChildVisible","moveChild","_removeChild","_addChild","getChildSize","resizeChild","addChild","getChildCachedVisibleSize","findLeaf","candiateNode","last","flipNode","orthogonal","totalSize","childSize","getGridLocation","parentElement","test","el","firstElementChild","lastElementChild","nextElementSibling","indexInParent","getRelativeLocation","rootOrientation","location","direction","getLocationOrientation","directionOrientation","getDirectionOrientation","rest","_index","serializeBranchNode","box","isGridBranchNode","toJSON","Gridview","_root","root","serialize","getView","clear","deserialize","json","deserializer","_deserialize","_deserializeNode","isRoot","serializedChild","fromJSON","oldRoot","insertOrthogonalSplitviewAtRoot","childReference","progmaticSelect","getNode","_getViews","nodeCachedVisibleSize","path","n","l","parent","parentLocation","pathToParent","grandParent","parentIndex","__","newSiblingSize","newSiblingCachedVisibleSize","newParent","newSibling","sibling","isSiblingVisible","siblingSizing","SplitviewApi","component","panels","onDidLayoutFromJSON","onDidLayoutChange","updateOptions","removePanel","panel","focus","getPanel","id","addPanel","movePanel","PaneviewApi","onDidDrop","emitter","assign","api","GridviewApi","onDidAddPanel","onDidAddGroup","onDidRemovePanel","onDidRemoveGroup","onDidActivePanelChange","onDidActiveGroupChange","groups","force","DockviewApi","totalPanels","activePanel","activeGroup","getTabHeight","tabHeight","setTabHeight","getGroupPanel","addGroup","moveToNext","moveToPrevious","closeAllGroups","removeGroup","group","getGroup","DragAndDropObserver","callbacks","registerListeners","onDragEnter","preventDefault","onDragOver","onDragLeave","onDragEnd","onDrop","directionToPosition","positionToDirection","Droptarget","_state","_onDrop","acceptedTargetZonesSet","Set","acceptedTargetZones","clientWidth","clientHeight","rect","currentTarget","getBoundingClientRect","y","quadrant","calculateQuadrant","canDisplayOverlay","overlay","append","toggleClasses","setState","removeDropTarget","stopPropagation","nativeEvent","_b","_c","_d","isSmallX","isSmallY","isLeft","isRight","isTop","isBottom","rightClass","leftClass","topClass","bottomClass","overlayModel","translate","transform","overlayType","_e","_f","isPercentage","activationSize","maybeNumber","fallback","threshold","xp","yp","has","calculateQuadrantAsPercentage","calculateQuadrantAsPixels","ContentContainer","_element","tabIndex","show","display","hide","openPanel","content","_width","_height","closePanel","DockviewDropTargets","DragHandler","_onDragStart","onDragStart","configure","dataTransfer","effectAllowed","Tab","accessor","_onChanged","onChanged","_onDropped","draggable","defaultPrevented","droptarget","locked","model","setActive","isActive","setContent","part","GroupDragHandler","accessorId","getComputedStyle","bgColor","getPropertyValue","color","ghostElement","backgroundColor","padding","fontSize","lineHeight","borderRadius","textContent","body","setDragImage","addGhostImage","VoidContainer","doSetGroupActive","handler","voidDropTarget","Panel","TabsContainer","tabs","hidden","_hidden","setActionElement","actions","actionContainer","tab","selectedIndex","findIndex","singleTabMode","tabContainer","voidContainer","button","_isGroupActive","addTab","delete","tabToRemove","setActivePanel","isActivePanel","find","tabToAdd","alreadyFocused","isContentFocused","skipFocus","DockviewGroupPanelModel","_activePanel","_locked","_panels","isEmpty","MAX_SAFE_INTEGER","hasWatermark","watermark","header","tabsContainer","contentContainer","groupPanel","mostRecentlyUsed","_onMove","onMove","_onDidDrop","_onDidAddPanel","_onDidRemovePanel","_onDidActivePanelChange","dropTarget","hideHeader","handleDropEvent","initialize","doAddPanel","updateContainer","createGroupControlElement","_control","init","containerApi","activeView","normalizedIndex","suppressRoll","containsPanel","includes","_params","update","skipSetPanelActive","skipSetGroupActive","updateParentGroup","doSetActivePanel","groupItemOrId","panelToRemove","_removePanel","closeAllPanels","arrPanelCpy","doClose","isPanelActive","updateActions","isGroupActive","doRemovePanel","nextPanel","skipSetActive","hasExistingPanel","updateMru","createWatermarkComponent","showDndOverlay","itemId","nextLayoutId","toTarget","BaseGrid","_id","_groups","values","gridview","_activeGroup","Map","_onDidLayoutChange","_onDidRemoveGroup","_onDidAddGroup","_onDidActiveGroupChange","_bufferOnDidLayoutChange","isVisible","doAddGroup","doRemoveGroup","get","skipActive","forceResize","PanelApiImpl","isFocused","_isFocused","_isActive","_isVisible","panelUpdatesDisposable","_onDidDimensionChange","onDidDimensionsChange","_onDidChangeFocus","onDidFocusChange","_onFocusEvent","onFocusEvent","_onDidVisibilityChange","onDidVisibilityChange","_onVisibilityChange","onVisibilityChange","_onDidActiveChange","onDidActiveChange","_onActiveChange","onActiveChange","_onUpdateParameters","onUpdateParameters","parameters","params","updateParameters","SplitviewPanelApiImpl","_onDidConstraintsChangeInternal","onDidConstraintsChangeInternal","_onDidConstraintsChange","onDidConstraintsChange","_onDidSizeChange","onDidSizeChange","setConstraints","setSize","PaneviewPanelApiImpl","_pane","_onDidExpansionChange","onDidExpansionChange","_onMouseEnter","onMouseEnter","_onMouseLeave","onMouseLeave","setExpanded","isExpanded","BasePanelView","outline","overflow","getComponent","PaneviewPanel","headerSize","_minimumBodySize","_maximumBodySize","minimumBodySize","maximumBodySize","headerVisible","_headerVisible","headerComponent","isHeaderVisible","_onDidChangeExpansionState","_isExpanded","expandedSize","ev","isPanelExpanded","renderOnce","expanded","bodyPart","getBodyComponent","headerPart","getHeaderComponent","title","minHeight","maxHeight","DraggablePaneviewPanel","disableDnd","initDragFeatures","existingPanel","allPanels","fromIndex","toIndex","GridviewPanelApiImpl","GridviewPanel","_priority","_snap","_minimumWidth","_evaluatedMinimumWidth","updateConstraints","_minimumHeight","_evaluatedMinimumHeight","_maximumHeight","_evaluatedMaximumHeight","_maximumWidth","_evaluatedMaximumWidth","maximum","minimum","DockviewGroupPanel","_model","DockviewPanelApiImpl","isOldGroupActive","_group","_onDidGroupChange","_onDidTitleChange","onDidTitleChange","onDidGroupChange","setTitle","close","DockviewPanel","_title","contentComponent","tabComponent","isPanelVisible","createSvgElementFromPath","svg","createElementNS","setAttributeNS","viewbox","createCloseButton","DefaultTab","_content","_actionContainer","_list","action","render","onGroupChange","onPanelVisibleChange","_isPanelVisible","createComponent","componentName","frameworkComponents","createFrameworkComponent","FrameworkComponent","DockviewPanelModel","_tab","createContentComponent","createTabComponent","frameworkComponentFactory","tabComponents","frameworkTabComponents","DefaultDockviewDeserialzier","panelData","viewData","defaultTabComponent","Watermark","emptySpace","flexGrow","actionsContainer","closeAnchor","_visible","isOneGroup","DockviewComponent","flatMap","_options","nextGroupId","_deserializer","_onDidLayoutFromJSON","updateWatermark","watermarkComponent","watermarkFrameworkComponent","Edge","moveGroupOrPanel","orthogonalize","_api","createGroupAtLocation","hasOrientationChanged","includePanel","grid","collection","isArray","createGroup","hasActiveGroup","hasActivePanel","entry","entries","referenceGroup","referencePanel","findGroup","isPanelOptionsWithGroup","createPanel","relativeLocation","removeEmptyGroup","watermarkContainer","isGroupOptionsWithGroup","sourceGroup","referenceLocation","targetLocation","targetParentLocation","sourceLocation","sourceParentLocation","targetGroup","updatedReferenceLocation","groupItem","dropLocation","moveGroup","isGroupAlreadyFocused","console","warn","set","GridviewComponent","_onDidLayoutfromJSON","serializedGridview","queue","registerPanel","f","removedPanel","reference","SplitviewComponent","_splitview","v","frameworkWrapper","doAddView","serializedSplitview","DefaultHeader","_expandedIcon","_collapsedIcon","apiRef","_expander","updateIcon","PaneFramework","PaneviewComponent","paneview","_paneview","_viewDisposables","headerComponents","headerframeworkComponents","serializedPaneview","SplitviewPanel","_minimumSize","_evaluatedMinimumSize","_maximumSize","_evaluatedMaximumSize","ReactComponentBridge","triggerRender","React","_props","componentProps","current","Date","now","uniquePortalKeyGenerator","ReactPartContext","ReactPart","portalStore","context","_initialProps","disposed","createPortal","componentInstance","bridgeComponent","portal","ReactDOM","addPortal","usePortalsLifecycle","portals","setPortals","existingPortals","ReactPanelContentPart","reactPortalStore","DockviewEmitter","ReactPanelHeaderPart","ReactWatermarkPart","ReactGroupControlsRendererPart","_part","mutableDisposable","DockviewMutableDisposable","DockviewCompositeDisposable","updatePanels","updateActivePanel","updateGroupActive","store","DEFAULT_REACT_TAB","DockviewReact","domRef","dockviewRef","disableAutoResizing","watcher","contentRect","factory","componentId","dockview","hideBorders","groupControlComponent","onReady","CloseButton","viewBox","focusable","__rest","t","DockviewDefaultTab","_containerApi","onClose","onClick","iconClassname","join","ReactPanelView","reactComponent","SplitviewReact","splitviewRef","ReactGridPanelView","GridviewReact","gridviewRef","PanePanelSection","PaneviewReact","paneviewRef","_componentId"],"sourceRoot":""}