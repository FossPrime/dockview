{"version":3,"file":"assets/js/9b7b975e.25dcb557.js","mappings":"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","sources":["webpack://dockview-docs/../../node_modules/@mdx-js/react/dist/esm.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/dataTransfer.js","webpack://dockview-docs/../dockview-core/dist/esm/events.js","webpack://dockview-docs/../dockview-core/dist/esm/lifecycle.js","webpack://dockview-docs/../dockview-core/dist/esm/dom.js","webpack://dockview-docs/../dockview-core/dist/esm/array.js","webpack://dockview-docs/../dockview-core/dist/esm/math.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/viewItem.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/splitview.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/paneview.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/leafNode.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/branchNode.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/gridview.js","webpack://dockview-docs/../dockview-core/dist/esm/api/component.api.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/dnd.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/droptarget.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/panel/content.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/types.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/abstractDragHandler.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/tab/tab.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/groupDragHandler.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/ghost.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/titlebar/voidContainer.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/titlebar/tabsContainer.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewGroupPanelModel.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/baseComponentGridview.js","webpack://dockview-docs/../dockview-core/dist/esm/api/panelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/api/splitviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/api/paneviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/basePanelView.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/paneviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/draggablePaneviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/api/gridviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/gridviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewGroupPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/api/dockviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/svg.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/tab/defaultTab.js","webpack://dockview-docs/../dockview-core/dist/esm/panel/componentFactory.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewPanelModel.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/deserializer.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/watermark/watermark.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/options.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/gridviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/splitviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/defaultPaneviewHeader.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/paneviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/splitviewPanel.js","webpack://dockview-docs/../dockview/dist/esm/react.js","webpack://dockview-docs/../dockview/dist/esm/dockview/reactContentPart.js","webpack://dockview-docs/../dockview/dist/esm/dockview/reactHeaderPart.js","webpack://dockview-docs/../dockview/dist/esm/dockview/reactWatermarkPart.js","webpack://dockview-docs/../dockview/dist/esm/dockview/groupControlsRenderer.js","webpack://dockview-docs/../dockview/dist/esm/dockview/dockview.js","webpack://dockview-docs/../dockview/dist/esm/svg.js","webpack://dockview-docs/../dockview/dist/esm/dockview/defaultTab.js","webpack://dockview-docs/../dockview/dist/esm/splitview/view.js","webpack://dockview-docs/../dockview/dist/esm/splitview/splitview.js","webpack://dockview-docs/../dockview/dist/esm/gridview/view.js","webpack://dockview-docs/../dockview/dist/esm/gridview/gridview.js","webpack://dockview-docs/../dockview/dist/esm/paneview/view.js","webpack://dockview-docs/../dockview/dist/esm/paneview/paneview.js","webpack://dockview-docs/./src/components/gridview/events.tsx","webpack://dockview-docs/./src/components/simpleGridview.tsx","webpack://dockview-docs/./src/components/ui/console/console.tsx","webpack://dockview-docs/./versioned_docs/version-1.6.0/components/gridview.mdx"],"sourcesContent":["import React from 'react';\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nvar isFunction = function isFunction(obj) {\n  return typeof obj === 'function';\n};\n\nvar MDXContext = /*#__PURE__*/React.createContext({});\nvar withMDXComponents = function withMDXComponents(Component) {\n  return function (props) {\n    var allComponents = useMDXComponents(props.components);\n    return /*#__PURE__*/React.createElement(Component, _extends({}, props, {\n      components: allComponents\n    }));\n  };\n};\nvar useMDXComponents = function useMDXComponents(components) {\n  var contextComponents = React.useContext(MDXContext);\n  var allComponents = contextComponents;\n\n  if (components) {\n    allComponents = isFunction(components) ? components(contextComponents) : _objectSpread2(_objectSpread2({}, contextComponents), components);\n  }\n\n  return allComponents;\n};\nvar MDXProvider = function MDXProvider(props) {\n  var allComponents = useMDXComponents(props.components);\n  return /*#__PURE__*/React.createElement(MDXContext.Provider, {\n    value: allComponents\n  }, props.children);\n};\n\nvar TYPE_PROP_NAME = 'mdxType';\nvar DEFAULTS = {\n  inlineCode: 'code',\n  wrapper: function wrapper(_ref) {\n    var children = _ref.children;\n    return /*#__PURE__*/React.createElement(React.Fragment, {}, children);\n  }\n};\nvar MDXCreateElement = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var propComponents = props.components,\n      mdxType = props.mdxType,\n      originalType = props.originalType,\n      parentName = props.parentName,\n      etc = _objectWithoutProperties(props, [\"components\", \"mdxType\", \"originalType\", \"parentName\"]);\n\n  var components = useMDXComponents(propComponents);\n  var type = mdxType;\n  var Component = components[\"\".concat(parentName, \".\").concat(type)] || components[type] || DEFAULTS[type] || originalType;\n\n  if (propComponents) {\n    return /*#__PURE__*/React.createElement(Component, _objectSpread2(_objectSpread2({\n      ref: ref\n    }, etc), {}, {\n      components: propComponents\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _objectSpread2({\n    ref: ref\n  }, etc));\n});\nMDXCreateElement.displayName = 'MDXCreateElement';\nfunction createElement (type, props) {\n  var args = arguments;\n  var mdxType = props && props.mdxType;\n\n  if (typeof type === 'string' || mdxType) {\n    var argsLength = args.length;\n    var createElementArgArray = new Array(argsLength);\n    createElementArgArray[0] = MDXCreateElement;\n    var newProps = {};\n\n    for (var key in props) {\n      if (hasOwnProperty.call(props, key)) {\n        newProps[key] = props[key];\n      }\n    }\n\n    newProps.originalType = type;\n    newProps[TYPE_PROP_NAME] = typeof type === 'string' ? type : mdxType;\n    createElementArgArray[1] = newProps;\n\n    for (var i = 2; i < argsLength; i++) {\n      createElementArgArray[i] = args[i];\n    }\n\n    return React.createElement.apply(null, createElementArgArray);\n  }\n\n  return React.createElement.apply(null, args);\n}\n\nexport { MDXContext, MDXProvider, createElement as mdx, useMDXComponents, withMDXComponents };\n","class TransferObject {\n    constructor() {\n        //\n    }\n}\nexport class PanelTransfer extends TransferObject {\n    constructor(viewId, groupId, panelId) {\n        super();\n        this.viewId = viewId;\n        this.groupId = groupId;\n        this.panelId = panelId;\n    }\n}\nexport class PaneTransfer extends TransferObject {\n    constructor(viewId, paneId) {\n        super();\n        this.viewId = viewId;\n        this.paneId = paneId;\n    }\n}\n/**\n * A singleton to store transfer data during drag & drop operations that are only valid within the application.\n */\nexport class LocalSelectionTransfer {\n    constructor() {\n        // protect against external instantiation\n    }\n    static getInstance() {\n        return LocalSelectionTransfer.INSTANCE;\n    }\n    hasData(proto) {\n        return proto && proto === this.proto;\n    }\n    clearData(proto) {\n        if (this.hasData(proto)) {\n            this.proto = undefined;\n            this.data = undefined;\n        }\n    }\n    getData(proto) {\n        if (this.hasData(proto)) {\n            return this.data;\n        }\n        return undefined;\n    }\n    setData(data, proto) {\n        if (proto) {\n            this.data = data;\n            this.proto = proto;\n        }\n    }\n}\nLocalSelectionTransfer.INSTANCE = new LocalSelectionTransfer();\nexport function getPanelData() {\n    const panelTransfer = LocalSelectionTransfer.getInstance();\n    const isPanelEvent = panelTransfer.hasData(PanelTransfer.prototype);\n    if (!isPanelEvent) {\n        return undefined;\n    }\n    return panelTransfer.getData(PanelTransfer.prototype)[0];\n}\nexport function getPaneData() {\n    const paneTransfer = LocalSelectionTransfer.getInstance();\n    const isPanelEvent = paneTransfer.hasData(PaneTransfer.prototype);\n    if (!isPanelEvent) {\n        return undefined;\n    }\n    return paneTransfer.getData(PaneTransfer.prototype)[0];\n}\n","export var Event;\n(function (Event) {\n    Event.any = (...children) => {\n        return (listener) => {\n            const disposables = children.map((child) => child(listener));\n            return {\n                dispose: () => {\n                    disposables.forEach((d) => {\n                        d.dispose();\n                    });\n                },\n            };\n        };\n    };\n})(Event || (Event = {}));\n// dumb event emitter with better typings than nodes event emitter\n// https://github.com/microsoft/vscode/blob/master/src/vs/base/common/event.ts\nexport class Emitter {\n    constructor(options) {\n        this.options = options;\n        this._listeners = [];\n        this._disposed = false;\n    }\n    get event() {\n        if (!this._event) {\n            this._event = (listener) => {\n                var _a;\n                if (((_a = this.options) === null || _a === void 0 ? void 0 : _a.replay) && this._last !== undefined) {\n                    listener(this._last);\n                }\n                this._listeners.push(listener);\n                return {\n                    dispose: () => {\n                        const index = this._listeners.indexOf(listener);\n                        if (index > -1) {\n                            this._listeners.splice(index, 1);\n                        }\n                    },\n                };\n            };\n        }\n        return this._event;\n    }\n    fire(e) {\n        this._last = e;\n        for (const listener of this._listeners) {\n            listener(e);\n        }\n    }\n    dispose() {\n        this._listeners = [];\n        this._disposed = true;\n    }\n}\nexport function addDisposableWindowListener(element, type, listener, options) {\n    element.addEventListener(type, listener, options);\n    return {\n        dispose: () => {\n            element.removeEventListener(type, listener);\n        },\n    };\n}\nexport function addDisposableListener(element, type, listener, options) {\n    element.addEventListener(type, listener, options);\n    return {\n        dispose: () => {\n            element.removeEventListener(type, listener);\n        },\n    };\n}\nexport class TickDelayedEvent {\n    constructor() {\n        this._onFired = new Emitter();\n        this.onEvent = this._onFired.event;\n    }\n    fire() {\n        if (this.timer) {\n            clearTimeout(this.timer);\n        }\n        this.timer = setTimeout(() => {\n            this._onFired.fire();\n            clearTimeout(this.timer);\n        });\n    }\n    dispose() {\n        this._onFired.dispose();\n    }\n}\n","export var Disposable;\n(function (Disposable) {\n    Disposable.NONE = {\n        dispose: () => {\n            // noop\n        },\n    };\n})(Disposable || (Disposable = {}));\nexport class CompositeDisposable {\n    static from(...args) {\n        return new CompositeDisposable(...args);\n    }\n    constructor(...args) {\n        this.disposables = args;\n    }\n    addDisposables(...args) {\n        args.forEach((arg) => this.disposables.push(arg));\n    }\n    dispose() {\n        this.disposables.forEach((arg) => arg.dispose());\n    }\n}\nexport class MutableDisposable {\n    constructor() {\n        this._disposable = Disposable.NONE;\n    }\n    set value(disposable) {\n        if (this._disposable) {\n            this._disposable.dispose();\n        }\n        this._disposable = disposable;\n    }\n    dispose() {\n        if (this._disposable) {\n            this._disposable.dispose();\n            this._disposable = Disposable.NONE;\n        }\n    }\n}\n","import { Emitter, addDisposableListener, addDisposableWindowListener, } from './events';\nimport { CompositeDisposable } from './lifecycle';\nexport function watchElementResize(element, cb) {\n    const observer = new ResizeObserver((entires) => {\n        const firstEntry = entires[0];\n        cb(firstEntry);\n    });\n    observer.observe(element);\n    return {\n        dispose: () => {\n            observer.unobserve(element);\n            observer.disconnect();\n        },\n    };\n}\nexport const removeClasses = (element, ...classes) => {\n    for (const classname of classes) {\n        if (element.classList.contains(classname)) {\n            element.classList.remove(classname);\n        }\n    }\n};\nexport const addClasses = (element, ...classes) => {\n    for (const classname of classes) {\n        if (!element.classList.contains(classname)) {\n            element.classList.add(classname);\n        }\n    }\n};\nexport const toggleClass = (element, className, isToggled) => {\n    const hasClass = element.classList.contains(className);\n    if (isToggled && !hasClass) {\n        element.classList.add(className);\n    }\n    if (!isToggled && hasClass) {\n        element.classList.remove(className);\n    }\n};\nexport function isAncestor(testChild, testAncestor) {\n    while (testChild) {\n        if (testChild === testAncestor) {\n            return true;\n        }\n        testChild = testChild.parentNode;\n    }\n    return false;\n}\nexport function getElementsByTagName(tag) {\n    return Array.prototype.slice.call(document.getElementsByTagName(tag), 0);\n}\nexport function trackFocus(element) {\n    return new FocusTracker(element);\n}\n/**\n * Track focus on an element. Ensure tabIndex is set when an HTMLElement is not focusable by default\n */\nclass FocusTracker extends CompositeDisposable {\n    constructor(element) {\n        super();\n        this._onDidFocus = new Emitter();\n        this.onDidFocus = this._onDidFocus.event;\n        this._onDidBlur = new Emitter();\n        this.onDidBlur = this._onDidBlur.event;\n        let hasFocus = isAncestor(document.activeElement, element);\n        let loosingFocus = false;\n        const onFocus = () => {\n            loosingFocus = false;\n            if (!hasFocus) {\n                hasFocus = true;\n                this._onDidFocus.fire();\n            }\n        };\n        const onBlur = () => {\n            if (hasFocus) {\n                loosingFocus = true;\n                window.setTimeout(() => {\n                    if (loosingFocus) {\n                        loosingFocus = false;\n                        hasFocus = false;\n                        this._onDidBlur.fire();\n                    }\n                }, 0);\n            }\n        };\n        this._refreshStateHandler = () => {\n            const currentNodeHasFocus = isAncestor(document.activeElement, element);\n            if (currentNodeHasFocus !== hasFocus) {\n                if (hasFocus) {\n                    onBlur();\n                }\n                else {\n                    onFocus();\n                }\n            }\n        };\n        if (element instanceof HTMLElement) {\n            this.addDisposables(addDisposableListener(element, 'focus', onFocus, true));\n            this.addDisposables(addDisposableListener(element, 'blur', onBlur, true));\n        }\n        else {\n            this.addDisposables(addDisposableWindowListener(element, 'focus', onFocus, true));\n            this.addDisposables(addDisposableWindowListener(element, 'blur', onBlur, true));\n        }\n    }\n    refreshState() {\n        this._refreshStateHandler();\n    }\n    dispose() {\n        super.dispose();\n        this._onDidBlur.dispose();\n        this._onDidFocus.dispose();\n    }\n}\n","export function tail(arr) {\n    if (arr.length === 0) {\n        throw new Error('Invalid tail call');\n    }\n    return [arr.slice(0, arr.length - 1), arr[arr.length - 1]];\n}\nexport function last(arr) {\n    return arr.length > 0 ? arr[arr.length - 1] : undefined;\n}\nexport function sequenceEquals(arr1, arr2) {\n    if (arr1.length !== arr2.length) {\n        return false;\n    }\n    for (let i = 0; i < arr1.length; i++) {\n        if (arr1[i] !== arr2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Pushes an element to the start of the array, if found.\n */\nexport function pushToStart(arr, value) {\n    const index = arr.indexOf(value);\n    if (index > -1) {\n        arr.splice(index, 1);\n        arr.unshift(value);\n    }\n}\n/**\n * Pushes an element to the end of the array, if found.\n */\nexport function pushToEnd(arr, value) {\n    const index = arr.indexOf(value);\n    if (index > -1) {\n        arr.splice(index, 1);\n        arr.push(value);\n    }\n}\nexport function firstIndex(array, fn) {\n    for (let i = 0; i < array.length; i++) {\n        const element = array[i];\n        if (fn(element)) {\n            return i;\n        }\n    }\n    return -1;\n}\n","export const clamp = (value, min, max) => {\n    if (min > max) {\n        throw new Error(`${min} > ${max} is an invalid condition`);\n    }\n    return Math.min(max, Math.max(value, min));\n};\nexport const sequentialNumberGenerator = () => {\n    let value = 1;\n    return { next: () => (value++).toString() };\n};\nexport const range = (from, to) => {\n    const result = [];\n    if (typeof to !== 'number') {\n        to = from;\n        from = 0;\n    }\n    if (from <= to) {\n        for (let i = from; i < to; i++) {\n            result.push(i);\n        }\n    }\n    else {\n        for (let i = from; i > to; i--) {\n            result.push(i);\n        }\n    }\n    return result;\n};\n","import { clamp } from '../math';\nexport class ViewItem {\n    set size(size) {\n        this._size = size;\n    }\n    get size() {\n        return this._size;\n    }\n    get cachedVisibleSize() {\n        return this._cachedVisibleSize;\n    }\n    get visible() {\n        return typeof this._cachedVisibleSize === 'undefined';\n    }\n    get minimumSize() {\n        return this.visible ? this.view.minimumSize : 0;\n    }\n    get viewMinimumSize() {\n        return this.view.minimumSize;\n    }\n    get maximumSize() {\n        return this.visible ? this.view.maximumSize : 0;\n    }\n    get viewMaximumSize() {\n        return this.view.maximumSize;\n    }\n    get priority() {\n        return this.view.priority;\n    }\n    get snap() {\n        return !!this.view.snap;\n    }\n    set enabled(enabled) {\n        this.container.style.pointerEvents = enabled ? '' : 'none';\n    }\n    constructor(container, view, size, disposable) {\n        this.container = container;\n        this.view = view;\n        this.disposable = disposable;\n        this._cachedVisibleSize = undefined;\n        if (typeof size === 'number') {\n            this._size = size;\n            this._cachedVisibleSize = undefined;\n            container.classList.add('visible');\n        }\n        else {\n            this._size = 0;\n            this._cachedVisibleSize = size.cachedVisibleSize;\n        }\n    }\n    setVisible(visible, size) {\n        var _a;\n        if (visible === this.visible) {\n            return;\n        }\n        if (visible) {\n            this.size = clamp((_a = this._cachedVisibleSize) !== null && _a !== void 0 ? _a : 0, this.viewMinimumSize, this.viewMaximumSize);\n            this._cachedVisibleSize = undefined;\n        }\n        else {\n            this._cachedVisibleSize =\n                typeof size === 'number' ? size : this.size;\n            this.size = 0;\n        }\n        this.container.classList.toggle('visible', visible);\n        if (this.view.setVisible) {\n            this.view.setVisible(visible);\n        }\n    }\n    dispose() {\n        this.disposable.dispose();\n        return this.view;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/splitview\n *--------------------------------------------------------------------------------------------*/\nimport { removeClasses, addClasses, toggleClass, getElementsByTagName, } from '../dom';\nimport { Emitter } from '../events';\nimport { pushToStart, pushToEnd, firstIndex } from '../array';\nimport { range, clamp } from '../math';\nimport { ViewItem } from './viewItem';\nexport var Orientation;\n(function (Orientation) {\n    Orientation[\"HORIZONTAL\"] = \"HORIZONTAL\";\n    Orientation[\"VERTICAL\"] = \"VERTICAL\";\n})(Orientation || (Orientation = {}));\nexport var SashState;\n(function (SashState) {\n    SashState[SashState[\"MAXIMUM\"] = 0] = \"MAXIMUM\";\n    SashState[SashState[\"MINIMUM\"] = 1] = \"MINIMUM\";\n    SashState[SashState[\"DISABLED\"] = 2] = \"DISABLED\";\n    SashState[SashState[\"ENABLED\"] = 3] = \"ENABLED\";\n})(SashState || (SashState = {}));\nexport var LayoutPriority;\n(function (LayoutPriority) {\n    LayoutPriority[\"Low\"] = \"low\";\n    LayoutPriority[\"High\"] = \"high\";\n    LayoutPriority[\"Normal\"] = \"normal\";\n})(LayoutPriority || (LayoutPriority = {}));\nexport var Sizing;\n(function (Sizing) {\n    Sizing.Distribute = { type: 'distribute' };\n    function Split(index) {\n        return { type: 'split', index };\n    }\n    Sizing.Split = Split;\n    function Invisible(cachedVisibleSize) {\n        return { type: 'invisible', cachedVisibleSize };\n    }\n    Sizing.Invisible = Invisible;\n})(Sizing || (Sizing = {}));\nexport class Splitview {\n    get size() {\n        return this._size;\n    }\n    set size(value) {\n        this._size = value;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    set orthogonalSize(value) {\n        this._orthogonalSize = value;\n    }\n    get length() {\n        return this.views.length;\n    }\n    get proportions() {\n        return this._proportions ? [...this._proportions] : undefined;\n    }\n    get orientation() {\n        return this._orientation;\n    }\n    set orientation(value) {\n        this._orientation = value;\n        const tmp = this.size;\n        this.size = this.orthogonalSize;\n        this.orthogonalSize = tmp;\n        removeClasses(this.element, 'horizontal', 'vertical');\n        this.element.classList.add(this.orientation == Orientation.HORIZONTAL\n            ? 'horizontal'\n            : 'vertical');\n    }\n    get minimumSize() {\n        return this.views.reduce((r, item) => r + item.minimumSize, 0);\n    }\n    get maximumSize() {\n        return this.length === 0\n            ? Number.POSITIVE_INFINITY\n            : this.views.reduce((r, item) => r + item.maximumSize, 0);\n    }\n    get startSnappingEnabled() {\n        return this._startSnappingEnabled;\n    }\n    set startSnappingEnabled(startSnappingEnabled) {\n        if (this._startSnappingEnabled === startSnappingEnabled) {\n            return;\n        }\n        this._startSnappingEnabled = startSnappingEnabled;\n        this.updateSashEnablement();\n    }\n    get endSnappingEnabled() {\n        return this._endSnappingEnabled;\n    }\n    set endSnappingEnabled(endSnappingEnabled) {\n        if (this._endSnappingEnabled === endSnappingEnabled) {\n            return;\n        }\n        this._endSnappingEnabled = endSnappingEnabled;\n        this.updateSashEnablement();\n    }\n    constructor(container, options) {\n        this.container = container;\n        this.views = [];\n        this.sashes = [];\n        this._size = 0;\n        this._orthogonalSize = 0;\n        this.contentSize = 0;\n        this._proportions = undefined;\n        this._startSnappingEnabled = true;\n        this._endSnappingEnabled = true;\n        this._onDidSashEnd = new Emitter();\n        this.onDidSashEnd = this._onDidSashEnd.event;\n        this._onDidAddView = new Emitter();\n        this.onDidAddView = this._onDidAddView.event;\n        this._onDidRemoveView = new Emitter();\n        this.onDidRemoveView = this._onDidRemoveView.event;\n        this.resize = (index, delta, sizes = this.views.map((x) => x.size), lowPriorityIndexes, highPriorityIndexes, overloadMinDelta = Number.NEGATIVE_INFINITY, overloadMaxDelta = Number.POSITIVE_INFINITY, snapBefore, snapAfter) => {\n            if (index < 0 || index > this.views.length) {\n                return 0;\n            }\n            const upIndexes = range(index, -1);\n            const downIndexes = range(index + 1, this.views.length);\n            //\n            if (highPriorityIndexes) {\n                for (const i of highPriorityIndexes) {\n                    pushToStart(upIndexes, i);\n                    pushToStart(downIndexes, i);\n                }\n            }\n            if (lowPriorityIndexes) {\n                for (const i of lowPriorityIndexes) {\n                    pushToEnd(upIndexes, i);\n                    pushToEnd(downIndexes, i);\n                }\n            }\n            //\n            const upItems = upIndexes.map((i) => this.views[i]);\n            const upSizes = upIndexes.map((i) => sizes[i]);\n            //\n            const downItems = downIndexes.map((i) => this.views[i]);\n            const downSizes = downIndexes.map((i) => sizes[i]);\n            //\n            const minDeltaUp = upIndexes.reduce((_, i) => _ + this.views[i].minimumSize - sizes[i], 0);\n            const maxDeltaUp = upIndexes.reduce((_, i) => _ + this.views[i].maximumSize - sizes[i], 0);\n            //\n            const maxDeltaDown = downIndexes.length === 0\n                ? Number.POSITIVE_INFINITY\n                : downIndexes.reduce((_, i) => _ + sizes[i] - this.views[i].minimumSize, 0);\n            const minDeltaDown = downIndexes.length === 0\n                ? Number.NEGATIVE_INFINITY\n                : downIndexes.reduce((_, i) => _ + sizes[i] - this.views[i].maximumSize, 0);\n            //\n            const minDelta = Math.max(minDeltaUp, minDeltaDown);\n            const maxDelta = Math.min(maxDeltaDown, maxDeltaUp);\n            //\n            let snapped = false;\n            if (snapBefore) {\n                const snapView = this.views[snapBefore.index];\n                const visible = delta >= snapBefore.limitDelta;\n                snapped = visible !== snapView.visible;\n                snapView.setVisible(visible, snapBefore.size);\n            }\n            if (!snapped && snapAfter) {\n                const snapView = this.views[snapAfter.index];\n                const visible = delta < snapAfter.limitDelta;\n                snapped = visible !== snapView.visible;\n                snapView.setVisible(visible, snapAfter.size);\n            }\n            if (snapped) {\n                return this.resize(index, delta, sizes, lowPriorityIndexes, highPriorityIndexes, overloadMinDelta, overloadMaxDelta);\n            }\n            //\n            const tentativeDelta = clamp(delta, minDelta, maxDelta);\n            let actualDelta = 0;\n            //\n            let deltaUp = tentativeDelta;\n            for (let i = 0; i < upItems.length; i++) {\n                const item = upItems[i];\n                const size = clamp(upSizes[i] + deltaUp, item.minimumSize, item.maximumSize);\n                const viewDelta = size - upSizes[i];\n                actualDelta += viewDelta;\n                deltaUp -= viewDelta;\n                item.size = size;\n            }\n            //\n            let deltaDown = actualDelta;\n            for (let i = 0; i < downItems.length; i++) {\n                const item = downItems[i];\n                const size = clamp(downSizes[i] - deltaDown, item.minimumSize, item.maximumSize);\n                const viewDelta = size - downSizes[i];\n                deltaDown += viewDelta;\n                item.size = size;\n            }\n            //\n            return delta;\n        };\n        this._orientation = options.orientation;\n        this.element = this.createContainer();\n        this.proportionalLayout =\n            options.proportionalLayout === undefined\n                ? true\n                : !!options.proportionalLayout;\n        this.viewContainer = this.createViewContainer();\n        this.sashContainer = this.createSashContainer();\n        this.element.appendChild(this.sashContainer);\n        this.element.appendChild(this.viewContainer);\n        this.container.appendChild(this.element);\n        this.style(options.styles);\n        // We have an existing set of view, add them now\n        if (options.descriptor) {\n            this._size = options.descriptor.size;\n            options.descriptor.views.forEach((viewDescriptor, index) => {\n                const sizing = viewDescriptor.visible === undefined ||\n                    viewDescriptor.visible\n                    ? viewDescriptor.size\n                    : {\n                        type: 'invisible',\n                        cachedVisibleSize: viewDescriptor.size,\n                    };\n                const view = viewDescriptor.view;\n                this.addView(view, sizing, index, true\n                // true skip layout\n                );\n            });\n            // Initialize content size and proportions for first layout\n            this.contentSize = this.views.reduce((r, i) => r + i.size, 0);\n            this.saveProportions();\n        }\n    }\n    style(styles) {\n        if ((styles === null || styles === void 0 ? void 0 : styles.separatorBorder) === 'transparent') {\n            removeClasses(this.element, 'separator-border');\n            this.element.style.removeProperty('--dv-separator-border');\n        }\n        else {\n            addClasses(this.element, 'separator-border');\n            if (styles === null || styles === void 0 ? void 0 : styles.separatorBorder) {\n                this.element.style.setProperty('--dv-separator-border', styles.separatorBorder);\n            }\n        }\n    }\n    isViewVisible(index) {\n        if (index < 0 || index >= this.views.length) {\n            throw new Error('Index out of bounds');\n        }\n        const viewItem = this.views[index];\n        return viewItem.visible;\n    }\n    setViewVisible(index, visible) {\n        if (index < 0 || index >= this.views.length) {\n            throw new Error('Index out of bounds');\n        }\n        toggleClass(this.container, 'visible', visible);\n        const viewItem = this.views[index];\n        toggleClass(this.container, 'visible', visible);\n        viewItem.setVisible(visible, viewItem.size);\n        this.distributeEmptySpace(index);\n        this.layoutViews();\n        this.saveProportions();\n    }\n    getViewSize(index) {\n        if (index < 0 || index >= this.views.length) {\n            return -1;\n        }\n        return this.views[index].size;\n    }\n    resizeView(index, size) {\n        if (index < 0 || index >= this.views.length) {\n            return;\n        }\n        const indexes = range(this.views.length).filter((i) => i !== index);\n        const lowPriorityIndexes = [\n            ...indexes.filter((i) => this.views[i].priority === LayoutPriority.Low),\n            index,\n        ];\n        const highPriorityIndexes = indexes.filter((i) => this.views[i].priority === LayoutPriority.High);\n        const item = this.views[index];\n        size = Math.round(size);\n        size = clamp(size, item.minimumSize, Math.min(item.maximumSize, this._size));\n        item.size = size;\n        this.relayout(lowPriorityIndexes, highPriorityIndexes);\n    }\n    getViews() {\n        return this.views.map((x) => x.view);\n    }\n    onDidChange(item, size) {\n        const index = this.views.indexOf(item);\n        if (index < 0 || index >= this.views.length) {\n            return;\n        }\n        size = typeof size === 'number' ? size : item.size;\n        size = clamp(size, item.minimumSize, item.maximumSize);\n        item.size = size;\n        this.relayout([index]);\n    }\n    addView(view, size = { type: 'distribute' }, index = this.views.length, skipLayout) {\n        const container = document.createElement('div');\n        container.className = 'view';\n        container.appendChild(view.element);\n        let viewSize;\n        if (typeof size === 'number') {\n            viewSize = size;\n        }\n        else if (size.type === 'split') {\n            viewSize = this.getViewSize(size.index) / 2;\n        }\n        else if (size.type === 'invisible') {\n            viewSize = { cachedVisibleSize: size.cachedVisibleSize };\n        }\n        else {\n            viewSize = view.minimumSize;\n        }\n        const disposable = view.onDidChange((newSize) => this.onDidChange(viewItem, newSize.size));\n        const dispose = () => {\n            disposable === null || disposable === void 0 ? void 0 : disposable.dispose();\n            this.viewContainer.removeChild(container);\n        };\n        const viewItem = new ViewItem(container, view, viewSize, { dispose });\n        if (index === this.views.length) {\n            this.viewContainer.appendChild(container);\n        }\n        else {\n            this.viewContainer.insertBefore(container, this.viewContainer.children.item(index));\n        }\n        this.views.splice(index, 0, viewItem);\n        if (this.views.length > 1) {\n            //add sash\n            const sash = document.createElement('div');\n            sash.className = 'sash';\n            const onStart = (event) => {\n                for (const item of this.views) {\n                    item.enabled = false;\n                }\n                const iframes = [\n                    ...getElementsByTagName('iframe'),\n                    ...getElementsByTagName('webview'),\n                ];\n                for (const iframe of iframes) {\n                    iframe.style.pointerEvents = 'none';\n                }\n                const start = this._orientation === Orientation.HORIZONTAL\n                    ? event.clientX\n                    : event.clientY;\n                const sashIndex = firstIndex(this.sashes, (s) => s.container === sash);\n                //\n                const sizes = this.views.map((x) => x.size);\n                //\n                let snapBefore;\n                let snapAfter;\n                const upIndexes = range(sashIndex, -1);\n                const downIndexes = range(sashIndex + 1, this.views.length);\n                const minDeltaUp = upIndexes.reduce((r, i) => r + (this.views[i].minimumSize - sizes[i]), 0);\n                const maxDeltaUp = upIndexes.reduce((r, i) => r + (this.views[i].viewMaximumSize - sizes[i]), 0);\n                const maxDeltaDown = downIndexes.length === 0\n                    ? Number.POSITIVE_INFINITY\n                    : downIndexes.reduce((r, i) => r + (sizes[i] - this.views[i].minimumSize), 0);\n                const minDeltaDown = downIndexes.length === 0\n                    ? Number.NEGATIVE_INFINITY\n                    : downIndexes.reduce((r, i) => r +\n                        (sizes[i] - this.views[i].viewMaximumSize), 0);\n                const minDelta = Math.max(minDeltaUp, minDeltaDown);\n                const maxDelta = Math.min(maxDeltaDown, maxDeltaUp);\n                const snapBeforeIndex = this.findFirstSnapIndex(upIndexes);\n                const snapAfterIndex = this.findFirstSnapIndex(downIndexes);\n                if (typeof snapBeforeIndex === 'number') {\n                    const snappedViewItem = this.views[snapBeforeIndex];\n                    const halfSize = Math.floor(snappedViewItem.viewMinimumSize / 2);\n                    snapBefore = {\n                        index: snapBeforeIndex,\n                        limitDelta: snappedViewItem.visible\n                            ? minDelta - halfSize\n                            : minDelta + halfSize,\n                        size: snappedViewItem.size,\n                    };\n                }\n                if (typeof snapAfterIndex === 'number') {\n                    const snappedViewItem = this.views[snapAfterIndex];\n                    const halfSize = Math.floor(snappedViewItem.viewMinimumSize / 2);\n                    snapAfter = {\n                        index: snapAfterIndex,\n                        limitDelta: snappedViewItem.visible\n                            ? maxDelta + halfSize\n                            : maxDelta - halfSize,\n                        size: snappedViewItem.size,\n                    };\n                }\n                //\n                const mousemove = (mousemoveEvent) => {\n                    const current = this._orientation === Orientation.HORIZONTAL\n                        ? mousemoveEvent.clientX\n                        : mousemoveEvent.clientY;\n                    const delta = current - start;\n                    this.resize(sashIndex, delta, sizes, undefined, undefined, minDelta, maxDelta, snapBefore, snapAfter);\n                    this.distributeEmptySpace();\n                    this.layoutViews();\n                };\n                const end = () => {\n                    for (const item of this.views) {\n                        item.enabled = true;\n                    }\n                    for (const iframe of iframes) {\n                        iframe.style.pointerEvents = 'auto';\n                    }\n                    this.saveProportions();\n                    document.removeEventListener('mousemove', mousemove);\n                    document.removeEventListener('mouseup', end);\n                    document.removeEventListener('mouseend', end);\n                    this._onDidSashEnd.fire(undefined);\n                };\n                document.addEventListener('mousemove', mousemove);\n                document.addEventListener('mouseup', end);\n                document.addEventListener('mouseend', end);\n            };\n            sash.addEventListener('mousedown', onStart);\n            const sashItem = {\n                container: sash,\n                disposable: () => {\n                    sash.removeEventListener('mousedown', onStart);\n                    this.sashContainer.removeChild(sash);\n                },\n            };\n            this.sashContainer.appendChild(sash);\n            this.sashes.push(sashItem);\n        }\n        if (!skipLayout) {\n            this.relayout([index]);\n        }\n        if (!skipLayout &&\n            typeof size !== 'number' &&\n            size.type === 'distribute') {\n            this.distributeViewSizes();\n        }\n        this._onDidAddView.fire(view);\n    }\n    distributeViewSizes() {\n        const flexibleViewItems = [];\n        let flexibleSize = 0;\n        for (const item of this.views) {\n            if (item.maximumSize - item.minimumSize > 0) {\n                flexibleViewItems.push(item);\n                flexibleSize += item.size;\n            }\n        }\n        const size = Math.floor(flexibleSize / flexibleViewItems.length);\n        for (const item of flexibleViewItems) {\n            item.size = clamp(size, item.minimumSize, item.maximumSize);\n        }\n        const indexes = range(this.views.length);\n        const lowPriorityIndexes = indexes.filter((i) => this.views[i].priority === LayoutPriority.Low);\n        const highPriorityIndexes = indexes.filter((i) => this.views[i].priority === LayoutPriority.High);\n        this.relayout(lowPriorityIndexes, highPriorityIndexes);\n    }\n    removeView(index, sizing, skipLayout = false) {\n        // Remove view\n        const viewItem = this.views.splice(index, 1)[0];\n        viewItem.dispose();\n        // Remove sash\n        if (this.views.length >= 1) {\n            const sashIndex = Math.max(index - 1, 0);\n            const sashItem = this.sashes.splice(sashIndex, 1)[0];\n            sashItem.disposable();\n        }\n        if (!skipLayout) {\n            this.relayout();\n        }\n        if (sizing && sizing.type === 'distribute') {\n            this.distributeViewSizes();\n        }\n        this._onDidRemoveView.fire(viewItem.view);\n        return viewItem.view;\n    }\n    getViewCachedVisibleSize(index) {\n        if (index < 0 || index >= this.views.length) {\n            throw new Error('Index out of bounds');\n        }\n        const viewItem = this.views[index];\n        return viewItem.cachedVisibleSize;\n    }\n    moveView(from, to) {\n        const cachedVisibleSize = this.getViewCachedVisibleSize(from);\n        const sizing = typeof cachedVisibleSize === 'undefined'\n            ? this.getViewSize(from)\n            : Sizing.Invisible(cachedVisibleSize);\n        const view = this.removeView(from, undefined, true);\n        this.addView(view, sizing, to);\n    }\n    layout(size, orthogonalSize) {\n        const previousSize = Math.max(this.size, this.contentSize);\n        this.size = size;\n        this.orthogonalSize = orthogonalSize;\n        if (!this.proportions) {\n            const indexes = range(this.views.length);\n            const lowPriorityIndexes = indexes.filter((i) => this.views[i].priority === LayoutPriority.Low);\n            const highPriorityIndexes = indexes.filter((i) => this.views[i].priority === LayoutPriority.High);\n            this.resize(this.views.length - 1, size - previousSize, undefined, lowPriorityIndexes, highPriorityIndexes);\n        }\n        else {\n            for (let i = 0; i < this.views.length; i++) {\n                const item = this.views[i];\n                item.size = clamp(Math.round(this.proportions[i] * size), item.minimumSize, item.maximumSize);\n            }\n        }\n        this.distributeEmptySpace();\n        this.layoutViews();\n    }\n    relayout(lowPriorityIndexes, highPriorityIndexes) {\n        const contentSize = this.views.reduce((r, i) => r + i.size, 0);\n        this.resize(this.views.length - 1, this._size - contentSize, undefined, lowPriorityIndexes, highPriorityIndexes);\n        this.distributeEmptySpace();\n        this.layoutViews();\n        this.saveProportions();\n    }\n    distributeEmptySpace(lowPriorityIndex) {\n        const contentSize = this.views.reduce((r, i) => r + i.size, 0);\n        let emptyDelta = this.size - contentSize;\n        const indexes = range(this.views.length - 1, -1);\n        const lowPriorityIndexes = indexes.filter((i) => this.views[i].priority === LayoutPriority.Low);\n        const highPriorityIndexes = indexes.filter((i) => this.views[i].priority === LayoutPriority.High);\n        for (const index of highPriorityIndexes) {\n            pushToStart(indexes, index);\n        }\n        for (const index of lowPriorityIndexes) {\n            pushToEnd(indexes, index);\n        }\n        if (typeof lowPriorityIndex === 'number') {\n            pushToEnd(indexes, lowPriorityIndex);\n        }\n        for (let i = 0; emptyDelta !== 0 && i < indexes.length; i++) {\n            const item = this.views[indexes[i]];\n            const size = clamp(item.size + emptyDelta, item.minimumSize, item.maximumSize);\n            const viewDelta = size - item.size;\n            emptyDelta -= viewDelta;\n            item.size = size;\n        }\n    }\n    saveProportions() {\n        if (this.proportionalLayout && this.contentSize > 0) {\n            this._proportions = this.views.map((i) => i.size / this.contentSize);\n        }\n    }\n    layoutViews() {\n        this.contentSize = this.views.reduce((r, i) => r + i.size, 0);\n        let sum = 0;\n        const x = [];\n        this.updateSashEnablement();\n        for (let i = 0; i < this.views.length - 1; i++) {\n            sum += this.views[i].size;\n            x.push(sum);\n            const offset = Math.min(Math.max(0, sum - 2), this.size - 4);\n            if (this._orientation === Orientation.HORIZONTAL) {\n                this.sashes[i].container.style.left = `${offset}px`;\n                this.sashes[i].container.style.top = `0px`;\n            }\n            if (this._orientation === Orientation.VERTICAL) {\n                this.sashes[i].container.style.left = `0px`;\n                this.sashes[i].container.style.top = `${offset}px`;\n            }\n        }\n        this.views.forEach((view, i) => {\n            if (this._orientation === Orientation.HORIZONTAL) {\n                view.container.style.width = `${view.size}px`;\n                view.container.style.left = i == 0 ? '0px' : `${x[i - 1]}px`;\n                view.container.style.top = '';\n                view.container.style.height = '';\n            }\n            if (this._orientation === Orientation.VERTICAL) {\n                view.container.style.height = `${view.size}px`;\n                view.container.style.top = i == 0 ? '0px' : `${x[i - 1]}px`;\n                view.container.style.width = '';\n                view.container.style.left = '';\n            }\n            view.view.layout(view.size, this._orthogonalSize);\n        });\n    }\n    findFirstSnapIndex(indexes) {\n        // visible views first\n        for (const index of indexes) {\n            const viewItem = this.views[index];\n            if (!viewItem.visible) {\n                continue;\n            }\n            if (viewItem.snap) {\n                return index;\n            }\n        }\n        // then, hidden views\n        for (const index of indexes) {\n            const viewItem = this.views[index];\n            if (viewItem.visible &&\n                viewItem.maximumSize - viewItem.minimumSize > 0) {\n                return undefined;\n            }\n            if (!viewItem.visible && viewItem.snap) {\n                return index;\n            }\n        }\n        return undefined;\n    }\n    updateSashEnablement() {\n        let previous = false;\n        const collapsesDown = this.views.map((i) => (previous = i.size - i.minimumSize > 0 || previous));\n        previous = false;\n        const expandsDown = this.views.map((i) => (previous = i.maximumSize - i.size > 0 || previous));\n        const reverseViews = [...this.views].reverse();\n        previous = false;\n        const collapsesUp = reverseViews\n            .map((i) => (previous = i.size - i.minimumSize > 0 || previous))\n            .reverse();\n        previous = false;\n        const expandsUp = reverseViews\n            .map((i) => (previous = i.maximumSize - i.size > 0 || previous))\n            .reverse();\n        let position = 0;\n        for (let index = 0; index < this.sashes.length; index++) {\n            const sash = this.sashes[index];\n            const viewItem = this.views[index];\n            position += viewItem.size;\n            const min = !(collapsesDown[index] && expandsUp[index + 1]);\n            const max = !(expandsDown[index] && collapsesUp[index + 1]);\n            if (min && max) {\n                const upIndexes = range(index, -1);\n                const downIndexes = range(index + 1, this.views.length);\n                const snapBeforeIndex = this.findFirstSnapIndex(upIndexes);\n                const snapAfterIndex = this.findFirstSnapIndex(downIndexes);\n                const snappedBefore = typeof snapBeforeIndex === 'number' &&\n                    !this.views[snapBeforeIndex].visible;\n                const snappedAfter = typeof snapAfterIndex === 'number' &&\n                    !this.views[snapAfterIndex].visible;\n                if (snappedBefore &&\n                    collapsesUp[index] &&\n                    (position > 0 || this.startSnappingEnabled)) {\n                    this.updateSash(sash, SashState.MINIMUM);\n                }\n                else if (snappedAfter &&\n                    collapsesDown[index] &&\n                    (position < this.contentSize || this.endSnappingEnabled)) {\n                    this.updateSash(sash, SashState.MAXIMUM);\n                }\n                else {\n                    this.updateSash(sash, SashState.DISABLED);\n                }\n            }\n            else if (min && !max) {\n                this.updateSash(sash, SashState.MINIMUM);\n            }\n            else if (!min && max) {\n                this.updateSash(sash, SashState.MAXIMUM);\n            }\n            else {\n                this.updateSash(sash, SashState.ENABLED);\n            }\n        }\n    }\n    updateSash(sash, state) {\n        toggleClass(sash.container, 'disabled', state === SashState.DISABLED);\n        toggleClass(sash.container, 'enabled', state === SashState.ENABLED);\n        toggleClass(sash.container, 'maximum', state === SashState.MAXIMUM);\n        toggleClass(sash.container, 'minimum', state === SashState.MINIMUM);\n    }\n    createViewContainer() {\n        const element = document.createElement('div');\n        element.className = 'view-container';\n        return element;\n    }\n    createSashContainer() {\n        const element = document.createElement('div');\n        element.className = 'sash-container';\n        return element;\n    }\n    createContainer() {\n        const element = document.createElement('div');\n        const orientationClassname = this._orientation === Orientation.HORIZONTAL\n            ? 'horizontal'\n            : 'vertical';\n        element.className = `split-view-container ${orientationClassname}`;\n        return element;\n    }\n    dispose() {\n        this._onDidSashEnd.dispose();\n        this._onDidAddView.dispose();\n        this._onDidRemoveView.dispose();\n        for (let i = 0; i < this.element.children.length; i++) {\n            if (this.element.children.item(i) === this.element) {\n                this.element.removeChild(this.element);\n                break;\n            }\n        }\n        this.element.remove();\n    }\n}\n","import { Splitview, Orientation, } from '../splitview/splitview';\nimport { CompositeDisposable } from '../lifecycle';\nimport { Emitter } from '../events';\nimport { addClasses, removeClasses } from '../dom';\nexport class Paneview extends CompositeDisposable {\n    get onDidAddView() {\n        return this.splitview.onDidAddView;\n    }\n    get onDidRemoveView() {\n        return this.splitview.onDidRemoveView;\n    }\n    get minimumSize() {\n        return this.splitview.minimumSize;\n    }\n    get maximumSize() {\n        return this.splitview.maximumSize;\n    }\n    get orientation() {\n        return this.splitview.orientation;\n    }\n    get size() {\n        return this.splitview.size;\n    }\n    get orthogonalSize() {\n        return this.splitview.orthogonalSize;\n    }\n    constructor(container, options) {\n        var _a;\n        super();\n        this.paneItems = [];\n        this.skipAnimation = false;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._orientation = (_a = options.orientation) !== null && _a !== void 0 ? _a : Orientation.VERTICAL;\n        this.element = document.createElement('div');\n        this.element.className = 'pane-container';\n        container.appendChild(this.element);\n        this.splitview = new Splitview(this.element, {\n            orientation: this._orientation,\n            proportionalLayout: false,\n            descriptor: options.descriptor,\n        });\n        // if we've added views from the descriptor we need to\n        // add the panes to our Pane array and setup animation\n        this.getPanes().forEach((pane) => {\n            const disposable = new CompositeDisposable(pane.onDidChangeExpansionState(() => {\n                this.setupAnimation();\n                this._onDidChange.fire(undefined);\n            }));\n            const paneItem = {\n                pane,\n                disposable: {\n                    dispose: () => {\n                        disposable.dispose();\n                    },\n                },\n            };\n            this.paneItems.push(paneItem);\n            pane.orthogonalSize = this.splitview.orthogonalSize;\n        });\n        this.addDisposables(this._onDidChange, this.splitview.onDidSashEnd(() => {\n            this._onDidChange.fire(undefined);\n        }), this.splitview.onDidAddView(() => {\n            this._onDidChange.fire();\n        }), this.splitview.onDidRemoveView(() => {\n            this._onDidChange.fire();\n        }));\n    }\n    addPane(pane, size, index = this.splitview.length, skipLayout = false) {\n        const disposable = pane.onDidChangeExpansionState(() => {\n            this.setupAnimation();\n            this._onDidChange.fire(undefined);\n        });\n        const paneItem = {\n            pane,\n            disposable: {\n                dispose: () => {\n                    disposable.dispose();\n                },\n            },\n        };\n        this.paneItems.splice(index, 0, paneItem);\n        pane.orthogonalSize = this.splitview.orthogonalSize;\n        this.splitview.addView(pane, size, index, skipLayout);\n    }\n    getViewSize(index) {\n        return this.splitview.getViewSize(index);\n    }\n    getPanes() {\n        return this.splitview.getViews();\n    }\n    removePane(index, options = { skipDispose: false }) {\n        const paneItem = this.paneItems.splice(index, 1)[0];\n        this.splitview.removeView(index);\n        if (!options.skipDispose) {\n            paneItem.disposable.dispose();\n            paneItem.pane.dispose();\n        }\n        return paneItem;\n    }\n    moveView(from, to) {\n        if (from === to) {\n            return;\n        }\n        const view = this.removePane(from, { skipDispose: true });\n        this.skipAnimation = true;\n        try {\n            this.addPane(view.pane, view.pane.size, to, false);\n        }\n        finally {\n            this.skipAnimation = false;\n        }\n    }\n    layout(size, orthogonalSize) {\n        this.splitview.layout(size, orthogonalSize);\n    }\n    setupAnimation() {\n        if (this.skipAnimation) {\n            return;\n        }\n        if (this.animationTimer) {\n            clearTimeout(this.animationTimer);\n            this.animationTimer = undefined;\n        }\n        addClasses(this.element, 'animated');\n        this.animationTimer = setTimeout(() => {\n            this.animationTimer = undefined;\n            removeClasses(this.element, 'animated');\n        }, 200);\n    }\n    dispose() {\n        super.dispose();\n        if (this.animationTimer) {\n            clearTimeout(this.animationTimer);\n            this.animationTimer = undefined;\n        }\n        this.paneItems.forEach((paneItem) => {\n            paneItem.disposable.dispose();\n            paneItem.pane.dispose();\n        });\n        this.paneItems = [];\n        this.splitview.dispose();\n        this.element.remove();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/grid\n *--------------------------------------------------------------------------------------------*/\nimport { Orientation } from '../splitview/splitview';\nimport { Emitter } from '../events';\nexport class LeafNode {\n    get minimumWidth() {\n        return this.view.minimumWidth;\n    }\n    get maximumWidth() {\n        return this.view.maximumWidth;\n    }\n    get minimumHeight() {\n        return this.view.minimumHeight;\n    }\n    get maximumHeight() {\n        return this.view.maximumHeight;\n    }\n    get priority() {\n        return this.view.priority;\n    }\n    get snap() {\n        return this.view.snap;\n    }\n    get minimumSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumHeight\n            : this.minimumWidth;\n    }\n    get maximumSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumHeight\n            : this.maximumWidth;\n    }\n    get minimumOrthogonalSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumWidth\n            : this.minimumHeight;\n    }\n    get maximumOrthogonalSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumWidth\n            : this.maximumHeight;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    get size() {\n        return this._size;\n    }\n    get element() {\n        return this.view.element;\n    }\n    get width() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.orthogonalSize\n            : this.size;\n    }\n    get height() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.size\n            : this.orthogonalSize;\n    }\n    constructor(view, orientation, orthogonalSize, size = 0) {\n        this.view = view;\n        this.orientation = orientation;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._orthogonalSize = orthogonalSize;\n        this._size = size;\n        this._disposable = this.view.onDidChange((event) => {\n            if (event) {\n                this._onDidChange.fire({\n                    size: this.orientation === Orientation.VERTICAL\n                        ? event.width\n                        : event.height,\n                    orthogonalSize: this.orientation === Orientation.VERTICAL\n                        ? event.height\n                        : event.width,\n                });\n            }\n            else {\n                this._onDidChange.fire({});\n            }\n        });\n    }\n    setVisible(visible) {\n        if (this.view.setVisible) {\n            this.view.setVisible(visible);\n            this._onDidChange.fire({});\n        }\n    }\n    layout(size, orthogonalSize) {\n        this._size = size;\n        this._orthogonalSize = orthogonalSize;\n        this.view.layout(this.width, this.height);\n    }\n    dispose() {\n        this._onDidChange.dispose();\n        this._disposable.dispose();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/grid\n *--------------------------------------------------------------------------------------------*/\nimport { Splitview, Orientation, LayoutPriority, } from '../splitview/splitview';\nimport { Emitter, Event } from '../events';\nimport { LeafNode } from './leafNode';\nimport { CompositeDisposable, Disposable } from '../lifecycle';\nexport class BranchNode extends CompositeDisposable {\n    get width() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.size\n            : this.orthogonalSize;\n    }\n    get height() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.orthogonalSize\n            : this.size;\n    }\n    get minimumSize() {\n        return this.children.length === 0\n            ? 0\n            : Math.max(...this.children.map((c) => c.minimumOrthogonalSize));\n    }\n    get maximumSize() {\n        return Math.min(...this.children.map((c) => c.maximumOrthogonalSize));\n    }\n    get minimumOrthogonalSize() {\n        return this.splitview.minimumSize;\n    }\n    get maximumOrthogonalSize() {\n        return this.splitview.maximumSize;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    get size() {\n        return this._size;\n    }\n    get minimumWidth() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumOrthogonalSize\n            : this.minimumSize;\n    }\n    get minimumHeight() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumSize\n            : this.minimumOrthogonalSize;\n    }\n    get maximumWidth() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumOrthogonalSize\n            : this.maximumSize;\n    }\n    get maximumHeight() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumSize\n            : this.maximumOrthogonalSize;\n    }\n    get priority() {\n        if (this.children.length === 0) {\n            return LayoutPriority.Normal;\n        }\n        const priorities = this.children.map((c) => typeof c.priority === 'undefined'\n            ? LayoutPriority.Normal\n            : c.priority);\n        if (priorities.some((p) => p === LayoutPriority.High)) {\n            return LayoutPriority.High;\n        }\n        else if (priorities.some((p) => p === LayoutPriority.Low)) {\n            return LayoutPriority.Low;\n        }\n        return LayoutPriority.Normal;\n    }\n    constructor(orientation, proportionalLayout, styles, size, orthogonalSize, childDescriptors) {\n        super();\n        this.orientation = orientation;\n        this.proportionalLayout = proportionalLayout;\n        this.styles = styles;\n        this._childrenDisposable = Disposable.NONE;\n        this.children = [];\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._orthogonalSize = orthogonalSize;\n        this._size = size;\n        this.element = document.createElement('div');\n        this.element.className = 'branch-node';\n        if (!childDescriptors) {\n            this.splitview = new Splitview(this.element, {\n                orientation: this.orientation,\n                proportionalLayout,\n                styles,\n            });\n            this.splitview.layout(this.size, this.orthogonalSize);\n        }\n        else {\n            const descriptor = {\n                views: childDescriptors.map((childDescriptor) => {\n                    return {\n                        view: childDescriptor.node,\n                        size: childDescriptor.node.size,\n                        visible: childDescriptor.node instanceof LeafNode &&\n                            childDescriptor.visible !== undefined\n                            ? childDescriptor.visible\n                            : true,\n                    };\n                }),\n                size: this.size,\n            };\n            this.children = childDescriptors.map((c) => c.node);\n            this.splitview = new Splitview(this.element, {\n                orientation: this.orientation,\n                descriptor,\n                proportionalLayout,\n            });\n        }\n        this.addDisposables(this._onDidChange, this.splitview.onDidSashEnd(() => {\n            this._onDidChange.fire({});\n        }));\n        this.setupChildrenEvents();\n    }\n    setVisible(visible) {\n        for (const child of this.children) {\n            child.setVisible(visible);\n        }\n    }\n    isChildVisible(index) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        return this.splitview.isViewVisible(index);\n    }\n    setChildVisible(index, visible) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        if (this.splitview.isViewVisible(index) === visible) {\n            return;\n        }\n        this.splitview.setViewVisible(index, visible);\n    }\n    moveChild(from, to) {\n        if (from === to) {\n            return;\n        }\n        if (from < 0 || from >= this.children.length) {\n            throw new Error('Invalid from index');\n        }\n        if (from < to) {\n            to--;\n        }\n        this.splitview.moveView(from, to);\n        const child = this._removeChild(from);\n        this._addChild(child, to);\n    }\n    getChildSize(index) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        return this.splitview.getViewSize(index);\n    }\n    resizeChild(index, size) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        this.splitview.resizeView(index, size);\n    }\n    layout(size, orthogonalSize) {\n        this._size = orthogonalSize;\n        this._orthogonalSize = size;\n        this.splitview.layout(this.size, this.orthogonalSize);\n    }\n    addChild(node, size, index, skipLayout) {\n        if (index < 0 || index > this.children.length) {\n            throw new Error('Invalid index');\n        }\n        this.splitview.addView(node, size, index, skipLayout);\n        this._addChild(node, index);\n    }\n    getChildCachedVisibleSize(index) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        return this.splitview.getViewCachedVisibleSize(index);\n    }\n    removeChild(index, sizing) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        this.splitview.removeView(index, sizing);\n        this._removeChild(index);\n    }\n    _addChild(node, index) {\n        this.children.splice(index, 0, node);\n        this.setupChildrenEvents();\n    }\n    _removeChild(index) {\n        const [child] = this.children.splice(index, 1);\n        this.setupChildrenEvents();\n        return child;\n    }\n    setupChildrenEvents() {\n        this._childrenDisposable.dispose();\n        this._childrenDisposable = Event.any(...this.children.map((c) => c.onDidChange))((e) => {\n            /**\n             * indicate a change has occured to allows any re-rendering but don't bubble\n             * event because that was specific to this branch\n             */\n            this._onDidChange.fire({ size: e.orthogonalSize });\n        });\n    }\n    dispose() {\n        super.dispose();\n        this._childrenDisposable.dispose();\n        this.children.forEach((child) => child.dispose());\n        this.splitview.dispose();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/grid\n *--------------------------------------------------------------------------------------------*/\nimport { Orientation, Sizing, } from '../splitview/splitview';\nimport { tail } from '../array';\nimport { LeafNode } from './leafNode';\nimport { BranchNode } from './branchNode';\nimport { Emitter } from '../events';\nimport { MutableDisposable } from '../lifecycle';\nfunction findLeaf(candiateNode, last) {\n    if (candiateNode instanceof LeafNode) {\n        return candiateNode;\n    }\n    if (candiateNode instanceof BranchNode) {\n        return findLeaf(candiateNode.children[last ? candiateNode.children.length - 1 : 0], last);\n    }\n    throw new Error('invalid node');\n}\nfunction flipNode(node, size, orthogonalSize) {\n    if (node instanceof BranchNode) {\n        const result = new BranchNode(orthogonal(node.orientation), node.proportionalLayout, node.styles, size, orthogonalSize);\n        let totalSize = 0;\n        for (let i = node.children.length - 1; i >= 0; i--) {\n            const child = node.children[i];\n            const childSize = child instanceof BranchNode ? child.orthogonalSize : child.size;\n            let newSize = node.size === 0\n                ? 0\n                : Math.round((size * childSize) / node.size);\n            totalSize += newSize;\n            // The last view to add should adjust to rounding errors\n            if (i === 0) {\n                newSize += size - totalSize;\n            }\n            result.addChild(flipNode(child, orthogonalSize, newSize), newSize, 0, true);\n        }\n        return result;\n    }\n    else {\n        return new LeafNode(node.view, orthogonal(node.orientation), orthogonalSize);\n    }\n}\nexport function indexInParent(element) {\n    const parentElement = element.parentElement;\n    if (!parentElement) {\n        throw new Error('Invalid grid element');\n    }\n    let el = parentElement.firstElementChild;\n    let index = 0;\n    while (el !== element && el !== parentElement.lastElementChild && el) {\n        el = el.nextElementSibling;\n        index++;\n    }\n    return index;\n}\n/**\n * Find the grid location of a specific DOM element by traversing the parent\n * chain and finding each child index on the way.\n *\n * This will break as soon as DOM structures of the Splitview or Gridview change.\n */\nexport function getGridLocation(element) {\n    const parentElement = element.parentElement;\n    if (!parentElement) {\n        throw new Error('Invalid grid element');\n    }\n    if (/\\bgrid-view\\b/.test(parentElement.className)) {\n        return [];\n    }\n    const index = indexInParent(parentElement);\n    const ancestor = parentElement.parentElement.parentElement.parentElement;\n    return [...getGridLocation(ancestor), index];\n}\nexport function getRelativeLocation(rootOrientation, location, direction) {\n    const orientation = getLocationOrientation(rootOrientation, location);\n    const directionOrientation = getDirectionOrientation(direction);\n    if (orientation === directionOrientation) {\n        const [rest, _index] = tail(location);\n        let index = _index;\n        if (direction === 'right' || direction === 'bottom') {\n            index += 1;\n        }\n        return [...rest, index];\n    }\n    else {\n        const index = direction === 'right' || direction === 'bottom' ? 1 : 0;\n        return [...location, index];\n    }\n}\nexport function getDirectionOrientation(direction) {\n    return direction === 'top' || direction === 'bottom'\n        ? Orientation.VERTICAL\n        : Orientation.HORIZONTAL;\n}\nexport function getLocationOrientation(rootOrientation, location) {\n    return location.length % 2 === 0\n        ? orthogonal(rootOrientation)\n        : rootOrientation;\n}\nexport const orthogonal = (orientation) => orientation === Orientation.HORIZONTAL\n    ? Orientation.VERTICAL\n    : Orientation.HORIZONTAL;\nexport function isGridBranchNode(node) {\n    return !!node.children;\n}\nconst serializeBranchNode = (node, orientation) => {\n    const size = orientation === Orientation.VERTICAL ? node.box.width : node.box.height;\n    if (!isGridBranchNode(node)) {\n        if (typeof node.cachedVisibleSize === 'number') {\n            return {\n                type: 'leaf',\n                data: node.view.toJSON(),\n                size: node.cachedVisibleSize,\n                visible: false,\n            };\n        }\n        return { type: 'leaf', data: node.view.toJSON(), size };\n    }\n    return {\n        type: 'branch',\n        data: node.children.map((c) => serializeBranchNode(c, orthogonal(orientation))),\n        size,\n    };\n};\nexport class Gridview {\n    get length() {\n        return this._root ? this._root.children.length : 0;\n    }\n    get orientation() {\n        return this.root.orientation;\n    }\n    set orientation(orientation) {\n        if (this.root.orientation === orientation) {\n            return;\n        }\n        const { size, orthogonalSize } = this.root;\n        this.root = flipNode(this.root, orthogonalSize, size);\n        this.root.layout(size, orthogonalSize);\n    }\n    get width() {\n        return this.root.width;\n    }\n    get height() {\n        return this.root.height;\n    }\n    get minimumWidth() {\n        return this.root.minimumWidth;\n    }\n    get minimumHeight() {\n        return this.root.minimumHeight;\n    }\n    get maximumWidth() {\n        return this.root.maximumHeight;\n    }\n    get maximumHeight() {\n        return this.root.maximumHeight;\n    }\n    serialize() {\n        const root = serializeBranchNode(this.getView(), this.orientation);\n        return {\n            root,\n            width: this.width,\n            height: this.height,\n            orientation: this.orientation,\n        };\n    }\n    dispose() {\n        this.disposable.dispose();\n        this._onDidChange.dispose();\n        this.root.dispose();\n        this.element.remove();\n    }\n    clear() {\n        const orientation = this.root.orientation;\n        this.root = new BranchNode(orientation, this.proportionalLayout, this.styles, this.root.size, this.root.orthogonalSize);\n    }\n    deserialize(json, deserializer) {\n        const orientation = json.orientation;\n        const height = orientation === Orientation.VERTICAL ? json.height : json.width;\n        this._deserialize(json.root, orientation, deserializer, height);\n    }\n    _deserialize(root, orientation, deserializer, orthogonalSize) {\n        this.root = this._deserializeNode(root, orientation, deserializer, orthogonalSize, true);\n    }\n    _deserializeNode(node, orientation, deserializer, orthogonalSize, isRoot = false) {\n        let result;\n        if (node.type === 'branch') {\n            const serializedChildren = node.data;\n            const children = serializedChildren.map((serializedChild) => {\n                return {\n                    node: this._deserializeNode(serializedChild, orthogonal(orientation), deserializer, node.size),\n                    visible: serializedChild.visible,\n                };\n            });\n            // HORIZONTAL => height=orthogonalsize width=size\n            // VERTICAL => height=size width=orthogonalsize\n            result = new BranchNode(orientation, this.proportionalLayout, this.styles, isRoot ? orthogonalSize : node.size, isRoot ? node.size : orthogonalSize, children);\n        }\n        else {\n            result = new LeafNode(deserializer.fromJSON(node), orientation, orthogonalSize, node.size);\n        }\n        return result;\n    }\n    get root() {\n        return this._root;\n    }\n    set root(root) {\n        const oldRoot = this._root;\n        if (oldRoot) {\n            oldRoot.dispose();\n            this.element.removeChild(oldRoot.element);\n        }\n        this._root = root;\n        this.element.appendChild(this._root.element);\n        this.disposable.value = this._root.onDidChange((e) => {\n            this._onDidChange.fire(e);\n        });\n    }\n    /**\n     * If the root is orientated as a VERTICAL node then nest the existing root within a new HORIZIONTAL root node\n     * If the root is orientated as a HORIZONTAL node then nest the existing root within a new VERITCAL root node\n     */\n    insertOrthogonalSplitviewAtRoot() {\n        if (!this._root) {\n            return;\n        }\n        const oldRoot = this.root;\n        oldRoot.element.remove();\n        this._root = new BranchNode(orthogonal(oldRoot.orientation), this.proportionalLayout, this.styles, this.root.orthogonalSize, this.root.size);\n        if (oldRoot.children.length === 1) {\n            // can remove one level of redundant branching if there is only a single child\n            const childReference = oldRoot.children[0];\n            oldRoot.removeChild(0); // remove to prevent disposal when disposing of unwanted root\n            oldRoot.dispose();\n            this._root.addChild(childReference, Sizing.Distribute, 0);\n        }\n        else {\n            this._root.addChild(oldRoot, Sizing.Distribute, 0);\n        }\n        this.element.appendChild(this._root.element);\n        this.disposable.value = this._root.onDidChange((e) => {\n            this._onDidChange.fire(e);\n        });\n    }\n    next(location) {\n        return this.progmaticSelect(location);\n    }\n    previous(location) {\n        return this.progmaticSelect(location, true);\n    }\n    getView(location) {\n        const node = location ? this.getNode(location)[1] : this.root;\n        return this._getViews(node, this.orientation);\n    }\n    _getViews(node, orientation, cachedVisibleSize) {\n        const box = { height: node.height, width: node.width };\n        if (node instanceof LeafNode) {\n            return { box, view: node.view, cachedVisibleSize };\n        }\n        const children = [];\n        for (let i = 0; i < node.children.length; i++) {\n            const child = node.children[i];\n            const nodeCachedVisibleSize = node.getChildCachedVisibleSize(i);\n            children.push(this._getViews(child, orthogonal(orientation), nodeCachedVisibleSize));\n        }\n        return { box, children };\n    }\n    progmaticSelect(location, reverse = false) {\n        const [path, node] = this.getNode(location);\n        if (!(node instanceof LeafNode)) {\n            throw new Error('invalid location');\n        }\n        for (let i = path.length - 1; i > -1; i--) {\n            const n = path[i];\n            const l = location[i] || 0;\n            const canProgressInCurrentLevel = reverse\n                ? l - 1 > -1\n                : l + 1 < n.children.length;\n            if (canProgressInCurrentLevel) {\n                return findLeaf(n.children[reverse ? l - 1 : l + 1], reverse);\n            }\n        }\n        return findLeaf(this.root, reverse);\n    }\n    constructor(proportionalLayout, styles, orientation) {\n        this.proportionalLayout = proportionalLayout;\n        this.styles = styles;\n        this.disposable = new MutableDisposable();\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this.element = document.createElement('div');\n        this.element.className = 'grid-view';\n        this.root = new BranchNode(orientation, proportionalLayout, styles, 0, 0);\n    }\n    isViewVisible(location) {\n        const [rest, index] = tail(location);\n        const [, parent] = this.getNode(rest);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid from location');\n        }\n        return parent.isChildVisible(index);\n    }\n    setViewVisible(location, visible) {\n        const [rest, index] = tail(location);\n        const [, parent] = this.getNode(rest);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid from location');\n        }\n        parent.setChildVisible(index, visible);\n    }\n    moveView(parentLocation, from, to) {\n        const [, parent] = this.getNode(parentLocation);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid location');\n        }\n        parent.moveChild(from, to);\n    }\n    addView(view, size, location) {\n        const [rest, index] = tail(location);\n        const [pathToParent, parent] = this.getNode(rest);\n        if (parent instanceof BranchNode) {\n            const node = new LeafNode(view, orthogonal(parent.orientation), parent.orthogonalSize);\n            parent.addChild(node, size, index);\n        }\n        else {\n            const [grandParent, ..._] = [...pathToParent].reverse();\n            const [parentIndex, ...__] = [...rest].reverse();\n            let newSiblingSize = 0;\n            const newSiblingCachedVisibleSize = grandParent.getChildCachedVisibleSize(parentIndex);\n            if (typeof newSiblingCachedVisibleSize === 'number') {\n                newSiblingSize = Sizing.Invisible(newSiblingCachedVisibleSize);\n            }\n            grandParent.removeChild(parentIndex);\n            const newParent = new BranchNode(parent.orientation, this.proportionalLayout, this.styles, parent.size, parent.orthogonalSize);\n            grandParent.addChild(newParent, parent.size, parentIndex);\n            const newSibling = new LeafNode(parent.view, grandParent.orientation, parent.size);\n            newParent.addChild(newSibling, newSiblingSize, 0);\n            if (typeof size !== 'number' && size.type === 'split') {\n                size = { type: 'split', index: 0 };\n            }\n            const node = new LeafNode(view, grandParent.orientation, parent.size);\n            newParent.addChild(node, size, index);\n        }\n    }\n    remove(view, sizing) {\n        const location = getGridLocation(view.element);\n        return this.removeView(location, sizing);\n    }\n    removeView(location, sizing) {\n        const [rest, index] = tail(location);\n        const [pathToParent, parent] = this.getNode(rest);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid location');\n        }\n        const node = parent.children[index];\n        if (!(node instanceof LeafNode)) {\n            throw new Error('Invalid location');\n        }\n        parent.removeChild(index, sizing);\n        if (parent.children.length === 0) {\n            return node.view;\n        }\n        if (parent.children.length > 1) {\n            return node.view;\n        }\n        const sibling = parent.children[0];\n        if (pathToParent.length === 0) {\n            // parent is root\n            if (sibling instanceof LeafNode) {\n                return node.view;\n            }\n            // we must promote sibling to be the new root\n            parent.removeChild(0, sizing);\n            this.root = sibling;\n            return node.view;\n        }\n        const [grandParent, ..._] = [...pathToParent].reverse();\n        const [parentIndex, ...__] = [...rest].reverse();\n        const isSiblingVisible = parent.isChildVisible(0);\n        parent.removeChild(0, sizing);\n        const sizes = grandParent.children.map((_size, i) => grandParent.getChildSize(i));\n        grandParent.removeChild(parentIndex, sizing);\n        if (sibling instanceof BranchNode) {\n            sizes.splice(parentIndex, 1, ...sibling.children.map((c) => c.size));\n            for (let i = 0; i < sibling.children.length; i++) {\n                const child = sibling.children[i];\n                grandParent.addChild(child, child.size, parentIndex + i);\n            }\n        }\n        else {\n            const newSibling = new LeafNode(sibling.view, orthogonal(sibling.orientation), sibling.size);\n            const siblingSizing = isSiblingVisible\n                ? sibling.orthogonalSize\n                : Sizing.Invisible(sibling.orthogonalSize);\n            grandParent.addChild(newSibling, siblingSizing, parentIndex);\n        }\n        for (let i = 0; i < sizes.length; i++) {\n            grandParent.resizeChild(i, sizes[i]);\n        }\n        return node.view;\n    }\n    layout(width, height) {\n        const [size, orthogonalSize] = this.root.orientation === Orientation.HORIZONTAL\n            ? [height, width]\n            : [width, height];\n        this.root.layout(size, orthogonalSize);\n    }\n    getNode(location, node = this.root, path = []) {\n        if (location.length === 0) {\n            return [path, node];\n        }\n        if (!(node instanceof BranchNode)) {\n            throw new Error('Invalid location');\n        }\n        const [index, ...rest] = location;\n        if (index < 0 || index >= node.children.length) {\n            throw new Error('Invalid location');\n        }\n        const child = node.children[index];\n        path.push(node);\n        return this.getNode(rest, child, path);\n    }\n}\n","import { Emitter } from '../events';\nexport class SplitviewApi {\n    get minimumSize() {\n        return this.component.minimumSize;\n    }\n    get maximumSize() {\n        return this.component.maximumSize;\n    }\n    get height() {\n        return this.component.height;\n    }\n    get width() {\n        return this.component.width;\n    }\n    get length() {\n        return this.component.length;\n    }\n    get orientation() {\n        return this.component.orientation;\n    }\n    get panels() {\n        return this.component.panels;\n    }\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    get onDidAddView() {\n        return this.component.onDidAddView;\n    }\n    get onDidRemoveView() {\n        return this.component.onDidRemoveView;\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    updateOptions(options) {\n        this.component.updateOptions(options);\n    }\n    removePanel(panel, sizing) {\n        this.component.removePanel(panel, sizing);\n    }\n    focus() {\n        this.component.focus();\n    }\n    getPanel(id) {\n        return this.component.getPanel(id);\n    }\n    layout(width, height) {\n        return this.component.layout(width, height);\n    }\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    movePanel(from, to) {\n        this.component.movePanel(from, to);\n    }\n    fromJSON(data) {\n        this.component.fromJSON(data);\n    }\n    toJSON() {\n        return this.component.toJSON();\n    }\n    clear() {\n        this.component.clear();\n    }\n}\nexport class PaneviewApi {\n    get minimumSize() {\n        return this.component.minimumSize;\n    }\n    get maximumSize() {\n        return this.component.maximumSize;\n    }\n    get height() {\n        return this.component.height;\n    }\n    get width() {\n        return this.component.width;\n    }\n    get panels() {\n        return this.component.panels;\n    }\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    get onDidAddView() {\n        return this.component.onDidAddView;\n    }\n    get onDidRemoveView() {\n        return this.component.onDidRemoveView;\n    }\n    get onDidDrop() {\n        const emitter = new Emitter();\n        const disposable = this.component.onDidDrop((e) => {\n            emitter.fire(Object.assign(Object.assign({}, e), { api: this }));\n        });\n        emitter.dispose = () => {\n            disposable.dispose();\n            emitter.dispose();\n        };\n        return emitter.event;\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    removePanel(panel) {\n        this.component.removePanel(panel);\n    }\n    getPanel(id) {\n        return this.component.getPanel(id);\n    }\n    movePanel(from, to) {\n        this.component.movePanel(from, to);\n    }\n    focus() {\n        this.component.focus();\n    }\n    layout(width, height) {\n        this.component.layout(width, height);\n    }\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    fromJSON(data) {\n        this.component.fromJSON(data);\n    }\n    toJSON() {\n        return this.component.toJSON();\n    }\n    clear() {\n        this.component.clear();\n    }\n}\nexport class GridviewApi {\n    get minimumHeight() {\n        return this.component.minimumHeight;\n    }\n    get maximumHeight() {\n        return this.component.maximumHeight;\n    }\n    get minimumWidth() {\n        return this.component.minimumWidth;\n    }\n    get maximumWidth() {\n        return this.component.maximumWidth;\n    }\n    get width() {\n        return this.component.width;\n    }\n    get height() {\n        return this.component.height;\n    }\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    get onDidAddPanel() {\n        return this.component.onDidAddGroup;\n    }\n    get onDidRemovePanel() {\n        return this.component.onDidRemoveGroup;\n    }\n    get onDidActivePanelChange() {\n        return this.component.onDidActiveGroupChange;\n    }\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    get panels() {\n        return this.component.groups;\n    }\n    get orientation() {\n        return this.component.orientation;\n    }\n    set orientation(value) {\n        this.component.updateOptions({ orientation: value });\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    focus() {\n        this.component.focus();\n    }\n    layout(width, height, force = false) {\n        this.component.layout(width, height, force);\n    }\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    removePanel(panel, sizing) {\n        this.component.removePanel(panel, sizing);\n    }\n    movePanel(panel, options) {\n        this.component.movePanel(panel, options);\n    }\n    getPanel(id) {\n        return this.component.getPanel(id);\n    }\n    fromJSON(data) {\n        return this.component.fromJSON(data);\n    }\n    toJSON() {\n        return this.component.toJSON();\n    }\n    clear() {\n        this.component.clear();\n    }\n}\nexport class DockviewApi {\n    get id() {\n        return this.component.id;\n    }\n    get width() {\n        return this.component.width;\n    }\n    get height() {\n        return this.component.height;\n    }\n    get minimumHeight() {\n        return this.component.minimumHeight;\n    }\n    get maximumHeight() {\n        return this.component.maximumHeight;\n    }\n    get minimumWidth() {\n        return this.component.minimumWidth;\n    }\n    get maximumWidth() {\n        return this.component.maximumWidth;\n    }\n    get size() {\n        return this.component.size;\n    }\n    get totalPanels() {\n        return this.component.totalPanels;\n    }\n    get onDidActiveGroupChange() {\n        return this.component.onDidActiveGroupChange;\n    }\n    get onDidAddGroup() {\n        return this.component.onDidAddGroup;\n    }\n    get onDidRemoveGroup() {\n        return this.component.onDidRemoveGroup;\n    }\n    get onDidActivePanelChange() {\n        return this.component.onDidActivePanelChange;\n    }\n    get onDidAddPanel() {\n        return this.component.onDidAddPanel;\n    }\n    get onDidRemovePanel() {\n        return this.component.onDidRemovePanel;\n    }\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    get onDidDrop() {\n        return this.component.onDidDrop;\n    }\n    get panels() {\n        return this.component.panels;\n    }\n    get groups() {\n        return this.component.groups;\n    }\n    get activePanel() {\n        return this.component.activePanel;\n    }\n    get activeGroup() {\n        return this.component.activeGroup;\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    getTabHeight() {\n        return this.component.tabHeight;\n    }\n    setTabHeight(height) {\n        this.component.tabHeight = height;\n    }\n    focus() {\n        this.component.focus();\n    }\n    getPanel(id) {\n        return this.component.getGroupPanel(id);\n    }\n    layout(width, height, force = false) {\n        this.component.layout(width, height, force);\n    }\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    addGroup(options) {\n        return this.component.addGroup(options);\n    }\n    moveToNext(options) {\n        this.component.moveToNext(options);\n    }\n    moveToPrevious(options) {\n        this.component.moveToPrevious(options);\n    }\n    closeAllGroups() {\n        return this.component.closeAllGroups();\n    }\n    removeGroup(group) {\n        this.component.removeGroup(group);\n    }\n    getGroup(id) {\n        return this.component.getPanel(id);\n    }\n    fromJSON(data) {\n        this.component.fromJSON(data);\n    }\n    toJSON() {\n        return this.component.toJSON();\n    }\n    clear() {\n        this.component.clear();\n    }\n}\n","import { addDisposableListener } from '../events';\nimport { CompositeDisposable } from '../lifecycle';\nexport class DragAndDropObserver extends CompositeDisposable {\n    constructor(element, callbacks) {\n        super();\n        this.element = element;\n        this.callbacks = callbacks;\n        this.target = null;\n        this.registerListeners();\n    }\n    registerListeners() {\n        this.addDisposables(addDisposableListener(this.element, 'dragenter', (e) => {\n            this.target = e.target;\n            this.callbacks.onDragEnter(e);\n        }, true));\n        this.addDisposables(addDisposableListener(this.element, 'dragover', (e) => {\n            e.preventDefault(); // needed so that the drop event fires (https://stackoverflow.com/questions/21339924/drop-event-not-firing-in-chrome)\n            if (this.callbacks.onDragOver) {\n                this.callbacks.onDragOver(e);\n            }\n        }, true));\n        this.addDisposables(addDisposableListener(this.element, 'dragleave', (e) => {\n            if (this.target === e.target) {\n                this.target = null;\n                this.callbacks.onDragLeave(e);\n            }\n        }));\n        this.addDisposables(addDisposableListener(this.element, 'dragend', (e) => {\n            this.target = null;\n            this.callbacks.onDragEnd(e);\n        }));\n        this.addDisposables(addDisposableListener(this.element, 'drop', (e) => {\n            this.callbacks.onDrop(e);\n        }));\n    }\n}\n","import { toggleClass } from '../dom';\nimport { Emitter } from '../events';\nimport { CompositeDisposable } from '../lifecycle';\nimport { DragAndDropObserver } from './dnd';\nimport { clamp } from '../math';\nfunction numberOrFallback(maybeNumber, fallback) {\n    return typeof maybeNumber === 'number' ? maybeNumber : fallback;\n}\nexport function directionToPosition(direction) {\n    switch (direction) {\n        case 'above':\n            return 'top';\n        case 'below':\n            return 'bottom';\n        case 'left':\n            return 'left';\n        case 'right':\n            return 'right';\n        case 'within':\n            return 'center';\n        default:\n            throw new Error(`invalid direction '${direction}'`);\n    }\n}\nexport function positionToDirection(position) {\n    switch (position) {\n        case 'top':\n            return 'above';\n        case 'bottom':\n            return 'below';\n        case 'left':\n            return 'left';\n        case 'right':\n            return 'right';\n        case 'center':\n            return 'within';\n        default:\n            throw new Error(`invalid position '${position}'`);\n    }\n}\nexport class Droptarget extends CompositeDisposable {\n    get state() {\n        return this._state;\n    }\n    constructor(element, options) {\n        super();\n        this.element = element;\n        this.options = options;\n        this._onDrop = new Emitter();\n        this.onDrop = this._onDrop.event;\n        // use a set to take advantage of #<set>.has\n        const acceptedTargetZonesSet = new Set(this.options.acceptedTargetZones);\n        this.addDisposables(this._onDrop, new DragAndDropObserver(this.element, {\n            onDragEnter: () => undefined,\n            onDragOver: (e) => {\n                const width = this.element.clientWidth;\n                const height = this.element.clientHeight;\n                if (width === 0 || height === 0) {\n                    return; // avoid div!0\n                }\n                const rect = e.currentTarget.getBoundingClientRect();\n                const x = e.clientX - rect.left;\n                const y = e.clientY - rect.top;\n                const quadrant = this.calculateQuadrant(acceptedTargetZonesSet, x, y, width, height);\n                if (quadrant === null) {\n                    // no drop target should be displayed\n                    this.removeDropTarget();\n                    return;\n                }\n                if (typeof this.options.canDisplayOverlay === 'boolean') {\n                    if (!this.options.canDisplayOverlay) {\n                        return;\n                    }\n                }\n                else if (!this.options.canDisplayOverlay(e, quadrant)) {\n                    return;\n                }\n                if (!this.target) {\n                    this.target = document.createElement('div');\n                    this.target.className = 'drop-target-dropzone';\n                    this.overlay = document.createElement('div');\n                    this.overlay.className = 'drop-target-selection';\n                    this._state = 'center';\n                    this.target.appendChild(this.overlay);\n                    this.element.classList.add('drop-target');\n                    this.element.append(this.target);\n                }\n                if (this.options.acceptedTargetZones.length === 0) {\n                    return;\n                }\n                if (!this.target || !this.overlay) {\n                    return;\n                }\n                this.toggleClasses(quadrant, width, height);\n                this.setState(quadrant);\n            },\n            onDragLeave: () => {\n                this.removeDropTarget();\n            },\n            onDragEnd: () => {\n                this.removeDropTarget();\n            },\n            onDrop: (e) => {\n                e.preventDefault();\n                e.stopPropagation();\n                const state = this._state;\n                this.removeDropTarget();\n                if (state) {\n                    this._onDrop.fire({ position: state, nativeEvent: e });\n                }\n            },\n        }));\n    }\n    dispose() {\n        this.removeDropTarget();\n    }\n    toggleClasses(quadrant, width, height) {\n        var _a, _b, _c, _d;\n        if (!this.overlay) {\n            return;\n        }\n        const isSmallX = width < 100;\n        const isSmallY = height < 100;\n        const isLeft = quadrant === 'left';\n        const isRight = quadrant === 'right';\n        const isTop = quadrant === 'top';\n        const isBottom = quadrant === 'bottom';\n        const rightClass = !isSmallX && isRight;\n        const leftClass = !isSmallX && isLeft;\n        const topClass = !isSmallY && isTop;\n        const bottomClass = !isSmallY && isBottom;\n        let size = 0.5;\n        if (((_b = (_a = this.options.overlayModel) === null || _a === void 0 ? void 0 : _a.size) === null || _b === void 0 ? void 0 : _b.type) === 'percentage') {\n            size = clamp(this.options.overlayModel.size.value, 0, 100) / 100;\n        }\n        if (((_d = (_c = this.options.overlayModel) === null || _c === void 0 ? void 0 : _c.size) === null || _d === void 0 ? void 0 : _d.type) === 'pixels') {\n            if (rightClass || leftClass) {\n                size =\n                    clamp(0, this.options.overlayModel.size.value, width) /\n                        width;\n            }\n            if (topClass || bottomClass) {\n                size =\n                    clamp(0, this.options.overlayModel.size.value, height) /\n                        height;\n            }\n        }\n        const translate = (1 - size) / 2;\n        const scale = size;\n        let transform;\n        if (rightClass) {\n            transform = `translateX(${100 * translate}%) scaleX(${scale})`;\n        }\n        else if (leftClass) {\n            transform = `translateX(-${100 * translate}%) scaleX(${scale})`;\n        }\n        else if (topClass) {\n            transform = `translateY(-${100 * translate}%) scaleY(${scale})`;\n        }\n        else if (bottomClass) {\n            transform = `translateY(${100 * translate}%) scaleY(${scale})`;\n        }\n        else {\n            transform = '';\n        }\n        this.overlay.style.transform = transform;\n        toggleClass(this.overlay, 'small-right', isSmallX && isRight);\n        toggleClass(this.overlay, 'small-left', isSmallX && isLeft);\n        toggleClass(this.overlay, 'small-top', isSmallY && isTop);\n        toggleClass(this.overlay, 'small-bottom', isSmallY && isBottom);\n    }\n    setState(quadrant) {\n        switch (quadrant) {\n            case 'top':\n                this._state = 'top';\n                break;\n            case 'left':\n                this._state = 'left';\n                break;\n            case 'bottom':\n                this._state = 'bottom';\n                break;\n            case 'right':\n                this._state = 'right';\n                break;\n            case 'center':\n                this._state = 'center';\n                break;\n        }\n    }\n    calculateQuadrant(overlayType, x, y, width, height) {\n        var _a, _b, _c, _d, _e, _f;\n        const isPercentage = ((_a = this.options.overlayModel) === null || _a === void 0 ? void 0 : _a.activationSize) === undefined ||\n            ((_c = (_b = this.options.overlayModel) === null || _b === void 0 ? void 0 : _b.activationSize) === null || _c === void 0 ? void 0 : _c.type) === 'percentage';\n        const value = numberOrFallback((_f = (_e = (_d = this.options) === null || _d === void 0 ? void 0 : _d.overlayModel) === null || _e === void 0 ? void 0 : _e.activationSize) === null || _f === void 0 ? void 0 : _f.value, 20);\n        if (isPercentage) {\n            return calculateQuadrantAsPercentage(overlayType, x, y, width, height, value);\n        }\n        return calculateQuadrantAsPixels(overlayType, x, y, width, height, value);\n    }\n    removeDropTarget() {\n        if (this.target) {\n            this._state = undefined;\n            this.element.removeChild(this.target);\n            this.target = undefined;\n            this.overlay = undefined;\n            this.element.classList.remove('drop-target');\n        }\n    }\n}\nexport function calculateQuadrantAsPercentage(overlayType, x, y, width, height, threshold) {\n    const xp = (100 * x) / width;\n    const yp = (100 * y) / height;\n    if (overlayType.has('left') && xp < threshold) {\n        return 'left';\n    }\n    if (overlayType.has('right') && xp > 100 - threshold) {\n        return 'right';\n    }\n    if (overlayType.has('top') && yp < threshold) {\n        return 'top';\n    }\n    if (overlayType.has('bottom') && yp > 100 - threshold) {\n        return 'bottom';\n    }\n    if (!overlayType.has('center')) {\n        return null;\n    }\n    return 'center';\n}\nexport function calculateQuadrantAsPixels(overlayType, x, y, width, height, threshold) {\n    if (overlayType.has('left') && x < threshold) {\n        return 'left';\n    }\n    if (overlayType.has('right') && x > width - threshold) {\n        return 'right';\n    }\n    if (overlayType.has('top') && y < threshold) {\n        return 'top';\n    }\n    if (overlayType.has('bottom') && y > height - threshold) {\n        return 'bottom';\n    }\n    if (!overlayType.has('center')) {\n        return null;\n    }\n    return 'center';\n}\n","import { CompositeDisposable, MutableDisposable, } from '../../../lifecycle';\nimport { Emitter } from '../../../events';\nimport { trackFocus } from '../../../dom';\nexport class ContentContainer extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor() {\n        super();\n        this.disposable = new MutableDisposable();\n        this._onDidFocus = new Emitter();\n        this.onDidFocus = this._onDidFocus.event;\n        this._onDidBlur = new Emitter();\n        this.onDidBlur = this._onDidBlur.event;\n        this._element = document.createElement('div');\n        this._element.className = 'content-container';\n        this._element.tabIndex = -1;\n        this.addDisposables(this._onDidFocus, this._onDidBlur);\n        // for hosted containers\n        // 1) register a drop target on the host\n        // 2) register window dragStart events to disable pointer events\n        // 3) register dragEnd events\n        // 4) register mouseMove events (if no buttons are present we take this as a dragEnd event)\n    }\n    show() {\n        this.element.style.display = '';\n    }\n    hide() {\n        this.element.style.display = 'none';\n    }\n    openPanel(panel) {\n        var _a;\n        if (this.panel === panel) {\n            return;\n        }\n        if (this.panel) {\n            if ((_a = this.panel.view) === null || _a === void 0 ? void 0 : _a.content) {\n                this._element.removeChild(this.panel.view.content.element);\n            }\n            this.panel = undefined;\n        }\n        this.panel = panel;\n        const disposable = new CompositeDisposable();\n        if (this.panel.view) {\n            const _onDidFocus = this.panel.view.content.onDidFocus;\n            const _onDidBlur = this.panel.view.content.onDidBlur;\n            const { onDidFocus, onDidBlur } = trackFocus(this._element);\n            disposable.addDisposables(onDidFocus(() => this._onDidFocus.fire()), onDidBlur(() => this._onDidBlur.fire()));\n            if (_onDidFocus) {\n                disposable.addDisposables(_onDidFocus(() => this._onDidFocus.fire()));\n            }\n            if (_onDidBlur) {\n                disposable.addDisposables(_onDidBlur(() => this._onDidBlur.fire()));\n            }\n            this._element.appendChild(this.panel.view.content.element);\n        }\n        this.disposable.value = disposable;\n    }\n    layout(_width, _height) {\n        // noop\n    }\n    closePanel() {\n        var _a, _b, _c;\n        if ((_c = (_b = (_a = this.panel) === null || _a === void 0 ? void 0 : _a.view) === null || _b === void 0 ? void 0 : _b.content) === null || _c === void 0 ? void 0 : _c.element) {\n            this._element.removeChild(this.panel.view.content.element);\n            this.panel = undefined;\n        }\n    }\n    dispose() {\n        this.disposable.dispose();\n        super.dispose();\n    }\n}\n","export var DockviewDropTargets;\n(function (DockviewDropTargets) {\n    DockviewDropTargets[DockviewDropTargets[\"Tab\"] = 0] = \"Tab\";\n    DockviewDropTargets[DockviewDropTargets[\"Panel\"] = 1] = \"Panel\";\n    DockviewDropTargets[DockviewDropTargets[\"TabContainer\"] = 2] = \"TabContainer\";\n    DockviewDropTargets[DockviewDropTargets[\"Edge\"] = 3] = \"Edge\";\n})(DockviewDropTargets || (DockviewDropTargets = {}));\n","import { getElementsByTagName } from '../dom';\nimport { addDisposableListener, Emitter } from '../events';\nimport { CompositeDisposable, MutableDisposable, } from '../lifecycle';\nexport class DragHandler extends CompositeDisposable {\n    constructor(el) {\n        super();\n        this.el = el;\n        this.disposable = new MutableDisposable();\n        this._onDragStart = new Emitter();\n        this.onDragStart = this._onDragStart.event;\n        this.iframes = [];\n        this.configure();\n    }\n    configure() {\n        this.addDisposables(this._onDragStart, addDisposableListener(this.el, 'dragstart', (event) => {\n            this.iframes = [\n                ...getElementsByTagName('iframe'),\n                ...getElementsByTagName('webview'),\n            ];\n            for (const iframe of this.iframes) {\n                iframe.style.pointerEvents = 'none';\n            }\n            this.el.classList.add('dv-dragged');\n            setTimeout(() => this.el.classList.remove('dv-dragged'), 0);\n            this.disposable.value = this.getData(event.dataTransfer);\n            if (event.dataTransfer) {\n                event.dataTransfer.effectAllowed = 'move';\n            }\n        }), addDisposableListener(this.el, 'dragend', () => {\n            for (const iframe of this.iframes) {\n                iframe.style.pointerEvents = 'auto';\n            }\n            this.iframes = [];\n            this.disposable.dispose();\n        }));\n    }\n}\n","import { addDisposableListener, Emitter } from '../../../events';\nimport { CompositeDisposable } from '../../../lifecycle';\nimport { getPanelData, LocalSelectionTransfer, PanelTransfer, } from '../../../dnd/dataTransfer';\nimport { toggleClass } from '../../../dom';\nimport { DockviewDropTargets } from '../../types';\nimport { Droptarget } from '../../../dnd/droptarget';\nimport { DragHandler } from '../../../dnd/abstractDragHandler';\nexport class Tab extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor(panelId, accessor, group) {\n        super();\n        this.panelId = panelId;\n        this.accessor = accessor;\n        this.group = group;\n        this._onChanged = new Emitter();\n        this.onChanged = this._onChanged.event;\n        this._onDropped = new Emitter();\n        this.onDrop = this._onDropped.event;\n        this.addDisposables(this._onChanged, this._onDropped);\n        this._element = document.createElement('div');\n        this._element.className = 'tab';\n        this._element.tabIndex = 0;\n        this._element.draggable = true;\n        toggleClass(this.element, 'inactive-tab', true);\n        this.addDisposables(new (class Handler extends DragHandler {\n            constructor() {\n                super(...arguments);\n                this.panelTransfer = LocalSelectionTransfer.getInstance();\n            }\n            getData() {\n                this.panelTransfer.setData([new PanelTransfer(accessor.id, group.id, panelId)], PanelTransfer.prototype);\n                return {\n                    dispose: () => {\n                        this.panelTransfer.clearData(PanelTransfer.prototype);\n                    },\n                };\n            }\n            dispose() {\n                //\n            }\n        })(this._element));\n        this.addDisposables(addDisposableListener(this._element, 'mousedown', (event) => {\n            if (event.defaultPrevented) {\n                return;\n            }\n            /**\n             * TODO: alternative to stopPropagation\n             *\n             * I need to stop the event propagation here since otherwise it'll be intercepted by event handlers\n             * on the tabs-container. I cannot use event.preventDefault() since I need the on DragStart event to occur\n             */\n            event.stopPropagation();\n            this._onChanged.fire(event);\n        }));\n        this.droptarget = new Droptarget(this._element, {\n            acceptedTargetZones: ['center'],\n            canDisplayOverlay: (event, position) => {\n                if (this.group.locked) {\n                    return false;\n                }\n                const data = getPanelData();\n                if (data && this.accessor.id === data.viewId) {\n                    if (data.panelId === null &&\n                        data.groupId === this.group.id) {\n                        // don't allow group move to drop on self\n                        return false;\n                    }\n                    return this.panelId !== data.panelId;\n                }\n                return this.group.model.canDisplayOverlay(event, position, DockviewDropTargets.Tab);\n            },\n        });\n        this.addDisposables(this.droptarget.onDrop((event) => {\n            this._onDropped.fire(event);\n        }));\n    }\n    setActive(isActive) {\n        toggleClass(this.element, 'active-tab', isActive);\n        toggleClass(this.element, 'inactive-tab', !isActive);\n    }\n    setContent(part) {\n        if (this.content) {\n            this._element.removeChild(this.content.element);\n        }\n        this.content = part;\n        this._element.appendChild(this.content.element);\n    }\n    dispose() {\n        super.dispose();\n        this.droptarget.dispose();\n    }\n}\n","import { DragHandler } from './abstractDragHandler';\nimport { LocalSelectionTransfer, PanelTransfer } from './dataTransfer';\nimport { addGhostImage } from './ghost';\nexport class GroupDragHandler extends DragHandler {\n    constructor(element, accessorId, group) {\n        super(element);\n        this.accessorId = accessorId;\n        this.group = group;\n        this.panelTransfer = LocalSelectionTransfer.getInstance();\n    }\n    getData(dataTransfer) {\n        this.panelTransfer.setData([new PanelTransfer(this.accessorId, this.group.id, null)], PanelTransfer.prototype);\n        const style = window.getComputedStyle(this.el);\n        const bgColor = style.getPropertyValue('--dv-activegroup-visiblepanel-tab-background-color');\n        const color = style.getPropertyValue('--dv-activegroup-visiblepanel-tab-color');\n        if (dataTransfer) {\n            const ghostElement = document.createElement('div');\n            ghostElement.style.backgroundColor = bgColor;\n            ghostElement.style.color = color;\n            ghostElement.style.padding = '2px 8px';\n            ghostElement.style.height = '24px';\n            ghostElement.style.fontSize = '11px';\n            ghostElement.style.lineHeight = '20px';\n            ghostElement.style.borderRadius = '12px';\n            ghostElement.style.position = 'absolute';\n            ghostElement.textContent = `Multiple Panels (${this.group.size})`;\n            addGhostImage(dataTransfer, ghostElement);\n        }\n        return {\n            dispose: () => {\n                this.panelTransfer.clearData(PanelTransfer.prototype);\n            },\n        };\n    }\n    dispose() {\n        //\n    }\n}\n","import { addClasses, removeClasses } from '../dom';\nexport function addGhostImage(dataTransfer, ghostElement) {\n    // class dockview provides to force ghost image to be drawn on a different layer and prevent weird rendering issues\n    addClasses(ghostElement, 'dv-dragged');\n    document.body.appendChild(ghostElement);\n    dataTransfer.setDragImage(ghostElement, 0, 0);\n    setTimeout(() => {\n        removeClasses(ghostElement, 'dv-dragged');\n        ghostElement.remove();\n    }, 0);\n}\n","import { last } from '../../../array';\nimport { getPanelData } from '../../../dnd/dataTransfer';\nimport { Droptarget } from '../../../dnd/droptarget';\nimport { GroupDragHandler } from '../../../dnd/groupDragHandler';\nimport { addDisposableListener, Emitter } from '../../../events';\nimport { CompositeDisposable } from '../../../lifecycle';\nimport { DockviewDropTargets } from '../../types';\nexport class VoidContainer extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor(accessor, group) {\n        super();\n        this.accessor = accessor;\n        this.group = group;\n        this._onDrop = new Emitter();\n        this.onDrop = this._onDrop.event;\n        this._element = document.createElement('div');\n        this._element.className = 'void-container';\n        this._element.tabIndex = 0;\n        this._element.draggable = true;\n        this.addDisposables(this._onDrop, addDisposableListener(this._element, 'click', () => {\n            this.accessor.doSetGroupActive(this.group);\n        }));\n        const handler = new GroupDragHandler(this._element, accessor.id, group);\n        this.voidDropTarget = new Droptarget(this._element, {\n            acceptedTargetZones: ['center'],\n            canDisplayOverlay: (event, position) => {\n                var _a;\n                const data = getPanelData();\n                if (data && this.accessor.id === data.viewId) {\n                    if (data.panelId === null &&\n                        data.groupId === this.group.id) {\n                        // don't allow group move to drop on self\n                        return false;\n                    }\n                    // don't show the overlay if the tab being dragged is the last panel of this group\n                    return ((_a = last(this.group.panels)) === null || _a === void 0 ? void 0 : _a.id) !== data.panelId;\n                }\n                return group.model.canDisplayOverlay(event, position, DockviewDropTargets.Panel);\n            },\n        });\n        this.addDisposables(handler, this.voidDropTarget.onDrop((event) => {\n            this._onDrop.fire(event);\n        }), this.voidDropTarget);\n    }\n}\n","import { CompositeDisposable, } from '../../../lifecycle';\nimport { addDisposableListener, Emitter } from '../../../events';\nimport { Tab } from '../tab/tab';\nimport { VoidContainer } from './voidContainer';\nimport { toggleClass } from '../../../dom';\nexport class TabsContainer extends CompositeDisposable {\n    get panels() {\n        return this.tabs.map((_) => _.value.panelId);\n    }\n    get size() {\n        return this.tabs.length;\n    }\n    get height() {\n        return this._height;\n    }\n    set height(value) {\n        this._height = value;\n        if (typeof value !== 'number') {\n            this.element.style.removeProperty('--dv-tabs-and-actions-container-height');\n        }\n        else {\n            this.element.style.setProperty('--dv-tabs-and-actions-container-height', `${value}px`);\n        }\n    }\n    get hidden() {\n        return this._hidden;\n    }\n    set hidden(value) {\n        this._hidden = value;\n        this.element.style.display = value ? 'none' : '';\n    }\n    show() {\n        if (!this.hidden) {\n            this.element.style.display = '';\n        }\n    }\n    hide() {\n        this._element.style.display = 'none';\n    }\n    setActionElement(element) {\n        if (this.actions === element) {\n            return;\n        }\n        if (this.actions) {\n            this.actions.remove();\n            this.actions = undefined;\n        }\n        if (element) {\n            this.actionContainer.appendChild(element);\n            this.actions = element;\n        }\n    }\n    get element() {\n        return this._element;\n    }\n    isActive(tab) {\n        return (this.selectedIndex > -1 &&\n            this.tabs[this.selectedIndex].value === tab);\n    }\n    indexOf(id) {\n        return this.tabs.findIndex((tab) => tab.value.panelId === id);\n    }\n    constructor(accessor, group) {\n        super();\n        this.accessor = accessor;\n        this.group = group;\n        this.tabs = [];\n        this.selectedIndex = -1;\n        this._hidden = false;\n        this._onDrop = new Emitter();\n        this.onDrop = this._onDrop.event;\n        this.addDisposables(this._onDrop);\n        this._element = document.createElement('div');\n        this._element.className = 'tabs-and-actions-container';\n        this.height = accessor.options.tabHeight;\n        toggleClass(this._element, 'dv-full-width-single-tab', this.accessor.options.singleTabMode === 'fullwidth');\n        this.addDisposables(this.accessor.onDidAddPanel((e) => {\n            if (e.api.group === this.group) {\n                toggleClass(this._element, 'dv-single-tab', this.size === 1);\n            }\n        }), this.accessor.onDidRemovePanel((e) => {\n            if (e.api.group === this.group) {\n                toggleClass(this._element, 'dv-single-tab', this.size === 1);\n            }\n        }));\n        this.actionContainer = document.createElement('div');\n        this.actionContainer.className = 'action-container';\n        this.tabContainer = document.createElement('div');\n        this.tabContainer.className = 'tabs-container';\n        this.voidContainer = new VoidContainer(this.accessor, this.group);\n        this._element.appendChild(this.tabContainer);\n        this._element.appendChild(this.voidContainer.element);\n        this._element.appendChild(this.actionContainer);\n        this.addDisposables(this.voidContainer, this.voidContainer.onDrop((event) => {\n            this._onDrop.fire({\n                event: event.nativeEvent,\n                index: this.tabs.length,\n            });\n        }), addDisposableListener(this.tabContainer, 'mousedown', (event) => {\n            if (event.defaultPrevented) {\n                return;\n            }\n            const isLeftClick = event.button === 0;\n            if (isLeftClick) {\n                this.accessor.doSetGroupActive(this.group);\n            }\n        }));\n    }\n    setActive(_isGroupActive) {\n        // noop\n    }\n    addTab(tab, index = this.tabs.length) {\n        if (index < 0 || index > this.tabs.length) {\n            throw new Error('invalid location');\n        }\n        this.tabContainer.insertBefore(tab.value.element, this.tabContainer.children[index]);\n        this.tabs = [\n            ...this.tabs.slice(0, index),\n            tab,\n            ...this.tabs.slice(index),\n        ];\n        if (this.selectedIndex < 0) {\n            this.selectedIndex = index;\n        }\n    }\n    delete(id) {\n        const index = this.tabs.findIndex((tab) => tab.value.panelId === id);\n        const tabToRemove = this.tabs.splice(index, 1)[0];\n        const { value, disposable } = tabToRemove;\n        disposable.dispose();\n        value.element.remove();\n    }\n    setActivePanel(panel) {\n        this.tabs.forEach((tab) => {\n            const isActivePanel = panel.id === tab.value.panelId;\n            tab.value.setActive(isActivePanel);\n        });\n    }\n    openPanel(panel, index = this.tabs.length) {\n        var _a;\n        if (this.tabs.find((tab) => tab.value.panelId === panel.id)) {\n            return;\n        }\n        const tabToAdd = new Tab(panel.id, this.accessor, this.group);\n        if (!((_a = panel.view) === null || _a === void 0 ? void 0 : _a.tab)) {\n            throw new Error('invalid header component');\n        }\n        tabToAdd.setContent(panel.view.tab);\n        const disposable = CompositeDisposable.from(tabToAdd.onChanged((event) => {\n            var _a;\n            const alreadyFocused = panel.id === ((_a = this.group.model.activePanel) === null || _a === void 0 ? void 0 : _a.id) &&\n                this.group.model.isContentFocused;\n            const isLeftClick = event.button === 0;\n            if (!isLeftClick || event.defaultPrevented) {\n                return;\n            }\n            this.group.model.openPanel(panel, {\n                skipFocus: alreadyFocused,\n            });\n        }), tabToAdd.onDrop((event) => {\n            this._onDrop.fire({\n                event: event.nativeEvent,\n                index: this.tabs.findIndex((x) => x.value === tabToAdd),\n            });\n        }));\n        const value = { value: tabToAdd, disposable };\n        this.addTab(value, index);\n    }\n    closePanel(panel) {\n        this.delete(panel.id);\n    }\n    dispose() {\n        super.dispose();\n        this.tabs.forEach((tab) => {\n            tab.disposable.dispose();\n        });\n        this.tabs = [];\n    }\n}\n","import { DockviewApi } from '../api/component.api';\nimport { getPanelData } from '../dnd/dataTransfer';\nimport { Droptarget } from '../dnd/droptarget';\nimport { isAncestor, toggleClass } from '../dom';\nimport { addDisposableListener, Emitter } from '../events';\nimport { CompositeDisposable } from '../lifecycle';\nimport { ContentContainer, } from './components/panel/content';\nimport { TabsContainer, } from './components/titlebar/tabsContainer';\nimport { DockviewDropTargets } from './types';\nexport class DockviewGroupPanelModel extends CompositeDisposable {\n    get element() {\n        throw new Error('not supported');\n    }\n    get activePanel() {\n        return this._activePanel;\n    }\n    get locked() {\n        return this._locked;\n    }\n    set locked(value) {\n        this._locked = value;\n        toggleClass(this.container, 'locked-groupview', value);\n    }\n    get isActive() {\n        return this._isGroupActive;\n    }\n    get panels() {\n        return this._panels;\n    }\n    get size() {\n        return this._panels.length;\n    }\n    get isEmpty() {\n        return this._panels.length === 0;\n    }\n    get hasWatermark() {\n        return !!(this.watermark && this.container.contains(this.watermark.element));\n    }\n    get header() {\n        return this.tabsContainer;\n    }\n    get isContentFocused() {\n        if (!document.activeElement) {\n            return false;\n        }\n        return isAncestor(document.activeElement, this.contentContainer.element);\n    }\n    constructor(container, accessor, id, options, groupPanel) {\n        super();\n        this.container = container;\n        this.accessor = accessor;\n        this.id = id;\n        this.options = options;\n        this.groupPanel = groupPanel;\n        this._isGroupActive = false;\n        this._locked = false;\n        this.mostRecentlyUsed = [];\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._width = 0;\n        this._height = 0;\n        this._panels = [];\n        this._onMove = new Emitter();\n        this.onMove = this._onMove.event;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onDidAddPanel = new Emitter();\n        this.onDidAddPanel = this._onDidAddPanel.event;\n        this._onDidRemovePanel = new Emitter();\n        this.onDidRemovePanel = this._onDidRemovePanel.event;\n        this._onDidActivePanelChange = new Emitter();\n        this.onDidActivePanelChange = this._onDidActivePanelChange.event;\n        this.container.classList.add('groupview');\n        this.tabsContainer = new TabsContainer(this.accessor, this.groupPanel);\n        this.contentContainer = new ContentContainer();\n        this.dropTarget = new Droptarget(this.contentContainer.element, {\n            acceptedTargetZones: ['top', 'bottom', 'left', 'right', 'center'],\n            canDisplayOverlay: (event, position) => {\n                if (this.locked && position === 'center') {\n                    return false;\n                }\n                const data = getPanelData();\n                if (data && data.viewId === this.accessor.id) {\n                    if (data.groupId === this.id) {\n                        if (position === 'center') {\n                            // don't allow to drop on self for center position\n                            return false;\n                        }\n                        if (data.panelId === null) {\n                            // don't allow group move to drop anywhere on self\n                            return false;\n                        }\n                    }\n                    const groupHasOnePanelAndIsActiveDragElement = this._panels.length === 1 && data.groupId === this.id;\n                    return !groupHasOnePanelAndIsActiveDragElement;\n                }\n                return this.canDisplayOverlay(event, position, DockviewDropTargets.Panel);\n            },\n        });\n        container.append(this.tabsContainer.element, this.contentContainer.element);\n        this.header.hidden = !!options.hideHeader;\n        this.locked = !!options.locked;\n        this.addDisposables(this._onMove, this._onDidChange, this._onDidDrop, this._onDidAddPanel, this._onDidRemovePanel, this._onDidActivePanelChange, this.tabsContainer.onDrop((event) => {\n            this.handleDropEvent(event.event, 'center', event.index);\n        }), this.contentContainer.onDidFocus(() => {\n            this.accessor.doSetGroupActive(this.groupPanel, true);\n        }), this.contentContainer.onDidBlur(() => {\n            // noop\n        }), this.dropTarget.onDrop((event) => {\n            this.handleDropEvent(event.nativeEvent, event.position);\n        }));\n    }\n    initialize() {\n        var _a, _b;\n        if ((_a = this.options) === null || _a === void 0 ? void 0 : _a.panels) {\n            this.options.panels.forEach((panel) => {\n                this.doAddPanel(panel);\n            });\n        }\n        if ((_b = this.options) === null || _b === void 0 ? void 0 : _b.activePanel) {\n            this.openPanel(this.options.activePanel);\n        }\n        // must be run after the constructor otherwise this.parent may not be\n        // correctly initialized\n        this.setActive(this.isActive, true, true);\n        this.updateContainer();\n        if (this.accessor.options.createGroupControlElement) {\n            this._control = this.accessor.options.createGroupControlElement(this.groupPanel);\n            this.addDisposables(this._control);\n            this._control.init({\n                containerApi: new DockviewApi(this.accessor),\n                api: this.groupPanel.api,\n            });\n            this.tabsContainer.setActionElement(this._control.element);\n        }\n    }\n    indexOf(panel) {\n        return this.tabsContainer.indexOf(panel.id);\n    }\n    toJSON() {\n        var _a;\n        const result = {\n            views: this.tabsContainer.panels,\n            activeView: (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.id,\n            id: this.id,\n        };\n        if (this.locked) {\n            result.locked = true;\n        }\n        if (this.header.hidden) {\n            result.hideHeader = true;\n        }\n        return result;\n    }\n    moveToNext(options) {\n        if (!options) {\n            options = {};\n        }\n        if (!options.panel) {\n            options.panel = this.activePanel;\n        }\n        const index = options.panel ? this.panels.indexOf(options.panel) : -1;\n        let normalizedIndex;\n        if (index < this.panels.length - 1) {\n            normalizedIndex = index + 1;\n        }\n        else if (!options.suppressRoll) {\n            normalizedIndex = 0;\n        }\n        else {\n            return;\n        }\n        this.openPanel(this.panels[normalizedIndex]);\n    }\n    moveToPrevious(options) {\n        if (!options) {\n            options = {};\n        }\n        if (!options.panel) {\n            options.panel = this.activePanel;\n        }\n        if (!options.panel) {\n            return;\n        }\n        const index = this.panels.indexOf(options.panel);\n        let normalizedIndex;\n        if (index > 0) {\n            normalizedIndex = index - 1;\n        }\n        else if (!options.suppressRoll) {\n            normalizedIndex = this.panels.length - 1;\n        }\n        else {\n            return;\n        }\n        this.openPanel(this.panels[normalizedIndex]);\n    }\n    containsPanel(panel) {\n        return this.panels.includes(panel);\n    }\n    init(_params) {\n        //noop\n    }\n    update(_params) {\n        //noop\n    }\n    focus() {\n        var _a, _b;\n        (_b = (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.focus) === null || _b === void 0 ? void 0 : _b.call(_a);\n    }\n    openPanel(panel, options = {}) {\n        if (typeof options.index !== 'number' ||\n            options.index > this.panels.length) {\n            options.index = this.panels.length;\n        }\n        const skipSetPanelActive = !!options.skipSetPanelActive;\n        const skipSetGroupActive = !!options.skipSetGroupActive;\n        // ensure the group is updated before we fire any events\n        panel.updateParentGroup(this.groupPanel, true);\n        if (this._activePanel === panel) {\n            if (!skipSetGroupActive) {\n                this.accessor.doSetGroupActive(this.groupPanel);\n            }\n            return;\n        }\n        this.doAddPanel(panel, options.index, skipSetPanelActive);\n        if (!skipSetPanelActive) {\n            this.doSetActivePanel(panel);\n        }\n        if (!skipSetGroupActive) {\n            this.accessor.doSetGroupActive(this.groupPanel, !!options.skipFocus);\n        }\n        this.updateContainer();\n    }\n    removePanel(groupItemOrId) {\n        const id = typeof groupItemOrId === 'string'\n            ? groupItemOrId\n            : groupItemOrId.id;\n        const panelToRemove = this._panels.find((panel) => panel.id === id);\n        if (!panelToRemove) {\n            throw new Error('invalid operation');\n        }\n        return this._removePanel(panelToRemove);\n    }\n    closeAllPanels() {\n        if (this.panels.length > 0) {\n            // take a copy since we will be edting the array as we iterate through\n            const arrPanelCpy = [...this.panels];\n            for (const panel of arrPanelCpy) {\n                this.doClose(panel);\n            }\n        }\n        else {\n            this.accessor.removeGroup(this.groupPanel);\n        }\n    }\n    closePanel(panel) {\n        this.doClose(panel);\n    }\n    doClose(panel) {\n        this.accessor.removePanel(panel);\n    }\n    isPanelActive(panel) {\n        return this._activePanel === panel;\n    }\n    updateActions(element) {\n        this.tabsContainer.setActionElement(element);\n    }\n    setActive(isGroupActive, skipFocus = false, force = false) {\n        var _a, _b, _c, _d;\n        if (!force && this.isActive === isGroupActive) {\n            if (!skipFocus) {\n                (_b = (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.focus) === null || _b === void 0 ? void 0 : _b.call(_a);\n            }\n            return;\n        }\n        this._isGroupActive = isGroupActive;\n        toggleClass(this.container, 'active-group', isGroupActive);\n        toggleClass(this.container, 'inactive-group', !isGroupActive);\n        this.tabsContainer.setActive(this.isActive);\n        if (!this._activePanel && this.panels.length > 0) {\n            this.doSetActivePanel(this.panels[0]);\n        }\n        this.updateContainer();\n        if (isGroupActive) {\n            if (!skipFocus) {\n                (_d = (_c = this._activePanel) === null || _c === void 0 ? void 0 : _c.focus) === null || _d === void 0 ? void 0 : _d.call(_c);\n            }\n        }\n    }\n    layout(width, height) {\n        var _a;\n        this._width = width;\n        this._height = height;\n        this.contentContainer.layout(this._width, this._height);\n        if ((_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.layout) {\n            this._activePanel.layout(this._width, this._height);\n        }\n    }\n    _removePanel(panel) {\n        const isActivePanel = this._activePanel === panel;\n        this.doRemovePanel(panel);\n        if (isActivePanel && this.panels.length > 0) {\n            const nextPanel = this.mostRecentlyUsed[0];\n            this.openPanel(nextPanel);\n        }\n        if (this._activePanel && this.panels.length === 0) {\n            this.doSetActivePanel(undefined);\n        }\n        this.updateContainer();\n        return panel;\n    }\n    doRemovePanel(panel) {\n        const index = this.panels.indexOf(panel);\n        if (this._activePanel === panel) {\n            this.contentContainer.closePanel();\n        }\n        this.tabsContainer.delete(panel.id);\n        this._panels.splice(index, 1);\n        if (this.mostRecentlyUsed.includes(panel)) {\n            this.mostRecentlyUsed.splice(this.mostRecentlyUsed.indexOf(panel), 1);\n        }\n        this._onDidRemovePanel.fire({ panel });\n    }\n    doAddPanel(panel, index = this.panels.length, skipSetActive = false) {\n        const existingPanel = this._panels.indexOf(panel);\n        const hasExistingPanel = existingPanel > -1;\n        this.tabsContainer.openPanel(panel, index);\n        if (!skipSetActive) {\n            this.contentContainer.openPanel(panel);\n        }\n        this.tabsContainer.show();\n        this.contentContainer.show();\n        if (hasExistingPanel) {\n            // TODO - need to ensure ordering hasn't changed and if it has need to re-order this.panels\n            return;\n        }\n        this.updateMru(panel);\n        this.panels.splice(index, 0, panel);\n        this._onDidAddPanel.fire({ panel });\n    }\n    doSetActivePanel(panel) {\n        this._activePanel = panel;\n        if (panel) {\n            this.tabsContainer.setActivePanel(panel);\n            panel.layout(this._width, this._height);\n            this.updateMru(panel);\n            this._onDidActivePanelChange.fire({ panel });\n        }\n    }\n    updateMru(panel) {\n        if (this.mostRecentlyUsed.includes(panel)) {\n            this.mostRecentlyUsed.splice(this.mostRecentlyUsed.indexOf(panel), 1);\n        }\n        this.mostRecentlyUsed = [panel, ...this.mostRecentlyUsed];\n    }\n    updateContainer() {\n        var _a, _b;\n        toggleClass(this.container, 'empty', this.isEmpty);\n        this.panels.forEach((panel) => panel.updateParentGroup(this.groupPanel, this.isActive));\n        if (this.isEmpty && !this.watermark) {\n            const watermark = this.accessor.createWatermarkComponent();\n            watermark.init({\n                containerApi: new DockviewApi(this.accessor),\n                group: this.groupPanel,\n            });\n            this.watermark = watermark;\n            addDisposableListener(this.watermark.element, 'click', () => {\n                if (!this.isActive) {\n                    this.accessor.doSetGroupActive(this.groupPanel);\n                }\n            });\n            this.tabsContainer.hide();\n            this.contentContainer.element.appendChild(this.watermark.element);\n            this.watermark.updateParentGroup(this.groupPanel, true);\n        }\n        if (!this.isEmpty && this.watermark) {\n            this.watermark.element.remove();\n            (_b = (_a = this.watermark).dispose) === null || _b === void 0 ? void 0 : _b.call(_a);\n            this.watermark = undefined;\n            this.tabsContainer.show();\n        }\n    }\n    canDisplayOverlay(event, position, target) {\n        // custom overlay handler\n        if (this.accessor.options.showDndOverlay) {\n            return this.accessor.options.showDndOverlay({\n                nativeEvent: event,\n                target,\n                group: this.accessor.getPanel(this.id),\n                position,\n                getData: getPanelData,\n            });\n        }\n        return false;\n    }\n    handleDropEvent(event, position, index) {\n        const data = getPanelData();\n        if (data && data.viewId === this.accessor.id) {\n            if (data.panelId === null) {\n                // this is a group move dnd event\n                const { groupId } = data;\n                this._onMove.fire({\n                    target: position,\n                    groupId: groupId,\n                    index,\n                });\n                return;\n            }\n            const fromSameGroup = this.tabsContainer.indexOf(data.panelId) !== -1;\n            if (fromSameGroup && this.tabsContainer.size === 1) {\n                return;\n            }\n            const { groupId, panelId } = data;\n            const isSameGroup = this.id === groupId;\n            if (isSameGroup && !position) {\n                const oldIndex = this.tabsContainer.indexOf(panelId);\n                if (oldIndex === index) {\n                    return;\n                }\n            }\n            this._onMove.fire({\n                target: position,\n                groupId: data.groupId,\n                itemId: data.panelId,\n                index,\n            });\n        }\n        else {\n            this._onDidDrop.fire({\n                nativeEvent: event,\n                position,\n                index,\n                getData: () => getPanelData(),\n            });\n        }\n    }\n    dispose() {\n        var _a, _b;\n        super.dispose();\n        (_b = (_a = this.watermark) === null || _a === void 0 ? void 0 : _a.dispose) === null || _b === void 0 ? void 0 : _b.call(_a);\n        for (const panel of this.panels) {\n            panel.dispose();\n        }\n        this.dropTarget.dispose();\n        this.tabsContainer.dispose();\n        this.contentContainer.dispose();\n    }\n}\n","import { Emitter, Event, TickDelayedEvent } from '../events';\nimport { getGridLocation, Gridview } from './gridview';\nimport { CompositeDisposable } from '../lifecycle';\nimport { sequentialNumberGenerator } from '../math';\nimport { Sizing } from '../splitview/splitview';\nconst nextLayoutId = sequentialNumberGenerator();\nexport function toTarget(direction) {\n    switch (direction) {\n        case 'left':\n            return 'left';\n        case 'right':\n            return 'right';\n        case 'above':\n            return 'top';\n        case 'below':\n            return 'bottom';\n        case 'within':\n        default:\n            return 'center';\n    }\n}\nexport class BaseGrid extends CompositeDisposable {\n    get id() {\n        return this._id;\n    }\n    get element() {\n        return this._element;\n    }\n    get size() {\n        return this._groups.size;\n    }\n    get groups() {\n        return Array.from(this._groups.values()).map((_) => _.value);\n    }\n    get width() {\n        return this.gridview.width;\n    }\n    get height() {\n        return this.gridview.height;\n    }\n    get minimumHeight() {\n        return this.gridview.minimumHeight;\n    }\n    get maximumHeight() {\n        return this.gridview.maximumHeight;\n    }\n    get minimumWidth() {\n        return this.gridview.minimumWidth;\n    }\n    get maximumWidth() {\n        return this.gridview.maximumWidth;\n    }\n    get activeGroup() {\n        return this._activeGroup;\n    }\n    constructor(_element, options) {\n        super();\n        this._element = _element;\n        this._id = nextLayoutId.next();\n        this._groups = new Map();\n        this._onDidLayoutChange = new Emitter();\n        this.onDidLayoutChange = this._onDidLayoutChange.event;\n        this._onDidRemoveGroup = new Emitter();\n        this.onDidRemoveGroup = this._onDidRemoveGroup.event;\n        this._onDidAddGroup = new Emitter();\n        this.onDidAddGroup = this._onDidAddGroup.event;\n        this._onDidActiveGroupChange = new Emitter();\n        this.onDidActiveGroupChange = this._onDidActiveGroupChange.event;\n        this._bufferOnDidLayoutChange = new TickDelayedEvent();\n        this.gridview = new Gridview(!!options.proportionalLayout, options.styles, options.orientation);\n        this.element.appendChild(this.gridview.element);\n        this.layout(0, 0, true); // set some elements height/widths\n        this.addDisposables(this.gridview.onDidChange(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }));\n        this.addDisposables(Event.any(this.onDidAddGroup, this.onDidRemoveGroup, this.onDidActiveGroupChange)(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), this._bufferOnDidLayoutChange.onEvent(() => {\n            this._onDidLayoutChange.fire();\n        }), this._bufferOnDidLayoutChange);\n    }\n    setVisible(panel, visible) {\n        this.gridview.setViewVisible(getGridLocation(panel.element), visible);\n        this._onDidLayoutChange.fire();\n    }\n    isVisible(panel) {\n        return this.gridview.isViewVisible(getGridLocation(panel.element));\n    }\n    doAddGroup(group, location = [0], size) {\n        this.gridview.addView(group, size !== null && size !== void 0 ? size : Sizing.Distribute, location);\n        this._onDidAddGroup.fire(group);\n        this.doSetGroupActive(group);\n    }\n    doRemoveGroup(group, options) {\n        if (!this._groups.has(group.id)) {\n            throw new Error('invalid operation');\n        }\n        const item = this._groups.get(group.id);\n        const view = this.gridview.remove(group, Sizing.Distribute);\n        if (item && !(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n            item.disposable.dispose();\n            item.value.dispose();\n            this._groups.delete(group.id);\n        }\n        this._onDidRemoveGroup.fire(group);\n        if (!(options === null || options === void 0 ? void 0 : options.skipActive) && this._activeGroup === group) {\n            const groups = Array.from(this._groups.values());\n            this.doSetGroupActive(groups.length > 0 ? groups[0].value : undefined);\n        }\n        return view;\n    }\n    getPanel(id) {\n        var _a;\n        return (_a = this._groups.get(id)) === null || _a === void 0 ? void 0 : _a.value;\n    }\n    doSetGroupActive(group, skipFocus) {\n        var _a, _b, _c;\n        if (this._activeGroup === group) {\n            return;\n        }\n        if (this._activeGroup) {\n            this._activeGroup.setActive(false);\n            if (!skipFocus) {\n                (_b = (_a = this._activeGroup).focus) === null || _b === void 0 ? void 0 : _b.call(_a);\n            }\n        }\n        if (group) {\n            group.setActive(true);\n            if (!skipFocus) {\n                (_c = group.focus) === null || _c === void 0 ? void 0 : _c.call(group);\n            }\n        }\n        this._activeGroup = group;\n        this._onDidActiveGroupChange.fire(group);\n    }\n    removeGroup(group) {\n        this.doRemoveGroup(group);\n    }\n    moveToNext(options) {\n        var _a;\n        if (!options) {\n            options = {};\n        }\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.next(location)) === null || _a === void 0 ? void 0 : _a.view;\n        this.doSetGroupActive(next);\n    }\n    moveToPrevious(options) {\n        var _a;\n        if (!options) {\n            options = {};\n        }\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.previous(location)) === null || _a === void 0 ? void 0 : _a.view;\n        this.doSetGroupActive(next);\n    }\n    layout(width, height, forceResize) {\n        const different = forceResize || width !== this.width || height !== this.height;\n        if (!different) {\n            return;\n        }\n        this.element.style.height = `${height}px`;\n        this.element.style.width = `${width}px`;\n        this.gridview.layout(width, height);\n    }\n    dispose() {\n        super.dispose();\n        this._onDidActiveGroupChange.dispose();\n        this._onDidAddGroup.dispose();\n        this._onDidRemoveGroup.dispose();\n        this._onDidLayoutChange.dispose();\n        for (const group of this.groups) {\n            group.dispose();\n        }\n        this.gridview.dispose();\n    }\n}\n","import { Emitter } from '../events';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\n/**\n * A core api implementation that should be used across all panel-like objects\n */\nexport class PanelApiImpl extends CompositeDisposable {\n    //\n    get isFocused() {\n        return this._isFocused;\n    }\n    get isActive() {\n        return this._isActive;\n    }\n    get isVisible() {\n        return this._isVisible;\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    constructor(id) {\n        super();\n        this.id = id;\n        this._isFocused = false;\n        this._isActive = false;\n        this._isVisible = true;\n        this._width = 0;\n        this._height = 0;\n        this.panelUpdatesDisposable = new MutableDisposable();\n        this._onDidDimensionChange = new Emitter({\n            replay: true,\n        });\n        this.onDidDimensionsChange = this._onDidDimensionChange.event;\n        //\n        this._onDidChangeFocus = new Emitter({\n            replay: true,\n        });\n        this.onDidFocusChange = this._onDidChangeFocus.event;\n        //\n        this._onFocusEvent = new Emitter();\n        this.onFocusEvent = this._onFocusEvent.event;\n        //\n        this._onDidVisibilityChange = new Emitter({\n            replay: true,\n        });\n        this.onDidVisibilityChange = this._onDidVisibilityChange.event;\n        //\n        this._onVisibilityChange = new Emitter();\n        this.onVisibilityChange = this._onVisibilityChange.event;\n        //\n        this._onDidActiveChange = new Emitter({\n            replay: true,\n        });\n        this.onDidActiveChange = this._onDidActiveChange.event;\n        //\n        this._onActiveChange = new Emitter();\n        this.onActiveChange = this._onActiveChange.event;\n        //\n        this._onUpdateParameters = new Emitter();\n        this.onUpdateParameters = this._onUpdateParameters.event;\n        this.addDisposables(this.panelUpdatesDisposable, this._onDidDimensionChange, this._onDidChangeFocus, this._onDidVisibilityChange, this._onDidActiveChange, this._onFocusEvent, this._onActiveChange, this._onVisibilityChange, this._onUpdateParameters, this.onDidFocusChange((event) => {\n            this._isFocused = event.isFocused;\n        }), this.onDidActiveChange((event) => {\n            this._isActive = event.isActive;\n        }), this.onDidVisibilityChange((event) => {\n            this._isVisible = event.isVisible;\n        }), this.onDidDimensionsChange((event) => {\n            this._width = event.width;\n            this._height = event.height;\n        }));\n    }\n    initialize(panel) {\n        this.panelUpdatesDisposable.value = this._onUpdateParameters.event((parameters) => {\n            panel.update({\n                params: {\n                    params: parameters,\n                },\n            });\n        });\n    }\n    setVisible(isVisible) {\n        this._onVisibilityChange.fire({ isVisible });\n    }\n    setActive() {\n        this._onActiveChange.fire();\n    }\n    updateParameters(parameters) {\n        this._onUpdateParameters.fire(parameters);\n    }\n    dispose() {\n        super.dispose();\n    }\n}\n","import { Emitter } from '../events';\nimport { PanelApiImpl } from './panelApi';\nexport class SplitviewPanelApiImpl extends PanelApiImpl {\n    //\n    constructor(id) {\n        super(id);\n        this._onDidConstraintsChangeInternal = new Emitter();\n        this.onDidConstraintsChangeInternal = this._onDidConstraintsChangeInternal.event;\n        //\n        this._onDidConstraintsChange = new Emitter({\n            replay: true,\n        });\n        this.onDidConstraintsChange = this._onDidConstraintsChange.event;\n        //\n        this._onDidSizeChange = new Emitter();\n        this.onDidSizeChange = this._onDidSizeChange.event;\n        this.addDisposables(this._onDidConstraintsChangeInternal, this._onDidConstraintsChange, this._onDidSizeChange);\n    }\n    setConstraints(value) {\n        this._onDidConstraintsChangeInternal.fire(value);\n    }\n    setSize(event) {\n        this._onDidSizeChange.fire(event);\n    }\n}\n","import { Emitter } from '../events';\nimport { SplitviewPanelApiImpl } from './splitviewPanelApi';\nexport class PaneviewPanelApiImpl extends SplitviewPanelApiImpl {\n    set pane(pane) {\n        this._pane = pane;\n    }\n    constructor(id) {\n        super(id);\n        this._onDidExpansionChange = new Emitter({\n            replay: true,\n        });\n        this.onDidExpansionChange = this._onDidExpansionChange.event;\n        this._onMouseEnter = new Emitter({});\n        this.onMouseEnter = this._onMouseEnter.event;\n        this._onMouseLeave = new Emitter({});\n        this.onMouseLeave = this._onMouseLeave.event;\n        this.addDisposables(this._onDidExpansionChange, this._onMouseEnter, this._onMouseLeave);\n    }\n    setExpanded(isExpanded) {\n        var _a;\n        (_a = this._pane) === null || _a === void 0 ? void 0 : _a.setExpanded(isExpanded);\n    }\n    get isExpanded() {\n        var _a;\n        return !!((_a = this._pane) === null || _a === void 0 ? void 0 : _a.isExpanded());\n    }\n}\n","import { trackFocus } from '../dom';\nimport { CompositeDisposable } from '../lifecycle';\nexport class BasePanelView extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    get params() {\n        var _a;\n        return (_a = this._params) === null || _a === void 0 ? void 0 : _a.params;\n    }\n    constructor(id, component, api) {\n        super();\n        this.id = id;\n        this.component = component;\n        this.api = api;\n        this._height = 0;\n        this._width = 0;\n        this._element = document.createElement('div');\n        this._element.tabIndex = -1;\n        this._element.style.outline = 'none';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n        this._element.style.overflow = 'hidden';\n        const { onDidFocus, onDidBlur } = trackFocus(this._element);\n        this.addDisposables(this.api, onDidFocus(() => {\n            this.api._onDidChangeFocus.fire({ isFocused: true });\n        }), onDidBlur(() => {\n            this.api._onDidChangeFocus.fire({ isFocused: false });\n        }));\n    }\n    focus() {\n        this.api._onFocusEvent.fire();\n    }\n    layout(width, height) {\n        this._width = width;\n        this._height = height;\n        this.api._onDidDimensionChange.fire({ width, height });\n        if (this.part) {\n            if (this._params) {\n                this.part.update(this._params.params);\n            }\n        }\n    }\n    init(parameters) {\n        this._params = parameters;\n        this.part = this.getComponent();\n    }\n    update(event) {\n        var _a, _b;\n        this._params = Object.assign(Object.assign({}, this._params), { params: Object.assign(Object.assign({}, (_a = this._params) === null || _a === void 0 ? void 0 : _a.params), event.params) });\n        (_b = this.part) === null || _b === void 0 ? void 0 : _b.update({ params: this._params.params });\n    }\n    toJSON() {\n        var _a, _b;\n        const params = (_b = (_a = this._params) === null || _a === void 0 ? void 0 : _a.params) !== null && _b !== void 0 ? _b : {};\n        return {\n            id: this.id,\n            component: this.component,\n            params: Object.keys(params).length > 0 ? params : undefined,\n        };\n    }\n    dispose() {\n        var _a;\n        super.dispose();\n        this.api.dispose();\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import { PaneviewPanelApiImpl } from '../api/paneviewPanelApi';\nimport { addClasses, removeClasses } from '../dom';\nimport { addDisposableListener, Emitter } from '../events';\nimport { BasePanelView, } from '../gridview/basePanelView';\nimport { Orientation } from '../splitview/splitview';\nexport class PaneviewPanel extends BasePanelView {\n    set orientation(value) {\n        this._orientation = value;\n    }\n    get orientation() {\n        return this._orientation;\n    }\n    get minimumSize() {\n        const headerSize = this.headerSize;\n        const expanded = this.isExpanded();\n        const minimumBodySize = expanded ? this._minimumBodySize : 0;\n        return headerSize + minimumBodySize;\n    }\n    get maximumSize() {\n        const headerSize = this.headerSize;\n        const expanded = this.isExpanded();\n        const maximumBodySize = expanded ? this._maximumBodySize : 0;\n        return headerSize + maximumBodySize;\n    }\n    get size() {\n        return this._size;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    set orthogonalSize(size) {\n        this._orthogonalSize = size;\n    }\n    get minimumBodySize() {\n        return this._minimumBodySize;\n    }\n    set minimumBodySize(value) {\n        this._minimumBodySize = typeof value === 'number' ? value : 0;\n    }\n    get maximumBodySize() {\n        return this._maximumBodySize;\n    }\n    set maximumBodySize(value) {\n        this._maximumBodySize =\n            typeof value === 'number' ? value : Number.POSITIVE_INFINITY;\n    }\n    get headerVisible() {\n        return this._headerVisible;\n    }\n    set headerVisible(value) {\n        this._headerVisible = value;\n        this.header.style.display = value ? '' : 'none';\n    }\n    constructor(id, component, headerComponent, orientation, isExpanded, isHeaderVisible) {\n        super(id, component, new PaneviewPanelApiImpl(id));\n        this.headerComponent = headerComponent;\n        this._onDidChangeExpansionState = new Emitter({ replay: true });\n        this.onDidChangeExpansionState = this._onDidChangeExpansionState.event;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this.headerSize = 22;\n        this._orthogonalSize = 0;\n        this._size = 0;\n        this._minimumBodySize = 100;\n        this._maximumBodySize = Number.POSITIVE_INFINITY;\n        this._isExpanded = false;\n        this.expandedSize = 0;\n        this.api.pane = this; // TODO cannot use 'this' before 'super'\n        this.api.initialize(this);\n        this._isExpanded = isExpanded;\n        this._headerVisible = isHeaderVisible;\n        this._onDidChangeExpansionState.fire(this.isExpanded()); // initialize value\n        this._orientation = orientation;\n        this.element.classList.add('pane');\n        this.addDisposables(this.api.onDidSizeChange((event) => {\n            this._onDidChange.fire({ size: event.size });\n        }), addDisposableListener(this.element, 'mouseenter', (ev) => {\n            this.api._onMouseEnter.fire(ev);\n        }), addDisposableListener(this.element, 'mouseleave', (ev) => {\n            this.api._onMouseLeave.fire(ev);\n        }));\n        this.addDisposables(this._onDidChangeExpansionState, this.onDidChangeExpansionState((isPanelExpanded) => {\n            this.api._onDidExpansionChange.fire({\n                isExpanded: isPanelExpanded,\n            });\n        }), this.api.onDidFocusChange((e) => {\n            if (!this.header) {\n                return;\n            }\n            if (e.isFocused) {\n                addClasses(this.header, 'focused');\n            }\n            else {\n                removeClasses(this.header, 'focused');\n            }\n        }));\n        this.renderOnce();\n    }\n    setVisible(isVisible) {\n        this.api._onDidVisibilityChange.fire({ isVisible });\n    }\n    setActive(isActive) {\n        this.api._onDidActiveChange.fire({ isActive });\n    }\n    isExpanded() {\n        return this._isExpanded;\n    }\n    setExpanded(expanded) {\n        if (this._isExpanded === expanded) {\n            return;\n        }\n        this._isExpanded = expanded;\n        if (expanded) {\n            if (this.animationTimer) {\n                clearTimeout(this.animationTimer);\n            }\n            if (this.body) {\n                this.element.appendChild(this.body);\n            }\n        }\n        else {\n            this.animationTimer = setTimeout(() => {\n                var _a;\n                (_a = this.body) === null || _a === void 0 ? void 0 : _a.remove();\n            }, 200);\n        }\n        this._onDidChange.fire(expanded ? { size: this.width } : {});\n        this._onDidChangeExpansionState.fire(expanded);\n    }\n    layout(size, orthogonalSize) {\n        this._size = size;\n        this._orthogonalSize = orthogonalSize;\n        const [width, height] = this.orientation === Orientation.HORIZONTAL\n            ? [size, orthogonalSize]\n            : [orthogonalSize, size];\n        if (this.isExpanded()) {\n            this.expandedSize = width;\n        }\n        super.layout(width, height);\n    }\n    init(parameters) {\n        var _a, _b;\n        super.init(parameters);\n        if (typeof parameters.minimumBodySize === 'number') {\n            this.minimumBodySize = parameters.minimumBodySize;\n        }\n        if (typeof parameters.maximumBodySize === 'number') {\n            this.maximumBodySize = parameters.maximumBodySize;\n        }\n        this.bodyPart = this.getBodyComponent();\n        this.headerPart = this.getHeaderComponent();\n        this.bodyPart.init(Object.assign(Object.assign({}, parameters), { api: this.api }));\n        this.headerPart.init(Object.assign(Object.assign({}, parameters), { api: this.api }));\n        (_a = this.body) === null || _a === void 0 ? void 0 : _a.append(this.bodyPart.element);\n        (_b = this.header) === null || _b === void 0 ? void 0 : _b.append(this.headerPart.element);\n        if (typeof parameters.isExpanded === 'boolean') {\n            this.setExpanded(parameters.isExpanded);\n        }\n    }\n    toJSON() {\n        const params = this._params;\n        return Object.assign(Object.assign({}, super.toJSON()), { headerComponent: this.headerComponent, title: params.title });\n    }\n    renderOnce() {\n        this.header = document.createElement('div');\n        this.header.tabIndex = 0;\n        this.header.className = 'pane-header';\n        this.header.style.height = `${this.headerSize}px`;\n        this.header.style.lineHeight = `${this.headerSize}px`;\n        this.header.style.minHeight = `${this.headerSize}px`;\n        this.header.style.maxHeight = `${this.headerSize}px`;\n        this.element.appendChild(this.header);\n        this.body = document.createElement('div');\n        this.body.className = 'pane-body';\n        this.element.appendChild(this.body);\n    }\n    // TODO slightly hacky by-pass of the component to create a body and header component\n    getComponent() {\n        return {\n            update: (params) => {\n                var _a, _b;\n                (_a = this.bodyPart) === null || _a === void 0 ? void 0 : _a.update({ params });\n                (_b = this.headerPart) === null || _b === void 0 ? void 0 : _b.update({ params });\n            },\n            dispose: () => {\n                var _a, _b;\n                (_a = this.bodyPart) === null || _a === void 0 ? void 0 : _a.dispose();\n                (_b = this.headerPart) === null || _b === void 0 ? void 0 : _b.dispose();\n            },\n        };\n    }\n}\n","import { PaneviewApi } from '../api/component.api';\nimport { DragHandler } from '../dnd/abstractDragHandler';\nimport { getPaneData, LocalSelectionTransfer, PaneTransfer, } from '../dnd/dataTransfer';\nimport { Droptarget } from '../dnd/droptarget';\nimport { Emitter } from '../events';\nimport { PaneviewPanel, } from './paneviewPanel';\nexport class DraggablePaneviewPanel extends PaneviewPanel {\n    constructor(accessor, id, component, headerComponent, orientation, isExpanded, disableDnd) {\n        super(id, component, headerComponent, orientation, isExpanded, true);\n        this.accessor = accessor;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        if (!disableDnd) {\n            this.initDragFeatures();\n        }\n    }\n    initDragFeatures() {\n        if (!this.header) {\n            return;\n        }\n        const id = this.id;\n        const accessorId = this.accessor.id;\n        this.header.draggable = true;\n        this.handler = new (class PaneDragHandler extends DragHandler {\n            getData() {\n                LocalSelectionTransfer.getInstance().setData([new PaneTransfer(accessorId, id)], PaneTransfer.prototype);\n                return {\n                    dispose: () => {\n                        LocalSelectionTransfer.getInstance().clearData(PaneTransfer.prototype);\n                    },\n                };\n            }\n        })(this.header);\n        this.target = new Droptarget(this.element, {\n            acceptedTargetZones: ['top', 'bottom'],\n            overlayModel: {\n                activationSize: { type: 'percentage', value: 50 },\n            },\n            canDisplayOverlay: (event) => {\n                const data = getPaneData();\n                if (data) {\n                    if (data.paneId !== this.id &&\n                        data.viewId === this.accessor.id) {\n                        return true;\n                    }\n                }\n                if (this.accessor.options.showDndOverlay) {\n                    return this.accessor.options.showDndOverlay({\n                        nativeEvent: event,\n                        getData: getPaneData,\n                        panel: this,\n                    });\n                }\n                return false;\n            },\n        });\n        this.addDisposables(this._onDidDrop, this.handler, this.target, this.target.onDrop((event) => {\n            this.onDrop(event);\n        }));\n    }\n    onDrop(event) {\n        const data = getPaneData();\n        if (!data || data.viewId !== this.accessor.id) {\n            // if there is no local drag event for this panel\n            // or if the drag event was creating by another Paneview instance\n            this._onDidDrop.fire(Object.assign(Object.assign({}, event), { panel: this, api: new PaneviewApi(this.accessor), getData: getPaneData }));\n            return;\n        }\n        const containerApi = this._params\n            .containerApi;\n        const panelId = data.paneId;\n        const existingPanel = containerApi.getPanel(panelId);\n        if (!existingPanel) {\n            // if the panel doesn't exist\n            this._onDidDrop.fire(Object.assign(Object.assign({}, event), { panel: this, getData: getPaneData, api: new PaneviewApi(this.accessor) }));\n            return;\n        }\n        const allPanels = containerApi.panels;\n        const fromIndex = allPanels.indexOf(existingPanel);\n        let toIndex = containerApi.panels.indexOf(this);\n        if (event.position === 'left' || event.position === 'top') {\n            toIndex = Math.max(0, toIndex - 1);\n        }\n        if (event.position === 'right' || event.position === 'bottom') {\n            if (fromIndex > toIndex) {\n                toIndex++;\n            }\n            toIndex = Math.min(allPanels.length - 1, toIndex);\n        }\n        containerApi.movePanel(fromIndex, toIndex);\n    }\n}\n","import { Emitter } from '../events';\nimport { PanelApiImpl } from './panelApi';\nexport class GridviewPanelApiImpl extends PanelApiImpl {\n    constructor(id, panel) {\n        super(id);\n        this._onDidConstraintsChangeInternal = new Emitter();\n        this.onDidConstraintsChangeInternal = this._onDidConstraintsChangeInternal.event;\n        this._onDidConstraintsChange = new Emitter({\n            replay: true,\n        });\n        this.onDidConstraintsChange = this._onDidConstraintsChange.event;\n        this._onDidSizeChange = new Emitter();\n        this.onDidSizeChange = this._onDidSizeChange.event;\n        this.addDisposables(this._onDidConstraintsChangeInternal, this._onDidConstraintsChange, this._onDidSizeChange);\n        if (panel) {\n            this.initialize(panel);\n        }\n    }\n    setConstraints(value) {\n        this._onDidConstraintsChangeInternal.fire(value);\n    }\n    setSize(event) {\n        this._onDidSizeChange.fire(event);\n    }\n}\n","import { BasePanelView, } from './basePanelView';\nimport { GridviewPanelApiImpl, } from '../api/gridviewPanelApi';\nimport { Emitter } from '../events';\nexport class GridviewPanel extends BasePanelView {\n    get priority() {\n        return this._priority;\n    }\n    get snap() {\n        return this._snap;\n    }\n    get minimumWidth() {\n        const width = typeof this._minimumWidth === 'function'\n            ? this._minimumWidth()\n            : this._minimumWidth;\n        if (width !== this._evaluatedMinimumWidth) {\n            this._evaluatedMinimumWidth = width;\n            this.updateConstraints();\n        }\n        return width;\n    }\n    get minimumHeight() {\n        const height = typeof this._minimumHeight === 'function'\n            ? this._minimumHeight()\n            : this._minimumHeight;\n        if (height !== this._evaluatedMinimumHeight) {\n            this._evaluatedMinimumHeight = height;\n            this.updateConstraints();\n        }\n        return height;\n    }\n    get maximumHeight() {\n        const height = typeof this._maximumHeight === 'function'\n            ? this._maximumHeight()\n            : this._maximumHeight;\n        if (height !== this._evaluatedMaximumHeight) {\n            this._evaluatedMaximumHeight = height;\n            this.updateConstraints();\n        }\n        return height;\n    }\n    get maximumWidth() {\n        const width = typeof this._maximumWidth === 'function'\n            ? this._maximumWidth()\n            : this._maximumWidth;\n        if (width !== this._evaluatedMaximumWidth) {\n            this._evaluatedMaximumWidth = width;\n            this.updateConstraints();\n        }\n        return width;\n    }\n    get isActive() {\n        return this.api.isActive;\n    }\n    constructor(id, component, options) {\n        super(id, component, new GridviewPanelApiImpl(id));\n        this._evaluatedMinimumWidth = 0;\n        this._evaluatedMaximumWidth = Number.MAX_SAFE_INTEGER;\n        this._evaluatedMinimumHeight = 0;\n        this._evaluatedMaximumHeight = Number.MAX_SAFE_INTEGER;\n        this._minimumWidth = 0;\n        this._minimumHeight = 0;\n        this._maximumWidth = Number.MAX_SAFE_INTEGER;\n        this._maximumHeight = Number.MAX_SAFE_INTEGER;\n        this._snap = false;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        if (typeof (options === null || options === void 0 ? void 0 : options.minimumWidth) === 'number') {\n            this._minimumWidth = options.minimumWidth;\n        }\n        if (typeof (options === null || options === void 0 ? void 0 : options.maximumWidth) === 'number') {\n            this._maximumWidth = options.maximumWidth;\n        }\n        if (typeof (options === null || options === void 0 ? void 0 : options.minimumHeight) === 'number') {\n            this._minimumHeight = options.minimumHeight;\n        }\n        if (typeof (options === null || options === void 0 ? void 0 : options.maximumHeight) === 'number') {\n            this._maximumHeight = options.maximumHeight;\n        }\n        this.api.initialize(this); // TODO: required to by-pass 'super before this' requirement\n        this.addDisposables(this._onDidChange, this.api.onVisibilityChange((event) => {\n            const { isVisible } = event;\n            const { accessor } = this._params;\n            accessor.setVisible(this, isVisible);\n        }), this.api.onActiveChange(() => {\n            const { accessor } = this._params;\n            accessor.setActive(this);\n        }), this.api.onDidConstraintsChangeInternal((event) => {\n            if (typeof event.minimumWidth === 'number' ||\n                typeof event.minimumWidth === 'function') {\n                this._minimumWidth = event.minimumWidth;\n            }\n            if (typeof event.minimumHeight === 'number' ||\n                typeof event.minimumHeight === 'function') {\n                this._minimumHeight = event.minimumHeight;\n            }\n            if (typeof event.maximumWidth === 'number' ||\n                typeof event.maximumWidth === 'function') {\n                this._maximumWidth = event.maximumWidth;\n            }\n            if (typeof event.maximumHeight === 'number' ||\n                typeof event.maximumHeight === 'function') {\n                this._maximumHeight = event.maximumHeight;\n            }\n        }), this.api.onDidSizeChange((event) => {\n            this._onDidChange.fire({\n                height: event.height,\n                width: event.width,\n            });\n        }));\n    }\n    setVisible(isVisible) {\n        this.api._onDidVisibilityChange.fire({ isVisible });\n    }\n    setActive(isActive) {\n        this.api._onDidActiveChange.fire({ isActive });\n    }\n    init(parameters) {\n        if (parameters.maximumHeight) {\n            this._maximumHeight = parameters.maximumHeight;\n        }\n        if (parameters.minimumHeight) {\n            this._minimumHeight = parameters.minimumHeight;\n        }\n        if (parameters.maximumWidth) {\n            this._maximumWidth = parameters.maximumWidth;\n        }\n        if (parameters.minimumWidth) {\n            this._minimumWidth = parameters.minimumWidth;\n        }\n        this._priority = parameters.priority;\n        this._snap = !!parameters.snap;\n        super.init(parameters);\n        if (typeof parameters.isVisible === 'boolean') {\n            this.setVisible(parameters.isVisible);\n        }\n    }\n    updateConstraints() {\n        this.api._onDidConstraintsChange.fire({\n            minimumWidth: this._evaluatedMinimumWidth,\n            maximumWidth: this._evaluatedMaximumWidth,\n            minimumHeight: this._evaluatedMinimumHeight,\n            maximumHeight: this._evaluatedMaximumHeight,\n        });\n    }\n    toJSON() {\n        const state = super.toJSON();\n        const maximum = (value) => value === Number.MAX_SAFE_INTEGER ? undefined : value;\n        const minimum = (value) => (value <= 0 ? undefined : value);\n        return Object.assign(Object.assign({}, state), { minimumHeight: minimum(this.minimumHeight), maximumHeight: maximum(this.maximumHeight), minimumWidth: minimum(this.minimumWidth), maximumWidth: maximum(this.maximumWidth), snap: this.snap, priority: this.priority });\n    }\n}\n","import { DockviewGroupPanelModel, } from './dockviewGroupPanelModel';\nimport { GridviewPanel } from '../gridview/gridviewPanel';\nexport class DockviewGroupPanel extends GridviewPanel {\n    get panels() {\n        return this._model.panels;\n    }\n    get activePanel() {\n        return this._model.activePanel;\n    }\n    get size() {\n        return this._model.size;\n    }\n    get model() {\n        return this._model;\n    }\n    get locked() {\n        return this._model.locked;\n    }\n    set locked(value) {\n        this._model.locked = value;\n    }\n    get header() {\n        return this._model.header;\n    }\n    constructor(accessor, id, options) {\n        super(id, 'groupview_default', {\n            minimumHeight: 100,\n            minimumWidth: 100,\n        });\n        this._model = new DockviewGroupPanelModel(this.element, accessor, id, options, this);\n    }\n    initialize() {\n        this._model.initialize();\n    }\n    setActive(isActive) {\n        super.setActive(isActive);\n        this.model.setActive(isActive);\n    }\n    layout(width, height) {\n        super.layout(width, height);\n        this.model.layout(width, height);\n    }\n    getComponent() {\n        return this._model;\n    }\n    toJSON() {\n        // TODO fix typing\n        return this.model.toJSON();\n    }\n}\n","import { Emitter } from '../events';\nimport { GridviewPanelApiImpl } from './gridviewPanelApi';\nimport { MutableDisposable } from '../lifecycle';\nexport class DockviewPanelApiImpl extends GridviewPanelApiImpl {\n    get title() {\n        return this.panel.title;\n    }\n    get isGroupActive() {\n        var _a;\n        return !!((_a = this.group) === null || _a === void 0 ? void 0 : _a.isActive);\n    }\n    set group(value) {\n        const isOldGroupActive = this.isGroupActive;\n        this._group = value;\n        this._onDidGroupChange.fire();\n        if (this._group) {\n            this.disposable.value = this._group.api.onDidActiveChange(() => {\n                this._onDidActiveGroupChange.fire();\n            });\n            if (this.isGroupActive !== isOldGroupActive) {\n                this._onDidActiveGroupChange.fire();\n            }\n        }\n    }\n    get group() {\n        return this._group;\n    }\n    constructor(panel, group) {\n        super(panel.id);\n        this.panel = panel;\n        this._onDidTitleChange = new Emitter();\n        this.onDidTitleChange = this._onDidTitleChange.event;\n        this._onDidActiveGroupChange = new Emitter();\n        this.onDidActiveGroupChange = this._onDidActiveGroupChange.event;\n        this._onDidGroupChange = new Emitter();\n        this.onDidGroupChange = this._onDidGroupChange.event;\n        this.disposable = new MutableDisposable();\n        this.initialize(panel);\n        this._group = group;\n        this.addDisposables(this.disposable, this._onDidTitleChange, this._onDidGroupChange, this._onDidActiveGroupChange);\n    }\n    setTitle(title) {\n        this.panel.update({ params: { title } });\n    }\n    close() {\n        this.group.model.closePanel(this.panel);\n    }\n}\n","import { DockviewPanelApiImpl, } from '../api/dockviewPanelApi';\nimport { CompositeDisposable } from '../lifecycle';\nexport class DockviewPanel extends CompositeDisposable {\n    get params() {\n        return this._params;\n    }\n    get title() {\n        return this._title;\n    }\n    get group() {\n        return this._group;\n    }\n    constructor(id, accessor, containerApi, group, view) {\n        super();\n        this.id = id;\n        this.containerApi = containerApi;\n        this.view = view;\n        this._title = '';\n        this._group = group;\n        this.api = new DockviewPanelApiImpl(this, this._group);\n        this.addDisposables(this.api.onActiveChange(() => {\n            accessor.setActivePanel(this);\n        }), this.api.onDidSizeChange((event) => {\n            // forward the resize event to the group since if you want to resize a panel\n            // you are actually just resizing the panels parent which is the group\n            this.group.api.setSize(event);\n        }));\n    }\n    init(params) {\n        var _a;\n        this._params = params.params;\n        this.setTitle(params.title);\n        (_a = this.view) === null || _a === void 0 ? void 0 : _a.init(Object.assign(Object.assign({}, params), { api: this.api, containerApi: this.containerApi }));\n    }\n    focus() {\n        this.api._onFocusEvent.fire();\n    }\n    toJSON() {\n        return {\n            id: this.id,\n            contentComponent: this.view.contentComponent,\n            tabComponent: this.view.tabComponent,\n            params: Object.keys(this._params || {}).length > 0\n                ? this._params\n                : undefined,\n            title: this.title,\n        };\n    }\n    setTitle(title) {\n        var _a, _b;\n        const didTitleChange = title !== ((_a = this._params) === null || _a === void 0 ? void 0 : _a.title);\n        if (didTitleChange) {\n            this._title = title;\n            (_b = this.view) === null || _b === void 0 ? void 0 : _b.update({\n                params: {\n                    params: this._params,\n                    title: this.title,\n                },\n            });\n            this.api._onDidTitleChange.fire({ title });\n        }\n    }\n    update(event) {\n        var _a;\n        const params = event.params;\n        this._params = Object.assign(Object.assign({}, (this._params || {})), event.params.params);\n        if (params.title !== this.title) {\n            this._title = params.title;\n            this.api._onDidTitleChange.fire({ title: this.title });\n        }\n        (_a = this.view) === null || _a === void 0 ? void 0 : _a.update({\n            params: {\n                params: this._params,\n                title: this.title,\n            },\n        });\n    }\n    updateParentGroup(group, isGroupActive) {\n        this._group = group;\n        this.api.group = group;\n        const isPanelVisible = this._group.model.isPanelActive(this);\n        this.api._onDidActiveChange.fire({\n            isActive: isGroupActive && isPanelVisible,\n        });\n        this.api._onDidVisibilityChange.fire({\n            isVisible: isPanelVisible,\n        });\n        this.view.updateParentGroup(this._group, this._group.model.isPanelActive(this));\n    }\n    layout(width, height) {\n        var _a;\n        // the obtain the correct dimensions of the content panel we must deduct the tab height\n        this.api._onDidDimensionChange.fire({\n            width,\n            height: height - (this.group.model.header.height || 0),\n        });\n        (_a = this.view) === null || _a === void 0 ? void 0 : _a.layout(width, height);\n    }\n    dispose() {\n        var _a;\n        this.api.dispose();\n        (_a = this.view) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","const createSvgElementFromPath = (params) => {\n    const svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n    svg.setAttributeNS(null, 'height', params.height);\n    svg.setAttributeNS(null, 'width', params.width);\n    svg.setAttributeNS(null, 'viewBox', params.viewbox);\n    svg.setAttributeNS(null, 'aria-hidden', 'false');\n    svg.setAttributeNS(null, 'focusable', 'false');\n    svg.classList.add('dockview-svg');\n    const path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n    path.setAttributeNS(null, 'd', params.path);\n    svg.appendChild(path);\n    return svg;\n};\nexport const createCloseButton = () => createSvgElementFromPath({\n    width: '11',\n    height: '11',\n    viewbox: '0 0 28 28',\n    path: 'M2.1 27.3L0 25.2L11.55 13.65L0 2.1L2.1 0L13.65 11.55L25.2 0L27.3 2.1L15.75 13.65L27.3 25.2L25.2 27.3L13.65 15.75L2.1 27.3Z',\n});\nexport const createExpandMoreButton = () => createSvgElementFromPath({\n    width: '11',\n    height: '11',\n    viewbox: '0 0 24 15',\n    path: 'M12 14.15L0 2.15L2.15 0L12 9.9L21.85 0.0499992L24 2.2L12 14.15Z',\n});\nexport const createChevronRightButton = () => createSvgElementFromPath({\n    width: '11',\n    height: '11',\n    viewbox: '0 0 15 25',\n    path: 'M2.15 24.1L0 21.95L9.9 12.05L0 2.15L2.15 0L14.2 12.05L2.15 24.1Z',\n});\n","import { CompositeDisposable } from '../../../lifecycle';\nimport { addDisposableListener } from '../../../events';\nimport { createCloseButton } from '../../../svg';\nexport class DefaultTab extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor() {\n        super();\n        //\n        this.params = {};\n        this._element = document.createElement('div');\n        this._element.className = 'default-tab';\n        //\n        this._content = document.createElement('div');\n        this._content.className = 'tab-content';\n        //\n        this._actionContainer = document.createElement('div');\n        this._actionContainer.className = 'action-container';\n        //\n        this._list = document.createElement('ul');\n        this._list.className = 'tab-list';\n        //\n        this.action = document.createElement('div');\n        this.action.className = 'tab-action';\n        this.action.appendChild(createCloseButton());\n        //\n        this._element.appendChild(this._content);\n        this._element.appendChild(this._actionContainer);\n        this._actionContainer.appendChild(this._list);\n        this._list.appendChild(this.action);\n        //\n        this.addDisposables(addDisposableListener(this._actionContainer, 'mousedown', (ev) => {\n            ev.preventDefault();\n        }));\n        this.render();\n    }\n    update(event) {\n        this.params = Object.assign(Object.assign({}, this.params), event.params);\n        this.render();\n    }\n    focus() {\n        //noop\n    }\n    init(params) {\n        this.params = params;\n        this._content.textContent = params.title;\n        addDisposableListener(this.action, 'click', (ev) => {\n            ev.preventDefault(); //\n            this.params.api.close();\n        });\n    }\n    onGroupChange(_group) {\n        this.render();\n    }\n    onPanelVisibleChange(_isPanelVisible) {\n        this.render();\n    }\n    layout(_width, _height) {\n        // noop\n    }\n    render() {\n        if (this._content.textContent !== this.params.title) {\n            this._content.textContent = this.params.title;\n        }\n    }\n}\n","export function createComponent(id, componentName, components = {}, frameworkComponents = {}, createFrameworkComponent, fallback) {\n    const Component = typeof componentName === 'string'\n        ? components[componentName]\n        : undefined;\n    const FrameworkComponent = typeof componentName === 'string'\n        ? frameworkComponents[componentName]\n        : undefined;\n    if (Component && FrameworkComponent) {\n        throw new Error(`Cannot create '${id}'. component '${componentName}' registered as both a component and frameworkComponent`);\n    }\n    if (FrameworkComponent) {\n        if (!createFrameworkComponent) {\n            throw new Error(`Cannot create '${id}' for framework component '${componentName}'. you must register a frameworkPanelWrapper to use framework components`);\n        }\n        return createFrameworkComponent.createComponent(id, componentName, FrameworkComponent);\n    }\n    if (!Component) {\n        if (fallback) {\n            return fallback();\n        }\n        throw new Error(`Cannot create '${id}', no component '${componentName}' provided`);\n    }\n    return new Component(id, componentName);\n}\n","import { DefaultTab } from './components/tab/defaultTab';\nimport { createComponent } from '../panel/componentFactory';\nexport class DockviewPanelModel {\n    get content() {\n        return this._content;\n    }\n    get tab() {\n        return this._tab;\n    }\n    constructor(accessor, id, contentComponent, tabComponent) {\n        var _a;\n        this.accessor = accessor;\n        this.id = id;\n        this.contentComponent = contentComponent;\n        this.tabComponent = tabComponent;\n        this._group = null;\n        this._isPanelVisible = null;\n        this._content = this.createContentComponent(this.id, contentComponent);\n        this._tab =\n            (_a = this.createTabComponent(this.id, tabComponent)) !== null && _a !== void 0 ? _a : new DefaultTab();\n    }\n    init(params) {\n        this.content.init(Object.assign(Object.assign({}, params), { tab: this.tab }));\n        this.tab.init(params);\n    }\n    updateParentGroup(group, isPanelVisible) {\n        if (group !== this._group) {\n            this._group = group;\n            if (this._content.onGroupChange) {\n                this._content.onGroupChange(group);\n            }\n            if (this._tab.onGroupChange) {\n                this._tab.onGroupChange(group);\n            }\n        }\n        if (isPanelVisible !== this._isPanelVisible) {\n            this._isPanelVisible = isPanelVisible;\n            if (this._content.onPanelVisibleChange) {\n                this._content.onPanelVisibleChange(isPanelVisible);\n            }\n            if (this._tab.onPanelVisibleChange) {\n                this._tab.onPanelVisibleChange(isPanelVisible);\n            }\n        }\n    }\n    layout(width, height) {\n        var _a, _b;\n        (_b = (_a = this.content).layout) === null || _b === void 0 ? void 0 : _b.call(_a, width, height);\n    }\n    update(event) {\n        var _a, _b, _c, _d;\n        (_b = (_a = this.content).update) === null || _b === void 0 ? void 0 : _b.call(_a, event);\n        (_d = (_c = this.tab).update) === null || _d === void 0 ? void 0 : _d.call(_c, event);\n    }\n    dispose() {\n        var _a, _b, _c, _d;\n        (_b = (_a = this.content).dispose) === null || _b === void 0 ? void 0 : _b.call(_a);\n        (_d = (_c = this.tab).dispose) === null || _d === void 0 ? void 0 : _d.call(_c);\n    }\n    createContentComponent(id, componentName) {\n        var _a;\n        return createComponent(id, componentName, this.accessor.options.components || {}, this.accessor.options.frameworkComponents, (_a = this.accessor.options.frameworkComponentFactory) === null || _a === void 0 ? void 0 : _a.content);\n    }\n    createTabComponent(id, componentName) {\n        var _a;\n        return createComponent(id, componentName, this.accessor.options.tabComponents || {}, this.accessor.options.frameworkTabComponents, (_a = this.accessor.options.frameworkComponentFactory) === null || _a === void 0 ? void 0 : _a.tab, () => new DefaultTab());\n    }\n}\n","import { DockviewPanel } from './dockviewPanel';\nimport { createComponent } from '../panel/componentFactory';\nimport { DefaultTab } from './components/tab/defaultTab';\nimport { DockviewPanelModel } from './dockviewPanelModel';\nimport { DockviewApi } from '../api/component.api';\nexport class DefaultDockviewDeserialzier {\n    constructor(layout) {\n        this.layout = layout;\n    }\n    fromJSON(panelData, group) {\n        var _a, _b, _c;\n        const panelId = panelData.id;\n        const params = panelData.params;\n        const title = panelData.title;\n        const viewData = panelData.view;\n        const contentComponent = viewData\n            ? viewData.content.id\n            : panelData.contentComponent || 'unknown';\n        const tabComponent = viewData\n            ? (_a = viewData.tab) === null || _a === void 0 ? void 0 : _a.id\n            : panelData.tabComponent;\n        let tab;\n        if (tabComponent) {\n            tab = createComponent(panelId, tabComponent, this.layout.options.tabComponents, this.layout.options.frameworkTabComponents, (_b = this.layout.options.frameworkComponentFactory) === null || _b === void 0 ? void 0 : _b.tab, () => new DefaultTab());\n        }\n        else if (this.layout.options.defaultTabComponent) {\n            tab = createComponent(panelId, this.layout.options.defaultTabComponent, this.layout.options.tabComponents, this.layout.options.frameworkTabComponents, (_c = this.layout.options.frameworkComponentFactory) === null || _c === void 0 ? void 0 : _c.tab, () => new DefaultTab());\n        }\n        else {\n            tab = new DefaultTab();\n        }\n        const view = new DockviewPanelModel(this.layout, panelId, contentComponent, tabComponent);\n        const panel = new DockviewPanel(panelId, this.layout, new DockviewApi(this.layout), group, view);\n        panel.init({\n            title: title || panelId,\n            params: params || {},\n        });\n        return panel;\n    }\n}\n","import { addDisposableListener } from '../../../events';\nimport { toggleClass } from '../../../dom';\nimport { CompositeDisposable } from '../../../lifecycle';\nimport { createCloseButton } from '../../../svg';\nexport class Watermark extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor() {\n        super();\n        this._element = document.createElement('div');\n        this._element.className = 'watermark';\n        const title = document.createElement('div');\n        title.className = 'watermark-title';\n        const emptySpace = document.createElement('span');\n        emptySpace.style.flexGrow = '1';\n        const content = document.createElement('div');\n        content.className = 'watermark-content';\n        this._element.appendChild(title);\n        this._element.appendChild(content);\n        const actionsContainer = document.createElement('div');\n        actionsContainer.className = 'actions-container';\n        const closeAnchor = document.createElement('div');\n        closeAnchor.className = 'close-action';\n        closeAnchor.appendChild(createCloseButton());\n        actionsContainer.appendChild(closeAnchor);\n        title.appendChild(emptySpace);\n        title.appendChild(actionsContainer);\n        this.addDisposables(addDisposableListener(closeAnchor, 'click', (ev) => {\n            var _a;\n            ev.preventDefault();\n            if (this.group) {\n                (_a = this.params) === null || _a === void 0 ? void 0 : _a.containerApi.removeGroup(this.group);\n            }\n        }));\n    }\n    update(_event) {\n        // noop\n    }\n    focus() {\n        // noop\n    }\n    layout(_width, _height) {\n        // noop\n    }\n    init(_params) {\n        this.render();\n    }\n    updateParentGroup(group, _visible) {\n        this.group = group;\n        this.render();\n    }\n    dispose() {\n        super.dispose();\n    }\n    render() {\n        const isOneGroup = !!(this.params && this.params.containerApi.size <= 1);\n        toggleClass(this.element, 'has-actions', isOneGroup);\n    }\n}\n","import { getRelativeLocation, getGridLocation, } from '../gridview/gridview';\nimport { directionToPosition, Droptarget } from '../dnd/droptarget';\nimport { tail, sequenceEquals } from '../array';\nimport { DockviewPanel } from './dockviewPanel';\nimport { CompositeDisposable } from '../lifecycle';\nimport { Event, Emitter } from '../events';\nimport { Watermark } from './components/watermark/watermark';\nimport { DockviewDropTargets, } from './types';\nimport { sequentialNumberGenerator } from '../math';\nimport { DefaultDockviewDeserialzier } from './deserializer';\nimport { createComponent } from '../panel/componentFactory';\nimport { isGroupOptionsWithGroup, isGroupOptionsWithPanel, isPanelOptionsWithGroup, isPanelOptionsWithPanel, } from './options';\nimport { BaseGrid, toTarget, } from '../gridview/baseComponentGridview';\nimport { DockviewApi } from '../api/component.api';\nimport { Orientation, Sizing } from '../splitview/splitview';\nimport { DockviewGroupPanel } from './dockviewGroupPanel';\nimport { DockviewPanelModel } from './dockviewPanelModel';\nimport { getPanelData } from '../dnd/dataTransfer';\nexport class DockviewComponent extends BaseGrid {\n    get orientation() {\n        return this.gridview.orientation;\n    }\n    get totalPanels() {\n        return this.panels.length;\n    }\n    get panels() {\n        return this.groups.flatMap((group) => group.panels);\n    }\n    get options() {\n        return this._options;\n    }\n    get activePanel() {\n        const activeGroup = this.activeGroup;\n        if (!activeGroup) {\n            return undefined;\n        }\n        return activeGroup.activePanel;\n    }\n    set tabHeight(height) {\n        this.options.tabHeight = height;\n        this._groups.forEach((value) => {\n            value.value.model.header.height = height;\n        });\n    }\n    get tabHeight() {\n        return this.options.tabHeight;\n    }\n    constructor(element, options) {\n        super(element, {\n            proportionalLayout: true,\n            orientation: options.orientation || Orientation.HORIZONTAL,\n            styles: options.styles,\n        });\n        this.nextGroupId = sequentialNumberGenerator();\n        this._deserializer = new DefaultDockviewDeserialzier(this);\n        this.watermark = null;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onDidRemovePanel = new Emitter();\n        this.onDidRemovePanel = this._onDidRemovePanel.event;\n        this._onDidAddPanel = new Emitter();\n        this.onDidAddPanel = this._onDidAddPanel.event;\n        this._onDidLayoutFromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutFromJSON.event;\n        this._onDidActivePanelChange = new Emitter();\n        this.onDidActivePanelChange = this._onDidActivePanelChange.event;\n        this.element.classList.add('dv-dockview');\n        this.addDisposables(this._onDidDrop, Event.any(this.onDidAddGroup, this.onDidRemoveGroup)(() => {\n            this.updateWatermark();\n        }), Event.any(this.onDidAddPanel, this.onDidRemovePanel, this.onDidActivePanelChange)(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }));\n        this._options = options;\n        if (!this.options.components) {\n            this.options.components = {};\n        }\n        if (!this.options.frameworkComponents) {\n            this.options.frameworkComponents = {};\n        }\n        if (!this.options.frameworkTabComponents) {\n            this.options.frameworkTabComponents = {};\n        }\n        if (!this.options.tabComponents) {\n            this.options.tabComponents = {};\n        }\n        if (!this.options.watermarkComponent &&\n            !this.options.watermarkFrameworkComponent) {\n            this.options.watermarkComponent = Watermark;\n        }\n        const dropTarget = new Droptarget(this.element, {\n            canDisplayOverlay: (event, position) => {\n                const data = getPanelData();\n                if (data) {\n                    if (data.viewId !== this.id) {\n                        return false;\n                    }\n                    return true;\n                }\n                if (this.options.showDndOverlay) {\n                    return this.options.showDndOverlay({\n                        nativeEvent: event,\n                        position: position,\n                        target: DockviewDropTargets.Edge,\n                        getData: getPanelData,\n                    });\n                }\n                return false;\n            },\n            acceptedTargetZones: ['top', 'bottom', 'left', 'right'],\n            overlayModel: {\n                activationSize: { type: 'pixels', value: 10 },\n                size: { type: 'pixels', value: 20 },\n            },\n        });\n        this.addDisposables(dropTarget, dropTarget.onDrop((event) => {\n            const data = getPanelData();\n            if (data) {\n                this.moveGroupOrPanel(this.orthogonalize(event.position), data.groupId, data.panelId || undefined, 'center');\n            }\n            else {\n                this._onDidDrop.fire(Object.assign(Object.assign({}, event), { api: this._api, group: null, getData: getPanelData }));\n            }\n        }));\n        this._api = new DockviewApi(this);\n        this.updateWatermark();\n    }\n    orthogonalize(position) {\n        switch (position) {\n            case 'top':\n            case 'bottom':\n                if (this.gridview.orientation === Orientation.HORIZONTAL) {\n                    // we need to add to a vertical splitview but the current root is a horizontal splitview.\n                    // insert a vertical splitview at the root level and add the existing view as a child\n                    this.gridview.insertOrthogonalSplitviewAtRoot();\n                }\n                break;\n            case 'left':\n            case 'right':\n                if (this.gridview.orientation === Orientation.VERTICAL) {\n                    // we need to add to a horizontal splitview but the current root is a vertical splitview.\n                    // insert a horiziontal splitview at the root level and add the existing view as a child\n                    this.gridview.insertOrthogonalSplitviewAtRoot();\n                }\n                break;\n            default:\n                break;\n        }\n        switch (position) {\n            case 'top':\n            case 'left':\n                return this.createGroupAtLocation([0]); // insert into first position\n            case 'bottom':\n            case 'right':\n                return this.createGroupAtLocation([this.gridview.length]); // insert into last position\n            default:\n                throw new Error(`unsupported position ${position}`);\n        }\n    }\n    updateOptions(options) {\n        const hasOrientationChanged = typeof options.orientation === 'string' &&\n            this.gridview.orientation !== options.orientation;\n        this._options = Object.assign(Object.assign({}, this.options), options);\n        if (hasOrientationChanged) {\n            this.gridview.orientation = options.orientation;\n        }\n        this.layout(this.gridview.width, this.gridview.height, true);\n    }\n    focus() {\n        var _a;\n        (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    getGroupPanel(id) {\n        return this.panels.find((panel) => panel.id === id);\n    }\n    setActivePanel(panel) {\n        this.doSetGroupActive(panel.group);\n        panel.group.model.openPanel(panel);\n    }\n    moveToNext(options = {}) {\n        var _a;\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        if (options.includePanel && options.group) {\n            if (options.group.activePanel !==\n                options.group.panels[options.group.panels.length - 1]) {\n                options.group.model.moveToNext({ suppressRoll: true });\n                return;\n            }\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.next(location)) === null || _a === void 0 ? void 0 : _a.view;\n        this.doSetGroupActive(next);\n    }\n    moveToPrevious(options = {}) {\n        var _a;\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        if (options.includePanel && options.group) {\n            if (options.group.activePanel !== options.group.panels[0]) {\n                options.group.model.moveToPrevious({ suppressRoll: true });\n                return;\n            }\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.previous(location)) === null || _a === void 0 ? void 0 : _a.view;\n        if (next) {\n            this.doSetGroupActive(next);\n        }\n    }\n    /**\n     * Serialize the current state of the layout\n     *\n     * @returns A JSON respresentation of the layout\n     */\n    toJSON() {\n        var _a;\n        const data = this.gridview.serialize();\n        const panels = this.panels.reduce((collection, panel) => {\n            collection[panel.id] = panel.toJSON();\n            return collection;\n        }, {});\n        return {\n            grid: data,\n            panels,\n            activeGroup: (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.id,\n            options: { tabHeight: this.tabHeight },\n        };\n    }\n    fromJSON(data) {\n        this.clear();\n        const { grid, panels, options, activeGroup } = data;\n        if (typeof (options === null || options === void 0 ? void 0 : options.tabHeight) === 'number') {\n            this.tabHeight = options.tabHeight;\n        }\n        if (grid.root.type !== 'branch' || !Array.isArray(grid.root.data)) {\n            throw new Error('root must be of type branch');\n        }\n        this.gridview.deserialize(grid, {\n            fromJSON: (node) => {\n                const { id, locked, hideHeader, views, activeView } = node.data;\n                const group = this.createGroup({\n                    id,\n                    locked: !!locked,\n                    hideHeader: !!hideHeader,\n                });\n                this._onDidAddGroup.fire(group);\n                for (const child of views) {\n                    const panel = this._deserializer.fromJSON(panels[child], group);\n                    const isActive = typeof activeView === 'string' &&\n                        activeView === panel.id;\n                    group.model.openPanel(panel, {\n                        skipSetPanelActive: !isActive,\n                        skipSetGroupActive: true,\n                    });\n                }\n                if (!group.activePanel && group.panels.length > 0) {\n                    group.model.openPanel(group.panels[group.panels.length - 1], {\n                        skipSetGroupActive: true,\n                    });\n                }\n                return group;\n            },\n        });\n        if (typeof activeGroup === 'string') {\n            const panel = this.getPanel(activeGroup);\n            if (panel) {\n                this.doSetGroupActive(panel);\n            }\n        }\n        this.gridview.layout(this.width, this.height);\n        this._onDidLayoutFromJSON.fire();\n    }\n    clear() {\n        const groups = Array.from(this._groups.values()).map((_) => _.value);\n        const hasActiveGroup = !!this.activeGroup;\n        const hasActivePanel = !!this.activePanel;\n        for (const group of groups) {\n            // remove the group will automatically remove the panels\n            this.removeGroup(group, true);\n        }\n        if (hasActiveGroup) {\n            this.doSetGroupActive(undefined);\n        }\n        if (hasActivePanel) {\n            this._onDidActivePanelChange.fire(undefined);\n        }\n        this.gridview.clear();\n    }\n    closeAllGroups() {\n        for (const entry of this._groups.entries()) {\n            const [_, group] = entry;\n            group.value.model.closeAllPanels();\n        }\n    }\n    addPanel(options) {\n        var _a, _b;\n        if (this.panels.find((_) => _.id === options.id)) {\n            throw new Error(`panel with id ${options.id} already exists`);\n        }\n        let referenceGroup;\n        if (options.position) {\n            if (isPanelOptionsWithPanel(options.position)) {\n                const referencePanel = typeof options.position.referencePanel === 'string'\n                    ? this.getGroupPanel(options.position.referencePanel)\n                    : options.position.referencePanel;\n                if (!referencePanel) {\n                    throw new Error(`referencePanel ${options.position.referencePanel} does not exist`);\n                }\n                referenceGroup = this.findGroup(referencePanel);\n            }\n            else if (isPanelOptionsWithGroup(options.position)) {\n                referenceGroup =\n                    typeof options.position.referenceGroup === 'string'\n                        ? (_a = this._groups.get(options.position.referenceGroup)) === null || _a === void 0 ? void 0 : _a.value\n                        : options.position.referenceGroup;\n                if (!referenceGroup) {\n                    throw new Error(`referencePanel ${options.position.referenceGroup} does not exist`);\n                }\n            }\n            else {\n                const group = this.orthogonalize(directionToPosition(options.position.direction));\n                const panel = this.createPanel(options, group);\n                group.model.openPanel(panel);\n                return panel;\n            }\n        }\n        else {\n            referenceGroup = this.activeGroup;\n        }\n        let panel;\n        if (referenceGroup) {\n            const target = toTarget(((_b = options.position) === null || _b === void 0 ? void 0 : _b.direction) || 'within');\n            if (target === 'center') {\n                panel = this.createPanel(options, referenceGroup);\n                referenceGroup.model.openPanel(panel);\n            }\n            else {\n                const location = getGridLocation(referenceGroup.element);\n                const relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n                const group = this.createGroupAtLocation(relativeLocation);\n                panel = this.createPanel(options, group);\n                group.model.openPanel(panel);\n            }\n        }\n        else {\n            const group = this.createGroupAtLocation();\n            panel = this.createPanel(options, group);\n            group.model.openPanel(panel);\n        }\n        return panel;\n    }\n    removePanel(panel, options = {\n        removeEmptyGroup: true,\n        skipDispose: false,\n    }) {\n        const group = panel.group;\n        if (!group) {\n            throw new Error(`cannot remove panel ${panel.id}. it's missing a group.`);\n        }\n        group.model.removePanel(panel);\n        panel.dispose();\n        if (group.size === 0 && options.removeEmptyGroup) {\n            this.removeGroup(group);\n        }\n    }\n    createWatermarkComponent() {\n        var _a;\n        return createComponent('watermark-id', 'watermark-name', this.options.watermarkComponent\n            ? { 'watermark-name': this.options.watermarkComponent }\n            : {}, this.options.watermarkFrameworkComponent\n            ? { 'watermark-name': this.options.watermarkFrameworkComponent }\n            : {}, (_a = this.options.frameworkComponentFactory) === null || _a === void 0 ? void 0 : _a.watermark);\n    }\n    updateWatermark() {\n        var _a, _b;\n        if (this.groups.length === 0) {\n            if (!this.watermark) {\n                this.watermark = this.createWatermarkComponent();\n                this.watermark.init({\n                    containerApi: new DockviewApi(this),\n                });\n                const watermarkContainer = document.createElement('div');\n                watermarkContainer.className = 'dv-watermark-container';\n                watermarkContainer.appendChild(this.watermark.element);\n                this.element.appendChild(watermarkContainer);\n            }\n        }\n        else if (this.watermark) {\n            this.watermark.element.parentElement.remove();\n            (_b = (_a = this.watermark).dispose) === null || _b === void 0 ? void 0 : _b.call(_a);\n            this.watermark = null;\n        }\n    }\n    addGroup(options) {\n        var _a;\n        const group = this.createGroup();\n        if (options) {\n            let referenceGroup;\n            if (isGroupOptionsWithPanel(options)) {\n                const referencePanel = typeof options.referencePanel === 'string'\n                    ? this.panels.find((panel) => panel.id === options.referencePanel)\n                    : options.referencePanel;\n                if (!referencePanel) {\n                    throw new Error(`reference panel ${options.referencePanel} does not exist`);\n                }\n                referenceGroup = this.findGroup(referencePanel);\n                if (!referenceGroup) {\n                    throw new Error(`reference group for reference panel ${options.referencePanel} does not exist`);\n                }\n            }\n            else if (isGroupOptionsWithGroup(options)) {\n                referenceGroup =\n                    typeof options.referenceGroup === 'string'\n                        ? (_a = this._groups.get(options.referenceGroup)) === null || _a === void 0 ? void 0 : _a.value\n                        : options.referenceGroup;\n                if (!referenceGroup) {\n                    throw new Error(`reference group ${options.referenceGroup} does not exist`);\n                }\n            }\n            else {\n                const group = this.orthogonalize(directionToPosition(options.direction));\n                return group;\n            }\n            const target = toTarget(options.direction || 'within');\n            const location = getGridLocation(referenceGroup.element);\n            const relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n            this.doAddGroup(group, relativeLocation);\n            return group;\n        }\n        else {\n            this.doAddGroup(group);\n            return group;\n        }\n    }\n    removeGroup(group, skipActive = false) {\n        const panels = [...group.panels]; // reassign since group panels will mutate\n        for (const panel of panels) {\n            this.removePanel(panel, {\n                removeEmptyGroup: false,\n                skipDispose: false,\n            });\n        }\n        super.doRemoveGroup(group, { skipActive });\n    }\n    moveGroupOrPanel(referenceGroup, groupId, itemId, target, index) {\n        var _a;\n        const sourceGroup = groupId\n            ? (_a = this._groups.get(groupId)) === null || _a === void 0 ? void 0 : _a.value\n            : undefined;\n        if (itemId === undefined) {\n            if (sourceGroup) {\n                this.moveGroup(sourceGroup, referenceGroup, target);\n            }\n            return;\n        }\n        if (!target || target === 'center') {\n            const groupItem = (sourceGroup === null || sourceGroup === void 0 ? void 0 : sourceGroup.model.removePanel(itemId)) ||\n                this.panels.find((panel) => panel.id === itemId);\n            if (!groupItem) {\n                throw new Error(`No panel with id ${itemId}`);\n            }\n            if ((sourceGroup === null || sourceGroup === void 0 ? void 0 : sourceGroup.model.size) === 0) {\n                this.doRemoveGroup(sourceGroup);\n            }\n            referenceGroup.model.openPanel(groupItem, { index });\n        }\n        else {\n            const referenceLocation = getGridLocation(referenceGroup.element);\n            const targetLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, target);\n            if (sourceGroup && sourceGroup.size < 2) {\n                const [targetParentLocation, to] = tail(targetLocation);\n                const sourceLocation = getGridLocation(sourceGroup.element);\n                const [sourceParentLocation, from] = tail(sourceLocation);\n                if (sequenceEquals(sourceParentLocation, targetParentLocation)) {\n                    // special case when 'swapping' two views within same grid location\n                    // if a group has one tab - we are essentially moving the 'group'\n                    // which is equivalent to swapping two views in this case\n                    this.gridview.moveView(sourceParentLocation, from, to);\n                }\n                else {\n                    // source group will become empty so delete the group\n                    const targetGroup = this.doRemoveGroup(sourceGroup, {\n                        skipActive: true,\n                        skipDispose: true,\n                    });\n                    // after deleting the group we need to re-evaulate the ref location\n                    const updatedReferenceLocation = getGridLocation(referenceGroup.element);\n                    const location = getRelativeLocation(this.gridview.orientation, updatedReferenceLocation, target);\n                    this.doAddGroup(targetGroup, location);\n                }\n            }\n            else {\n                const groupItem = (sourceGroup === null || sourceGroup === void 0 ? void 0 : sourceGroup.model.removePanel(itemId)) ||\n                    this.panels.find((panel) => panel.id === itemId);\n                if (!groupItem) {\n                    throw new Error(`No panel with id ${itemId}`);\n                }\n                const dropLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, target);\n                const group = this.createGroupAtLocation(dropLocation);\n                group.model.openPanel(groupItem);\n            }\n        }\n    }\n    moveGroup(sourceGroup, referenceGroup, target) {\n        if (sourceGroup) {\n            if (!target || target === 'center') {\n                const activePanel = sourceGroup.activePanel;\n                const panels = [...sourceGroup.panels].map((p) => sourceGroup.model.removePanel(p.id));\n                if ((sourceGroup === null || sourceGroup === void 0 ? void 0 : sourceGroup.model.size) === 0) {\n                    this.doRemoveGroup(sourceGroup);\n                }\n                for (const panel of panels) {\n                    referenceGroup.model.openPanel(panel, {\n                        skipSetPanelActive: panel !== activePanel,\n                    });\n                }\n            }\n            else {\n                this.gridview.removeView(getGridLocation(sourceGroup.element));\n                const referenceLocation = getGridLocation(referenceGroup.element);\n                const dropLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, target);\n                this.gridview.addView(sourceGroup, Sizing.Distribute, dropLocation);\n            }\n        }\n    }\n    doSetGroupActive(group, skipFocus) {\n        var _a, _b;\n        const isGroupAlreadyFocused = this._activeGroup === group;\n        super.doSetGroupActive(group, skipFocus);\n        if (!isGroupAlreadyFocused && ((_a = this._activeGroup) === null || _a === void 0 ? void 0 : _a.activePanel)) {\n            this._onDidActivePanelChange.fire((_b = this._activeGroup) === null || _b === void 0 ? void 0 : _b.activePanel);\n        }\n    }\n    createGroup(options) {\n        if (!options) {\n            options = { tabHeight: this.tabHeight };\n        }\n        if (typeof options.tabHeight !== 'number') {\n            options.tabHeight = this.tabHeight;\n        }\n        let id = options === null || options === void 0 ? void 0 : options.id;\n        if (id && this._groups.has(options.id)) {\n            console.warn(`Duplicate group id ${options === null || options === void 0 ? void 0 : options.id}. reassigning group id to avoid errors`);\n            id = undefined;\n        }\n        if (!id) {\n            id = this.nextGroupId.next();\n            while (this._groups.has(id)) {\n                id = this.nextGroupId.next();\n            }\n        }\n        const view = new DockviewGroupPanel(this, id, options);\n        view.init({ params: {}, accessor: null }); // required to initialized .part and allow for correct disposal of group\n        if (!this._groups.has(view.id)) {\n            const disposable = new CompositeDisposable(view.model.onMove((event) => {\n                const { groupId, itemId, target, index } = event;\n                this.moveGroupOrPanel(view, groupId, itemId, target, index);\n            }), view.model.onDidDrop((event) => {\n                this._onDidDrop.fire(Object.assign(Object.assign({}, event), { api: this._api, group: view }));\n            }), view.model.onDidAddPanel((event) => {\n                this._onDidAddPanel.fire(event.panel);\n            }), view.model.onDidRemovePanel((event) => {\n                this._onDidRemovePanel.fire(event.panel);\n            }), view.model.onDidActivePanelChange((event) => {\n                this._onDidActivePanelChange.fire(event.panel);\n            }));\n            this._groups.set(view.id, { value: view, disposable });\n        }\n        // TODO: must be called after the above listeners have been setup,\n        // not an ideal pattern\n        view.initialize();\n        if (typeof this.options.tabHeight === 'number') {\n            view.model.header.height = this.options.tabHeight;\n        }\n        return view;\n    }\n    createPanel(options, group) {\n        const contentComponent = options.component;\n        const tabComponent = options.tabComponent || this.options.defaultTabComponent;\n        const view = new DockviewPanelModel(this, options.id, contentComponent, tabComponent);\n        const panel = new DockviewPanel(options.id, this, this._api, group, view);\n        panel.init({\n            title: options.title || options.id,\n            params: (options === null || options === void 0 ? void 0 : options.params) || {},\n        });\n        return panel;\n    }\n    createGroupAtLocation(location = [0]) {\n        const group = this.createGroup();\n        this.doAddGroup(group, location);\n        return group;\n    }\n    findGroup(panel) {\n        var _a;\n        return (_a = Array.from(this._groups.values()).find((group) => group.value.model.containsPanel(panel))) === null || _a === void 0 ? void 0 : _a.value;\n    }\n    dispose() {\n        super.dispose();\n        this._onDidActivePanelChange.dispose();\n        this._onDidAddPanel.dispose();\n        this._onDidRemovePanel.dispose();\n        this._onDidLayoutFromJSON.dispose();\n    }\n}\n","export function isPanelOptionsWithPanel(data) {\n    if (data.referencePanel) {\n        return true;\n    }\n    return false;\n}\nexport function isPanelOptionsWithGroup(data) {\n    if (data.referenceGroup) {\n        return true;\n    }\n    return false;\n}\nexport function isGroupOptionsWithPanel(data) {\n    if (data.referencePanel) {\n        return true;\n    }\n    return false;\n}\nexport function isGroupOptionsWithGroup(data) {\n    if (data.referenceGroup) {\n        return true;\n    }\n    return false;\n}\n","import { getRelativeLocation, getGridLocation, } from './gridview';\nimport { tail, sequenceEquals } from '../array';\nimport { CompositeDisposable } from '../lifecycle';\nimport { BaseGrid, toTarget, } from './baseComponentGridview';\nimport { createComponent } from '../panel/componentFactory';\nimport { Emitter } from '../events';\nexport class GridviewComponent extends BaseGrid {\n    get orientation() {\n        return this.gridview.orientation;\n    }\n    set orientation(value) {\n        this.gridview.orientation = value;\n    }\n    get options() {\n        return this._options;\n    }\n    get deserializer() {\n        return this._deserializer;\n    }\n    set deserializer(value) {\n        this._deserializer = value;\n    }\n    constructor(element, options) {\n        super(element, {\n            proportionalLayout: options.proportionalLayout,\n            orientation: options.orientation,\n            styles: options.styles,\n        });\n        this._onDidLayoutfromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutfromJSON.event;\n        this._options = options;\n        if (!this.options.components) {\n            this.options.components = {};\n        }\n        if (!this.options.frameworkComponents) {\n            this.options.frameworkComponents = {};\n        }\n    }\n    updateOptions(options) {\n        const hasOrientationChanged = typeof options.orientation === 'string' &&\n            this.gridview.orientation !== options.orientation;\n        this._options = Object.assign(Object.assign({}, this.options), options);\n        if (hasOrientationChanged) {\n            this.gridview.orientation = options.orientation;\n        }\n        this.layout(this.gridview.width, this.gridview.height, true);\n    }\n    removePanel(panel) {\n        this.removeGroup(panel);\n    }\n    /**\n     * Serialize the current state of the layout\n     *\n     * @returns A JSON respresentation of the layout\n     */\n    toJSON() {\n        var _a;\n        const data = this.gridview.serialize();\n        return {\n            grid: data,\n            activePanel: (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.id,\n        };\n    }\n    setVisible(panel, visible) {\n        this.gridview.setViewVisible(getGridLocation(panel.element), visible);\n    }\n    setActive(panel) {\n        this._groups.forEach((value, _key) => {\n            value.value.setActive(panel === value.value);\n        });\n    }\n    focus() {\n        var _a;\n        (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    fromJSON(serializedGridview) {\n        this.clear();\n        const { grid, activePanel } = serializedGridview;\n        const queue = [];\n        this.gridview.deserialize(grid, {\n            fromJSON: (node) => {\n                const { data } = node;\n                const view = createComponent(data.id, data.component, this.options.components || {}, this.options.frameworkComponents || {}, this.options.frameworkComponentFactory\n                    ? {\n                        createComponent: this.options.frameworkComponentFactory\n                            .createComponent,\n                    }\n                    : undefined);\n                queue.push(() => view.init({\n                    params: data.params,\n                    minimumWidth: data.minimumWidth,\n                    maximumWidth: data.maximumWidth,\n                    minimumHeight: data.minimumHeight,\n                    maximumHeight: data.maximumHeight,\n                    priority: data.priority,\n                    snap: !!data.snap,\n                    accessor: this,\n                    isVisible: node.visible,\n                }));\n                this._onDidAddGroup.fire(view);\n                this.registerPanel(view);\n                return view;\n            },\n        });\n        this.layout(this.width, this.height, true);\n        queue.forEach((f) => f());\n        if (typeof activePanel === 'string') {\n            const panel = this.getPanel(activePanel);\n            if (panel) {\n                this.doSetGroupActive(panel);\n            }\n        }\n        this._onDidLayoutfromJSON.fire();\n    }\n    clear() {\n        const hasActiveGroup = this.activeGroup;\n        const groups = Array.from(this._groups.values()); // reassign since group panels will mutate\n        for (const group of groups) {\n            group.disposable.dispose();\n            this.doRemoveGroup(group.value, { skipActive: true });\n        }\n        if (hasActiveGroup) {\n            this.doSetGroupActive(undefined);\n        }\n        this.gridview.clear();\n    }\n    movePanel(panel, options) {\n        var _a;\n        let relativeLocation;\n        const removedPanel = this.gridview.remove(panel);\n        const referenceGroup = (_a = this._groups.get(options.reference)) === null || _a === void 0 ? void 0 : _a.value;\n        if (!referenceGroup) {\n            throw new Error(`reference group ${options.reference} does not exist`);\n        }\n        const target = toTarget(options.direction);\n        if (target === 'center') {\n            throw new Error(`${target} not supported as an option`);\n        }\n        else {\n            const location = getGridLocation(referenceGroup.element);\n            relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n        }\n        this.doAddGroup(removedPanel, relativeLocation, options.size);\n    }\n    addPanel(options) {\n        var _a, _b;\n        let relativeLocation = options.location || [0];\n        if ((_a = options.position) === null || _a === void 0 ? void 0 : _a.referencePanel) {\n            const referenceGroup = (_b = this._groups.get(options.position.referencePanel)) === null || _b === void 0 ? void 0 : _b.value;\n            if (!referenceGroup) {\n                throw new Error(`reference group ${options.position.referencePanel} does not exist`);\n            }\n            const target = toTarget(options.position.direction);\n            if (target === 'center') {\n                throw new Error(`${target} not supported as an option`);\n            }\n            else {\n                const location = getGridLocation(referenceGroup.element);\n                relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n            }\n        }\n        const view = createComponent(options.id, options.component, this.options.components || {}, this.options.frameworkComponents || {}, this.options.frameworkComponentFactory\n            ? {\n                createComponent: this.options.frameworkComponentFactory\n                    .createComponent,\n            }\n            : undefined);\n        view.init({\n            params: options.params || {},\n            minimumWidth: options.minimumWidth,\n            maximumWidth: options.maximumWidth,\n            minimumHeight: options.minimumHeight,\n            maximumHeight: options.maximumHeight,\n            priority: options.priority,\n            snap: !!options.snap,\n            accessor: this,\n            isVisible: true,\n        });\n        this.registerPanel(view);\n        this.doAddGroup(view, relativeLocation, options.size);\n        return view;\n    }\n    registerPanel(panel) {\n        const disposable = new CompositeDisposable(panel.api.onDidFocusChange((event) => {\n            if (!event.isFocused) {\n                return;\n            }\n            this._groups.forEach((groupItem) => {\n                const group = groupItem.value;\n                if (group !== panel) {\n                    group.setActive(false);\n                }\n                else {\n                    group.setActive(true);\n                }\n            });\n        }));\n        this._groups.set(panel.id, {\n            value: panel,\n            disposable,\n        });\n    }\n    moveGroup(referenceGroup, groupId, target) {\n        const sourceGroup = this.getPanel(groupId);\n        if (!sourceGroup) {\n            throw new Error('invalid operation');\n        }\n        const referenceLocation = getGridLocation(referenceGroup.element);\n        const targetLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, target);\n        const [targetParentLocation, to] = tail(targetLocation);\n        const sourceLocation = getGridLocation(sourceGroup.element);\n        const [sourceParentLocation, from] = tail(sourceLocation);\n        if (sequenceEquals(sourceParentLocation, targetParentLocation)) {\n            // special case when 'swapping' two views within same grid location\n            // if a group has one tab - we are essentially moving the 'group'\n            // which is equivalent to swapping two views in this case\n            this.gridview.moveView(sourceParentLocation, from, to);\n            return;\n        }\n        // source group will become empty so delete the group\n        const targetGroup = this.doRemoveGroup(sourceGroup, {\n            skipActive: true,\n            skipDispose: true,\n        });\n        // after deleting the group we need to re-evaulate the ref location\n        const updatedReferenceLocation = getGridLocation(referenceGroup.element);\n        const location = getRelativeLocation(this.gridview.orientation, updatedReferenceLocation, target);\n        this.doAddGroup(targetGroup, location);\n    }\n    removeGroup(group) {\n        super.removeGroup(group);\n    }\n    dispose() {\n        super.dispose();\n        this._onDidLayoutfromJSON.dispose();\n    }\n}\n","import { CompositeDisposable, MutableDisposable, } from '../lifecycle';\nimport { Orientation, Sizing, Splitview, } from './splitview';\nimport { Emitter } from '../events';\nimport { createComponent } from '../panel/componentFactory';\n/**\n * A high-level implementation of splitview that works using 'panels'\n */\nexport class SplitviewComponent extends CompositeDisposable {\n    get panels() {\n        return this.splitview.getViews();\n    }\n    get options() {\n        return this._options;\n    }\n    get length() {\n        return this._panels.size;\n    }\n    get orientation() {\n        return this.splitview.orientation;\n    }\n    get splitview() {\n        return this._splitview;\n    }\n    set splitview(value) {\n        this._splitview = value;\n        this._disposable.value = new CompositeDisposable(this._splitview.onDidSashEnd(() => {\n            this._onDidLayoutChange.fire(undefined);\n        }), this._splitview.onDidAddView((e) => this._onDidAddView.fire(e)), this._splitview.onDidRemoveView((e) => this._onDidRemoveView.fire(e)));\n    }\n    get minimumSize() {\n        return this.splitview.minimumSize;\n    }\n    get maximumSize() {\n        return this.splitview.maximumSize;\n    }\n    get height() {\n        return this.splitview.orientation === Orientation.HORIZONTAL\n            ? this.splitview.orthogonalSize\n            : this.splitview.size;\n    }\n    get width() {\n        return this.splitview.orientation === Orientation.HORIZONTAL\n            ? this.splitview.size\n            : this.splitview.orthogonalSize;\n    }\n    constructor(element, options) {\n        super();\n        this.element = element;\n        this._disposable = new MutableDisposable();\n        this._panels = new Map();\n        this._onDidLayoutfromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutfromJSON.event;\n        this._onDidAddView = new Emitter();\n        this.onDidAddView = this._onDidAddView.event;\n        this._onDidRemoveView = new Emitter();\n        this.onDidRemoveView = this._onDidRemoveView.event;\n        this._onDidLayoutChange = new Emitter();\n        this.onDidLayoutChange = this._onDidLayoutChange.event;\n        this._options = options;\n        if (!options.components) {\n            options.components = {};\n        }\n        if (!options.frameworkComponents) {\n            options.frameworkComponents = {};\n        }\n        this.splitview = new Splitview(this.element, options);\n        this.addDisposables(this._disposable, this._onDidAddView, this._onDidLayoutfromJSON, this._onDidRemoveView, this._onDidLayoutChange);\n    }\n    updateOptions(options) {\n        const hasOrientationChanged = typeof options.orientation === 'string' &&\n            this.options.orientation !== options.orientation;\n        this._options = Object.assign(Object.assign({}, this.options), options);\n        if (hasOrientationChanged) {\n            this.splitview.orientation = options.orientation;\n        }\n        this.splitview.layout(this.splitview.size, this.splitview.orthogonalSize);\n    }\n    focus() {\n        var _a;\n        (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    movePanel(from, to) {\n        this.splitview.moveView(from, to);\n    }\n    setVisible(panel, visible) {\n        const index = this.panels.indexOf(panel);\n        this.splitview.setViewVisible(index, visible);\n    }\n    setActive(view, skipFocus) {\n        this._activePanel = view;\n        this.panels\n            .filter((v) => v !== view)\n            .forEach((v) => {\n            v.api._onDidActiveChange.fire({ isActive: false });\n            if (!skipFocus) {\n                v.focus();\n            }\n        });\n        view.api._onDidActiveChange.fire({ isActive: true });\n        if (!skipFocus) {\n            view.focus();\n        }\n    }\n    removePanel(panel, sizing) {\n        const disposable = this._panels.get(panel.id);\n        if (!disposable) {\n            throw new Error(`unknown splitview panel ${panel.id}`);\n        }\n        disposable.disposable.dispose();\n        disposable.value.dispose();\n        this._panels.delete(panel.id);\n        const index = this.panels.findIndex((_) => _ === panel);\n        this.splitview.removeView(index, sizing);\n        const panels = this.panels;\n        if (panels.length > 0) {\n            this.setActive(panels[panels.length - 1]);\n        }\n    }\n    getPanel(id) {\n        return this.panels.find((view) => view.id === id);\n    }\n    addPanel(options) {\n        if (this._panels.has(options.id)) {\n            throw new Error(`panel ${options.id} already exists`);\n        }\n        const view = createComponent(options.id, options.component, this.options.components || {}, this.options.frameworkComponents || {}, this.options.frameworkWrapper\n            ? {\n                createComponent: this.options.frameworkWrapper.createComponent,\n            }\n            : undefined);\n        view.orientation = this.splitview.orientation;\n        view.init({\n            params: options.params || {},\n            minimumSize: options.minimumSize,\n            maximumSize: options.maximumSize,\n            snap: options.snap,\n            priority: options.priority,\n            accessor: this,\n        });\n        const size = typeof options.size === 'number' ? options.size : Sizing.Distribute;\n        const index = typeof options.index === 'number' ? options.index : undefined;\n        this.splitview.addView(view, size, index);\n        this.doAddView(view);\n        this.setActive(view);\n        return view;\n    }\n    layout(width, height) {\n        const [size, orthogonalSize] = this.splitview.orientation === Orientation.HORIZONTAL\n            ? [width, height]\n            : [height, width];\n        this.splitview.layout(size, orthogonalSize);\n    }\n    doAddView(view) {\n        const disposable = view.api.onDidFocusChange((event) => {\n            if (!event.isFocused) {\n                return;\n            }\n            this.setActive(view, true);\n        });\n        this._panels.set(view.id, { disposable, value: view });\n    }\n    toJSON() {\n        var _a;\n        const views = this.splitview\n            .getViews()\n            .map((view, i) => {\n            const size = this.splitview.getViewSize(i);\n            return {\n                size,\n                data: view.toJSON(),\n                snap: !!view.snap,\n                priority: view.priority,\n            };\n        });\n        return {\n            views,\n            activeView: (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.id,\n            size: this.splitview.size,\n            orientation: this.splitview.orientation,\n        };\n    }\n    fromJSON(serializedSplitview) {\n        this.clear();\n        const { views, orientation, size, activeView } = serializedSplitview;\n        const queue = [];\n        this.splitview = new Splitview(this.element, {\n            orientation,\n            proportionalLayout: this.options.proportionalLayout,\n            descriptor: {\n                size,\n                views: views.map((view) => {\n                    const data = view.data;\n                    if (this._panels.has(data.id)) {\n                        throw new Error(`panel ${data.id} already exists`);\n                    }\n                    const panel = createComponent(data.id, data.component, this.options.components || {}, this.options.frameworkComponents || {}, this.options.frameworkWrapper\n                        ? {\n                            createComponent: this.options.frameworkWrapper\n                                .createComponent,\n                        }\n                        : undefined);\n                    queue.push(() => {\n                        panel.init({\n                            params: data.params || {},\n                            minimumSize: data.minimumSize,\n                            maximumSize: data.maximumSize,\n                            snap: view.snap,\n                            priority: view.priority,\n                            accessor: this,\n                        });\n                    });\n                    panel.orientation = orientation;\n                    this.doAddView(panel);\n                    setTimeout(() => {\n                        // the original onDidAddView events are missed since they are fired before we can subcribe to them\n                        this._onDidAddView.fire(panel);\n                    }, 0);\n                    return { size: view.size, view: panel };\n                }),\n            },\n        });\n        this.layout(this.width, this.height);\n        queue.forEach((f) => f());\n        if (typeof activeView === 'string') {\n            const panel = this.getPanel(activeView);\n            if (panel) {\n                this.setActive(panel);\n            }\n        }\n        this._onDidLayoutfromJSON.fire();\n    }\n    clear() {\n        for (const [_, value] of this._panels.entries()) {\n            value.disposable.dispose();\n            value.value.dispose();\n        }\n        this._panels.clear();\n        this.splitview.dispose();\n    }\n    dispose() {\n        for (const [_, value] of this._panels.entries()) {\n            value.disposable.dispose();\n            value.value.dispose();\n        }\n        this._panels.clear();\n        this.splitview.dispose();\n        super.dispose();\n    }\n}\n","import { addDisposableListener } from '../events';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nimport { toggleClass } from '../dom';\nimport { createChevronRightButton, createExpandMoreButton } from '../svg';\nexport class DefaultHeader extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor() {\n        super();\n        this._expandedIcon = createExpandMoreButton();\n        this._collapsedIcon = createChevronRightButton();\n        this.disposable = new MutableDisposable();\n        this.apiRef = { api: null };\n        this._element = document.createElement('div');\n        this.element.className = 'default-header';\n        this._content = document.createElement('span');\n        this._expander = document.createElement('div');\n        this._expander.className = 'dockview-pane-header-icon';\n        this.element.appendChild(this._expander);\n        this.element.appendChild(this._content);\n        this.addDisposables(addDisposableListener(this._element, 'click', () => {\n            var _a;\n            (_a = this.apiRef.api) === null || _a === void 0 ? void 0 : _a.setExpanded(!this.apiRef.api.isExpanded);\n        }));\n    }\n    init(params) {\n        this.apiRef.api = params.api;\n        this._content.textContent = params.title;\n        this.updateIcon();\n        this.disposable.value = params.api.onDidExpansionChange(() => {\n            this.updateIcon();\n        });\n    }\n    updateIcon() {\n        var _a;\n        const isExpanded = !!((_a = this.apiRef.api) === null || _a === void 0 ? void 0 : _a.isExpanded);\n        toggleClass(this._expander, 'collapsed', !isExpanded);\n        if (isExpanded) {\n            if (this._expander.contains(this._collapsedIcon)) {\n                this._collapsedIcon.remove();\n            }\n            if (!this._expander.contains(this._expandedIcon)) {\n                this._expander.appendChild(this._expandedIcon);\n            }\n        }\n        else {\n            if (this._expander.contains(this._expandedIcon)) {\n                this._expandedIcon.remove();\n            }\n            if (!this._expander.contains(this._collapsedIcon)) {\n                this._expander.appendChild(this._collapsedIcon);\n            }\n        }\n    }\n    update(_params) {\n        //\n    }\n    dispose() {\n        this.disposable.dispose();\n        super.dispose();\n    }\n}\n","import { PaneviewApi } from '../api/component.api';\nimport { createComponent } from '../panel/componentFactory';\nimport { Emitter } from '../events';\nimport { CompositeDisposable, MutableDisposable, } from '../lifecycle';\nimport { Orientation, Sizing } from '../splitview/splitview';\nimport { Paneview } from './paneview';\nimport { DraggablePaneviewPanel, } from './draggablePaneviewPanel';\nimport { DefaultHeader } from './defaultPaneviewHeader';\nimport { sequentialNumberGenerator } from '../math';\nconst nextLayoutId = sequentialNumberGenerator();\nexport class PaneFramework extends DraggablePaneviewPanel {\n    constructor(options) {\n        super(options.accessor, options.id, options.component, options.headerComponent, options.orientation, options.isExpanded, options.disableDnd);\n        this.options = options;\n    }\n    getBodyComponent() {\n        return this.options.body;\n    }\n    getHeaderComponent() {\n        return this.options.header;\n    }\n}\nexport class PaneviewComponent extends CompositeDisposable {\n    get id() {\n        return this._id;\n    }\n    get panels() {\n        return this.paneview.getPanes();\n    }\n    set paneview(value) {\n        this._paneview = value;\n        this._disposable.value = new CompositeDisposable(this._paneview.onDidChange(() => {\n            this._onDidLayoutChange.fire(undefined);\n        }), this._paneview.onDidAddView((e) => this._onDidAddView.fire(e)), this._paneview.onDidRemoveView((e) => this._onDidRemoveView.fire(e)));\n    }\n    get paneview() {\n        return this._paneview;\n    }\n    get minimumSize() {\n        return this.paneview.minimumSize;\n    }\n    get maximumSize() {\n        return this.paneview.maximumSize;\n    }\n    get height() {\n        return this.paneview.orientation === Orientation.HORIZONTAL\n            ? this.paneview.orthogonalSize\n            : this.paneview.size;\n    }\n    get width() {\n        return this.paneview.orientation === Orientation.HORIZONTAL\n            ? this.paneview.size\n            : this.paneview.orthogonalSize;\n    }\n    get options() {\n        return this._options;\n    }\n    constructor(element, options) {\n        super();\n        this.element = element;\n        this._id = nextLayoutId.next();\n        this._disposable = new MutableDisposable();\n        this._viewDisposables = new Map();\n        this._onDidLayoutfromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutfromJSON.event;\n        this._onDidLayoutChange = new Emitter();\n        this.onDidLayoutChange = this._onDidLayoutChange.event;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onDidAddView = new Emitter();\n        this.onDidAddView = this._onDidAddView.event;\n        this._onDidRemoveView = new Emitter();\n        this.onDidRemoveView = this._onDidRemoveView.event;\n        this.addDisposables(this._onDidLayoutChange, this._onDidLayoutfromJSON, this._onDidDrop, this._onDidAddView, this._onDidRemoveView);\n        this._options = options;\n        if (!options.components) {\n            options.components = {};\n        }\n        if (!options.frameworkComponents) {\n            options.frameworkComponents = {};\n        }\n        this.paneview = new Paneview(this.element, {\n            // only allow paneview in the vertical orientation for now\n            orientation: Orientation.VERTICAL,\n        });\n        this.addDisposables(this._disposable);\n    }\n    focus() {\n        //noop\n    }\n    updateOptions(options) {\n        this._options = Object.assign(Object.assign({}, this.options), options);\n    }\n    addPanel(options) {\n        const body = createComponent(options.id, options.component, this.options.components || {}, this.options.frameworkComponents || {}, this.options.frameworkWrapper\n            ? {\n                createComponent: this.options.frameworkWrapper.body.createComponent,\n            }\n            : undefined);\n        let header;\n        if (options.headerComponent) {\n            header = createComponent(options.id, options.headerComponent, this.options.headerComponents || {}, this.options.headerframeworkComponents, this.options.frameworkWrapper\n                ? {\n                    createComponent: this.options.frameworkWrapper.header\n                        .createComponent,\n                }\n                : undefined);\n        }\n        else {\n            header = new DefaultHeader();\n        }\n        const view = new PaneFramework({\n            id: options.id,\n            component: options.component,\n            headerComponent: options.headerComponent,\n            header,\n            body,\n            orientation: Orientation.VERTICAL,\n            isExpanded: !!options.isExpanded,\n            disableDnd: !!this.options.disableDnd,\n            accessor: this,\n        });\n        this.doAddPanel(view);\n        const size = typeof options.size === 'number' ? options.size : Sizing.Distribute;\n        const index = typeof options.index === 'number' ? options.index : undefined;\n        view.init({\n            params: options.params || {},\n            minimumBodySize: options.minimumBodySize,\n            maximumBodySize: options.maximumBodySize,\n            isExpanded: options.isExpanded,\n            title: options.title,\n            containerApi: new PaneviewApi(this),\n        });\n        this.paneview.addPane(view, size, index);\n        view.orientation = this.paneview.orientation;\n        return view;\n    }\n    removePanel(panel) {\n        const views = this.panels;\n        const index = views.findIndex((_) => _ === panel);\n        this.paneview.removePane(index);\n        this.doRemovePanel(panel);\n    }\n    movePanel(from, to) {\n        this.paneview.moveView(from, to);\n    }\n    getPanel(id) {\n        return this.panels.find((view) => view.id === id);\n    }\n    layout(width, height) {\n        const [size, orthogonalSize] = this.paneview.orientation === Orientation.HORIZONTAL\n            ? [width, height]\n            : [height, width];\n        this.paneview.layout(size, orthogonalSize);\n    }\n    toJSON() {\n        const maximum = (value) => value === Number.MAX_SAFE_INTEGER ||\n            value === Number.POSITIVE_INFINITY\n            ? undefined\n            : value;\n        const minimum = (value) => (value <= 0 ? undefined : value);\n        const views = this.paneview\n            .getPanes()\n            .map((view, i) => {\n            const size = this.paneview.getViewSize(i);\n            return {\n                size,\n                data: view.toJSON(),\n                minimumSize: minimum(view.minimumBodySize),\n                maximumSize: maximum(view.maximumBodySize),\n                expanded: view.isExpanded(),\n            };\n        });\n        return {\n            views,\n            size: this.paneview.size,\n        };\n    }\n    fromJSON(serializedPaneview) {\n        this.clear();\n        const { views, size } = serializedPaneview;\n        const queue = [];\n        this.paneview = new Paneview(this.element, {\n            orientation: Orientation.VERTICAL,\n            descriptor: {\n                size,\n                views: views.map((view) => {\n                    const data = view.data;\n                    const body = createComponent(data.id, data.component, this.options.components || {}, this.options.frameworkComponents || {}, this.options.frameworkWrapper\n                        ? {\n                            createComponent: this.options.frameworkWrapper.body\n                                .createComponent,\n                        }\n                        : undefined);\n                    let header;\n                    if (data.headerComponent) {\n                        header = createComponent(data.id, data.headerComponent, this.options.headerComponents || {}, this.options.headerframeworkComponents || {}, this.options.frameworkWrapper\n                            ? {\n                                createComponent: this.options.frameworkWrapper.header\n                                    .createComponent,\n                            }\n                            : undefined);\n                    }\n                    else {\n                        header = new DefaultHeader();\n                    }\n                    const panel = new PaneFramework({\n                        id: data.id,\n                        component: data.component,\n                        headerComponent: data.headerComponent,\n                        header,\n                        body,\n                        orientation: Orientation.VERTICAL,\n                        isExpanded: !!view.expanded,\n                        disableDnd: !!this.options.disableDnd,\n                        accessor: this,\n                    });\n                    this.doAddPanel(panel);\n                    queue.push(() => {\n                        panel.init({\n                            params: data.params || {},\n                            minimumBodySize: view.minimumSize,\n                            maximumBodySize: view.maximumSize,\n                            title: data.title,\n                            isExpanded: !!view.expanded,\n                            containerApi: new PaneviewApi(this),\n                        });\n                        panel.orientation = this.paneview.orientation;\n                    });\n                    setTimeout(() => {\n                        // the original onDidAddView events are missed since they are fired before we can subcribe to them\n                        this._onDidAddView.fire(panel);\n                    }, 0);\n                    return { size: view.size, view: panel };\n                }),\n            },\n        });\n        this.layout(this.width, this.height);\n        queue.forEach((f) => f());\n        this._onDidLayoutfromJSON.fire();\n    }\n    clear() {\n        for (const [_, value] of this._viewDisposables.entries()) {\n            value.dispose();\n        }\n        this._viewDisposables.clear();\n        this.paneview.dispose();\n    }\n    doAddPanel(panel) {\n        const disposable = panel.onDidDrop((event) => {\n            this._onDidDrop.fire(event);\n        });\n        this._viewDisposables.set(panel.id, disposable);\n    }\n    doRemovePanel(panel) {\n        const disposable = this._viewDisposables.get(panel.id);\n        if (disposable) {\n            disposable.dispose();\n            this._viewDisposables.delete(panel.id);\n        }\n    }\n    dispose() {\n        super.dispose();\n        for (const [_, value] of this._viewDisposables.entries()) {\n            value.dispose();\n        }\n        this._viewDisposables.clear();\n        this.paneview.dispose();\n    }\n}\n","import { BasePanelView, } from '../gridview/basePanelView';\nimport { SplitviewPanelApiImpl } from '../api/splitviewPanelApi';\nimport { Orientation } from './splitview';\nimport { Emitter } from '../events';\nexport class SplitviewPanel extends BasePanelView {\n    get priority() {\n        return this._priority;\n    }\n    set orientation(value) {\n        this._orientation = value;\n    }\n    get orientation() {\n        return this._orientation;\n    }\n    get minimumSize() {\n        const size = typeof this._minimumSize === 'function'\n            ? this._minimumSize()\n            : this._minimumSize;\n        if (size !== this._evaluatedMinimumSize) {\n            this._evaluatedMinimumSize = size;\n            this.updateConstraints();\n        }\n        return size;\n    }\n    get maximumSize() {\n        const size = typeof this._maximumSize === 'function'\n            ? this._maximumSize()\n            : this._maximumSize;\n        if (size !== this._evaluatedMaximumSize) {\n            this._evaluatedMaximumSize = size;\n            this.updateConstraints();\n        }\n        return size;\n    }\n    get snap() {\n        return this._snap;\n    }\n    constructor(id, componentName) {\n        super(id, componentName, new SplitviewPanelApiImpl(id));\n        this._evaluatedMinimumSize = 0;\n        this._evaluatedMaximumSize = Number.POSITIVE_INFINITY;\n        this._minimumSize = 0;\n        this._maximumSize = Number.POSITIVE_INFINITY;\n        this._snap = false;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this.api.initialize(this);\n        this.addDisposables(this._onDidChange, this.api.onVisibilityChange((event) => {\n            const { isVisible } = event;\n            const { accessor } = this._params;\n            accessor.setVisible(this, isVisible);\n        }), this.api.onActiveChange(() => {\n            const { accessor } = this._params;\n            accessor.setActive(this);\n        }), this.api.onDidConstraintsChangeInternal((event) => {\n            if (typeof event.minimumSize === 'number' ||\n                typeof event.minimumSize === 'function') {\n                this._minimumSize = event.minimumSize;\n            }\n            if (typeof event.maximumSize === 'number' ||\n                typeof event.maximumSize === 'function') {\n                this._maximumSize = event.maximumSize;\n            }\n            this.updateConstraints();\n        }), this.api.onDidSizeChange((event) => {\n            this._onDidChange.fire({ size: event.size });\n        }));\n    }\n    setVisible(isVisible) {\n        this.api._onDidVisibilityChange.fire({ isVisible });\n    }\n    setActive(isActive) {\n        this.api._onDidActiveChange.fire({ isActive });\n    }\n    layout(size, orthogonalSize) {\n        const [width, height] = this.orientation === Orientation.HORIZONTAL\n            ? [size, orthogonalSize]\n            : [orthogonalSize, size];\n        super.layout(width, height);\n    }\n    init(parameters) {\n        super.init(parameters);\n        this._priority = parameters.priority;\n        if (parameters.minimumSize) {\n            this._minimumSize = parameters.minimumSize;\n        }\n        if (parameters.maximumSize) {\n            this._maximumSize = parameters.maximumSize;\n        }\n        if (parameters.snap) {\n            this._snap = parameters.snap;\n        }\n    }\n    toJSON() {\n        const maximum = (value) => value === Number.MAX_SAFE_INTEGER ||\n            value === Number.POSITIVE_INFINITY\n            ? undefined\n            : value;\n        const minimum = (value) => (value <= 0 ? undefined : value);\n        return Object.assign(Object.assign({}, super.toJSON()), { minimumSize: minimum(this.minimumSize), maximumSize: maximum(this.maximumSize) });\n    }\n    updateConstraints() {\n        this.api._onDidConstraintsChange.fire({\n            maximumSize: this._evaluatedMaximumSize,\n            minimumSize: this._evaluatedMinimumSize,\n        });\n    }\n}\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\n/**\n * This component is intended to interface between vanilla-js and React hence we need to be\n * creative in how we update props.\n * A ref of the component is exposed with an update method; which when called stores the props\n * as a ref within this component and forcefully triggers a re-render of the component using\n * the ref of props we just set on the renderered component as the props passed to the inner\n * component\n */\nconst ReactComponentBridge = (props, ref) => {\n    const [_, triggerRender] = React.useState();\n    const _props = React.useRef(props.componentProps);\n    React.useImperativeHandle(ref, () => ({\n        update: (componentProps) => {\n            _props.current = Object.assign(Object.assign({}, _props.current), componentProps);\n            /**\n             * setting a arbitrary piece of state within this component will\n             * trigger a re-render.\n             * we use this rather than updating through a prop since we can\n             * pass a ref into the vanilla-js world.\n             */\n            triggerRender(Date.now());\n        },\n    }), []);\n    return React.createElement(props.component, _props.current);\n};\nReactComponentBridge.displayName = 'DockviewReactJsBridge';\n/**\n * Since we are storing the React.Portal references in a rendered array they\n * require a key property like any other React element rendered in an array\n * to prevent excessive re-rendering\n */\nconst uniquePortalKeyGenerator = (() => {\n    let value = 1;\n    return { next: () => `dockview_react_portal_key_${(value++).toString()}` };\n})();\nexport const ReactPartContext = React.createContext({});\nexport class ReactPart {\n    constructor(parent, portalStore, component, parameters, context) {\n        this.parent = parent;\n        this.portalStore = portalStore;\n        this.component = component;\n        this.parameters = parameters;\n        this.context = context;\n        this._initialProps = {};\n        this.disposed = false;\n        this.createPortal();\n    }\n    update(props) {\n        if (this.disposed) {\n            throw new Error('invalid operation: resource is already disposed');\n        }\n        if (!this.componentInstance) {\n            // if the component is yet to be mounted store the props\n            this._initialProps = Object.assign(Object.assign({}, this._initialProps), props);\n        }\n        else {\n            this.componentInstance.update(props);\n        }\n    }\n    createPortal() {\n        if (this.disposed) {\n            throw new Error('invalid operation: resource is already disposed');\n        }\n        if (typeof this.component !== 'function') {\n            /**\n             * we know this isn't a React.FunctionComponent so throw an error here.\n             * if we do not intercept this the React library will throw a very obsure error\n             * for the same reason, at least at this point we will emit a sensible stacktrace.\n             */\n            throw new Error('Invalid Operation. dockview only supports React Functional Components.');\n        }\n        const bridgeComponent = React.createElement(React.forwardRef(ReactComponentBridge), {\n            component: this\n                .component,\n            componentProps: this.parameters,\n            ref: (element) => {\n                this.componentInstance = element;\n                if (Object.keys(this._initialProps).length > 0) {\n                    this.componentInstance.update(this._initialProps);\n                    this._initialProps = {}; // don't keep a reference to the users object once no longer required\n                }\n            },\n        });\n        const node = this.context\n            ? React.createElement(ReactPartContext.Provider, { value: this.context }, bridgeComponent)\n            : bridgeComponent;\n        const portal = ReactDOM.createPortal(node, this.parent, uniquePortalKeyGenerator.next());\n        this.ref = {\n            portal,\n            disposable: this.portalStore.addPortal(portal),\n        };\n    }\n    dispose() {\n        var _a;\n        (_a = this.ref) === null || _a === void 0 ? void 0 : _a.disposable.dispose();\n        this.disposed = true;\n    }\n}\n/**\n * A React Hook that returns an array of portals to be rendered by the user of this hook\n * and a disposable function to add a portal. Calling dispose removes this portal from the\n * portal array\n */\nexport const usePortalsLifecycle = () => {\n    const [portals, setPortals] = React.useState([]);\n    React.useDebugValue(`Portal count: ${portals.length}`);\n    const addPortal = React.useCallback((portal) => {\n        setPortals((existingPortals) => [...existingPortals, portal]);\n        let disposed = false;\n        return {\n            dispose: () => {\n                if (disposed) {\n                    throw new Error('invalid operation: resource already disposed');\n                }\n                disposed = true;\n                setPortals((existingPortals) => existingPortals.filter((p) => p !== portal));\n            },\n        };\n    }, []);\n    return [portals, addPortal];\n};\n// it does the job...\nexport function isReactElement(element) {\n    return element === null || element === void 0 ? void 0 : element.type;\n}\n","import { ReactPart } from '../react';\nimport { DockviewEmitter, } from 'dockview-core';\nexport class ReactPanelContentPart {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._onDidFocus = new DockviewEmitter();\n        this.onDidFocus = this._onDidFocus.event;\n        this._onDidBlur = new DockviewEmitter();\n        this.onDidBlur = this._onDidBlur.event;\n        this._element = document.createElement('div');\n        this._element.className = 'dockview-react-part';\n    }\n    focus() {\n        // TODO\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            params: parameters.params,\n            api: parameters.api,\n            containerApi: parameters.containerApi,\n        });\n    }\n    update(event) {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update(event.params);\n    }\n    layout(_width, _height) {\n        // noop\n    }\n    dispose() {\n        var _a;\n        this._onDidFocus.dispose();\n        this._onDidBlur.dispose();\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import { ReactPart } from '../react';\nexport class ReactPanelHeaderPart {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._element = document.createElement('div');\n        this._element.className = 'dockview-react-part';\n    }\n    focus() {\n        //noop\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            params: parameters.params,\n            api: parameters.api,\n            containerApi: parameters.containerApi,\n        });\n    }\n    update(event) {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update(event.params);\n    }\n    layout(_width, _height) {\n        // noop - retrieval from api\n    }\n    dispose() {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import { ReactPart } from '../react';\nexport class ReactWatermarkPart {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._element = document.createElement('div');\n        this._element.className = 'dockview-react-part';\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            group: parameters.group,\n            containerApi: parameters.containerApi,\n            close: () => {\n                if (parameters.group) {\n                    parameters.containerApi.removeGroup(parameters.group);\n                }\n            },\n        });\n    }\n    focus() {\n        // noop\n    }\n    update(params) {\n        var _a, _b;\n        if (this.parameters) {\n            this.parameters.params = params.params;\n        }\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update({ params: ((_b = this.parameters) === null || _b === void 0 ? void 0 : _b.params) || {} });\n    }\n    layout(_width, _height) {\n        // noop - retrieval from api\n    }\n    updateParentGroup(_group, _isPanelVisible) {\n        // noop\n    }\n    dispose() {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import { ReactPart } from '../react';\nimport { DockviewCompositeDisposable, DockviewMutableDisposable, } from 'dockview-core';\nexport class ReactGroupControlsRendererPart {\n    get element() {\n        return this._element;\n    }\n    get part() {\n        return this._part;\n    }\n    get group() {\n        return this._group;\n    }\n    constructor(component, reactPortalStore, _group) {\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._group = _group;\n        this.mutableDisposable = new DockviewMutableDisposable();\n        this._element = document.createElement('div');\n        this._element.className = 'dockview-react-part';\n    }\n    focus() {\n        // TODO\n    }\n    init(parameters) {\n        this.mutableDisposable.value = new DockviewCompositeDisposable(this._group.model.onDidAddPanel(() => {\n            this.updatePanels();\n        }), this._group.model.onDidRemovePanel(() => {\n            this.updatePanels();\n        }), this._group.model.onDidActivePanelChange(() => {\n            this.updateActivePanel();\n        }), parameters.api.onDidActiveChange(() => {\n            this.updateGroupActive();\n        }));\n        this._part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            api: parameters.api,\n            containerApi: parameters.containerApi,\n            panels: this._group.model.panels,\n            activePanel: this._group.model.activePanel,\n            isGroupActive: this._group.api.isActive,\n        });\n    }\n    update(event) {\n        var _a;\n        (_a = this._part) === null || _a === void 0 ? void 0 : _a.update(event.params);\n    }\n    dispose() {\n        var _a;\n        this.mutableDisposable.dispose();\n        (_a = this._part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n    updatePanels() {\n        this.update({ params: { panels: this._group.model.panels } });\n    }\n    updateActivePanel() {\n        this.update({\n            params: {\n                activePanel: this._group.model.activePanel,\n            },\n        });\n    }\n    updateGroupActive() {\n        this.update({\n            params: {\n                isGroupActive: this._group.api.isActive,\n            },\n        });\n    }\n}\n","import * as React from 'react';\nimport { DockviewComponent, DockviewApi, watchElementResize, } from 'dockview-core';\nimport { ReactPanelContentPart } from './reactContentPart';\nimport { ReactPanelHeaderPart } from './reactHeaderPart';\nimport { usePortalsLifecycle } from '../react';\nimport { ReactWatermarkPart } from './reactWatermarkPart';\nimport { ReactGroupControlsRendererPart, } from './groupControlsRenderer';\nfunction createGroupControlElement(component, store) {\n    return component\n        ? (groupPanel) => {\n            return new ReactGroupControlsRendererPart(component, store, groupPanel);\n        }\n        : undefined;\n}\nconst DEFAULT_REACT_TAB = 'props.defaultTabComponent';\nexport const DockviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const dockviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    React.useEffect(() => {\n        if (props.disableAutoResizing) {\n            return () => {\n                //\n            };\n        }\n        const watcher = watchElementResize(domRef.current, (entry) => {\n            var _a;\n            const { width, height } = entry.contentRect;\n            (_a = dockviewRef.current) === null || _a === void 0 ? void 0 : _a.layout(width, height);\n        });\n        return () => {\n            watcher.dispose();\n        };\n    }, [props.disableAutoResizing]);\n    React.useEffect(() => {\n        var _a;\n        const factory = {\n            content: {\n                createComponent: (_id, componentId, component) => {\n                    return new ReactPanelContentPart(componentId, component, {\n                        addPortal,\n                    });\n                },\n            },\n            tab: {\n                createComponent: (_id, componentId, component) => {\n                    return new ReactPanelHeaderPart(componentId, component, {\n                        addPortal,\n                    });\n                },\n            },\n            watermark: {\n                createComponent: (_id, componentId, component) => {\n                    return new ReactWatermarkPart(componentId, component, {\n                        addPortal,\n                    });\n                },\n            },\n        };\n        const element = document.createElement('div');\n        const frameworkTabComponents = props.tabComponents || {};\n        if (props.defaultTabComponent) {\n            frameworkTabComponents[DEFAULT_REACT_TAB] =\n                props.defaultTabComponent;\n        }\n        const dockview = new DockviewComponent(element, {\n            frameworkComponentFactory: factory,\n            frameworkComponents: props.components,\n            frameworkTabComponents,\n            tabHeight: props.tabHeight,\n            watermarkFrameworkComponent: props.watermarkComponent,\n            defaultTabComponent: props.defaultTabComponent\n                ? DEFAULT_REACT_TAB\n                : undefined,\n            styles: props.hideBorders\n                ? { separatorBorder: 'transparent' }\n                : undefined,\n            showDndOverlay: props.showDndOverlay,\n            createGroupControlElement: createGroupControlElement(props.groupControlComponent, { addPortal }),\n            singleTabMode: props.singleTabMode,\n        });\n        (_a = domRef.current) === null || _a === void 0 ? void 0 : _a.appendChild(dockview.element);\n        const { clientWidth, clientHeight } = domRef.current;\n        dockview.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api: new DockviewApi(dockview) });\n        }\n        dockviewRef.current = dockview;\n        return () => {\n            dockview.dispose();\n            element.remove();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const disposable = dockviewRef.current.onDidDrop((event) => {\n            if (props.onDidDrop) {\n                props.onDidDrop(event);\n            }\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.onDidDrop]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            frameworkComponents: props.components,\n        });\n    }, [props.components]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            watermarkFrameworkComponent: props.watermarkComponent,\n        });\n    }, [props.watermarkComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            showDndOverlay: props.showDndOverlay,\n        });\n    }, [props.showDndOverlay]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            frameworkTabComponents: props.tabComponents,\n        });\n    }, [props.tabComponents]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        const frameworkTabComponents = props.tabComponents || {};\n        if (props.defaultTabComponent) {\n            frameworkTabComponents[DEFAULT_REACT_TAB] =\n                props.defaultTabComponent;\n        }\n        dockviewRef.current.updateOptions({\n            defaultTabComponent: props.defaultTabComponent\n                ? DEFAULT_REACT_TAB\n                : undefined,\n            frameworkTabComponents,\n        });\n    }, [props.defaultTabComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createGroupControlElement: createGroupControlElement(props.groupControlComponent, { addPortal }),\n        });\n    }, [props.groupControlComponent]);\n    return (React.createElement(\"div\", { className: props.className, style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nDockviewReact.displayName = 'DockviewComponent';\n","import * as React from 'react';\nexport const CloseButton = () => (React.createElement(\"svg\", { height: \"11\", width: \"11\", viewBox: \"0 0 28 28\", \"aria-hidden\": 'false', focusable: false, className: \"dockview-svg\" },\n    React.createElement(\"path\", { d: \"M2.1 27.3L0 25.2L11.55 13.65L0 2.1L2.1 0L13.65 11.55L25.2 0L27.3 2.1L15.75 13.65L27.3 25.2L25.2 27.3L13.65 15.75L2.1 27.3Z\" })));\nexport const ExpandMore = () => {\n    return (React.createElement(\"svg\", { width: \"11\", height: \"11\", viewBox: \"0 0 24 15\", \"aria-hidden\": 'false', focusable: false, className: \"dockview-svg\" },\n        React.createElement(\"path\", { d: \"M12 14.15L0 2.15L2.15 0L12 9.9L21.85 0.0499992L24 2.2L12 14.15Z\" })));\n};\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from 'react';\nimport { CloseButton } from '../svg';\nexport const DockviewDefaultTab = (_a) => {\n    var { api, containerApi: _containerApi, params: _params } = _a, rest = __rest(_a, [\"api\", \"containerApi\", \"params\"]);\n    const onClose = React.useCallback((event) => {\n        event.stopPropagation();\n        api.close();\n    }, [api]);\n    const onClick = React.useCallback((event) => {\n        api.setActive();\n        if (rest.onClick) {\n            rest.onClick(event);\n        }\n    }, [api, rest.onClick]);\n    const iconClassname = React.useMemo(() => {\n        const cn = ['dockview-react-tab-action'];\n        return cn.join(',');\n    }, []);\n    return (React.createElement(\"div\", Object.assign({}, rest, { onClick: onClick, className: \"dockview-react-tab\" }),\n        React.createElement(\"span\", { className: \"dockview-react-tab-title\" }, api.title),\n        React.createElement(\"div\", { className: iconClassname, onClick: onClose },\n            React.createElement(CloseButton, null))));\n};\n","import { SplitviewApi, SplitviewPanel, } from 'dockview-core';\nimport { ReactPart } from '../react';\nexport class ReactPanelView extends SplitviewPanel {\n    constructor(id, component, reactComponent, reactPortalStore) {\n        super(id, component);\n        this.reactComponent = reactComponent;\n        this.reactPortalStore = reactPortalStore;\n    }\n    getComponent() {\n        var _a;\n        return new ReactPart(this.element, this.reactPortalStore, this.reactComponent, {\n            params: ((_a = this._params) === null || _a === void 0 ? void 0 : _a.params) || {},\n            api: this.api,\n            containerApi: new SplitviewApi(this._params.accessor),\n        });\n    }\n}\n","import * as React from 'react';\nimport { SplitviewApi, SplitviewComponent, Orientation, watchElementResize, } from 'dockview-core';\nimport { usePortalsLifecycle } from '../react';\nimport { ReactPanelView } from './view';\nexport const SplitviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const splitviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    React.useEffect(() => {\n        if (props.disableAutoResizing) {\n            return () => {\n                //\n            };\n        }\n        const watcher = watchElementResize(domRef.current, (entry) => {\n            var _a;\n            const { width, height } = entry.contentRect;\n            (_a = splitviewRef.current) === null || _a === void 0 ? void 0 : _a.layout(width, height);\n        });\n        return () => {\n            watcher.dispose();\n        };\n    }, [props.disableAutoResizing]);\n    React.useEffect(() => {\n        const splitview = new SplitviewComponent(domRef.current, {\n            orientation: props.orientation || Orientation.HORIZONTAL,\n            frameworkComponents: props.components,\n            frameworkWrapper: {\n                createComponent: (id, componentId, component) => {\n                    return new ReactPanelView(id, componentId, component, {\n                        addPortal,\n                    });\n                },\n            },\n            proportionalLayout: typeof props.proportionalLayout === 'boolean'\n                ? props.proportionalLayout\n                : true,\n            styles: props.hideBorders\n                ? { separatorBorder: 'transparent' }\n                : undefined,\n        });\n        const { clientWidth, clientHeight } = domRef.current;\n        splitview.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api: new SplitviewApi(splitview) });\n        }\n        splitviewRef.current = splitview;\n        return () => {\n            splitview.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!splitviewRef.current) {\n            return;\n        }\n        splitviewRef.current.updateOptions({\n            frameworkComponents: props.components,\n        });\n    }, [props.components]);\n    return (React.createElement(\"div\", { className: props.className, style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nSplitviewReact.displayName = 'SplitviewComponent';\n","import { GridviewApi, GridviewPanel, } from 'dockview-core';\nimport { ReactPart } from '../react';\nexport class ReactGridPanelView extends GridviewPanel {\n    constructor(id, component, reactComponent, reactPortalStore) {\n        super(id, component);\n        this.reactComponent = reactComponent;\n        this.reactPortalStore = reactPortalStore;\n    }\n    getComponent() {\n        var _a;\n        return new ReactPart(this.element, this.reactPortalStore, this.reactComponent, {\n            params: ((_a = this._params) === null || _a === void 0 ? void 0 : _a.params) || {},\n            api: this.api,\n            containerApi: new GridviewApi(this._params.accessor),\n        });\n    }\n}\n","import * as React from 'react';\nimport { GridviewComponent, Orientation, GridviewApi, watchElementResize, } from 'dockview-core';\nimport { ReactGridPanelView } from './view';\nimport { usePortalsLifecycle } from '../react';\nexport const GridviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const gridviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    React.useEffect(() => {\n        if (props.disableAutoResizing) {\n            return () => {\n                //\n            };\n        }\n        const watcher = watchElementResize(domRef.current, (entry) => {\n            var _a;\n            const { width, height } = entry.contentRect;\n            (_a = gridviewRef.current) === null || _a === void 0 ? void 0 : _a.layout(width, height);\n        });\n        return () => {\n            watcher.dispose();\n        };\n    }, [props.disableAutoResizing]);\n    React.useEffect(() => {\n        var _a;\n        const element = document.createElement('div');\n        const gridview = new GridviewComponent(element, {\n            proportionalLayout: typeof props.proportionalLayout === 'boolean'\n                ? props.proportionalLayout\n                : true,\n            orientation: props.orientation || Orientation.HORIZONTAL,\n            frameworkComponents: props.components,\n            frameworkComponentFactory: {\n                createComponent: (id, componentId, component) => {\n                    return new ReactGridPanelView(id, componentId, component, {\n                        addPortal,\n                    });\n                },\n            },\n            styles: props.hideBorders\n                ? { separatorBorder: 'transparent' }\n                : undefined,\n        });\n        (_a = domRef.current) === null || _a === void 0 ? void 0 : _a.appendChild(gridview.element);\n        const { clientWidth, clientHeight } = domRef.current;\n        gridview.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api: new GridviewApi(gridview) });\n        }\n        gridviewRef.current = gridview;\n        return () => {\n            gridview.dispose();\n            element.remove();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!gridviewRef.current) {\n            return;\n        }\n        gridviewRef.current.updateOptions({\n            frameworkComponents: props.components,\n        });\n    }, [props.components]);\n    return (React.createElement(\"div\", { className: props.className, style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nGridviewReact.displayName = 'GridviewComponent';\n","import { ReactPart } from '../react';\nexport class PanePanelSection {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._element = document.createElement('div');\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            params: parameters.params,\n            api: parameters.api,\n            title: parameters.title,\n            containerApi: parameters.containerApi,\n        });\n    }\n    toJSON() {\n        return {\n            id: this.id,\n        };\n    }\n    update(params) {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update(params.params);\n    }\n    dispose() {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import * as React from 'react';\nimport { PaneviewComponent, PaneviewApi, watchElementResize, } from 'dockview-core';\nimport { usePortalsLifecycle } from '../react';\nimport { PanePanelSection } from './view';\nexport const PaneviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const paneviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    React.useEffect(() => {\n        if (props.disableAutoResizing) {\n            return () => {\n                //\n            };\n        }\n        const watcher = watchElementResize(domRef.current, (entry) => {\n            var _a;\n            const { width, height } = entry.contentRect;\n            (_a = paneviewRef.current) === null || _a === void 0 ? void 0 : _a.layout(width, height);\n        });\n        return () => {\n            watcher.dispose();\n        };\n    }, [props.disableAutoResizing]);\n    React.useEffect(() => {\n        const createComponent = (id, _componentId, component) => new PanePanelSection(id, component, {\n            addPortal,\n        });\n        const paneview = new PaneviewComponent(domRef.current, {\n            frameworkComponents: props.components,\n            components: {},\n            headerComponents: {},\n            disableDnd: props.disableDnd,\n            headerframeworkComponents: props.headerComponents,\n            frameworkWrapper: {\n                header: {\n                    createComponent,\n                },\n                body: {\n                    createComponent,\n                },\n            },\n            showDndOverlay: props.showDndOverlay,\n        });\n        const api = new PaneviewApi(paneview);\n        const { clientWidth, clientHeight } = domRef.current;\n        paneview.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api });\n        }\n        paneviewRef.current = paneview;\n        return () => {\n            paneview.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return;\n        }\n        paneviewRef.current.updateOptions({\n            frameworkComponents: props.components,\n        });\n    }, [props.components]);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return;\n        }\n        paneviewRef.current.updateOptions({\n            headerframeworkComponents: props.headerComponents,\n        });\n    }, [props.headerComponents]);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return () => {\n                //\n            };\n        }\n        const paneview = paneviewRef.current;\n        const disposable = paneview.onDidDrop((event) => {\n            if (props.onDidDrop) {\n                props.onDidDrop(Object.assign(Object.assign({}, event), { api: new PaneviewApi(paneview) }));\n            }\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.onDidDrop]);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return;\n        }\n        paneviewRef.current.updateOptions({\n            showDndOverlay: props.showDndOverlay,\n        });\n    }, [props.showDndOverlay]);\n    return (React.createElement(\"div\", { className: props.className, style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nPaneviewReact.displayName = 'PaneviewComponent';\n","import {\n    IGridviewPanelProps,\n    Orientation,\n    GridviewReact,\n    GridviewReadyEvent,\n    GridviewApi,\n} from 'dockview';\nimport * as React from 'react';\nimport { Console, Line } from '../ui/console/console';\n\nconst components = {\n    default: (props: IGridviewPanelProps<{ title: string }>) => {\n        return <div style={{ padding: '20px' }}>{props.params.title}</div>;\n    },\n};\n\nexport const EventsGridview = () => {\n    const [lines, setLines] = React.useState<Line[]>([]);\n    const [checked, setChecked] = React.useState<boolean>(false);\n\n    const [api, setApi] = React.useState<GridviewApi | undefined>();\n\n    React.useEffect(() => {\n        if (!api) {\n            return () => {\n                //noop\n            };\n        }\n\n        const disposables = [\n            api.onDidAddPanel((panel) => {\n                setLines((lines) => [\n                    ...lines,\n                    {\n                        timestamp: new Date(),\n                        text: `onDidAddPanel: ${panel.id}`,\n                    },\n                ]);\n            }),\n            api.onDidRemovePanel((panel) => {\n                setLines((lines) => [\n                    ...lines,\n                    {\n                        timestamp: new Date(),\n                        text: `onDidRemovePanel: ${panel.id}`,\n                    },\n                ]);\n            }),\n            api.onDidActivePanelChange((panel) => {\n                setLines((lines) => [\n                    ...lines,\n                    {\n                        timestamp: new Date(),\n                        text: `onDidActivePanelChange: ${panel?.id}`,\n                    },\n                ]);\n            }),\n            api.onDidLayoutChange((panel) => {\n                setLines((lines) => [\n                    ...lines,\n                    { timestamp: new Date(), text: `onDidLayoutChange` },\n                ]);\n            }),\n            api.onDidLayoutFromJSON((panel) => {\n                setLines((lines) => [\n                    ...lines,\n                    { timestamp: new Date(), text: `onDidLayoutFromJSON` },\n                ]);\n            }),\n        ];\n\n        return () => {\n            disposables.forEach((disposable) => disposable.dispose());\n        };\n    }, [api]);\n\n    React.useEffect(() => {\n        if (!api) {\n            return;\n        }\n\n        setLines((lines) => [\n            ...lines,\n            {\n                timestamp: new Date(),\n                text: `Rebuilding view fromJSON:${checked}`,\n                css: { color: 'yellow', backgroundColor: 'grey' },\n            },\n        ]);\n\n        if (checked) {\n            api.fromJSON({\n                grid: {\n                    root: {\n                        type: 'branch',\n                        data: [\n                            {\n                                type: 'branch',\n                                data: [\n                                    {\n                                        type: 'leaf',\n                                        data: {\n                                            id: 'panel_3',\n                                            component: 'default',\n                                            params: { title: 'Panel 3' },\n                                            snap: false,\n                                        },\n                                        size: 394,\n                                    },\n                                    {\n                                        type: 'branch',\n                                        data: [\n                                            {\n                                                type: 'leaf',\n                                                data: {\n                                                    id: 'panel_5',\n                                                    component: 'default',\n                                                    params: {\n                                                        title: 'Panel 5',\n                                                    },\n                                                    snap: false,\n                                                },\n                                                size: 50,\n                                            },\n                                            {\n                                                type: 'branch',\n                                                data: [\n                                                    {\n                                                        type: 'leaf',\n                                                        data: {\n                                                            id: 'panel_6',\n                                                            component:\n                                                                'default',\n                                                            params: {\n                                                                title: 'Panel 6',\n                                                            },\n                                                            minimumWidth: 10,\n                                                            snap: false,\n                                                        },\n                                                        size: 131,\n                                                    },\n                                                    {\n                                                        type: 'leaf',\n                                                        data: {\n                                                            id: 'panel_8',\n                                                            component:\n                                                                'default',\n                                                            params: {\n                                                                title: 'Panel 8',\n                                                            },\n                                                            minimumWidth: 10,\n                                                            snap: false,\n                                                        },\n                                                        size: 131,\n                                                    },\n                                                    {\n                                                        type: 'leaf',\n                                                        data: {\n                                                            id: 'panel_7',\n                                                            component:\n                                                                'default',\n                                                            params: {\n                                                                title: 'Panel 7',\n                                                            },\n                                                            minimumWidth: 10,\n                                                            snap: false,\n                                                        },\n                                                        size: 132,\n                                                    },\n                                                ],\n                                                size: 50,\n                                            },\n                                        ],\n                                        size: 394,\n                                    },\n                                ],\n                                size: 100,\n                            },\n                            {\n                                type: 'leaf',\n                                data: {\n                                    id: 'panel_2',\n                                    component: 'default',\n                                    params: { title: 'Panel 2' },\n                                    snap: false,\n                                },\n                                size: 100,\n                            },\n                            {\n                                type: 'branch',\n                                data: [\n                                    {\n                                        type: 'leaf',\n                                        data: {\n                                            id: 'panel_1',\n                                            component: 'default',\n                                            params: { title: 'Panel 1' },\n                                            snap: false,\n                                        },\n                                        size: 394,\n                                    },\n                                    {\n                                        type: 'leaf',\n                                        data: {\n                                            id: 'panel_4',\n                                            component: 'default',\n                                            params: { title: 'Panel 4' },\n                                            snap: false,\n                                        },\n                                        size: 394,\n                                    },\n                                ],\n                                size: 100,\n                            },\n                        ],\n                        size: 788,\n                    },\n                    width: 788,\n                    height: 300,\n                    orientation: Orientation.VERTICAL,\n                },\n                activePanel: 'panel_8',\n            });\n            return;\n        }\n\n        api.clear();\n        api.orientation = Orientation.VERTICAL;\n\n        api.addPanel({\n            id: 'panel_1',\n            component: 'default',\n            params: {\n                title: 'Panel 1',\n            },\n        });\n\n        api.addPanel({\n            id: 'panel_2',\n            component: 'default',\n            params: {\n                title: 'Panel 2',\n            },\n        });\n\n        api.addPanel({\n            id: 'panel_3',\n            component: 'default',\n            params: {\n                title: 'Panel 3',\n            },\n        });\n\n        console.log('sdf');\n\n        api.addPanel({\n            id: 'panel_4',\n            component: 'default',\n            params: {\n                title: 'Panel 4',\n            },\n            position: { referencePanel: 'panel_1', direction: 'right' },\n        });\n\n        api.addPanel({\n            id: 'panel_5',\n            component: 'default',\n            params: {\n                title: 'Panel 5',\n            },\n            position: { referencePanel: 'panel_3', direction: 'right' },\n        });\n\n        api.addPanel({\n            id: 'panel_6',\n            component: 'default',\n            params: {\n                title: 'Panel 6',\n            },\n            position: { referencePanel: 'panel_5', direction: 'below' },\n            minimumWidth: 10,\n        });\n\n        api.addPanel({\n            id: 'panel_7',\n            component: 'default',\n            params: {\n                title: 'Panel 7',\n            },\n            position: { referencePanel: 'panel_6', direction: 'right' },\n            minimumWidth: 10,\n        });\n\n        api.addPanel({\n            id: 'panel_8',\n            component: 'default',\n            params: {\n                title: 'Panel 8',\n            },\n            position: { referencePanel: 'panel_6', direction: 'right' },\n            minimumWidth: 10,\n        });\n    }, [api, checked]);\n\n    const onReady = (event: GridviewReadyEvent) => {\n        setApi(event.api);\n    };\n\n    return (\n        <>\n            <label>\n                <input\n                    type=\"checkbox\"\n                    checked={checked}\n                    onChange={(e) => setChecked(e.target.checked)}\n                />\n                <span>{'fromJSON'}</span>\n            </label>\n            <div\n                style={{\n                    height: '300px',\n                    backgroundColor: 'rgb(30,30,30)',\n                    color: 'white',\n                    margin: '20px 0px',\n                }}\n            >\n                <GridviewReact\n                    components={components}\n                    onReady={onReady}\n                    proportionalLayout={false}\n                    orientation={Orientation.VERTICAL}\n                    className=\"dockview-theme-abyss\"\n                />\n            </div>\n\n            <Console lines={lines} />\n        </>\n    );\n};\n","import {\n    IGridviewPanelProps,\n    Orientation,\n    GridviewReact,\n    GridviewReadyEvent,\n} from 'dockview';\nimport * as React from 'react';\n\nconst components = {\n    default: (props: IGridviewPanelProps<{ title: string }>) => {\n        return <div style={{ padding: '20px' }}>{props.params.title}</div>;\n    },\n};\n\nexport const SimpleGridview = () => {\n    const onReady = (event: GridviewReadyEvent) => {\n        event.api.addPanel({\n            id: 'panel_1',\n            component: 'default',\n            params: {\n                title: 'Panel 1',\n            },\n        });\n\n        event.api.addPanel({\n            id: 'panel_2',\n            component: 'default',\n            params: {\n                title: 'Panel 2',\n            },\n        });\n\n        event.api.addPanel({\n            id: 'panel_3',\n            component: 'default',\n            params: {\n                title: 'Panel 3',\n            },\n        });\n\n        event.api.addPanel({\n            id: 'panel_4',\n            component: 'default',\n            params: {\n                title: 'Panel 4',\n            },\n            position: { referencePanel: 'panel_1', direction: 'right' },\n        });\n\n        event.api.addPanel({\n            id: 'panel_5',\n            component: 'default',\n            params: {\n                title: 'Panel 5',\n            },\n            position: { referencePanel: 'panel_3', direction: 'right' },\n        });\n\n        event.api.addPanel({\n            id: 'panel_6',\n            component: 'default',\n            params: {\n                title: 'Panel 6',\n            },\n            position: { referencePanel: 'panel_5', direction: 'below' },\n            minimumWidth: 10,\n        });\n\n        event.api.addPanel({\n            id: 'panel_7',\n            component: 'default',\n            params: {\n                title: 'Panel 7',\n            },\n            position: { referencePanel: 'panel_6', direction: 'right' },\n            minimumWidth: 10,\n        });\n\n        event.api.addPanel({\n            id: 'panel_8',\n            component: 'default',\n            params: {\n                title: 'Panel 8',\n            },\n            position: { referencePanel: 'panel_6', direction: 'right' },\n            minimumWidth: 10,\n        });\n    };\n\n    return (\n        <GridviewReact\n            components={components}\n            onReady={onReady}\n            proportionalLayout={false}\n            orientation={Orientation.VERTICAL}\n            className=\"dockview-theme-abyss\"\n        />\n    );\n};\n","import * as React from 'react';\nimport './console.scss';\n\nconst formatTime = (now: Date) => {\n    const pad = (x: number) => (x < 10 ? `0${x}` : `${x}`);\n\n    return `${pad(now.getHours())}:${pad(now.getMinutes())}:${pad(\n        now.getSeconds()\n    )}.${now.getMilliseconds()}`;\n};\n\nexport interface Line {\n    timestamp: Date;\n    text: string;\n    css?: React.CSSProperties;\n}\n\nexport interface IConsoleProps {\n    lines: Line[];\n}\n\nexport const Console = (props: IConsoleProps) => {\n    const ref = React.useRef<HTMLDivElement>();\n\n    React.useLayoutEffect(() => {\n        if (!ref.current) {\n            return;\n        }\n\n        ref.current.scrollTop = Math.max(\n            0,\n            ref.current.scrollHeight - ref.current.clientHeight\n        );\n    }, [props.lines]);\n\n    return (\n        <div ref={ref} className=\"console-container\">\n            {props.lines.map((line, i) => {\n                return (\n                    <div key={i} className=\"console-line\">\n                        <span className=\"console-line-timestamp\">\n                            {formatTime(line.timestamp)}\n                        </span>\n                        <span className=\"console-line-text\" style={line.css}>\n                            {line.text}\n                        </span>\n                    </div>\n                );\n            })}\n        </div>\n    );\n};\n","\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\n/* @jsxFrag React.Fragment */\n\nimport React from 'react';\nimport { mdx } from '@mdx-js/react';\n\n\nexport const frontMatter = {\n\tdescription: 'Gridview Documentation'\n};\nexport const contentTitle = 'Gridview';\nexport const metadata = {\n  \"unversionedId\": \"components/gridview\",\n  \"id\": \"version-1.6.0/components/gridview\",\n  \"title\": \"Gridview\",\n  \"description\": \"Gridview Documentation\",\n  \"source\": \"@site/versioned_docs/version-1.6.0/components/gridview.mdx\",\n  \"sourceDirName\": \"components\",\n  \"slug\": \"/components/gridview\",\n  \"permalink\": \"/docs/components/gridview\",\n  \"draft\": false,\n  \"editUrl\": \"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/versioned_docs/version-1.6.0/components/gridview.mdx\",\n  \"tags\": [],\n  \"version\": \"1.6.0\",\n  \"frontMatter\": {\n    \"description\": \"Gridview Documentation\"\n  },\n  \"sidebar\": \"tutorialSidebar\",\n  \"previous\": {\n    \"title\": \"Dockview\",\n    \"permalink\": \"/docs/components/dockview\"\n  },\n  \"next\": {\n    \"title\": \"Paneview\",\n    \"permalink\": \"/docs/components/paneview\"\n  }\n};\nexport const assets = {\n\n};\n\nimport { SimpleGridview } from '@site/src/components/simpleGridview';\nimport { EventsGridview } from '@site/src/components/gridview/events';\nimport Link from '@docusaurus/Link';\nexport const toc = [{\n  value: 'Introduction',\n  id: 'introduction',\n  level: 2\n}, {\n  value: 'GridviewReact Component',\n  id: 'gridviewreact-component',\n  level: 2\n}, {\n  value: 'Gridview API',\n  id: 'gridview-api',\n  level: 2\n}, {\n  value: 'Gridview Panel API',\n  id: 'gridview-panel-api',\n  level: 2\n}, {\n  value: 'Events',\n  id: 'events',\n  level: 2\n}];\n\nconst layoutProps = {\n  toc\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"gridview\"\n    }}>{`Gridview`}</h1>\n    <h2 {...{\n      \"id\": \"introduction\"\n    }}>{`Introduction`}</h2>\n    <div style={{\n      height: '300px',\n      backgroundColor: 'rgb(30,30,30)',\n      color: 'white',\n      margin: '20px 0px'\n    }}>\n    <SimpleGridview mdxType=\"SimpleGridview\" />\n    </div>\n    <h2 {...{\n      \"id\": \"gridviewreact-component\"\n    }}>{`GridviewReact Component`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`import { ReactGridview } from 'dockview';\n`}</code></pre>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Property`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Optional`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Default`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`onReady`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`(event: SplitviewReadyEvent) => void`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`No`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`components`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`object`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`No`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`orientation`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Orientation`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Yes`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Orientation.HORIZONTAL`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`proportionalLayout`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`boolean`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Yes`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`true`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`See `}<Link to=\"../basics/#proportional-layout\" mdxType=\"Link\">{`Proportional layout`}</Link></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`hideBorders`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`boolean`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Yes`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`false`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`className`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Yes`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`''`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`disableAutoResizing`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`boolean`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Yes`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`false`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`See `}<Link to=\"../basics/#auto-resizing\" mdxType=\"Link\">{`Auto Resizing`}</Link></td>\n        </tr>\n      </tbody>\n    </table>\n    <h2 {...{\n      \"id\": \"gridview-api\"\n    }}>{`Gridview API`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`const MyComponent = (props: IGridviewPanelProps<{ title: string }>) => {\n    // props.containerApi...\n\n    return <div>{\\`My first panel has the title: \\${props.params.title}\\`}</div>;\n};\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`const onReady = (event: GridviewReadyEvent) => {\n    // event.api...\n};\n`}</code></pre>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Property`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`height`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`number`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Component pixel height`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`width`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`number`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Component pixel width`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`minimumHeight`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`number`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`maximumHeight`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`number`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`maximumWidth`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`number`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`maximumWidth`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`number`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`length`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`number`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Number of panels`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`panels`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`ISplitviewPanel[]`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`all panels`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`orientation`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`Orientation`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`onDidLayoutChange`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`Event<void>`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Fires on layout change`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`onDidLayoutFromJSON`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`Event<void>`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Fires of layout change caused by a fromJSON deserialization call`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`onDidAddPanel`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`Event<IGridviewPanel>`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Fires when a view is added`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`onDidRemovePanel`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`Event<IGridviewPanel>`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Fires when a view is removed`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`onDidActivePanelChange`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`Event<IGridviewPanel \\\\| undefined>`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Fires when the active group changes`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`addPanel`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`addPanel(options: AddComponentOptions): IGridviewPanel`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`removePanel`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`(panel: IGridviewPanel, sizing?: Sizing): void`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`movePanel`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`(panel: IGridviewPanel, options: {direction: Direction, refernece:string, size?: number}): void`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`getPanel`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`(id: string) \\\\| IGridviewPanel \\\\| undefined`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`updateOptions`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`(options:SplitviewComponentUpdateOptions): void`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`focus`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`(): void`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Focus the active panel, if exists`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`layout`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`(width: number, height:number): void`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><Link to=\"../basics/#auto-resizing\" mdxType=\"Link\">{`Auto Resizing`}</Link></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`fromJSON`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`(data: SerializedGridview): void`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><Link to=\"../basics/#serialization\" mdxType=\"Link\">{`Serialization`}</Link></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`toJSON`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`(): SerializedGridview`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><Link to=\"../basics/#serialization\" mdxType=\"Link\">{`Serialization`}</Link></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`clear`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`(): void`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Clears the current layout`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h2 {...{\n      \"id\": \"gridview-panel-api\"\n    }}>{`Gridview Panel API`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`const MyComponent = (props: IGridviewPanelProps<{ title: string }>) => {\n    // props.api...\n\n    return <div>{\\`My first panel has the title: \\${props.params.title}\\`}</div>;\n};\n`}</code></pre>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Property`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`id`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`string`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Panel id`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`isFocused`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`boolean`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Is panel focsed`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`isActive`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`boolean`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Is panel active`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`isVisible`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`boolean`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Is panel visible`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`width`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`number`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Panel width`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`height`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`number`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Panel height`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`onDidDimensionsChange`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`Event<PanelDimensionChangeEvent>`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`onDidFocusChange`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`Event<FocusEvent>`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`onDidVisibilityChange`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`Event<VisibilityEvent>`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`onDidActiveChange`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`Event<ActiveEvent>`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`onDidConstraintsChange`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`onDidConstraintsChange: Event<PanelConstraintChangeEvent>`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`setVisible`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`(isVisible: boolean): void`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`setActive`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`(): void`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`setConstraints`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`(value: PanelConstraintChangeEvent2): void;`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`setSize`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`(event: SizeEvent): void`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n      </tbody>\n    </table>\n    <h2 {...{\n      \"id\": \"events\"\n    }}>{`Events`}</h2>\n    <p><inlineCode parentName=\"p\">{`GridviewReact`}</inlineCode>{` exposes a number of events that the developer can listen to and below is a simple example with a log panel showing those events that occur.`}</p>\n    <EventsGridview mdxType=\"EventsGridview\" />\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","sourceSymbolKeys","prototype","propertyIsEnumerable","call","MDXContext","useMDXComponents","components","contextComponents","allComponents","MDXProvider","props","Provider","children","TYPE_PROP_NAME","DEFAULTS","inlineCode","wrapper","_ref","MDXCreateElement","ref","propComponents","mdxType","originalType","parentName","etc","type","Component","concat","createElement","args","argsLength","createElementArgArray","Array","newProps","hasOwnProperty","displayName","TransferObject","constructor","PanelTransfer","viewId","groupId","panelId","super","this","PaneTransfer","paneId","LocalSelectionTransfer","static","INSTANCE","hasData","proto","clearData","undefined","data","getData","setData","getPanelData","panelTransfer","getInstance","getPaneData","paneTransfer","Event","Disposable","any","_len","_key","listener","disposables","map","child","dispose","d","Emitter","options","_listeners","_disposed","event","_event","_a","replay","_last","index","splice","fire","e","addDisposableWindowListener","element","addEventListener","removeEventListener","addDisposableListener","TickDelayedEvent","_onFired","onEvent","timer","clearTimeout","setTimeout","NONE","CompositeDisposable","_len2","_key2","addDisposables","_len3","_key3","arg","MutableDisposable","_disposable","disposable","watchElementResize","cb","observer","ResizeObserver","entires","firstEntry","observe","unobserve","disconnect","removeClasses","classes","classname","classList","contains","remove","addClasses","add","toggleClass","className","isToggled","hasClass","isAncestor","testChild","testAncestor","parentNode","getElementsByTagName","tag","slice","document","trackFocus","FocusTracker","_onDidFocus","onDidFocus","_onDidBlur","onDidBlur","hasFocus","activeElement","loosingFocus","onFocus","onBlur","window","_refreshStateHandler","HTMLElement","refreshState","tail","arr","Error","sequenceEquals","arr1","arr2","pushToStart","unshift","pushToEnd","clamp","min","max","Math","sequentialNumberGenerator","next","toString","range","from","to","result","ViewItem","size","_size","cachedVisibleSize","_cachedVisibleSize","visible","minimumSize","view","viewMinimumSize","maximumSize","viewMaximumSize","priority","snap","enabled","container","style","pointerEvents","setVisible","toggle","Orientation","SashState","LayoutPriority","Sizing","Distribute","Split","Invisible","Splitview","orthogonalSize","_orthogonalSize","views","proportions","_proportions","orientation","_orientation","tmp","HORIZONTAL","reduce","r","item","Number","POSITIVE_INFINITY","startSnappingEnabled","_startSnappingEnabled","updateSashEnablement","endSnappingEnabled","_endSnappingEnabled","_this","sashes","contentSize","_onDidSashEnd","onDidSashEnd","_onDidAddView","onDidAddView","_onDidRemoveView","onDidRemoveView","resize","delta","sizes","lowPriorityIndexes","highPriorityIndexes","overloadMinDelta","overloadMaxDelta","snapBefore","snapAfter","x","NEGATIVE_INFINITY","upIndexes","downIndexes","upItems","upSizes","downItems","downSizes","minDeltaUp","_","maxDeltaUp","maxDeltaDown","minDeltaDown","minDelta","maxDelta","snapped","snapView","limitDelta","actualDelta","deltaUp","viewDelta","deltaDown","createContainer","proportionalLayout","viewContainer","createViewContainer","sashContainer","createSashContainer","appendChild","styles","descriptor","viewDescriptor","sizing","addView","saveProportions","separatorBorder","removeProperty","setProperty","isViewVisible","setViewVisible","viewItem","distributeEmptySpace","layoutViews","getViewSize","resizeView","indexes","Low","High","round","relayout","getViews","onDidChange","skipLayout","viewSize","newSize","removeChild","insertBefore","sash","onStart","iframes","iframe","start","clientX","clientY","sashIndex","array","fn","firstIndex","s","snapBeforeIndex","findFirstSnapIndex","snapAfterIndex","snappedViewItem","halfSize","floor","mousemove","mousemoveEvent","end","sashItem","distributeViewSizes","flexibleViewItems","flexibleSize","removeView","getViewCachedVisibleSize","moveView","layout","previousSize","lowPriorityIndex","emptyDelta","sum","offset","left","top","VERTICAL","width","height","previous","collapsesDown","expandsDown","reverseViews","reverse","collapsesUp","expandsUp","position","snappedBefore","snappedAfter","updateSash","MINIMUM","MAXIMUM","DISABLED","ENABLED","state","orientationClassname","Paneview","splitview","paneItems","skipAnimation","_onDidChange","getPanes","pane","onDidChangeExpansionState","setupAnimation","paneItem","addPane","removePane","skipDispose","animationTimer","LeafNode","minimumWidth","maximumWidth","minimumHeight","maximumHeight","minimumOrthogonalSize","maximumOrthogonalSize","BranchNode","c","Normal","priorities","some","p","childDescriptors","_childrenDisposable","childDescriptor","node","setupChildrenEvents","isChildVisible","setChildVisible","moveChild","_removeChild","_addChild","getChildSize","resizeChild","addChild","getChildCachedVisibleSize","findLeaf","candiateNode","last","flipNode","orthogonal","totalSize","childSize","getGridLocation","parentElement","test","el","firstElementChild","lastElementChild","nextElementSibling","indexInParent","getRelativeLocation","rootOrientation","location","direction","getLocationOrientation","directionOrientation","getDirectionOrientation","rest","_index","serializeBranchNode","box","isGridBranchNode","toJSON","Gridview","_root","root","serialize","getView","clear","deserialize","json","deserializer","_deserialize","_deserializeNode","isRoot","serializedChild","fromJSON","oldRoot","insertOrthogonalSplitviewAtRoot","childReference","progmaticSelect","getNode","_getViews","nodeCachedVisibleSize","path","n","l","parent","parentLocation","pathToParent","grandParent","parentIndex","__","newSiblingSize","newSiblingCachedVisibleSize","newParent","newSibling","sibling","isSiblingVisible","siblingSizing","SplitviewApi","component","panels","onDidLayoutFromJSON","onDidLayoutChange","updateOptions","removePanel","panel","focus","getPanel","id","addPanel","movePanel","PaneviewApi","onDidDrop","emitter","assign","api","GridviewApi","onDidAddPanel","onDidAddGroup","onDidRemovePanel","onDidRemoveGroup","onDidActivePanelChange","onDidActiveGroupChange","groups","force","DockviewApi","totalPanels","activePanel","activeGroup","getTabHeight","tabHeight","setTabHeight","getGroupPanel","addGroup","moveToNext","moveToPrevious","closeAllGroups","removeGroup","group","getGroup","DragAndDropObserver","callbacks","registerListeners","onDragEnter","preventDefault","onDragOver","onDragLeave","onDragEnd","onDrop","directionToPosition","positionToDirection","Droptarget","_state","_onDrop","acceptedTargetZonesSet","Set","acceptedTargetZones","clientWidth","clientHeight","rect","currentTarget","getBoundingClientRect","y","quadrant","calculateQuadrant","canDisplayOverlay","overlay","append","toggleClasses","setState","removeDropTarget","stopPropagation","nativeEvent","_b","_c","_d","isSmallX","isSmallY","isLeft","isRight","isTop","isBottom","rightClass","leftClass","topClass","bottomClass","overlayModel","translate","transform","overlayType","_e","_f","isPercentage","activationSize","maybeNumber","fallback","threshold","xp","yp","has","calculateQuadrantAsPercentage","calculateQuadrantAsPixels","ContentContainer","_element","tabIndex","show","display","hide","openPanel","content","_width","_height","closePanel","DockviewDropTargets","DragHandler","_onDragStart","onDragStart","configure","dataTransfer","effectAllowed","Tab","accessor","_onChanged","onChanged","_onDropped","draggable","defaultPrevented","droptarget","locked","model","setActive","isActive","setContent","part","GroupDragHandler","accessorId","getComputedStyle","bgColor","getPropertyValue","color","ghostElement","backgroundColor","padding","fontSize","lineHeight","borderRadius","textContent","body","setDragImage","addGhostImage","VoidContainer","doSetGroupActive","handler","voidDropTarget","Panel","TabsContainer","tabs","hidden","_hidden","setActionElement","actions","actionContainer","tab","selectedIndex","findIndex","singleTabMode","tabContainer","voidContainer","button","_isGroupActive","addTab","delete","tabToRemove","setActivePanel","isActivePanel","find","tabToAdd","alreadyFocused","isContentFocused","skipFocus","DockviewGroupPanelModel","_activePanel","_locked","_panels","isEmpty","hasWatermark","watermark","header","tabsContainer","contentContainer","groupPanel","mostRecentlyUsed","_onMove","onMove","_onDidDrop","_onDidAddPanel","_onDidRemovePanel","_onDidActivePanelChange","dropTarget","hideHeader","handleDropEvent","initialize","doAddPanel","updateContainer","createGroupControlElement","_control","init","containerApi","activeView","normalizedIndex","suppressRoll","containsPanel","includes","_params","update","skipSetPanelActive","skipSetGroupActive","updateParentGroup","doSetActivePanel","groupItemOrId","panelToRemove","_removePanel","closeAllPanels","arrPanelCpy","doClose","isPanelActive","updateActions","isGroupActive","doRemovePanel","nextPanel","skipSetActive","hasExistingPanel","updateMru","createWatermarkComponent","showDndOverlay","itemId","nextLayoutId","toTarget","BaseGrid","_id","_groups","values","gridview","_activeGroup","Map","_onDidLayoutChange","_onDidRemoveGroup","_onDidAddGroup","_onDidActiveGroupChange","_bufferOnDidLayoutChange","isVisible","doAddGroup","doRemoveGroup","get","skipActive","forceResize","PanelApiImpl","isFocused","_isFocused","_isActive","_isVisible","panelUpdatesDisposable","_onDidDimensionChange","onDidDimensionsChange","_onDidChangeFocus","onDidFocusChange","_onFocusEvent","onFocusEvent","_onDidVisibilityChange","onDidVisibilityChange","_onVisibilityChange","onVisibilityChange","_onDidActiveChange","onDidActiveChange","_onActiveChange","onActiveChange","_onUpdateParameters","onUpdateParameters","parameters","params","updateParameters","SplitviewPanelApiImpl","_onDidConstraintsChangeInternal","onDidConstraintsChangeInternal","_onDidConstraintsChange","onDidConstraintsChange","_onDidSizeChange","onDidSizeChange","setConstraints","setSize","PaneviewPanelApiImpl","_pane","_onDidExpansionChange","onDidExpansionChange","_onMouseEnter","onMouseEnter","_onMouseLeave","onMouseLeave","setExpanded","isExpanded","BasePanelView","outline","overflow","getComponent","PaneviewPanel","headerSize","_minimumBodySize","_maximumBodySize","minimumBodySize","maximumBodySize","headerVisible","_headerVisible","headerComponent","isHeaderVisible","_onDidChangeExpansionState","_isExpanded","expandedSize","ev","isPanelExpanded","renderOnce","expanded","bodyPart","getBodyComponent","headerPart","getHeaderComponent","title","minHeight","maxHeight","DraggablePaneviewPanel","disableDnd","initDragFeatures","existingPanel","allPanels","fromIndex","toIndex","GridviewPanelApiImpl","GridviewPanel","_priority","_snap","_minimumWidth","_evaluatedMinimumWidth","updateConstraints","_minimumHeight","_evaluatedMinimumHeight","_maximumHeight","_evaluatedMaximumHeight","_maximumWidth","_evaluatedMaximumWidth","MAX_SAFE_INTEGER","maximum","minimum","DockviewGroupPanel","_model","DockviewPanelApiImpl","isOldGroupActive","_group","_onDidGroupChange","_onDidTitleChange","onDidTitleChange","onDidGroupChange","setTitle","close","DockviewPanel","_title","contentComponent","tabComponent","isPanelVisible","createSvgElementFromPath","svg","createElementNS","setAttributeNS","viewbox","createCloseButton","DefaultTab","_content","_actionContainer","_list","action","render","onGroupChange","onPanelVisibleChange","_isPanelVisible","createComponent","componentName","frameworkComponents","createFrameworkComponent","FrameworkComponent","DockviewPanelModel","_tab","createContentComponent","createTabComponent","frameworkComponentFactory","tabComponents","frameworkTabComponents","DefaultDockviewDeserialzier","panelData","viewData","defaultTabComponent","Watermark","emptySpace","flexGrow","actionsContainer","closeAnchor","_visible","isOneGroup","DockviewComponent","flatMap","_options","nextGroupId","_deserializer","_onDidLayoutFromJSON","updateWatermark","watermarkComponent","watermarkFrameworkComponent","Edge","moveGroupOrPanel","orthogonalize","_api","createGroupAtLocation","hasOrientationChanged","includePanel","grid","collection","isArray","createGroup","hasActiveGroup","hasActivePanel","entry","entries","referenceGroup","referencePanel","findGroup","isPanelOptionsWithGroup","createPanel","relativeLocation","removeEmptyGroup","watermarkContainer","isGroupOptionsWithGroup","sourceGroup","referenceLocation","targetLocation","targetParentLocation","sourceLocation","sourceParentLocation","targetGroup","updatedReferenceLocation","groupItem","dropLocation","moveGroup","isGroupAlreadyFocused","console","warn","set","GridviewComponent","_onDidLayoutfromJSON","serializedGridview","queue","registerPanel","f","removedPanel","reference","SplitviewComponent","_splitview","v","frameworkWrapper","doAddView","serializedSplitview","DefaultHeader","_expandedIcon","_collapsedIcon","apiRef","_expander","updateIcon","PaneFramework","PaneviewComponent","paneview","_paneview","_viewDisposables","headerComponents","headerframeworkComponents","serializedPaneview","SplitviewPanel","_minimumSize","_evaluatedMinimumSize","_maximumSize","_evaluatedMaximumSize","ReactComponentBridge","triggerRender","React","_props","componentProps","current","Date","now","uniquePortalKeyGenerator","ReactPartContext","ReactPart","portalStore","context","_initialProps","disposed","createPortal","componentInstance","bridgeComponent","portal","ReactDOM","addPortal","usePortalsLifecycle","portals","setPortals","existingPortals","ReactPanelContentPart","reactPortalStore","DockviewEmitter","ReactPanelHeaderPart","ReactWatermarkPart","ReactGroupControlsRendererPart","_part","mutableDisposable","DockviewMutableDisposable","DockviewCompositeDisposable","updatePanels","updateActivePanel","updateGroupActive","store","DEFAULT_REACT_TAB","DockviewReact","domRef","dockviewRef","disableAutoResizing","watcher","contentRect","factory","componentId","dockview","hideBorders","groupControlComponent","onReady","CloseButton","viewBox","focusable","__rest","t","DockviewDefaultTab","_containerApi","onClose","onClick","iconClassname","join","ReactPanelView","reactComponent","SplitviewReact","splitviewRef","ReactGridPanelView","GridviewReact","gridviewRef","PanePanelSection","PaneviewReact","paneviewRef","_componentId","default","EventsGridview","lines","setLines","checked","setChecked","setApi","timestamp","text","css","log","onChange","margin","Console","SimpleGridview","scrollTop","scrollHeight","line","pad","getHours","getMinutes","getSeconds","getMilliseconds","formatTime","frontMatter","description","contentTitle","metadata","assets","toc","level","layoutProps","MDXLayout","MDXContent","mdx","_extends","Link","isMDXComponent"],"sourceRoot":""}