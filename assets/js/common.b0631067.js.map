{"version":3,"file":"assets/js/common.b0631067.js","mappings":"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","sources":["webpack://dockview-docs/./node_modules/@mdx-js/react/dist/esm.js","webpack://dockview-docs/../dockview/dist/esm/dnd/dataTransfer.js","webpack://dockview-docs/../dockview/dist/esm/events.js","webpack://dockview-docs/../dockview/dist/esm/lifecycle.js","webpack://dockview-docs/../dockview/dist/esm/dom.js","webpack://dockview-docs/../dockview/dist/esm/math.js","webpack://dockview-docs/../dockview/dist/esm/array.js","webpack://dockview-docs/../dockview/dist/esm/splitview/core/viewItem.js","webpack://dockview-docs/../dockview/dist/esm/splitview/core/splitview.js","webpack://dockview-docs/../dockview/dist/esm/dnd/droptarget.js","webpack://dockview-docs/../dockview/dist/esm/paneview/paneview.js","webpack://dockview-docs/../dockview/dist/esm/dnd/dnd.js","webpack://dockview-docs/../dockview/dist/esm/gridview/leafNode.js","webpack://dockview-docs/../dockview/dist/esm/gridview/branchNode.js","webpack://dockview-docs/../dockview/dist/esm/gridview/gridview.js","webpack://dockview-docs/../dockview/dist/esm/api/component.api.js","webpack://dockview-docs/../dockview/dist/esm/groupview/panel/content.js","webpack://dockview-docs/../dockview/dist/esm/groupview/dnd.js","webpack://dockview-docs/../dockview/dist/esm/groupview/tab.js","webpack://dockview-docs/../dockview/dist/esm/dnd/abstractDragHandler.js","webpack://dockview-docs/../dockview/dist/esm/groupview/titlebar/tabsContainer.js","webpack://dockview-docs/../dockview/dist/esm/groupview/groupview.js","webpack://dockview-docs/../dockview/dist/esm/gridview/baseComponentGridview.js","webpack://dockview-docs/../dockview/dist/esm/api/panelApi.js","webpack://dockview-docs/../dockview/dist/esm/api/gridviewPanelApi.js","webpack://dockview-docs/../dockview/dist/esm/api/groupPanelApi.js","webpack://dockview-docs/../dockview/dist/esm/dockview/dockviewGroupPanel.js","webpack://dockview-docs/../dockview/dist/esm/actionbar/actionsContainer.js","webpack://dockview-docs/../dockview/dist/esm/svg.js","webpack://dockview-docs/../dockview/dist/esm/dockview/components/watermark/watermark.js","webpack://dockview-docs/../dockview/dist/esm/panel/componentFactory.js","webpack://dockview-docs/../dockview/dist/esm/dockview/components/tab/defaultTab.js","webpack://dockview-docs/../dockview/dist/esm/gridview/basePanelView.js","webpack://dockview-docs/../dockview/dist/esm/gridview/gridviewPanel.js","webpack://dockview-docs/../dockview/dist/esm/groupview/groupviewPanel.js","webpack://dockview-docs/../dockview/dist/esm/dockview/defaultGroupPanelView.js","webpack://dockview-docs/../dockview/dist/esm/dockview/dockviewComponent.js","webpack://dockview-docs/../dockview/dist/esm/gridview/gridviewComponent.js","webpack://dockview-docs/../dockview/dist/esm/splitview/splitviewComponent.js","webpack://dockview-docs/../dockview/dist/esm/api/splitviewPanelApi.js","webpack://dockview-docs/../dockview/dist/esm/api/paneviewPanelApi.js","webpack://dockview-docs/../dockview/dist/esm/paneview/paneviewPanel.js","webpack://dockview-docs/../dockview/dist/esm/paneview/draggablePaneviewPanel.js","webpack://dockview-docs/../dockview/dist/esm/paneview/defaultPaneviewHeader.js","webpack://dockview-docs/../dockview/dist/esm/paneview/paneviewComponent.js","webpack://dockview-docs/../dockview/dist/esm/splitview/splitviewPanel.js","webpack://dockview-docs/../dockview/dist/esm/react/react.js","webpack://dockview-docs/../dockview/dist/esm/react/dockview/reactContentPart.js","webpack://dockview-docs/../dockview/dist/esm/react/dockview/reactHeaderPart.js","webpack://dockview-docs/../dockview/dist/esm/react/deserializer.js","webpack://dockview-docs/../dockview/dist/esm/react/dockview/reactWatermarkPart.js","webpack://dockview-docs/../dockview/dist/esm/react/dockview/groupControlsRenderer.js","webpack://dockview-docs/../dockview/dist/esm/react/dockview/dockview.js","webpack://dockview-docs/../dockview/dist/esm/react/svg.js","webpack://dockview-docs/../dockview/dist/esm/react/dockview/defaultTab.js","webpack://dockview-docs/../dockview/dist/esm/react/splitview/view.js","webpack://dockview-docs/../dockview/dist/esm/react/splitview/splitview.js","webpack://dockview-docs/../dockview/dist/esm/react/gridview/view.js","webpack://dockview-docs/../dockview/dist/esm/react/gridview/gridview.js","webpack://dockview-docs/../dockview/dist/esm/react/paneview/view.js","webpack://dockview-docs/../dockview/dist/esm/react/paneview/paneview.js"],"sourcesContent":["import React from 'react';\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nvar isFunction = function isFunction(obj) {\n  return typeof obj === 'function';\n};\n\nvar MDXContext = /*#__PURE__*/React.createContext({});\nvar withMDXComponents = function withMDXComponents(Component) {\n  return function (props) {\n    var allComponents = useMDXComponents(props.components);\n    return /*#__PURE__*/React.createElement(Component, _extends({}, props, {\n      components: allComponents\n    }));\n  };\n};\nvar useMDXComponents = function useMDXComponents(components) {\n  var contextComponents = React.useContext(MDXContext);\n  var allComponents = contextComponents;\n\n  if (components) {\n    allComponents = isFunction(components) ? components(contextComponents) : _objectSpread2(_objectSpread2({}, contextComponents), components);\n  }\n\n  return allComponents;\n};\nvar MDXProvider = function MDXProvider(props) {\n  var allComponents = useMDXComponents(props.components);\n  return /*#__PURE__*/React.createElement(MDXContext.Provider, {\n    value: allComponents\n  }, props.children);\n};\n\nvar TYPE_PROP_NAME = 'mdxType';\nvar DEFAULTS = {\n  inlineCode: 'code',\n  wrapper: function wrapper(_ref) {\n    var children = _ref.children;\n    return /*#__PURE__*/React.createElement(React.Fragment, {}, children);\n  }\n};\nvar MDXCreateElement = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var propComponents = props.components,\n      mdxType = props.mdxType,\n      originalType = props.originalType,\n      parentName = props.parentName,\n      etc = _objectWithoutProperties(props, [\"components\", \"mdxType\", \"originalType\", \"parentName\"]);\n\n  var components = useMDXComponents(propComponents);\n  var type = mdxType;\n  var Component = components[\"\".concat(parentName, \".\").concat(type)] || components[type] || DEFAULTS[type] || originalType;\n\n  if (propComponents) {\n    return /*#__PURE__*/React.createElement(Component, _objectSpread2(_objectSpread2({\n      ref: ref\n    }, etc), {}, {\n      components: propComponents\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _objectSpread2({\n    ref: ref\n  }, etc));\n});\nMDXCreateElement.displayName = 'MDXCreateElement';\nfunction createElement (type, props) {\n  var args = arguments;\n  var mdxType = props && props.mdxType;\n\n  if (typeof type === 'string' || mdxType) {\n    var argsLength = args.length;\n    var createElementArgArray = new Array(argsLength);\n    createElementArgArray[0] = MDXCreateElement;\n    var newProps = {};\n\n    for (var key in props) {\n      if (hasOwnProperty.call(props, key)) {\n        newProps[key] = props[key];\n      }\n    }\n\n    newProps.originalType = type;\n    newProps[TYPE_PROP_NAME] = typeof type === 'string' ? type : mdxType;\n    createElementArgArray[1] = newProps;\n\n    for (var i = 2; i < argsLength; i++) {\n      createElementArgArray[i] = args[i];\n    }\n\n    return React.createElement.apply(null, createElementArgArray);\n  }\n\n  return React.createElement.apply(null, args);\n}\n\nexport { MDXContext, MDXProvider, createElement as mdx, useMDXComponents, withMDXComponents };\n","class TransferObject {\n    constructor() {\n        //\n    }\n}\nexport class PanelTransfer extends TransferObject {\n    constructor(viewId, groupId, panelId) {\n        super();\n        this.viewId = viewId;\n        this.groupId = groupId;\n        this.panelId = panelId;\n    }\n}\nexport class PaneTransfer extends TransferObject {\n    constructor(viewId, paneId) {\n        super();\n        this.viewId = viewId;\n        this.paneId = paneId;\n    }\n}\n/**\n * A singleton to store transfer data during drag & drop operations that are only valid within the application.\n */\nexport class LocalSelectionTransfer {\n    constructor() {\n        // protect against external instantiation\n    }\n    static getInstance() {\n        return LocalSelectionTransfer.INSTANCE;\n    }\n    hasData(proto) {\n        return proto && proto === this.proto;\n    }\n    clearData(proto) {\n        if (this.hasData(proto)) {\n            this.proto = undefined;\n            this.data = undefined;\n        }\n    }\n    getData(proto) {\n        if (this.hasData(proto)) {\n            return this.data;\n        }\n        return undefined;\n    }\n    setData(data, proto) {\n        if (proto) {\n            this.data = data;\n            this.proto = proto;\n        }\n    }\n}\nLocalSelectionTransfer.INSTANCE = new LocalSelectionTransfer();\nexport function getPanelData() {\n    const panelTransfer = LocalSelectionTransfer.getInstance();\n    const isPanelEvent = panelTransfer.hasData(PanelTransfer.prototype);\n    if (!isPanelEvent) {\n        return undefined;\n    }\n    return panelTransfer.getData(PanelTransfer.prototype)[0];\n}\nexport function getPaneData() {\n    const paneTransfer = LocalSelectionTransfer.getInstance();\n    const isPanelEvent = paneTransfer.hasData(PaneTransfer.prototype);\n    if (!isPanelEvent) {\n        return undefined;\n    }\n    return paneTransfer.getData(PaneTransfer.prototype)[0];\n}\n","export var Event;\n(function (Event) {\n    Event.any = (...children) => {\n        return (listener) => {\n            const disposables = children.map((child) => child(listener));\n            return {\n                dispose: () => {\n                    disposables.forEach((d) => {\n                        d.dispose();\n                    });\n                },\n            };\n        };\n    };\n})(Event || (Event = {}));\n// dumb event emitter with better typings than nodes event emitter\n// https://github.com/microsoft/vscode/blob/master/src/vs/base/common/event.ts\nexport class Emitter {\n    constructor(options) {\n        this.options = options;\n        this._listeners = [];\n        this._disposed = false;\n    }\n    get event() {\n        if (!this._event) {\n            this._event = (listener) => {\n                var _a;\n                if (((_a = this.options) === null || _a === void 0 ? void 0 : _a.replay) && this._last !== undefined) {\n                    listener(this._last);\n                }\n                this._listeners.push(listener);\n                return {\n                    dispose: () => {\n                        const index = this._listeners.indexOf(listener);\n                        if (index > -1) {\n                            this._listeners.splice(index, 1);\n                        }\n                    },\n                };\n            };\n        }\n        return this._event;\n    }\n    fire(e) {\n        this._last = e;\n        for (const listener of this._listeners) {\n            listener(e);\n        }\n    }\n    dispose() {\n        this._listeners = [];\n        this._disposed = true;\n    }\n}\nexport function addDisposableWindowListener(element, type, listener, options) {\n    element.addEventListener(type, listener, options);\n    return {\n        dispose: () => {\n            element.removeEventListener(type, listener);\n        },\n    };\n}\nexport function addDisposableListener(element, type, listener, options) {\n    element.addEventListener(type, listener, options);\n    return {\n        dispose: () => {\n            element.removeEventListener(type, listener);\n        },\n    };\n}\nexport class TickDelayedEvent {\n    constructor() {\n        this._onFired = new Emitter();\n        this.onEvent = this._onFired.event;\n    }\n    fire() {\n        if (this.timer) {\n            clearTimeout(this.timer);\n        }\n        this.timer = setTimeout(() => {\n            this._onFired.fire();\n            clearTimeout(this.timer);\n        });\n    }\n    dispose() {\n        this._onFired.dispose();\n    }\n}\n","export var Disposable;\n(function (Disposable) {\n    Disposable.NONE = {\n        dispose: () => {\n            // noop\n        },\n    };\n})(Disposable || (Disposable = {}));\nexport class CompositeDisposable {\n    constructor(...args) {\n        this.disposables = args;\n    }\n    static from(...args) {\n        return new CompositeDisposable(...args);\n    }\n    addDisposables(...args) {\n        args.forEach((arg) => this.disposables.push(arg));\n    }\n    dispose() {\n        this.disposables.forEach((arg) => arg.dispose());\n    }\n}\nexport class MutableDisposable {\n    constructor() {\n        this._disposable = Disposable.NONE;\n    }\n    set value(disposable) {\n        if (this._disposable) {\n            this._disposable.dispose();\n        }\n        this._disposable = disposable;\n    }\n    dispose() {\n        if (this._disposable) {\n            this._disposable.dispose();\n            this._disposable = Disposable.NONE;\n        }\n    }\n}\n","import { Emitter, addDisposableListener, addDisposableWindowListener, } from './events';\nimport { CompositeDisposable } from './lifecycle';\nexport function watchElementResize(element, cb) {\n    const observer = new ResizeObserver((entires) => {\n        const firstEntry = entires[0];\n        cb(firstEntry);\n    });\n    observer.observe(element);\n    return {\n        dispose: () => {\n            observer.unobserve(element);\n            observer.disconnect();\n        },\n    };\n}\nexport const removeClasses = (element, ...classes) => {\n    for (const classname of classes) {\n        if (element.classList.contains(classname)) {\n            element.classList.remove(classname);\n        }\n    }\n};\nexport const addClasses = (element, ...classes) => {\n    for (const classname of classes) {\n        if (!element.classList.contains(classname)) {\n            element.classList.add(classname);\n        }\n    }\n};\nexport const toggleClass = (element, className, isToggled) => {\n    const hasClass = element.classList.contains(className);\n    if (isToggled && !hasClass) {\n        element.classList.add(className);\n    }\n    if (!isToggled && hasClass) {\n        element.classList.remove(className);\n    }\n};\nexport function isAncestor(testChild, testAncestor) {\n    while (testChild) {\n        if (testChild === testAncestor) {\n            return true;\n        }\n        testChild = testChild.parentNode;\n    }\n    return false;\n}\nexport function getElementsByTagName(tag) {\n    return Array.prototype.slice.call(document.getElementsByTagName(tag), 0);\n}\nexport function trackFocus(element) {\n    return new FocusTracker(element);\n}\n/**\n * Track focus on an element. Ensure tabIndex is set when an HTMLElement is not focusable by default\n */\nclass FocusTracker extends CompositeDisposable {\n    constructor(element) {\n        super();\n        this._onDidFocus = new Emitter();\n        this.onDidFocus = this._onDidFocus.event;\n        this._onDidBlur = new Emitter();\n        this.onDidBlur = this._onDidBlur.event;\n        let hasFocus = isAncestor(document.activeElement, element);\n        let loosingFocus = false;\n        const onFocus = () => {\n            loosingFocus = false;\n            if (!hasFocus) {\n                hasFocus = true;\n                this._onDidFocus.fire();\n            }\n        };\n        const onBlur = () => {\n            if (hasFocus) {\n                loosingFocus = true;\n                window.setTimeout(() => {\n                    if (loosingFocus) {\n                        loosingFocus = false;\n                        hasFocus = false;\n                        this._onDidBlur.fire();\n                    }\n                }, 0);\n            }\n        };\n        this._refreshStateHandler = () => {\n            const currentNodeHasFocus = isAncestor(document.activeElement, element);\n            if (currentNodeHasFocus !== hasFocus) {\n                if (hasFocus) {\n                    onBlur();\n                }\n                else {\n                    onFocus();\n                }\n            }\n        };\n        if (element instanceof HTMLElement) {\n            this.addDisposables(addDisposableListener(element, 'focus', onFocus, true));\n            this.addDisposables(addDisposableListener(element, 'blur', onBlur, true));\n        }\n        else {\n            this.addDisposables(addDisposableWindowListener(element, 'focus', onFocus, true));\n            this.addDisposables(addDisposableWindowListener(element, 'blur', onBlur, true));\n        }\n    }\n    refreshState() {\n        this._refreshStateHandler();\n    }\n    dispose() {\n        super.dispose();\n        this._onDidBlur.dispose();\n        this._onDidFocus.dispose();\n    }\n}\n","export const clamp = (value, min, max) => {\n    if (min > max) {\n        throw new Error(`${min} > ${max} is an invalid condition`);\n    }\n    return Math.min(max, Math.max(value, min));\n};\nexport const sequentialNumberGenerator = () => {\n    let value = 1;\n    return { next: () => (value++).toString() };\n};\n","export function tail(arr) {\n    if (arr.length === 0) {\n        throw new Error('Invalid tail call');\n    }\n    return [arr.slice(0, arr.length - 1), arr[arr.length - 1]];\n}\nexport function last(arr) {\n    return arr.length > 0 ? arr[arr.length - 1] : undefined;\n}\nexport function sequenceEquals(arr1, arr2) {\n    if (arr1.length !== arr2.length) {\n        return false;\n    }\n    for (let i = 0; i < arr1.length; i++) {\n        if (arr1[i] !== arr2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Pushes an element to the start of the array, if found.\n */\nexport function pushToStart(arr, value) {\n    const index = arr.indexOf(value);\n    if (index > -1) {\n        arr.splice(index, 1);\n        arr.unshift(value);\n    }\n}\n/**\n * Pushes an element to the end of the array, if found.\n */\nexport function pushToEnd(arr, value) {\n    const index = arr.indexOf(value);\n    if (index > -1) {\n        arr.splice(index, 1);\n        arr.push(value);\n    }\n}\nexport const range = (from, to) => {\n    const result = [];\n    if (typeof to !== 'number') {\n        to = from;\n        from = 0;\n    }\n    if (from <= to) {\n        for (let i = from; i < to; i++) {\n            result.push(i);\n        }\n    }\n    else {\n        for (let i = from; i > to; i--) {\n            result.push(i);\n        }\n    }\n    return result;\n};\nexport function firstIndex(array, fn) {\n    for (let i = 0; i < array.length; i++) {\n        const element = array[i];\n        if (fn(element)) {\n            return i;\n        }\n    }\n    return -1;\n}\n","import { clamp } from '../../math';\nexport class ViewItem {\n    constructor(container, view, size, disposable) {\n        this.container = container;\n        this.view = view;\n        this.disposable = disposable;\n        this._cachedVisibleSize = undefined;\n        if (typeof size === 'number') {\n            this._size = size;\n            this._cachedVisibleSize = undefined;\n            container.classList.add('visible');\n        }\n        else {\n            this._size = 0;\n            this._cachedVisibleSize = size.cachedVisibleSize;\n        }\n    }\n    set size(size) {\n        this._size = size;\n    }\n    get size() {\n        return this._size;\n    }\n    get cachedVisibleSize() {\n        return this._cachedVisibleSize;\n    }\n    get visible() {\n        return typeof this._cachedVisibleSize === 'undefined';\n    }\n    setVisible(visible, size) {\n        var _a;\n        if (visible === this.visible) {\n            return;\n        }\n        if (visible) {\n            this.size = clamp((_a = this._cachedVisibleSize) !== null && _a !== void 0 ? _a : 0, this.viewMinimumSize, this.viewMaximumSize);\n            this._cachedVisibleSize = undefined;\n        }\n        else {\n            this._cachedVisibleSize =\n                typeof size === 'number' ? size : this.size;\n            this.size = 0;\n        }\n        this.container.classList.toggle('visible', visible);\n        if (this.view.setVisible) {\n            this.view.setVisible(visible);\n        }\n    }\n    get minimumSize() {\n        return this.visible ? this.view.minimumSize : 0;\n    }\n    get viewMinimumSize() {\n        return this.view.minimumSize;\n    }\n    get maximumSize() {\n        return this.visible ? this.view.maximumSize : 0;\n    }\n    get viewMaximumSize() {\n        return this.view.maximumSize;\n    }\n    get priority() {\n        return this.view.priority;\n    }\n    get snap() {\n        return !!this.view.snap;\n    }\n    set enabled(enabled) {\n        this.container.style.pointerEvents = enabled ? '' : 'none';\n    }\n    // layout(offset: number, layoutContext: TLayoutContext | undefined): void {\n    //     this.layoutContainer(offset);\n    //     this.view.layout(this.size, offset, layoutContext);\n    // }\n    // abstract layoutContainer(offset: number): void;\n    dispose() {\n        this.disposable.dispose();\n        return this.view;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/splitview\n *--------------------------------------------------------------------------------------------*/\nimport { removeClasses, addClasses, toggleClass, getElementsByTagName, } from '../../dom';\nimport { clamp } from '../../math';\nimport { Emitter } from '../../events';\nimport { pushToStart, pushToEnd, range, firstIndex } from '../../array';\nimport { ViewItem } from './viewItem';\nexport var Orientation;\n(function (Orientation) {\n    Orientation[\"HORIZONTAL\"] = \"HORIZONTAL\";\n    Orientation[\"VERTICAL\"] = \"VERTICAL\";\n})(Orientation || (Orientation = {}));\nexport var SashState;\n(function (SashState) {\n    SashState[SashState[\"MAXIMUM\"] = 0] = \"MAXIMUM\";\n    SashState[SashState[\"MINIMUM\"] = 1] = \"MINIMUM\";\n    SashState[SashState[\"DISABLED\"] = 2] = \"DISABLED\";\n    SashState[SashState[\"ENABLED\"] = 3] = \"ENABLED\";\n})(SashState || (SashState = {}));\nexport var LayoutPriority;\n(function (LayoutPriority) {\n    LayoutPriority[\"Low\"] = \"low\";\n    LayoutPriority[\"High\"] = \"high\";\n    LayoutPriority[\"Normal\"] = \"normal\";\n})(LayoutPriority || (LayoutPriority = {}));\nexport var Sizing;\n(function (Sizing) {\n    Sizing.Distribute = { type: 'distribute' };\n    function Split(index) {\n        return { type: 'split', index };\n    }\n    Sizing.Split = Split;\n    function Invisible(cachedVisibleSize) {\n        return { type: 'invisible', cachedVisibleSize };\n    }\n    Sizing.Invisible = Invisible;\n})(Sizing || (Sizing = {}));\nexport class Splitview {\n    constructor(container, options) {\n        this.container = container;\n        this.views = [];\n        this.sashes = [];\n        this._size = 0;\n        this._orthogonalSize = 0;\n        this.contentSize = 0;\n        this._proportions = undefined;\n        this._onDidSashEnd = new Emitter();\n        this.onDidSashEnd = this._onDidSashEnd.event;\n        this._onDidAddView = new Emitter();\n        this.onDidAddView = this._onDidAddView.event;\n        this._onDidRemoveView = new Emitter();\n        this.onDidRemoveView = this._onDidRemoveView.event;\n        this._startSnappingEnabled = true;\n        this._endSnappingEnabled = true;\n        this.resize = (index, delta, sizes = this.views.map((x) => x.size), lowPriorityIndexes, highPriorityIndexes, overloadMinDelta = Number.NEGATIVE_INFINITY, overloadMaxDelta = Number.POSITIVE_INFINITY, snapBefore, snapAfter) => {\n            if (index < 0 || index > this.views.length) {\n                return 0;\n            }\n            const upIndexes = range(index, -1);\n            const downIndexes = range(index + 1, this.views.length);\n            //\n            if (highPriorityIndexes) {\n                for (const i of highPriorityIndexes) {\n                    pushToStart(upIndexes, i);\n                    pushToStart(downIndexes, i);\n                }\n            }\n            if (lowPriorityIndexes) {\n                for (const i of lowPriorityIndexes) {\n                    pushToEnd(upIndexes, i);\n                    pushToEnd(downIndexes, i);\n                }\n            }\n            //\n            const upItems = upIndexes.map((i) => this.views[i]);\n            const upSizes = upIndexes.map((i) => sizes[i]);\n            //\n            const downItems = downIndexes.map((i) => this.views[i]);\n            const downSizes = downIndexes.map((i) => sizes[i]);\n            //\n            const minDeltaUp = upIndexes.reduce((_, i) => _ + this.views[i].minimumSize - sizes[i], 0);\n            const maxDeltaUp = upIndexes.reduce((_, i) => _ + this.views[i].maximumSize - sizes[i], 0);\n            //\n            const maxDeltaDown = downIndexes.length === 0\n                ? Number.POSITIVE_INFINITY\n                : downIndexes.reduce((_, i) => _ + sizes[i] - this.views[i].minimumSize, 0);\n            const minDeltaDown = downIndexes.length === 0\n                ? Number.NEGATIVE_INFINITY\n                : downIndexes.reduce((_, i) => _ + sizes[i] - this.views[i].maximumSize, 0);\n            //\n            const minDelta = Math.max(minDeltaUp, minDeltaDown);\n            const maxDelta = Math.min(maxDeltaDown, maxDeltaUp);\n            //\n            let snapped = false;\n            if (snapBefore) {\n                const snapView = this.views[snapBefore.index];\n                const visible = delta >= snapBefore.limitDelta;\n                snapped = visible !== snapView.visible;\n                snapView.setVisible(visible, snapBefore.size);\n            }\n            if (!snapped && snapAfter) {\n                const snapView = this.views[snapAfter.index];\n                const visible = delta < snapAfter.limitDelta;\n                snapped = visible !== snapView.visible;\n                snapView.setVisible(visible, snapAfter.size);\n            }\n            if (snapped) {\n                return this.resize(index, delta, sizes, lowPriorityIndexes, highPriorityIndexes, overloadMinDelta, overloadMaxDelta);\n            }\n            //\n            const tentativeDelta = clamp(delta, minDelta, maxDelta);\n            let actualDelta = 0;\n            //\n            let deltaUp = tentativeDelta;\n            for (let i = 0; i < upItems.length; i++) {\n                const item = upItems[i];\n                const size = clamp(upSizes[i] + deltaUp, item.minimumSize, item.maximumSize);\n                const viewDelta = size - upSizes[i];\n                actualDelta += viewDelta;\n                deltaUp -= viewDelta;\n                item.size = size;\n            }\n            //\n            let deltaDown = actualDelta;\n            for (let i = 0; i < downItems.length; i++) {\n                const item = downItems[i];\n                const size = clamp(downSizes[i] - deltaDown, item.minimumSize, item.maximumSize);\n                const viewDelta = size - downSizes[i];\n                deltaDown += viewDelta;\n                item.size = size;\n            }\n            //\n            return delta;\n        };\n        this._orientation = options.orientation;\n        this.element = this.createContainer();\n        this.proportionalLayout =\n            options.proportionalLayout === undefined\n                ? true\n                : !!options.proportionalLayout;\n        this.viewContainer = this.createViewContainer();\n        this.sashContainer = this.createSashContainer();\n        this.element.appendChild(this.sashContainer);\n        this.element.appendChild(this.viewContainer);\n        this.container.appendChild(this.element);\n        this.style(options.styles);\n        // We have an existing set of view, add them now\n        if (options.descriptor) {\n            this._size = options.descriptor.size;\n            options.descriptor.views.forEach((viewDescriptor, index) => {\n                const sizing = viewDescriptor.visible === undefined ||\n                    viewDescriptor.visible\n                    ? viewDescriptor.size\n                    : {\n                        type: 'invisible',\n                        cachedVisibleSize: viewDescriptor.size,\n                    };\n                const view = viewDescriptor.view;\n                this.addView(view, sizing, index, true\n                // true skip layout\n                );\n            });\n            // Initialize content size and proportions for first layout\n            this.contentSize = this.views.reduce((r, i) => r + i.size, 0);\n            this.saveProportions();\n        }\n    }\n    get size() {\n        return this._size;\n    }\n    set size(value) {\n        this._size = value;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    set orthogonalSize(value) {\n        this._orthogonalSize = value;\n    }\n    get length() {\n        return this.views.length;\n    }\n    get proportions() {\n        return this._proportions ? [...this._proportions] : undefined;\n    }\n    get orientation() {\n        return this._orientation;\n    }\n    set orientation(value) {\n        this._orientation = value;\n        const tmp = this.size;\n        this.size = this.orthogonalSize;\n        this.orthogonalSize = tmp;\n        removeClasses(this.element, 'horizontal', 'vertical');\n        this.element.classList.add(this.orientation == Orientation.HORIZONTAL\n            ? 'horizontal'\n            : 'vertical');\n    }\n    get minimumSize() {\n        return this.views.reduce((r, item) => r + item.minimumSize, 0);\n    }\n    get maximumSize() {\n        return this.length === 0\n            ? Number.POSITIVE_INFINITY\n            : this.views.reduce((r, item) => r + item.maximumSize, 0);\n    }\n    get startSnappingEnabled() {\n        return this._startSnappingEnabled;\n    }\n    set startSnappingEnabled(startSnappingEnabled) {\n        if (this._startSnappingEnabled === startSnappingEnabled) {\n            return;\n        }\n        this._startSnappingEnabled = startSnappingEnabled;\n        this.updateSashEnablement();\n    }\n    get endSnappingEnabled() {\n        return this._endSnappingEnabled;\n    }\n    set endSnappingEnabled(endSnappingEnabled) {\n        if (this._endSnappingEnabled === endSnappingEnabled) {\n            return;\n        }\n        this._endSnappingEnabled = endSnappingEnabled;\n        this.updateSashEnablement();\n    }\n    style(styles) {\n        if ((styles === null || styles === void 0 ? void 0 : styles.separatorBorder) === 'transparent') {\n            removeClasses(this.element, 'separator-border');\n            this.element.style.removeProperty('--dv-separator-border');\n        }\n        else {\n            addClasses(this.element, 'separator-border');\n            if (styles === null || styles === void 0 ? void 0 : styles.separatorBorder) {\n                this.element.style.setProperty('--dv-separator-border', styles.separatorBorder);\n            }\n        }\n    }\n    isViewVisible(index) {\n        if (index < 0 || index >= this.views.length) {\n            throw new Error('Index out of bounds');\n        }\n        const viewItem = this.views[index];\n        return viewItem.visible;\n    }\n    setViewVisible(index, visible) {\n        if (index < 0 || index >= this.views.length) {\n            throw new Error('Index out of bounds');\n        }\n        toggleClass(this.container, 'visible', visible);\n        const viewItem = this.views[index];\n        toggleClass(this.container, 'visible', visible);\n        viewItem.setVisible(visible, viewItem.size);\n        this.distributeEmptySpace(index);\n        this.layoutViews();\n        this.saveProportions();\n    }\n    getViewSize(index) {\n        if (index < 0 || index >= this.views.length) {\n            return -1;\n        }\n        return this.views[index].size;\n    }\n    resizeView(index, size) {\n        if (index < 0 || index >= this.views.length) {\n            return;\n        }\n        const indexes = range(this.views.length).filter((i) => i !== index);\n        const lowPriorityIndexes = [\n            ...indexes.filter((i) => this.views[i].priority === LayoutPriority.Low),\n            index,\n        ];\n        const highPriorityIndexes = indexes.filter((i) => this.views[i].priority === LayoutPriority.High);\n        const item = this.views[index];\n        size = Math.round(size);\n        size = clamp(size, item.minimumSize, Math.min(item.maximumSize, this._size));\n        item.size = size;\n        this.relayout(lowPriorityIndexes, highPriorityIndexes);\n    }\n    getViews() {\n        return this.views.map((x) => x.view);\n    }\n    onDidChange(item, size) {\n        const index = this.views.indexOf(item);\n        if (index < 0 || index >= this.views.length) {\n            return;\n        }\n        size = typeof size === 'number' ? size : item.size;\n        size = clamp(size, item.minimumSize, item.maximumSize);\n        item.size = size;\n        this.relayout([index]);\n    }\n    addView(view, size = { type: 'distribute' }, index = this.views.length, skipLayout) {\n        const container = document.createElement('div');\n        container.className = 'view';\n        container.appendChild(view.element);\n        let viewSize;\n        if (typeof size === 'number') {\n            viewSize = size;\n        }\n        else if (size.type === 'split') {\n            viewSize = this.getViewSize(size.index) / 2;\n        }\n        else if (size.type === 'invisible') {\n            viewSize = { cachedVisibleSize: size.cachedVisibleSize };\n        }\n        else {\n            viewSize = view.minimumSize;\n        }\n        const disposable = view.onDidChange((newSize) => this.onDidChange(viewItem, newSize));\n        const dispose = () => {\n            disposable === null || disposable === void 0 ? void 0 : disposable.dispose();\n            this.viewContainer.removeChild(container);\n        };\n        const viewItem = new ViewItem(container, view, viewSize, { dispose });\n        if (index === this.views.length) {\n            this.viewContainer.appendChild(container);\n        }\n        else {\n            this.viewContainer.insertBefore(container, this.viewContainer.children.item(index));\n        }\n        this.views.splice(index, 0, viewItem);\n        if (this.views.length > 1) {\n            //add sash\n            const sash = document.createElement('div');\n            sash.className = 'sash';\n            const onStart = (event) => {\n                for (const item of this.views) {\n                    item.enabled = false;\n                }\n                const iframes = [\n                    ...getElementsByTagName('iframe'),\n                    ...getElementsByTagName('webview'),\n                ];\n                for (const iframe of iframes) {\n                    iframe.style.pointerEvents = 'none';\n                }\n                const start = this._orientation === Orientation.HORIZONTAL\n                    ? event.clientX\n                    : event.clientY;\n                const sashIndex = firstIndex(this.sashes, (s) => s.container === sash);\n                //\n                const sizes = this.views.map((x) => x.size);\n                //\n                let snapBefore;\n                let snapAfter;\n                const upIndexes = range(sashIndex, -1);\n                const downIndexes = range(sashIndex + 1, this.views.length);\n                const minDeltaUp = upIndexes.reduce((r, i) => r + (this.views[i].minimumSize - sizes[i]), 0);\n                const maxDeltaUp = upIndexes.reduce((r, i) => r + (this.views[i].viewMaximumSize - sizes[i]), 0);\n                const maxDeltaDown = downIndexes.length === 0\n                    ? Number.POSITIVE_INFINITY\n                    : downIndexes.reduce((r, i) => r + (sizes[i] - this.views[i].minimumSize), 0);\n                const minDeltaDown = downIndexes.length === 0\n                    ? Number.NEGATIVE_INFINITY\n                    : downIndexes.reduce((r, i) => r +\n                        (sizes[i] - this.views[i].viewMaximumSize), 0);\n                const minDelta = Math.max(minDeltaUp, minDeltaDown);\n                const maxDelta = Math.min(maxDeltaDown, maxDeltaUp);\n                const snapBeforeIndex = this.findFirstSnapIndex(upIndexes);\n                const snapAfterIndex = this.findFirstSnapIndex(downIndexes);\n                if (typeof snapBeforeIndex === 'number') {\n                    const snappedViewItem = this.views[snapBeforeIndex];\n                    const halfSize = Math.floor(snappedViewItem.viewMinimumSize / 2);\n                    snapBefore = {\n                        index: snapBeforeIndex,\n                        limitDelta: snappedViewItem.visible\n                            ? minDelta - halfSize\n                            : minDelta + halfSize,\n                        size: snappedViewItem.size,\n                    };\n                }\n                if (typeof snapAfterIndex === 'number') {\n                    const snappedViewItem = this.views[snapAfterIndex];\n                    const halfSize = Math.floor(snappedViewItem.viewMinimumSize / 2);\n                    snapAfter = {\n                        index: snapAfterIndex,\n                        limitDelta: snappedViewItem.visible\n                            ? maxDelta + halfSize\n                            : maxDelta - halfSize,\n                        size: snappedViewItem.size,\n                    };\n                }\n                //\n                const mousemove = (mousemoveEvent) => {\n                    const current = this._orientation === Orientation.HORIZONTAL\n                        ? mousemoveEvent.clientX\n                        : mousemoveEvent.clientY;\n                    const delta = current - start;\n                    this.resize(sashIndex, delta, sizes, undefined, undefined, minDelta, maxDelta, snapBefore, snapAfter);\n                    this.distributeEmptySpace();\n                    this.layoutViews();\n                };\n                const end = () => {\n                    for (const item of this.views) {\n                        item.enabled = true;\n                    }\n                    for (const iframe of iframes) {\n                        iframe.style.pointerEvents = 'auto';\n                    }\n                    this.saveProportions();\n                    document.removeEventListener('mousemove', mousemove);\n                    document.removeEventListener('mouseup', end);\n                    document.removeEventListener('mouseend', end);\n                    this._onDidSashEnd.fire(undefined);\n                };\n                document.addEventListener('mousemove', mousemove);\n                document.addEventListener('mouseup', end);\n                document.addEventListener('mouseend', end);\n            };\n            sash.addEventListener('mousedown', onStart);\n            const sashItem = {\n                container: sash,\n                disposable: () => {\n                    sash.removeEventListener('mousedown', onStart);\n                    this.sashContainer.removeChild(sash);\n                },\n            };\n            this.sashContainer.appendChild(sash);\n            this.sashes.push(sashItem);\n        }\n        if (!skipLayout) {\n            this.relayout([index]);\n        }\n        if (!skipLayout &&\n            typeof size !== 'number' &&\n            size.type === 'distribute') {\n            this.distributeViewSizes();\n        }\n        this._onDidAddView.fire(view);\n    }\n    distributeViewSizes() {\n        const flexibleViewItems = [];\n        let flexibleSize = 0;\n        for (const item of this.views) {\n            if (item.maximumSize - item.minimumSize > 0) {\n                flexibleViewItems.push(item);\n                flexibleSize += item.size;\n            }\n        }\n        const size = Math.floor(flexibleSize / flexibleViewItems.length);\n        for (const item of flexibleViewItems) {\n            item.size = clamp(size, item.minimumSize, item.maximumSize);\n        }\n        const indexes = range(this.views.length);\n        const lowPriorityIndexes = indexes.filter((i) => this.views[i].priority === LayoutPriority.Low);\n        const highPriorityIndexes = indexes.filter((i) => this.views[i].priority === LayoutPriority.High);\n        this.relayout(lowPriorityIndexes, highPriorityIndexes);\n    }\n    removeView(index, sizing, skipLayout = false) {\n        // Remove view\n        const viewItem = this.views.splice(index, 1)[0];\n        viewItem.dispose();\n        // Remove sash\n        if (this.views.length >= 1) {\n            const sashIndex = Math.max(index - 1, 0);\n            const sashItem = this.sashes.splice(sashIndex, 1)[0];\n            sashItem.disposable();\n        }\n        if (!skipLayout) {\n            this.relayout();\n        }\n        if (sizing && sizing.type === 'distribute') {\n            this.distributeViewSizes();\n        }\n        this._onDidRemoveView.fire(viewItem.view);\n        return viewItem.view;\n    }\n    getViewCachedVisibleSize(index) {\n        if (index < 0 || index >= this.views.length) {\n            throw new Error('Index out of bounds');\n        }\n        const viewItem = this.views[index];\n        return viewItem.cachedVisibleSize;\n    }\n    moveView(from, to) {\n        const cachedVisibleSize = this.getViewCachedVisibleSize(from);\n        const sizing = typeof cachedVisibleSize === 'undefined'\n            ? this.getViewSize(from)\n            : Sizing.Invisible(cachedVisibleSize);\n        const view = this.removeView(from, undefined, true);\n        this.addView(view, sizing, to);\n    }\n    layout(size, orthogonalSize) {\n        const previousSize = Math.max(this.size, this.contentSize);\n        this.size = size;\n        this.orthogonalSize = orthogonalSize;\n        if (!this.proportions) {\n            const indexes = range(this.views.length);\n            const lowPriorityIndexes = indexes.filter((i) => this.views[i].priority === LayoutPriority.Low);\n            const highPriorityIndexes = indexes.filter((i) => this.views[i].priority === LayoutPriority.High);\n            this.resize(this.views.length - 1, size - previousSize, undefined, lowPriorityIndexes, highPriorityIndexes);\n        }\n        else {\n            for (let i = 0; i < this.views.length; i++) {\n                const item = this.views[i];\n                item.size = clamp(Math.round(this.proportions[i] * size), item.minimumSize, item.maximumSize);\n            }\n        }\n        this.distributeEmptySpace();\n        this.layoutViews();\n    }\n    relayout(lowPriorityIndexes, highPriorityIndexes) {\n        const contentSize = this.views.reduce((r, i) => r + i.size, 0);\n        this.resize(this.views.length - 1, this._size - contentSize, undefined, lowPriorityIndexes, highPriorityIndexes);\n        this.distributeEmptySpace();\n        this.layoutViews();\n        this.saveProportions();\n    }\n    distributeEmptySpace(lowPriorityIndex) {\n        const contentSize = this.views.reduce((r, i) => r + i.size, 0);\n        let emptyDelta = this.size - contentSize;\n        const indexes = range(this.views.length - 1, -1);\n        const lowPriorityIndexes = indexes.filter((i) => this.views[i].priority === LayoutPriority.Low);\n        const highPriorityIndexes = indexes.filter((i) => this.views[i].priority === LayoutPriority.High);\n        for (const index of highPriorityIndexes) {\n            pushToStart(indexes, index);\n        }\n        for (const index of lowPriorityIndexes) {\n            pushToEnd(indexes, index);\n        }\n        if (typeof lowPriorityIndex === 'number') {\n            pushToEnd(indexes, lowPriorityIndex);\n        }\n        for (let i = 0; emptyDelta !== 0 && i < indexes.length; i++) {\n            const item = this.views[indexes[i]];\n            const size = clamp(item.size + emptyDelta, item.minimumSize, item.maximumSize);\n            const viewDelta = size - item.size;\n            emptyDelta -= viewDelta;\n            item.size = size;\n        }\n    }\n    saveProportions() {\n        if (this.proportionalLayout && this.contentSize > 0) {\n            this._proportions = this.views.map((i) => i.size / this.contentSize);\n        }\n    }\n    layoutViews() {\n        this.contentSize = this.views.reduce((r, i) => r + i.size, 0);\n        let sum = 0;\n        const x = [];\n        this.updateSashEnablement();\n        for (let i = 0; i < this.views.length - 1; i++) {\n            sum += this.views[i].size;\n            x.push(sum);\n            const offset = Math.min(Math.max(0, sum - 2), this.size - 4);\n            if (this._orientation === Orientation.HORIZONTAL) {\n                this.sashes[i].container.style.left = `${offset}px`;\n                this.sashes[i].container.style.top = `0px`;\n            }\n            if (this._orientation === Orientation.VERTICAL) {\n                this.sashes[i].container.style.left = `0px`;\n                this.sashes[i].container.style.top = `${offset}px`;\n            }\n        }\n        this.views.forEach((view, i) => {\n            if (this._orientation === Orientation.HORIZONTAL) {\n                view.container.style.width = `${view.size}px`;\n                view.container.style.left = i == 0 ? '0px' : `${x[i - 1]}px`;\n                view.container.style.top = '';\n                view.container.style.height = '';\n            }\n            if (this._orientation === Orientation.VERTICAL) {\n                view.container.style.height = `${view.size}px`;\n                view.container.style.top = i == 0 ? '0px' : `${x[i - 1]}px`;\n                view.container.style.width = '';\n                view.container.style.left = '';\n            }\n            view.view.layout(view.size, this._orthogonalSize);\n        });\n    }\n    findFirstSnapIndex(indexes) {\n        // visible views first\n        for (const index of indexes) {\n            const viewItem = this.views[index];\n            if (!viewItem.visible) {\n                continue;\n            }\n            if (viewItem.snap) {\n                return index;\n            }\n        }\n        // then, hidden views\n        for (const index of indexes) {\n            const viewItem = this.views[index];\n            if (viewItem.visible &&\n                viewItem.maximumSize - viewItem.minimumSize > 0) {\n                return undefined;\n            }\n            if (!viewItem.visible && viewItem.snap) {\n                return index;\n            }\n        }\n        return undefined;\n    }\n    updateSashEnablement() {\n        let previous = false;\n        const collapsesDown = this.views.map((i) => (previous = i.size - i.minimumSize > 0 || previous));\n        previous = false;\n        const expandsDown = this.views.map((i) => (previous = i.maximumSize - i.size > 0 || previous));\n        const reverseViews = [...this.views].reverse();\n        previous = false;\n        const collapsesUp = reverseViews\n            .map((i) => (previous = i.size - i.minimumSize > 0 || previous))\n            .reverse();\n        previous = false;\n        const expandsUp = reverseViews\n            .map((i) => (previous = i.maximumSize - i.size > 0 || previous))\n            .reverse();\n        let position = 0;\n        for (let index = 0; index < this.sashes.length; index++) {\n            const sash = this.sashes[index];\n            const viewItem = this.views[index];\n            position += viewItem.size;\n            const min = !(collapsesDown[index] && expandsUp[index + 1]);\n            const max = !(expandsDown[index] && collapsesUp[index + 1]);\n            if (min && max) {\n                const upIndexes = range(index, -1);\n                const downIndexes = range(index + 1, this.views.length);\n                const snapBeforeIndex = this.findFirstSnapIndex(upIndexes);\n                const snapAfterIndex = this.findFirstSnapIndex(downIndexes);\n                const snappedBefore = typeof snapBeforeIndex === 'number' &&\n                    !this.views[snapBeforeIndex].visible;\n                const snappedAfter = typeof snapAfterIndex === 'number' &&\n                    !this.views[snapAfterIndex].visible;\n                if (snappedBefore &&\n                    collapsesUp[index] &&\n                    (position > 0 || this.startSnappingEnabled)) {\n                    this.updateSash(sash, SashState.MINIMUM);\n                }\n                else if (snappedAfter &&\n                    collapsesDown[index] &&\n                    (position < this.contentSize || this.endSnappingEnabled)) {\n                    this.updateSash(sash, SashState.MAXIMUM);\n                }\n                else {\n                    this.updateSash(sash, SashState.DISABLED);\n                }\n            }\n            else if (min && !max) {\n                this.updateSash(sash, SashState.MINIMUM);\n            }\n            else if (!min && max) {\n                this.updateSash(sash, SashState.MAXIMUM);\n            }\n            else {\n                this.updateSash(sash, SashState.ENABLED);\n            }\n        }\n    }\n    updateSash(sash, state) {\n        toggleClass(sash.container, 'disabled', state === SashState.DISABLED);\n        toggleClass(sash.container, 'enabled', state === SashState.ENABLED);\n        toggleClass(sash.container, 'maximum', state === SashState.MAXIMUM);\n        toggleClass(sash.container, 'minimum', state === SashState.MINIMUM);\n    }\n    createViewContainer() {\n        const element = document.createElement('div');\n        element.className = 'view-container';\n        return element;\n    }\n    createSashContainer() {\n        const element = document.createElement('div');\n        element.className = 'sash-container';\n        return element;\n    }\n    createContainer() {\n        const element = document.createElement('div');\n        const orientationClassname = this._orientation === Orientation.HORIZONTAL\n            ? 'horizontal'\n            : 'vertical';\n        element.className = `split-view-container ${orientationClassname}`;\n        return element;\n    }\n    dispose() {\n        this._onDidSashEnd.dispose();\n        this._onDidAddView.dispose();\n        this._onDidRemoveView.dispose();\n        for (let i = 0; i < this.element.children.length; i++) {\n            if (this.element.children.item(i) === this.element) {\n                this.element.removeChild(this.element);\n                break;\n            }\n        }\n        this.element.remove();\n    }\n}\n","import { toggleClass } from '../dom';\nimport { Emitter } from '../events';\nimport { CompositeDisposable } from '../lifecycle';\nimport { DragAndDropObserver } from './dnd';\nexport var Position;\n(function (Position) {\n    Position[\"Top\"] = \"Top\";\n    Position[\"Left\"] = \"Left\";\n    Position[\"Bottom\"] = \"Bottom\";\n    Position[\"Right\"] = \"Right\";\n    Position[\"Center\"] = \"Center\";\n})(Position || (Position = {}));\nfunction isBooleanValue(canDisplayOverlay) {\n    return typeof canDisplayOverlay === 'boolean';\n}\nexport class Droptarget extends CompositeDisposable {\n    constructor(element, options) {\n        super();\n        this.element = element;\n        this.options = options;\n        this._onDrop = new Emitter();\n        this.onDrop = this._onDrop.event;\n        this.addDisposables(this._onDrop, new DragAndDropObserver(this.element, {\n            onDragEnter: () => undefined,\n            onDragOver: (e) => {\n                const width = this.element.clientWidth;\n                const height = this.element.clientHeight;\n                if (width === 0 || height === 0) {\n                    return; // avoid div!0\n                }\n                const x = e.offsetX;\n                const y = e.offsetY;\n                const xp = (100 * x) / width;\n                const yp = (100 * y) / height;\n                const quadrant = this.calculateQuadrant(this.options.validOverlays, xp, yp);\n                if (isBooleanValue(this.options.canDisplayOverlay)) {\n                    if (!this.options.canDisplayOverlay) {\n                        return;\n                    }\n                }\n                else if (!this.options.canDisplayOverlay(e, quadrant)) {\n                    return;\n                }\n                if (!this.target) {\n                    this.target = document.createElement('div');\n                    this.target.className = 'drop-target-dropzone';\n                    this.overlay = document.createElement('div');\n                    this.overlay.className = 'drop-target-selection';\n                    this._state = Position.Center;\n                    this.target.appendChild(this.overlay);\n                    this.element.classList.add('drop-target');\n                    this.element.append(this.target);\n                }\n                if (this.options.validOverlays === 'none') {\n                    return;\n                }\n                if (!this.target || !this.overlay) {\n                    return;\n                }\n                const isSmallX = width < 100;\n                const isSmallY = height < 100;\n                this.toggleClasses(quadrant, isSmallX, isSmallY);\n                this.setState(quadrant);\n            },\n            onDragLeave: () => {\n                this.removeDropTarget();\n            },\n            onDragEnd: () => {\n                this.removeDropTarget();\n            },\n            onDrop: (e) => {\n                e.preventDefault();\n                e.stopPropagation();\n                const state = this._state;\n                this.removeDropTarget();\n                if (state) {\n                    this._onDrop.fire({ position: state, nativeEvent: e });\n                }\n            },\n        }));\n    }\n    get state() {\n        return this._state;\n    }\n    set validOverlays(value) {\n        this.options.validOverlays = value;\n    }\n    set canDisplayOverlay(value) {\n        this.options.canDisplayOverlay = value;\n    }\n    dispose() {\n        this.removeDropTarget();\n    }\n    toggleClasses(quadrant, isSmallX, isSmallY) {\n        if (!this.overlay) {\n            return;\n        }\n        const isLeft = quadrant === 'left';\n        const isRight = quadrant === 'right';\n        const isTop = quadrant === 'top';\n        const isBottom = quadrant === 'bottom';\n        toggleClass(this.overlay, 'right', !isSmallX && isRight);\n        toggleClass(this.overlay, 'left', !isSmallX && isLeft);\n        toggleClass(this.overlay, 'top', !isSmallY && isTop);\n        toggleClass(this.overlay, 'bottom', !isSmallY && isBottom);\n        toggleClass(this.overlay, 'small-right', isSmallX && isRight);\n        toggleClass(this.overlay, 'small-left', isSmallX && isLeft);\n        toggleClass(this.overlay, 'small-top', isSmallY && isTop);\n        toggleClass(this.overlay, 'small-bottom', isSmallY && isBottom);\n    }\n    setState(quadrant) {\n        switch (quadrant) {\n            case 'top':\n                this._state = Position.Top;\n                break;\n            case 'left':\n                this._state = Position.Left;\n                break;\n            case 'bottom':\n                this._state = Position.Bottom;\n                break;\n            case 'right':\n                this._state = Position.Right;\n                break;\n            default:\n                this._state = Position.Center;\n                break;\n        }\n    }\n    calculateQuadrant(overlayType, xp, yp) {\n        switch (overlayType) {\n            case 'all':\n                if (xp < 20) {\n                    return 'left';\n                }\n                if (xp > 80) {\n                    return 'right';\n                }\n                if (yp < 20) {\n                    return 'top';\n                }\n                if (yp > 80) {\n                    return 'bottom';\n                }\n                break;\n            case 'vertical':\n                if (yp < 50) {\n                    return 'top';\n                }\n                return 'bottom';\n            case 'horizontal':\n                if (xp < 50) {\n                    return 'left';\n                }\n                return 'right';\n        }\n        return null;\n    }\n    removeDropTarget() {\n        if (this.target) {\n            this._state = undefined;\n            this.element.removeChild(this.target);\n            this.target = undefined;\n            this.element.classList.remove('drop-target');\n        }\n    }\n}\n","import { Splitview, Orientation, } from '../splitview/core/splitview';\nimport { CompositeDisposable } from '../lifecycle';\nimport { Emitter } from '../events';\nimport { addClasses, removeClasses } from '../dom';\nexport class Paneview extends CompositeDisposable {\n    constructor(container, options) {\n        var _a;\n        super();\n        this.paneItems = [];\n        this.skipAnimation = false;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._orientation = (_a = options.orientation) !== null && _a !== void 0 ? _a : Orientation.VERTICAL;\n        this.element = document.createElement('div');\n        this.element.className = 'pane-container';\n        container.appendChild(this.element);\n        this.splitview = new Splitview(this.element, {\n            orientation: this._orientation,\n            proportionalLayout: false,\n            descriptor: options.descriptor,\n        });\n        // if we've added views from the descriptor we need to\n        // add the panes to our Pane array and setup animation\n        this.getPanes().forEach((pane) => {\n            const disposable = new CompositeDisposable(pane.onDidChangeExpansionState(() => {\n                this.setupAnimation();\n                this._onDidChange.fire(undefined);\n            }));\n            const paneItem = {\n                pane,\n                disposable: {\n                    dispose: () => {\n                        disposable.dispose();\n                    },\n                },\n            };\n            this.paneItems.push(paneItem);\n            pane.orthogonalSize = this.splitview.orthogonalSize;\n        });\n        this.addDisposables(this._onDidChange, this.splitview.onDidSashEnd(() => {\n            this._onDidChange.fire(undefined);\n        }), this.splitview.onDidAddView(() => {\n            this._onDidChange.fire();\n        }), this.splitview.onDidRemoveView(() => {\n            this._onDidChange.fire();\n        }));\n    }\n    get onDidAddView() {\n        return this.splitview.onDidAddView;\n    }\n    get onDidRemoveView() {\n        return this.splitview.onDidRemoveView;\n    }\n    get minimumSize() {\n        return this.splitview.minimumSize;\n    }\n    get maximumSize() {\n        return this.splitview.maximumSize;\n    }\n    get orientation() {\n        return this.splitview.orientation;\n    }\n    get size() {\n        return this.splitview.size;\n    }\n    get orthogonalSize() {\n        return this.splitview.orthogonalSize;\n    }\n    addPane(pane, size, index = this.splitview.length, skipLayout = false) {\n        const disposable = pane.onDidChangeExpansionState(() => {\n            this.setupAnimation();\n            this._onDidChange.fire(undefined);\n        });\n        const paneItem = {\n            pane,\n            disposable: {\n                dispose: () => {\n                    disposable.dispose();\n                },\n            },\n        };\n        this.paneItems.splice(index, 0, paneItem);\n        pane.orthogonalSize = this.splitview.orthogonalSize;\n        this.splitview.addView(pane, size, index, skipLayout);\n    }\n    getViewSize(index) {\n        return this.splitview.getViewSize(index);\n    }\n    getPanes() {\n        return this.splitview.getViews();\n    }\n    removePane(index, options = { skipDispose: false }) {\n        const paneItem = this.paneItems.splice(index, 1)[0];\n        this.splitview.removeView(index);\n        if (!options.skipDispose) {\n            paneItem.disposable.dispose();\n            paneItem.pane.dispose();\n        }\n        return paneItem;\n    }\n    moveView(from, to) {\n        if (from === to) {\n            return;\n        }\n        const view = this.removePane(from, { skipDispose: true });\n        this.skipAnimation = true;\n        try {\n            this.addPane(view.pane, view.pane.size, to, false);\n        }\n        finally {\n            this.skipAnimation = false;\n        }\n    }\n    layout(size, orthogonalSize) {\n        this.splitview.layout(size, orthogonalSize);\n    }\n    setupAnimation() {\n        if (this.skipAnimation) {\n            return;\n        }\n        if (this.animationTimer) {\n            clearTimeout(this.animationTimer);\n            this.animationTimer = undefined;\n        }\n        addClasses(this.element, 'animated');\n        this.animationTimer = setTimeout(() => {\n            this.animationTimer = undefined;\n            removeClasses(this.element, 'animated');\n        }, 200);\n    }\n    dispose() {\n        super.dispose();\n        if (this.animationTimer) {\n            clearTimeout(this.animationTimer);\n            this.animationTimer = undefined;\n        }\n        this.paneItems.forEach((paneItem) => {\n            paneItem.disposable.dispose();\n            paneItem.pane.dispose();\n        });\n        this.paneItems = [];\n        this.splitview.dispose();\n        this.element.remove();\n    }\n}\n","import { addDisposableListener } from '../events';\nimport { CompositeDisposable } from '../lifecycle';\nexport class DragAndDropObserver extends CompositeDisposable {\n    constructor(element, callbacks) {\n        super();\n        this.element = element;\n        this.callbacks = callbacks;\n        // A helper to fix issues with repeated DRAG_ENTER / DRAG_LEAVE\n        // calls see https://github.com/microsoft/vscode/issues/14470\n        // when the element has child elements where the events are fired\n        // repeadedly.\n        this.counter = 0;\n        this.registerListeners();\n    }\n    registerListeners() {\n        this.addDisposables(addDisposableListener(this.element, 'dragenter', (e) => {\n            this.counter++;\n            this.callbacks.onDragEnter(e);\n        }));\n        this.addDisposables(addDisposableListener(this.element, 'dragover', (e) => {\n            e.preventDefault(); // needed so that the drop event fires (https://stackoverflow.com/questions/21339924/drop-event-not-firing-in-chrome)\n            if (this.callbacks.onDragOver) {\n                this.callbacks.onDragOver(e);\n            }\n        }));\n        this.addDisposables(addDisposableListener(this.element, 'dragleave', (e) => {\n            this.counter--;\n            if (this.counter === 0) {\n                this.callbacks.onDragLeave(e);\n            }\n        }));\n        this.addDisposables(addDisposableListener(this.element, 'dragend', (e) => {\n            this.counter = 0;\n            this.callbacks.onDragEnd(e);\n        }));\n        this.addDisposables(addDisposableListener(this.element, 'drop', (e) => {\n            this.counter = 0;\n            this.callbacks.onDrop(e);\n        }));\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/grid\n *--------------------------------------------------------------------------------------------*/\nimport { Orientation, } from '../splitview/core/splitview';\nimport { Emitter } from '../events';\nexport class LeafNode {\n    constructor(view, orientation, orthogonalSize, size = 0) {\n        this.view = view;\n        this.orientation = orientation;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._orthogonalSize = orthogonalSize;\n        this._size = size;\n        this._disposable = this.view.onDidChange((event) => {\n            if (event) {\n                this._onDidChange.fire(this.orientation === Orientation.VERTICAL\n                    ? event.width\n                    : event.height);\n            }\n            else {\n                this._onDidChange.fire(undefined);\n            }\n        });\n    }\n    get minimumWidth() {\n        return this.view.minimumWidth;\n    }\n    get maximumWidth() {\n        return this.view.maximumWidth;\n    }\n    get minimumHeight() {\n        return this.view.minimumHeight;\n    }\n    get maximumHeight() {\n        return this.view.maximumHeight;\n    }\n    get priority() {\n        return this.view.priority;\n    }\n    get snap() {\n        return this.view.snap;\n    }\n    get minimumSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumHeight\n            : this.minimumWidth;\n    }\n    get maximumSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumHeight\n            : this.maximumWidth;\n    }\n    get minimumOrthogonalSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumWidth\n            : this.minimumHeight;\n    }\n    get maximumOrthogonalSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumWidth\n            : this.maximumHeight;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    get size() {\n        return this._size;\n    }\n    get element() {\n        return this.view.element;\n    }\n    get width() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.orthogonalSize\n            : this.size;\n    }\n    get height() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.size\n            : this.orthogonalSize;\n    }\n    setVisible(visible) {\n        if (this.view.setVisible) {\n            this.view.setVisible(visible);\n            this._onDidChange.fire(undefined);\n        }\n    }\n    layout(size, orthogonalSize) {\n        this._size = size;\n        this._orthogonalSize = orthogonalSize;\n        this.view.layout(this.width, this.height);\n    }\n    dispose() {\n        this._onDidChange.dispose();\n        this._disposable.dispose();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/grid\n *--------------------------------------------------------------------------------------------*/\nimport { Splitview, Orientation, LayoutPriority, } from '../splitview/core/splitview';\nimport { Emitter, Event } from '../events';\nimport { LeafNode } from './leafNode';\nimport { CompositeDisposable, Disposable } from '../lifecycle';\nexport class BranchNode extends CompositeDisposable {\n    constructor(orientation, proportionalLayout, styles, size, orthogonalSize, childDescriptors) {\n        super();\n        this.orientation = orientation;\n        this.proportionalLayout = proportionalLayout;\n        this.styles = styles;\n        this.children = [];\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._childrenDisposable = Disposable.NONE;\n        this._orthogonalSize = orthogonalSize;\n        this._size = size;\n        this.element = document.createElement('div');\n        this.element.className = 'branch-node';\n        if (!childDescriptors) {\n            this.splitview = new Splitview(this.element, {\n                orientation: this.orientation,\n                proportionalLayout,\n                styles,\n            });\n            this.splitview.layout(this.size, this.orthogonalSize);\n        }\n        else {\n            const descriptor = {\n                views: childDescriptors.map((childDescriptor) => {\n                    return {\n                        view: childDescriptor.node,\n                        size: childDescriptor.node.size,\n                        visible: childDescriptor.node instanceof LeafNode &&\n                            childDescriptor.visible !== undefined\n                            ? childDescriptor.visible\n                            : true,\n                    };\n                }),\n                size: this.size,\n            };\n            this.children = childDescriptors.map((c) => c.node);\n            this.splitview = new Splitview(this.element, {\n                orientation: this.orientation,\n                descriptor,\n                proportionalLayout,\n            });\n        }\n        this.addDisposables(this._onDidChange, this.splitview.onDidSashEnd(() => {\n            this._onDidChange.fire(undefined);\n        }));\n        this.setupChildrenEvents();\n    }\n    get width() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.size\n            : this.orthogonalSize;\n    }\n    get height() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.orthogonalSize\n            : this.size;\n    }\n    get minimumSize() {\n        return this.children.length === 0\n            ? 0\n            : Math.max(...this.children.map((c) => c.minimumOrthogonalSize));\n    }\n    get maximumSize() {\n        return Math.min(...this.children.map((c) => c.maximumOrthogonalSize));\n    }\n    get minimumOrthogonalSize() {\n        return this.splitview.minimumSize;\n    }\n    get maximumOrthogonalSize() {\n        return this.splitview.maximumSize;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    get size() {\n        return this._size;\n    }\n    get minimumWidth() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumOrthogonalSize\n            : this.minimumSize;\n    }\n    get minimumHeight() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumSize\n            : this.minimumOrthogonalSize;\n    }\n    get maximumWidth() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumOrthogonalSize\n            : this.maximumSize;\n    }\n    get maximumHeight() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumSize\n            : this.maximumOrthogonalSize;\n    }\n    get priority() {\n        if (this.children.length === 0) {\n            return LayoutPriority.Normal;\n        }\n        const priorities = this.children.map((c) => typeof c.priority === 'undefined'\n            ? LayoutPriority.Normal\n            : c.priority);\n        if (priorities.some((p) => p === LayoutPriority.High)) {\n            return LayoutPriority.High;\n        }\n        else if (priorities.some((p) => p === LayoutPriority.Low)) {\n            return LayoutPriority.Low;\n        }\n        return LayoutPriority.Normal;\n    }\n    setVisible(visible) {\n        for (const child of this.children) {\n            child.setVisible(visible);\n        }\n    }\n    isChildVisible(index) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        return this.splitview.isViewVisible(index);\n    }\n    setChildVisible(index, visible) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        if (this.splitview.isViewVisible(index) === visible) {\n            return;\n        }\n        this.splitview.setViewVisible(index, visible);\n    }\n    moveChild(from, to) {\n        if (from === to) {\n            return;\n        }\n        if (from < 0 || from >= this.children.length) {\n            throw new Error('Invalid from index');\n        }\n        if (from < to) {\n            to--;\n        }\n        this.splitview.moveView(from, to);\n        const child = this._removeChild(from);\n        this._addChild(child, to);\n    }\n    getChildSize(index) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        return this.splitview.getViewSize(index);\n    }\n    resizeChild(index, size) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        this.splitview.resizeView(index, size);\n    }\n    layout(size, orthogonalSize) {\n        this._size = orthogonalSize;\n        this._orthogonalSize = size;\n        this.splitview.layout(this.size, this.orthogonalSize);\n    }\n    addChild(node, size, index, skipLayout) {\n        if (index < 0 || index > this.children.length) {\n            throw new Error('Invalid index');\n        }\n        this.splitview.addView(node, size, index, skipLayout);\n        this._addChild(node, index);\n    }\n    getChildCachedVisibleSize(index) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        return this.splitview.getViewCachedVisibleSize(index);\n    }\n    removeChild(index, sizing) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        this.splitview.removeView(index, sizing);\n        this._removeChild(index);\n    }\n    _addChild(node, index) {\n        this.children.splice(index, 0, node);\n        this.setupChildrenEvents();\n    }\n    _removeChild(index) {\n        const [child] = this.children.splice(index, 1);\n        this.setupChildrenEvents();\n        return child;\n    }\n    setupChildrenEvents() {\n        this._childrenDisposable.dispose();\n        this._childrenDisposable = Event.any(...this.children.map((c) => c.onDidChange))(() => {\n            /**\n             * indicate a change has occured to allows any re-rendering but don't bubble\n             * event because that was specific to this branch\n             */\n            this._onDidChange.fire(undefined);\n        });\n    }\n    dispose() {\n        super.dispose();\n        this._childrenDisposable.dispose();\n        this.children.forEach((child) => child.dispose());\n        this.splitview.dispose();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/grid\n *--------------------------------------------------------------------------------------------*/\nimport { Orientation, Sizing, } from '../splitview/core/splitview';\nimport { Position } from '../dnd/droptarget';\nimport { tail } from '../array';\nimport { LeafNode } from './leafNode';\nimport { BranchNode } from './branchNode';\nimport { Emitter } from '../events';\nimport { MutableDisposable } from '../lifecycle';\nfunction findLeaf(candiateNode, last) {\n    if (candiateNode instanceof LeafNode) {\n        return candiateNode;\n    }\n    if (candiateNode instanceof BranchNode) {\n        return findLeaf(candiateNode.children[last ? candiateNode.children.length - 1 : 0], last);\n    }\n    throw new Error('invalid node');\n}\nfunction flipNode(node, size, orthogonalSize) {\n    if (node instanceof BranchNode) {\n        const result = new BranchNode(orthogonal(node.orientation), node.proportionalLayout, node.styles, size, orthogonalSize);\n        let totalSize = 0;\n        for (let i = node.children.length - 1; i >= 0; i--) {\n            const child = node.children[i];\n            const childSize = child instanceof BranchNode ? child.orthogonalSize : child.size;\n            let newSize = node.size === 0\n                ? 0\n                : Math.round((size * childSize) / node.size);\n            totalSize += newSize;\n            // The last view to add should adjust to rounding errors\n            if (i === 0) {\n                newSize += size - totalSize;\n            }\n            result.addChild(flipNode(child, orthogonalSize, newSize), newSize, 0, true);\n        }\n        return result;\n    }\n    else {\n        return new LeafNode(node.view, orthogonal(node.orientation), orthogonalSize);\n    }\n}\nexport function indexInParent(element) {\n    const parentElement = element.parentElement;\n    if (!parentElement) {\n        throw new Error('Invalid grid element');\n    }\n    let el = parentElement.firstElementChild;\n    let index = 0;\n    while (el !== element && el !== parentElement.lastElementChild && el) {\n        el = el.nextElementSibling;\n        index++;\n    }\n    return index;\n}\n/**\n * Find the grid location of a specific DOM element by traversing the parent\n * chain and finding each child index on the way.\n *\n * This will break as soon as DOM structures of the Splitview or Gridview change.\n */\nexport function getGridLocation(element) {\n    const parentElement = element.parentElement;\n    if (!parentElement) {\n        throw new Error('Invalid grid element');\n    }\n    if (/\\bgrid-view\\b/.test(parentElement.className)) {\n        return [];\n    }\n    const index = indexInParent(parentElement);\n    const ancestor = parentElement.parentElement.parentElement.parentElement;\n    return [...getGridLocation(ancestor), index];\n}\nexport function getRelativeLocation(rootOrientation, location, direction) {\n    const orientation = getLocationOrientation(rootOrientation, location);\n    const directionOrientation = getDirectionOrientation(direction);\n    if (orientation === directionOrientation) {\n        const [rest, _index] = tail(location);\n        let index = _index;\n        if (direction === Position.Right || direction === Position.Bottom) {\n            index += 1;\n        }\n        return [...rest, index];\n    }\n    else {\n        const index = direction === Position.Right || direction === Position.Bottom\n            ? 1\n            : 0;\n        return [...location, index];\n    }\n}\nexport function getDirectionOrientation(direction) {\n    return direction === Position.Top || direction === Position.Bottom\n        ? Orientation.VERTICAL\n        : Orientation.HORIZONTAL;\n}\nexport function getLocationOrientation(rootOrientation, location) {\n    return location.length % 2 === 0\n        ? orthogonal(rootOrientation)\n        : rootOrientation;\n}\nexport const orthogonal = (orientation) => orientation === Orientation.HORIZONTAL\n    ? Orientation.VERTICAL\n    : Orientation.HORIZONTAL;\nexport function isGridBranchNode(node) {\n    return !!node.children;\n}\nconst serializeBranchNode = (node, orientation) => {\n    const size = orientation === Orientation.VERTICAL ? node.box.width : node.box.height;\n    if (!isGridBranchNode(node)) {\n        if (typeof node.cachedVisibleSize === 'number') {\n            return {\n                type: 'leaf',\n                data: node.view.toJSON(),\n                size: node.cachedVisibleSize,\n                visible: false,\n            };\n        }\n        return { type: 'leaf', data: node.view.toJSON(), size };\n    }\n    return {\n        type: 'branch',\n        data: node.children.map((c) => serializeBranchNode(c, orthogonal(orientation))),\n        size,\n    };\n};\nexport class Gridview {\n    constructor(proportionalLayout, styles, orientation) {\n        this.proportionalLayout = proportionalLayout;\n        this.styles = styles;\n        this.disposable = new MutableDisposable();\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this.element = document.createElement('div');\n        this.element.className = 'grid-view';\n        this.root = new BranchNode(orientation, proportionalLayout, styles, 0, 0);\n    }\n    serialize() {\n        const root = serializeBranchNode(this.getView(), this.orientation);\n        return {\n            root,\n            width: this.width,\n            height: this.height,\n            orientation: this.orientation,\n        };\n    }\n    dispose() {\n        this.disposable.dispose();\n        this._onDidChange.dispose();\n        this.root.dispose();\n        this.element.remove();\n    }\n    clear() {\n        const orientation = this.root.orientation;\n        this.root = new BranchNode(orientation, this.proportionalLayout, this.styles, this.root.size, this.root.orthogonalSize);\n    }\n    deserialize(json, deserializer) {\n        const orientation = json.orientation;\n        const height = orientation === Orientation.VERTICAL ? json.height : json.width;\n        this._deserialize(json.root, orientation, deserializer, height);\n    }\n    _deserialize(root, orientation, deserializer, orthogonalSize) {\n        this.root = this._deserializeNode(root, orientation, deserializer, orthogonalSize, true);\n    }\n    _deserializeNode(node, orientation, deserializer, orthogonalSize, isRoot = false) {\n        let result;\n        if (node.type === 'branch') {\n            const serializedChildren = node.data;\n            const children = serializedChildren.map((serializedChild) => {\n                return {\n                    node: this._deserializeNode(serializedChild, orthogonal(orientation), deserializer, node.size),\n                    visible: serializedChild.visible,\n                };\n            });\n            // HORIZONTAL => height=orthogonalsize width=size\n            // VERTICAL => height=size width=orthogonalsize\n            result = new BranchNode(orientation, this.proportionalLayout, this.styles, isRoot ? orthogonalSize : node.size, isRoot ? node.size : orthogonalSize, children);\n        }\n        else {\n            result = new LeafNode(deserializer.fromJSON(node), orientation, orthogonalSize, node.size);\n        }\n        return result;\n    }\n    get orientation() {\n        return this.root.orientation;\n    }\n    set orientation(orientation) {\n        if (this.root.orientation === orientation) {\n            return;\n        }\n        const { size, orthogonalSize } = this.root;\n        this.root = flipNode(this.root, orthogonalSize, size);\n        this.root.layout(size, orthogonalSize);\n    }\n    get root() {\n        return this._root;\n    }\n    set root(root) {\n        const oldRoot = this._root;\n        if (oldRoot) {\n            oldRoot.dispose();\n            this.element.removeChild(oldRoot.element);\n        }\n        this._root = root;\n        this.element.appendChild(this._root.element);\n        this.disposable.value = this._root.onDidChange((e) => {\n            this._onDidChange.fire(e);\n        });\n    }\n    next(location) {\n        return this.progmaticSelect(location);\n    }\n    previous(location) {\n        return this.progmaticSelect(location, true);\n    }\n    getView(location) {\n        const node = location ? this.getNode(location)[1] : this.root;\n        return this._getViews(node, this.orientation);\n    }\n    _getViews(node, orientation, cachedVisibleSize) {\n        const box = { height: node.height, width: node.width };\n        if (node instanceof LeafNode) {\n            return { box, view: node.view, cachedVisibleSize };\n        }\n        const children = [];\n        for (let i = 0; i < node.children.length; i++) {\n            const child = node.children[i];\n            const nodeCachedVisibleSize = node.getChildCachedVisibleSize(i);\n            children.push(this._getViews(child, orthogonal(orientation), nodeCachedVisibleSize));\n        }\n        return { box, children };\n    }\n    progmaticSelect(location, reverse = false) {\n        const [path, node] = this.getNode(location);\n        if (!(node instanceof LeafNode)) {\n            throw new Error('invalid location');\n        }\n        for (let i = path.length - 1; i > -1; i--) {\n            const n = path[i];\n            const l = location[i] || 0;\n            const canProgressInCurrentLevel = reverse\n                ? l - 1 > -1\n                : l + 1 < n.children.length;\n            if (canProgressInCurrentLevel) {\n                return findLeaf(n.children[reverse ? l - 1 : l + 1], reverse);\n            }\n        }\n        return findLeaf(this.root, reverse);\n    }\n    get width() {\n        return this.root.width;\n    }\n    get height() {\n        return this.root.height;\n    }\n    get minimumWidth() {\n        return this.root.minimumWidth;\n    }\n    get minimumHeight() {\n        return this.root.minimumHeight;\n    }\n    get maximumWidth() {\n        return this.root.maximumHeight;\n    }\n    get maximumHeight() {\n        return this.root.maximumHeight;\n    }\n    isViewVisible(location) {\n        const [rest, index] = tail(location);\n        const [, parent] = this.getNode(rest);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid from location');\n        }\n        return parent.isChildVisible(index);\n    }\n    setViewVisible(location, visible) {\n        const [rest, index] = tail(location);\n        const [, parent] = this.getNode(rest);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid from location');\n        }\n        parent.setChildVisible(index, visible);\n    }\n    moveView(parentLocation, from, to) {\n        const [, parent] = this.getNode(parentLocation);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid location');\n        }\n        parent.moveChild(from, to);\n    }\n    addView(view, size, location) {\n        const [rest, index] = tail(location);\n        const [pathToParent, parent] = this.getNode(rest);\n        if (parent instanceof BranchNode) {\n            const node = new LeafNode(view, orthogonal(parent.orientation), parent.orthogonalSize);\n            parent.addChild(node, size, index);\n        }\n        else {\n            const [grandParent, ..._] = [...pathToParent].reverse();\n            const [parentIndex, ...__] = [...rest].reverse();\n            let newSiblingSize = 0;\n            const newSiblingCachedVisibleSize = grandParent.getChildCachedVisibleSize(parentIndex);\n            if (typeof newSiblingCachedVisibleSize === 'number') {\n                newSiblingSize = Sizing.Invisible(newSiblingCachedVisibleSize);\n            }\n            grandParent.removeChild(parentIndex);\n            const newParent = new BranchNode(parent.orientation, this.proportionalLayout, this.styles, parent.size, parent.orthogonalSize);\n            grandParent.addChild(newParent, parent.size, parentIndex);\n            const newSibling = new LeafNode(parent.view, grandParent.orientation, parent.size);\n            newParent.addChild(newSibling, newSiblingSize, 0);\n            if (typeof size !== 'number' && size.type === 'split') {\n                size = { type: 'split', index: 0 };\n            }\n            const node = new LeafNode(view, grandParent.orientation, parent.size);\n            newParent.addChild(node, size, index);\n        }\n    }\n    remove(view, sizing) {\n        const location = getGridLocation(view.element);\n        return this.removeView(location, sizing);\n    }\n    removeView(location, sizing) {\n        const [rest, index] = tail(location);\n        const [pathToParent, parent] = this.getNode(rest);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid location');\n        }\n        const node = parent.children[index];\n        if (!(node instanceof LeafNode)) {\n            throw new Error('Invalid location');\n        }\n        parent.removeChild(index, sizing);\n        if (parent.children.length === 0) {\n            return node.view;\n        }\n        if (parent.children.length > 1) {\n            return node.view;\n        }\n        const sibling = parent.children[0];\n        if (pathToParent.length === 0) {\n            // parent is root\n            if (sibling instanceof LeafNode) {\n                return node.view;\n            }\n            // we must promote sibling to be the new root\n            parent.removeChild(0, sizing);\n            this.root = sibling;\n            return node.view;\n        }\n        const [grandParent, ..._] = [...pathToParent].reverse();\n        const [parentIndex, ...__] = [...rest].reverse();\n        const isSiblingVisible = parent.isChildVisible(0);\n        parent.removeChild(0, sizing);\n        const sizes = grandParent.children.map((_size, i) => grandParent.getChildSize(i));\n        grandParent.removeChild(parentIndex, sizing);\n        if (sibling instanceof BranchNode) {\n            sizes.splice(parentIndex, 1, ...sibling.children.map((c) => c.size));\n            for (let i = 0; i < sibling.children.length; i++) {\n                const child = sibling.children[i];\n                grandParent.addChild(child, child.size, parentIndex + i);\n            }\n        }\n        else {\n            const newSibling = new LeafNode(sibling.view, orthogonal(sibling.orientation), sibling.size);\n            const siblingSizing = isSiblingVisible\n                ? sibling.orthogonalSize\n                : Sizing.Invisible(sibling.orthogonalSize);\n            grandParent.addChild(newSibling, siblingSizing, parentIndex);\n        }\n        for (let i = 0; i < sizes.length; i++) {\n            grandParent.resizeChild(i, sizes[i]);\n        }\n        return node.view;\n    }\n    layout(width, height) {\n        const [size, orthogonalSize] = this.root.orientation === Orientation.HORIZONTAL\n            ? [height, width]\n            : [width, height];\n        this.root.layout(size, orthogonalSize);\n    }\n    getNode(location, node = this.root, path = []) {\n        if (location.length === 0) {\n            return [path, node];\n        }\n        if (!(node instanceof BranchNode)) {\n            throw new Error('Invalid location');\n        }\n        const [index, ...rest] = location;\n        if (index < 0 || index >= node.children.length) {\n            throw new Error('Invalid location');\n        }\n        const child = node.children[index];\n        path.push(node);\n        return this.getNode(rest, child, path);\n    }\n}\n","import { Emitter } from '../events';\nexport class SplitviewApi {\n    constructor(component) {\n        this.component = component;\n    }\n    get minimumSize() {\n        return this.component.minimumSize;\n    }\n    get maximumSize() {\n        return this.component.maximumSize;\n    }\n    get height() {\n        return this.component.height;\n    }\n    get width() {\n        return this.component.width;\n    }\n    get length() {\n        return this.component.length;\n    }\n    get orientation() {\n        return this.component.orientation;\n    }\n    get panels() {\n        return this.component.panels;\n    }\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    get onDidAddView() {\n        return this.component.onDidAddView;\n    }\n    get onDidRemoveView() {\n        return this.component.onDidRemoveView;\n    }\n    updateOptions(options) {\n        this.component.updateOptions(options);\n    }\n    removePanel(panel, sizing) {\n        this.component.removePanel(panel, sizing);\n    }\n    focus() {\n        this.component.focus();\n    }\n    getPanel(id) {\n        return this.component.getPanel(id);\n    }\n    layout(width, height) {\n        return this.component.layout(width, height);\n    }\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    movePanel(from, to) {\n        this.component.movePanel(from, to);\n    }\n    fromJSON(data) {\n        this.component.fromJSON(data);\n    }\n    toJSON() {\n        return this.component.toJSON();\n    }\n    clear() {\n        this.component.clear();\n    }\n}\nexport class PaneviewApi {\n    constructor(component) {\n        this.component = component;\n    }\n    get minimumSize() {\n        return this.component.minimumSize;\n    }\n    get maximumSize() {\n        return this.component.maximumSize;\n    }\n    get height() {\n        return this.component.height;\n    }\n    get width() {\n        return this.component.width;\n    }\n    get panels() {\n        return this.component.panels;\n    }\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    get onDidAddView() {\n        return this.component.onDidAddView;\n    }\n    get onDidRemoveView() {\n        return this.component.onDidRemoveView;\n    }\n    get onDidDrop() {\n        const emitter = new Emitter();\n        const disposable = this.component.onDidDrop((e) => {\n            emitter.fire(Object.assign(Object.assign({}, e), { api: this }));\n        });\n        emitter.dispose = () => {\n            disposable.dispose();\n            emitter.dispose();\n        };\n        return emitter.event;\n    }\n    removePanel(panel) {\n        this.component.removePanel(panel);\n    }\n    getPanel(id) {\n        return this.component.getPanel(id);\n    }\n    movePanel(from, to) {\n        this.component.movePanel(from, to);\n    }\n    focus() {\n        this.component.focus();\n    }\n    layout(width, height) {\n        this.component.layout(width, height);\n    }\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    fromJSON(data) {\n        this.component.fromJSON(data);\n    }\n    toJSON() {\n        return this.component.toJSON();\n    }\n    clear() {\n        this.component.clear();\n    }\n}\nexport class GridviewApi {\n    constructor(component) {\n        this.component = component;\n    }\n    get minimumHeight() {\n        return this.component.minimumHeight;\n    }\n    get maximumHeight() {\n        return this.component.maximumHeight;\n    }\n    get minimumWidth() {\n        return this.component.minimumWidth;\n    }\n    get maximumWidth() {\n        return this.component.maximumWidth;\n    }\n    get width() {\n        return this.component.width;\n    }\n    get height() {\n        return this.component.height;\n    }\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    get onDidAddPanel() {\n        return this.component.onDidAddGroup;\n    }\n    get onDidRemovePanel() {\n        return this.component.onDidRemoveGroup;\n    }\n    get onDidActivePanelChange() {\n        return this.component.onDidActiveGroupChange;\n    }\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    get panels() {\n        return this.component.groups;\n    }\n    get orientation() {\n        return this.component.orientation;\n    }\n    set orientation(value) {\n        this.component.updateOptions({ orientation: value });\n    }\n    focus() {\n        this.component.focus();\n    }\n    layout(width, height, force = false) {\n        this.component.layout(width, height, force);\n    }\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    removePanel(panel, sizing) {\n        this.component.removePanel(panel, sizing);\n    }\n    movePanel(panel, options) {\n        this.component.movePanel(panel, options);\n    }\n    getPanel(id) {\n        return this.component.getPanel(id);\n    }\n    fromJSON(data) {\n        return this.component.fromJSON(data);\n    }\n    toJSON() {\n        return this.component.toJSON();\n    }\n    clear() {\n        this.component.clear();\n    }\n}\nexport class DockviewApi {\n    constructor(component) {\n        this.component = component;\n    }\n    get width() {\n        return this.component.width;\n    }\n    get height() {\n        return this.component.height;\n    }\n    get minimumHeight() {\n        return this.component.minimumHeight;\n    }\n    get maximumHeight() {\n        return this.component.maximumHeight;\n    }\n    get minimumWidth() {\n        return this.component.minimumWidth;\n    }\n    get maximumWidth() {\n        return this.component.maximumWidth;\n    }\n    get size() {\n        return this.component.size;\n    }\n    get totalPanels() {\n        return this.component.totalPanels;\n    }\n    get onDidActiveGroupChange() {\n        return this.component.onDidActiveGroupChange;\n    }\n    get onDidAddGroup() {\n        return this.component.onDidAddGroup;\n    }\n    get onDidRemoveGroup() {\n        return this.component.onDidRemoveGroup;\n    }\n    get onDidActivePanelChange() {\n        return this.component.onDidActivePanelChange;\n    }\n    get onDidAddPanel() {\n        return this.component.onDidAddPanel;\n    }\n    get onDidRemovePanel() {\n        return this.component.onDidRemovePanel;\n    }\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    get onDidDrop() {\n        return this.component.onDidDrop;\n    }\n    get panels() {\n        return this.component.panels;\n    }\n    get groups() {\n        return this.component.groups;\n    }\n    get activePanel() {\n        return this.component.activePanel;\n    }\n    get activeGroup() {\n        return this.component.activeGroup;\n    }\n    getTabHeight() {\n        return this.component.tabHeight;\n    }\n    setTabHeight(height) {\n        this.component.tabHeight = height;\n    }\n    focus() {\n        this.component.focus();\n    }\n    getPanel(id) {\n        return this.component.getGroupPanel(id);\n    }\n    layout(width, height, force = false) {\n        this.component.layout(width, height, force);\n    }\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    addEmptyGroup(options) {\n        this.component.addEmptyGroup(options);\n    }\n    moveToNext(options) {\n        this.component.moveToNext(options);\n    }\n    moveToPrevious(options) {\n        this.component.moveToPrevious(options);\n    }\n    closeAllGroups() {\n        return this.component.closeAllGroups();\n    }\n    removeGroup(group) {\n        this.component.removeGroup(group);\n    }\n    getGroup(id) {\n        return this.component.getPanel(id);\n    }\n    fromJSON(data) {\n        this.component.fromJSON(data);\n    }\n    toJSON() {\n        return this.component.toJSON();\n    }\n    clear() {\n        this.component.clear();\n    }\n}\n","import { CompositeDisposable, MutableDisposable, } from '../../lifecycle';\nimport { Emitter } from '../../events';\nimport { trackFocus } from '../../dom';\nexport class ContentContainer extends CompositeDisposable {\n    constructor() {\n        super();\n        this.disposable = new MutableDisposable();\n        this._onDidFocus = new Emitter();\n        this.onDidFocus = this._onDidFocus.event;\n        this._onDidBlur = new Emitter();\n        this.onDidBlur = this._onDidBlur.event;\n        this._element = document.createElement('div');\n        this._element.className = 'content-container';\n        this._element.tabIndex = -1;\n        this.addDisposables(this._onDidFocus, this._onDidBlur);\n        // for hosted containers\n        // 1) register a drop target on the host\n        // 2) register window dragStart events to disable pointer events\n        // 3) register dragEnd events\n        // 4) register mouseMove events (if no buttons are present we take this as a dragEnd event)\n    }\n    get element() {\n        return this._element;\n    }\n    show() {\n        this.element.style.display = '';\n    }\n    hide() {\n        this.element.style.display = 'none';\n    }\n    openPanel(panel) {\n        var _a;\n        if (this.panel === panel) {\n            return;\n        }\n        if (this.panel) {\n            if ((_a = this.panel.view) === null || _a === void 0 ? void 0 : _a.content) {\n                this._element.removeChild(this.panel.view.content.element);\n            }\n            this.panel = undefined;\n        }\n        this.panel = panel;\n        const disposable = new CompositeDisposable();\n        if (this.panel.view) {\n            const _onDidFocus = this.panel.view.content.onDidFocus;\n            const _onDidBlur = this.panel.view.content.onDidBlur;\n            const { onDidFocus, onDidBlur } = trackFocus(this._element);\n            disposable.addDisposables(onDidFocus(() => this._onDidFocus.fire()), onDidBlur(() => this._onDidBlur.fire()));\n            if (_onDidFocus) {\n                disposable.addDisposables(_onDidFocus(() => this._onDidFocus.fire()));\n            }\n            if (_onDidBlur) {\n                disposable.addDisposables(_onDidBlur(() => this._onDidBlur.fire()));\n            }\n            this._element.appendChild(this.panel.view.content.element);\n        }\n        this.disposable.value = disposable;\n    }\n    layout(_width, _height) {\n        // noop\n    }\n    closePanel() {\n        var _a, _b, _c;\n        if ((_c = (_b = (_a = this.panel) === null || _a === void 0 ? void 0 : _a.view) === null || _b === void 0 ? void 0 : _b.content) === null || _c === void 0 ? void 0 : _c.element) {\n            this._element.removeChild(this.panel.view.content.element);\n            this.panel = undefined;\n        }\n    }\n    dispose() {\n        this.disposable.dispose();\n        super.dispose();\n    }\n}\n","export var DockviewDropTargets;\n(function (DockviewDropTargets) {\n    DockviewDropTargets[DockviewDropTargets[\"Tab\"] = 0] = \"Tab\";\n    DockviewDropTargets[DockviewDropTargets[\"Panel\"] = 1] = \"Panel\";\n    DockviewDropTargets[DockviewDropTargets[\"TabContainer\"] = 2] = \"TabContainer\";\n})(DockviewDropTargets || (DockviewDropTargets = {}));\n","import { addDisposableListener, Emitter } from '../events';\nimport { CompositeDisposable } from '../lifecycle';\nimport { getPanelData, LocalSelectionTransfer, PanelTransfer, } from '../dnd/dataTransfer';\nimport { toggleClass } from '../dom';\nimport { Droptarget } from '../dnd/droptarget';\nimport { DockviewDropTargets } from './dnd';\nimport { DragHandler } from '../dnd/abstractDragHandler';\nexport var MouseEventKind;\n(function (MouseEventKind) {\n    MouseEventKind[\"CLICK\"] = \"CLICK\";\n})(MouseEventKind || (MouseEventKind = {}));\nexport class Tab extends CompositeDisposable {\n    constructor(panelId, accessor, group) {\n        super();\n        this.panelId = panelId;\n        this.accessor = accessor;\n        this.group = group;\n        this._onChanged = new Emitter();\n        this.onChanged = this._onChanged.event;\n        this._onDropped = new Emitter();\n        this.onDrop = this._onDropped.event;\n        this.addDisposables(this._onChanged, this._onDropped);\n        this._element = document.createElement('div');\n        this._element.className = 'tab';\n        this._element.tabIndex = 0;\n        this._element.draggable = true;\n        toggleClass(this.element, 'inactive-tab', true);\n        this.addDisposables(new (class Handler extends DragHandler {\n            constructor() {\n                super(...arguments);\n                this.panelTransfer = LocalSelectionTransfer.getInstance();\n            }\n            getData() {\n                this.panelTransfer.setData([new PanelTransfer(accessor.id, group.id, panelId)], PanelTransfer.prototype);\n                return {\n                    dispose: () => {\n                        this.panelTransfer.clearData(PanelTransfer.prototype);\n                    },\n                };\n            }\n            dispose() {\n                //\n            }\n        })(this._element));\n        this.addDisposables(addDisposableListener(this._element, 'mousedown', (event) => {\n            if (event.defaultPrevented) {\n                return;\n            }\n            /**\n             * TODO: alternative to stopPropagation\n             *\n             * I need to stop the event propagation here since otherwise it'll be intercepted by event handlers\n             * on the tabs-container. I cannot use event.preventDefault() since I need the on DragStart event to occur\n             */\n            event.stopPropagation();\n            this._onChanged.fire({ kind: MouseEventKind.CLICK, event });\n        }));\n        this.droptarget = new Droptarget(this._element, {\n            validOverlays: 'none',\n            canDisplayOverlay: (event) => {\n                const data = getPanelData();\n                if (data && this.accessor.id === data.viewId) {\n                    return this.panelId !== data.panelId;\n                }\n                return this.group.model.canDisplayOverlay(event, DockviewDropTargets.Tab);\n            },\n        });\n        this.addDisposables(this.droptarget.onDrop((event) => {\n            this._onDropped.fire(event);\n        }));\n    }\n    get element() {\n        return this._element;\n    }\n    setActive(isActive) {\n        toggleClass(this.element, 'active-tab', isActive);\n        toggleClass(this.element, 'inactive-tab', !isActive);\n    }\n    setContent(part) {\n        if (this.content) {\n            this._element.removeChild(this.content.element);\n        }\n        this.content = part;\n        this._element.appendChild(this.content.element);\n    }\n    dispose() {\n        super.dispose();\n        this.droptarget.dispose();\n    }\n}\n","import { getElementsByTagName } from '../dom';\nimport { addDisposableListener, Emitter } from '../events';\nimport { CompositeDisposable, MutableDisposable, } from '../lifecycle';\nexport class DragHandler extends CompositeDisposable {\n    constructor(el) {\n        super();\n        this.el = el;\n        this.disposable = new MutableDisposable();\n        this._onDragStart = new Emitter();\n        this.onDragStart = this._onDragStart.event;\n        this.iframes = [];\n        this.configure();\n    }\n    configure() {\n        this.addDisposables(this._onDragStart, addDisposableListener(this.el, 'dragstart', (event) => {\n            this.iframes = [\n                ...getElementsByTagName('iframe'),\n                ...getElementsByTagName('webview'),\n            ];\n            for (const iframe of this.iframes) {\n                iframe.style.pointerEvents = 'none';\n            }\n            this.el.classList.add('dragged');\n            setTimeout(() => this.el.classList.remove('dragged'), 0);\n            this.disposable.value = this.getData();\n            if (event.dataTransfer) {\n                event.dataTransfer.effectAllowed = 'move';\n            }\n        }), addDisposableListener(this.el, 'dragend', () => {\n            for (const iframe of this.iframes) {\n                iframe.style.pointerEvents = 'auto';\n            }\n            this.iframes = [];\n            this.disposable.dispose();\n        }));\n    }\n}\n","import { CompositeDisposable, } from '../../lifecycle';\nimport { addDisposableListener, Emitter } from '../../events';\nimport { MouseEventKind, Tab } from '../tab';\nimport { last } from '../../array';\nimport { getPanelData } from '../../dnd/dataTransfer';\nimport { Droptarget } from '../../dnd/droptarget';\nimport { DockviewDropTargets } from '../dnd';\nexport class TabsContainer extends CompositeDisposable {\n    constructor(accessor, group, options) {\n        super();\n        this.accessor = accessor;\n        this.group = group;\n        this.tabs = [];\n        this.selectedIndex = -1;\n        this._hidden = false;\n        this._onDrop = new Emitter();\n        this.onDrop = this._onDrop.event;\n        this.addDisposables(this._onDrop);\n        this._element = document.createElement('div');\n        this._element.className = 'tabs-and-actions-container';\n        this.height = options.tabHeight;\n        this.actionContainer = document.createElement('div');\n        this.actionContainer.className = 'action-container';\n        this.tabContainer = document.createElement('div');\n        this.tabContainer.className = 'tabs-container';\n        this.voidContainer = document.createElement('div');\n        this.voidContainer.className = 'void-container';\n        this._element.appendChild(this.tabContainer);\n        this._element.appendChild(this.voidContainer);\n        this._element.appendChild(this.actionContainer);\n        this.voidDropTarget = new Droptarget(this.voidContainer, {\n            validOverlays: 'none',\n            canDisplayOverlay: (event) => {\n                var _a;\n                const data = getPanelData();\n                if (data && this.accessor.id === data.viewId) {\n                    // don't show the overlay if the tab being dragged is the last panel of this group\n                    return ((_a = last(this.tabs)) === null || _a === void 0 ? void 0 : _a.value.panelId) !== data.panelId;\n                }\n                return group.model.canDisplayOverlay(event, DockviewDropTargets.Panel);\n            },\n        });\n        this.addDisposables(this.voidDropTarget.onDrop((event) => {\n            this._onDrop.fire({\n                event: event.nativeEvent,\n                index: this.tabs.length,\n            });\n        }), this.voidDropTarget, addDisposableListener(this.tabContainer, 'mousedown', (event) => {\n            if (event.defaultPrevented) {\n                return;\n            }\n            const isLeftClick = event.button === 0;\n            if (isLeftClick) {\n                this.accessor.doSetGroupActive(this.group);\n            }\n        }));\n    }\n    get panels() {\n        return this.tabs.map((_) => _.value.panelId);\n    }\n    get size() {\n        return this.tabs.length;\n    }\n    get height() {\n        return this._height;\n    }\n    set height(value) {\n        this._height = value;\n        if (typeof value !== 'number') {\n            this.element.style.removeProperty('--dv-tabs-and-actions-container-height');\n        }\n        else {\n            this.element.style.setProperty('--dv-tabs-and-actions-container-height', `${value}px`);\n        }\n    }\n    get hidden() {\n        return this._hidden;\n    }\n    set hidden(value) {\n        this._hidden = value;\n        this.element.style.display = value ? 'none' : '';\n    }\n    show() {\n        if (!this.hidden) {\n            this.element.style.display = '';\n        }\n    }\n    hide() {\n        this._element.style.display = 'none';\n    }\n    setActionElement(element) {\n        if (this.actions === element) {\n            return;\n        }\n        if (this.actions) {\n            this.actions.remove();\n            this.actions = undefined;\n        }\n        if (element) {\n            this.actionContainer.appendChild(element);\n            this.actions = element;\n        }\n    }\n    get element() {\n        return this._element;\n    }\n    isActive(tab) {\n        return (this.selectedIndex > -1 &&\n            this.tabs[this.selectedIndex].value === tab);\n    }\n    at(index) {\n        var _a;\n        return (_a = this.tabs[index]) === null || _a === void 0 ? void 0 : _a.value;\n    }\n    indexOf(id) {\n        return this.tabs.findIndex((tab) => tab.value.panelId === id);\n    }\n    setActive(_isGroupActive) {\n        // noop\n    }\n    addTab(tab, index = this.tabs.length) {\n        if (index < 0 || index > this.tabs.length) {\n            throw new Error('invalid location');\n        }\n        this.tabContainer.insertBefore(tab.value.element, this.tabContainer.children[index]);\n        this.tabs = [\n            ...this.tabs.slice(0, index),\n            tab,\n            ...this.tabs.slice(index),\n        ];\n        if (this.selectedIndex < 0) {\n            this.selectedIndex = index;\n        }\n    }\n    delete(id) {\n        const index = this.tabs.findIndex((tab) => tab.value.panelId === id);\n        const tabToRemove = this.tabs.splice(index, 1)[0];\n        const { value, disposable } = tabToRemove;\n        disposable.dispose();\n        value.element.remove();\n    }\n    setActivePanel(panel) {\n        this.tabs.forEach((tab) => {\n            const isActivePanel = panel.id === tab.value.panelId;\n            tab.value.setActive(isActivePanel);\n        });\n    }\n    openPanel(panel, index = this.tabs.length) {\n        var _a;\n        if (this.tabs.find((tab) => tab.value.panelId === panel.id)) {\n            return;\n        }\n        const tabToAdd = new Tab(panel.id, this.accessor, this.group);\n        if (!((_a = panel.view) === null || _a === void 0 ? void 0 : _a.tab)) {\n            throw new Error('invalid header component');\n        }\n        tabToAdd.setContent(panel.view.tab);\n        const disposable = CompositeDisposable.from(tabToAdd.onChanged((event) => {\n            var _a;\n            const alreadyFocused = panel.id === ((_a = this.group.model.activePanel) === null || _a === void 0 ? void 0 : _a.id) &&\n                this.group.model.isContentFocused;\n            const isLeftClick = event.event.button === 0;\n            if (!isLeftClick || event.event.defaultPrevented) {\n                return;\n            }\n            if (event.kind === MouseEventKind.CLICK) {\n                this.group.model.openPanel(panel, {\n                    skipFocus: alreadyFocused,\n                });\n            }\n        }), tabToAdd.onDrop((event) => {\n            this._onDrop.fire({\n                event: event.nativeEvent,\n                index: this.tabs.findIndex((x) => x.value === tabToAdd),\n            });\n        }));\n        const value = { value: tabToAdd, disposable };\n        this.addTab(value, index);\n    }\n    closePanel(panel) {\n        this.delete(panel.id);\n    }\n    dispose() {\n        super.dispose();\n        this.tabs.forEach((tab) => {\n            tab.disposable.dispose();\n        });\n        this.tabs = [];\n    }\n}\n","import { DockviewApi } from '../api/component.api';\nimport { getPanelData } from '../dnd/dataTransfer';\nimport { Droptarget, Position } from '../dnd/droptarget';\nimport { isAncestor, toggleClass } from '../dom';\nimport { addDisposableListener, Emitter } from '../events';\nimport { CompositeDisposable } from '../lifecycle';\nimport { ContentContainer } from './panel/content';\nimport { TabsContainer } from './titlebar/tabsContainer';\nimport { DockviewDropTargets } from './dnd';\nexport class Groupview extends CompositeDisposable {\n    constructor(container, accessor, id, options, parent) {\n        super();\n        this.container = container;\n        this.accessor = accessor;\n        this.id = id;\n        this.options = options;\n        this.parent = parent;\n        this._isGroupActive = false;\n        this._locked = false;\n        this.mostRecentlyUsed = [];\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._width = 0;\n        this._height = 0;\n        this._panels = [];\n        this._onMove = new Emitter();\n        this.onMove = this._onMove.event;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onDidAddPanel = new Emitter();\n        this.onDidAddPanel = this._onDidAddPanel.event;\n        this._onDidRemovePanel = new Emitter();\n        this.onDidRemovePanel = this._onDidRemovePanel.event;\n        this._onDidActivePanelChange = new Emitter();\n        this.onDidActivePanelChange = this._onDidActivePanelChange.event;\n        this.container.classList.add('groupview');\n        this.tabsContainer = new TabsContainer(this.accessor, this.parent, {\n            tabHeight: options.tabHeight,\n        });\n        this.contentContainer = new ContentContainer();\n        this.dropTarget = new Droptarget(this.contentContainer.element, {\n            validOverlays: 'all',\n            canDisplayOverlay: (event, quadrant) => {\n                if (this.locked && !quadrant) {\n                    return false;\n                }\n                const data = getPanelData();\n                if (data && data.viewId === this.accessor.id) {\n                    const groupHasOnePanelAndIsActiveDragElement = this._panels.length === 1 && data.groupId === this.id;\n                    return !groupHasOnePanelAndIsActiveDragElement;\n                }\n                return this.canDisplayOverlay(event, DockviewDropTargets.Panel);\n            },\n        });\n        container.append(this.tabsContainer.element, this.contentContainer.element);\n        this.header.hidden = !!options.hideHeader;\n        this.locked = !!options.locked;\n        this.addDisposables(this._onMove, this._onDidChange, this._onDidDrop, this._onDidAddPanel, this._onDidRemovePanel, this._onDidActivePanelChange, this.tabsContainer.onDrop((event) => {\n            this.handleDropEvent(event.event, Position.Center, event.index);\n        }), this.contentContainer.onDidFocus(() => {\n            this.accessor.doSetGroupActive(this.parent, true);\n        }), this.contentContainer.onDidBlur(() => {\n            // noop\n        }), this.dropTarget.onDrop((event) => {\n            this.handleDropEvent(event.nativeEvent, event.position);\n        }));\n    }\n    get element() {\n        throw new Error('not supported');\n    }\n    get activePanel() {\n        return this._activePanel;\n    }\n    get locked() {\n        return this._locked;\n    }\n    set locked(value) {\n        this._locked = value;\n    }\n    get isActive() {\n        return this._isGroupActive;\n    }\n    get panels() {\n        return this._panels;\n    }\n    get size() {\n        return this._panels.length;\n    }\n    get isEmpty() {\n        return this._panels.length === 0;\n    }\n    get minimumHeight() {\n        return 100;\n    }\n    get maximumHeight() {\n        return Number.MAX_SAFE_INTEGER;\n    }\n    get minimumWidth() {\n        return 100;\n    }\n    get maximumWidth() {\n        return Number.MAX_SAFE_INTEGER;\n    }\n    get hasWatermark() {\n        return !!(this.watermark && this.container.contains(this.watermark.element));\n    }\n    get header() {\n        return this.tabsContainer;\n    }\n    get isContentFocused() {\n        if (!document.activeElement) {\n            return false;\n        }\n        return isAncestor(document.activeElement, this.contentContainer.element);\n    }\n    initialize() {\n        var _a, _b;\n        if ((_a = this.options) === null || _a === void 0 ? void 0 : _a.panels) {\n            this.options.panels.forEach((panel) => {\n                this.doAddPanel(panel);\n            });\n        }\n        if ((_b = this.options) === null || _b === void 0 ? void 0 : _b.activePanel) {\n            this.openPanel(this.options.activePanel);\n        }\n        // must be run after the constructor otherwise this.parent may not be\n        // correctly initialized\n        this.setActive(this.isActive, true, true);\n        this.updateContainer();\n        if (this.accessor.options.createGroupControlElement) {\n            this._control = this.accessor.options.createGroupControlElement(this.parent);\n            this.addDisposables(this._control);\n            this._control.init({\n                containerApi: new DockviewApi(this.accessor),\n                api: this.parent.api,\n            });\n            this.tabsContainer.setActionElement(this._control.element);\n        }\n    }\n    indexOf(panel) {\n        return this.tabsContainer.indexOf(panel.id);\n    }\n    toJSON() {\n        var _a;\n        const result = {\n            views: this.tabsContainer.panels,\n            activeView: (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.id,\n            id: this.id,\n        };\n        if (this.locked) {\n            result.locked = true;\n        }\n        if (this.header.hidden) {\n            result.hideHeader = true;\n        }\n        return result;\n    }\n    moveToNext(options) {\n        if (!options) {\n            options = {};\n        }\n        if (!options.panel) {\n            options.panel = this.activePanel;\n        }\n        const index = options.panel ? this.panels.indexOf(options.panel) : -1;\n        let normalizedIndex;\n        if (index < this.panels.length - 1) {\n            normalizedIndex = index + 1;\n        }\n        else if (!options.suppressRoll) {\n            normalizedIndex = 0;\n        }\n        else {\n            return;\n        }\n        this.openPanel(this.panels[normalizedIndex]);\n    }\n    moveToPrevious(options) {\n        if (!options) {\n            options = {};\n        }\n        if (!options.panel) {\n            options.panel = this.activePanel;\n        }\n        if (!options.panel) {\n            return;\n        }\n        const index = this.panels.indexOf(options.panel);\n        let normalizedIndex;\n        if (index > 0) {\n            normalizedIndex = index - 1;\n        }\n        else if (!options.suppressRoll) {\n            normalizedIndex = this.panels.length - 1;\n        }\n        else {\n            return;\n        }\n        this.openPanel(this.panels[normalizedIndex]);\n    }\n    containsPanel(panel) {\n        return this.panels.includes(panel);\n    }\n    init(_params) {\n        //noop\n    }\n    update(_params) {\n        //noop\n    }\n    focus() {\n        var _a;\n        (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    openPanel(panel, options = {}) {\n        if (typeof options.index !== 'number' ||\n            options.index > this.panels.length) {\n            options.index = this.panels.length;\n        }\n        const skipSetPanelActive = !!options.skipSetPanelActive;\n        const skipSetGroupActive = !!options.skipSetGroupActive;\n        // ensure the group is updated before we fire any events\n        panel.updateParentGroup(this.parent, true);\n        if (this._activePanel === panel) {\n            if (!skipSetGroupActive) {\n                this.accessor.doSetGroupActive(this.parent);\n            }\n            return;\n        }\n        this.doAddPanel(panel, options.index, skipSetPanelActive);\n        if (!skipSetPanelActive) {\n            this.doSetActivePanel(panel);\n        }\n        if (!skipSetGroupActive) {\n            this.accessor.doSetGroupActive(this.parent, !!options.skipFocus);\n        }\n        this.updateContainer();\n    }\n    removePanel(groupItemOrId) {\n        const id = typeof groupItemOrId === 'string'\n            ? groupItemOrId\n            : groupItemOrId.id;\n        const panelToRemove = this._panels.find((panel) => panel.id === id);\n        if (!panelToRemove) {\n            throw new Error('invalid operation');\n        }\n        return this._removePanel(panelToRemove);\n    }\n    closeAllPanels() {\n        if (this.panels.length > 0) {\n            // take a copy since we will be edting the array as we iterate through\n            const arrPanelCpy = [...this.panels];\n            for (const panel of arrPanelCpy) {\n                this.doClose(panel);\n            }\n        }\n        else {\n            this.accessor.removeGroup(this.parent);\n        }\n    }\n    closePanel(panel) {\n        this.doClose(panel);\n    }\n    doClose(panel) {\n        this.accessor.removePanel(panel);\n    }\n    isPanelActive(panel) {\n        return this._activePanel === panel;\n    }\n    updateActions(element) {\n        this.tabsContainer.setActionElement(element);\n    }\n    setActive(isGroupActive, skipFocus = false, force = false) {\n        var _a, _b;\n        if (!force && this.isActive === isGroupActive) {\n            if (!skipFocus) {\n                (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.focus();\n            }\n            return;\n        }\n        this._isGroupActive = isGroupActive;\n        toggleClass(this.container, 'active-group', isGroupActive);\n        toggleClass(this.container, 'inactive-group', !isGroupActive);\n        this.tabsContainer.setActive(this.isActive);\n        if (!this._activePanel && this.panels.length > 0) {\n            this.doSetActivePanel(this.panels[0]);\n        }\n        this.updateContainer();\n        if (isGroupActive) {\n            if (!skipFocus) {\n                (_b = this._activePanel) === null || _b === void 0 ? void 0 : _b.focus();\n            }\n        }\n    }\n    layout(width, height) {\n        var _a;\n        this._width = width;\n        this._height = height;\n        this.contentContainer.layout(this._width, this._height);\n        if ((_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.layout) {\n            this._activePanel.layout(this._width, this._height);\n        }\n    }\n    _removePanel(panel) {\n        const isActivePanel = this._activePanel === panel;\n        this.doRemovePanel(panel);\n        if (isActivePanel && this.panels.length > 0) {\n            const nextPanel = this.mostRecentlyUsed[0];\n            this.openPanel(nextPanel);\n        }\n        if (this._activePanel && this.panels.length === 0) {\n            this.doSetActivePanel(undefined);\n        }\n        this.updateContainer();\n        return panel;\n    }\n    doRemovePanel(panel) {\n        const index = this.panels.indexOf(panel);\n        if (this._activePanel === panel) {\n            this.contentContainer.closePanel();\n        }\n        this.tabsContainer.delete(panel.id);\n        this._panels.splice(index, 1);\n        if (this.mostRecentlyUsed.includes(panel)) {\n            this.mostRecentlyUsed.splice(this.mostRecentlyUsed.indexOf(panel), 1);\n        }\n        this._onDidRemovePanel.fire({ panel });\n    }\n    doAddPanel(panel, index = this.panels.length, skipSetActive = false) {\n        const existingPanel = this._panels.indexOf(panel);\n        const hasExistingPanel = existingPanel > -1;\n        this.tabsContainer.openPanel(panel, index);\n        if (!skipSetActive) {\n            this.contentContainer.openPanel(panel);\n        }\n        this.tabsContainer.show();\n        this.contentContainer.show();\n        if (hasExistingPanel) {\n            // TODO - need to ensure ordering hasn't changed and if it has need to re-order this.panels\n            return;\n        }\n        this.updateMru(panel);\n        this.panels.splice(index, 0, panel);\n        this._onDidAddPanel.fire({ panel });\n    }\n    doSetActivePanel(panel) {\n        this._activePanel = panel;\n        if (panel) {\n            this.tabsContainer.setActivePanel(panel);\n            panel.layout(this._width, this._height);\n            this.updateMru(panel);\n            this._onDidActivePanelChange.fire({ panel });\n        }\n    }\n    updateMru(panel) {\n        if (this.mostRecentlyUsed.includes(panel)) {\n            this.mostRecentlyUsed.splice(this.mostRecentlyUsed.indexOf(panel), 1);\n        }\n        this.mostRecentlyUsed = [panel, ...this.mostRecentlyUsed];\n    }\n    updateContainer() {\n        toggleClass(this.container, 'empty', this.isEmpty);\n        this.panels.forEach((panel) => panel.updateParentGroup(this.parent, this.isActive));\n        if (this.isEmpty && !this.watermark) {\n            const watermark = this.accessor.createWatermarkComponent();\n            watermark.init({\n                containerApi: new DockviewApi(this.accessor),\n                params: {},\n                title: '',\n                api: null,\n            });\n            this.watermark = watermark;\n            addDisposableListener(this.watermark.element, 'click', () => {\n                if (!this.isActive) {\n                    this.accessor.doSetGroupActive(this.parent);\n                }\n            });\n            this.contentContainer.hide();\n            this.tabsContainer.hide();\n            this.container.appendChild(this.watermark.element);\n            this.watermark.updateParentGroup(this.parent, true);\n        }\n        if (!this.isEmpty && this.watermark) {\n            this.watermark.element.remove();\n            this.watermark.dispose();\n            this.watermark = undefined;\n            this.contentContainer.show();\n            this.tabsContainer.show();\n        }\n    }\n    canDisplayOverlay(event, target) {\n        // custom overlay handler\n        if (this.accessor.options.showDndOverlay) {\n            return this.accessor.options.showDndOverlay({\n                nativeEvent: event,\n                target,\n                group: this.accessor.getPanel(this.id),\n                getData: getPanelData,\n            });\n        }\n        return false;\n    }\n    handleDropEvent(event, position, index) {\n        const data = getPanelData();\n        if (data) {\n            const fromSameGroup = this.tabsContainer.indexOf(data.panelId) !== -1;\n            if (fromSameGroup && this.tabsContainer.size === 1) {\n                return;\n            }\n            const { groupId, panelId } = data;\n            const isSameGroup = this.id === groupId;\n            if (isSameGroup && !position) {\n                const oldIndex = this.tabsContainer.indexOf(panelId);\n                if (oldIndex === index) {\n                    return;\n                }\n            }\n            this._onMove.fire({\n                target: position,\n                groupId: data.groupId,\n                itemId: data.panelId,\n                index,\n            });\n        }\n        else {\n            this._onDidDrop.fire({\n                nativeEvent: event,\n                position,\n                index,\n                getData: () => getPanelData(),\n            });\n        }\n    }\n    dispose() {\n        var _a;\n        super.dispose();\n        (_a = this.watermark) === null || _a === void 0 ? void 0 : _a.dispose();\n        for (const panel of this.panels) {\n            panel.dispose();\n        }\n        this.dropTarget.dispose();\n        this.tabsContainer.dispose();\n        this.contentContainer.dispose();\n    }\n}\n","import { Emitter, Event, TickDelayedEvent } from '../events';\nimport { getGridLocation, Gridview } from './gridview';\nimport { Position } from '../dnd/droptarget';\nimport { CompositeDisposable } from '../lifecycle';\nimport { sequentialNumberGenerator } from '../math';\nimport { Sizing, } from '../splitview/core/splitview';\nconst nextLayoutId = sequentialNumberGenerator();\nexport function toTarget(direction) {\n    switch (direction) {\n        case 'left':\n            return Position.Left;\n        case 'right':\n            return Position.Right;\n        case 'above':\n            return Position.Top;\n        case 'below':\n            return Position.Bottom;\n        case 'within':\n        default:\n            return Position.Center;\n    }\n}\nexport class BaseGrid extends CompositeDisposable {\n    constructor(_element, options) {\n        super();\n        this._element = _element;\n        this._id = nextLayoutId.next();\n        this._groups = new Map();\n        this._onDidLayoutChange = new Emitter();\n        this.onDidLayoutChange = this._onDidLayoutChange.event;\n        this._onDidRemoveGroup = new Emitter();\n        this.onDidRemoveGroup = this._onDidRemoveGroup.event;\n        this._onDidAddGroup = new Emitter();\n        this.onDidAddGroup = this._onDidAddGroup.event;\n        this._onDidActiveGroupChange = new Emitter();\n        this.onDidActiveGroupChange = this._onDidActiveGroupChange.event;\n        this._bufferOnDidLayoutChange = new TickDelayedEvent();\n        this.gridview = new Gridview(!!options.proportionalLayout, options.styles, options.orientation);\n        this.element.appendChild(this.gridview.element);\n        this.layout(0, 0, true); // set some elements height/widths\n        this.addDisposables(this.gridview.onDidChange(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }));\n        this.addDisposables(Event.any(this.onDidAddGroup, this.onDidRemoveGroup, this.onDidActiveGroupChange)(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), this._bufferOnDidLayoutChange.onEvent(() => {\n            this._onDidLayoutChange.fire();\n        }), this._bufferOnDidLayoutChange);\n    }\n    get id() {\n        return this._id;\n    }\n    get element() {\n        return this._element;\n    }\n    get size() {\n        return this._groups.size;\n    }\n    get groups() {\n        return Array.from(this._groups.values()).map((_) => _.value);\n    }\n    get width() {\n        return this.gridview.width;\n    }\n    get height() {\n        return this.gridview.height;\n    }\n    get minimumHeight() {\n        return this.gridview.minimumHeight;\n    }\n    get maximumHeight() {\n        return this.gridview.maximumHeight;\n    }\n    get minimumWidth() {\n        return this.gridview.minimumWidth;\n    }\n    get maximumWidth() {\n        return this.gridview.maximumWidth;\n    }\n    get activeGroup() {\n        return this._activeGroup;\n    }\n    setVisible(panel, visible) {\n        this.gridview.setViewVisible(getGridLocation(panel.element), visible);\n        this._onDidLayoutChange.fire();\n    }\n    isVisible(panel) {\n        return this.gridview.isViewVisible(getGridLocation(panel.element));\n    }\n    doAddGroup(group, location = [0], size) {\n        this.gridview.addView(group, size !== null && size !== void 0 ? size : Sizing.Distribute, location);\n        this._onDidAddGroup.fire(group);\n        this.doSetGroupActive(group);\n    }\n    doRemoveGroup(group, options) {\n        if (!this._groups.has(group.id)) {\n            throw new Error('invalid operation');\n        }\n        const item = this._groups.get(group.id);\n        const view = this.gridview.remove(group, Sizing.Distribute);\n        if (item && !(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n            item.disposable.dispose();\n            item.value.dispose();\n            this._groups.delete(group.id);\n        }\n        this._onDidRemoveGroup.fire(group);\n        if (!(options === null || options === void 0 ? void 0 : options.skipActive) && this._activeGroup === group) {\n            const groups = Array.from(this._groups.values());\n            this.doSetGroupActive(groups.length > 0 ? groups[0].value : undefined);\n        }\n        return view;\n    }\n    getPanel(id) {\n        var _a;\n        return (_a = this._groups.get(id)) === null || _a === void 0 ? void 0 : _a.value;\n    }\n    doSetGroupActive(group, skipFocus) {\n        if (this._activeGroup === group) {\n            return;\n        }\n        if (this._activeGroup) {\n            this._activeGroup.setActive(false);\n            if (!skipFocus) {\n                this._activeGroup.focus();\n            }\n        }\n        if (group) {\n            group.setActive(true);\n            if (!skipFocus) {\n                group.focus();\n            }\n        }\n        this._activeGroup = group;\n        this._onDidActiveGroupChange.fire(group);\n    }\n    removeGroup(group) {\n        this.doRemoveGroup(group);\n    }\n    moveToNext(options) {\n        var _a;\n        if (!options) {\n            options = {};\n        }\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.next(location)) === null || _a === void 0 ? void 0 : _a.view;\n        this.doSetGroupActive(next);\n    }\n    moveToPrevious(options) {\n        var _a;\n        if (!options) {\n            options = {};\n        }\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.previous(location)) === null || _a === void 0 ? void 0 : _a.view;\n        this.doSetGroupActive(next);\n    }\n    layout(width, height, forceResize) {\n        const different = forceResize || width !== this.width || height !== this.height;\n        if (!different) {\n            return;\n        }\n        this.element.style.height = `${height}px`;\n        this.element.style.width = `${width}px`;\n        this.gridview.layout(width, height);\n    }\n    dispose() {\n        super.dispose();\n        this._onDidActiveGroupChange.dispose();\n        this._onDidAddGroup.dispose();\n        this._onDidRemoveGroup.dispose();\n        this._onDidLayoutChange.dispose();\n        for (const group of this.groups) {\n            group.dispose();\n        }\n        this.gridview.dispose();\n    }\n}\n","import { Emitter } from '../events';\nimport { CompositeDisposable } from '../lifecycle';\n/**\n * A core api implementation that should be used across all panel-like objects\n */\nexport class PanelApiImpl extends CompositeDisposable {\n    constructor(id) {\n        super();\n        this.id = id;\n        this._isFocused = false;\n        this._isActive = false;\n        this._isVisible = true;\n        this._width = 0;\n        this._height = 0;\n        this._onDidDimensionChange = new Emitter({\n            replay: true,\n        });\n        this.onDidDimensionsChange = this._onDidDimensionChange.event;\n        //\n        this._onDidChangeFocus = new Emitter({\n            replay: true,\n        });\n        this.onDidFocusChange = this._onDidChangeFocus.event;\n        //\n        this._onFocusEvent = new Emitter();\n        this.onFocusEvent = this._onFocusEvent.event;\n        //\n        this._onDidVisibilityChange = new Emitter({\n            replay: true,\n        });\n        this.onDidVisibilityChange = this._onDidVisibilityChange.event;\n        //\n        this._onVisibilityChange = new Emitter();\n        this.onVisibilityChange = this._onVisibilityChange.event;\n        //\n        this._onDidActiveChange = new Emitter({\n            replay: true,\n        });\n        this.onDidActiveChange = this._onDidActiveChange.event;\n        //\n        this._onActiveChange = new Emitter();\n        this.onActiveChange = this._onActiveChange.event;\n        this.addDisposables(this._onDidDimensionChange, this._onDidChangeFocus, this._onDidVisibilityChange, this._onDidActiveChange, this._onFocusEvent, this._onActiveChange, this._onVisibilityChange, this.onDidFocusChange((event) => {\n            this._isFocused = event.isFocused;\n        }), this.onDidActiveChange((event) => {\n            this._isActive = event.isActive;\n        }), this.onDidVisibilityChange((event) => {\n            this._isVisible = event.isVisible;\n        }), this.onDidDimensionsChange((event) => {\n            this._width = event.width;\n            this._height = event.height;\n        }));\n    }\n    //\n    get isFocused() {\n        return this._isFocused;\n    }\n    get isActive() {\n        return this._isActive;\n    }\n    get isVisible() {\n        return this._isVisible;\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    setVisible(isVisible) {\n        this._onVisibilityChange.fire({ isVisible });\n    }\n    setActive() {\n        this._onActiveChange.fire();\n    }\n    dispose() {\n        super.dispose();\n    }\n}\n","import { Emitter } from '../events';\nimport { PanelApiImpl } from './panelApi';\nexport class GridviewPanelApiImpl extends PanelApiImpl {\n    //\n    constructor(id) {\n        super(id);\n        this._onDidConstraintsChangeInternal = new Emitter();\n        this.onDidConstraintsChangeInternal = this._onDidConstraintsChangeInternal.event;\n        //\n        this._onDidConstraintsChange = new Emitter({\n            replay: true,\n        });\n        this.onDidConstraintsChange = this._onDidConstraintsChange.event;\n        //\n        this._onDidSizeChange = new Emitter();\n        this.onDidSizeChange = this._onDidSizeChange.event;\n        this.addDisposables(this._onDidConstraintsChangeInternal, this._onDidConstraintsChange, this._onDidSizeChange);\n    }\n    setConstraints(value) {\n        this._onDidConstraintsChangeInternal.fire(value);\n    }\n    setSize(event) {\n        this._onDidSizeChange.fire(event);\n    }\n}\n","import { Emitter } from '../events';\nimport { GridviewPanelApiImpl } from './gridviewPanelApi';\nimport { MutableDisposable } from '../lifecycle';\nexport class DockviewPanelApiImpl extends GridviewPanelApiImpl {\n    constructor(panel, group) {\n        super(panel.id);\n        this.panel = panel;\n        this._onDidTitleChange = new Emitter();\n        this.onDidTitleChange = this._onDidTitleChange.event;\n        this._onDidActiveGroupChange = new Emitter();\n        this.onDidActiveGroupChange = this._onDidActiveGroupChange.event;\n        this._onDidGroupChange = new Emitter();\n        this.onDidGroupChange = this._onDidGroupChange.event;\n        this.disposable = new MutableDisposable();\n        this._group = group;\n        this.addDisposables(this.disposable, this._onDidTitleChange, this._onDidGroupChange, this._onDidActiveGroupChange);\n    }\n    get title() {\n        return this.panel.title;\n    }\n    get isGroupActive() {\n        var _a;\n        return !!((_a = this.group) === null || _a === void 0 ? void 0 : _a.isActive);\n    }\n    set group(value) {\n        const isOldGroupActive = this.isGroupActive;\n        this._group = value;\n        this._onDidGroupChange.fire();\n        if (this._group) {\n            this.disposable.value = this._group.api.onDidActiveChange(() => {\n                this._onDidActiveGroupChange.fire();\n            });\n            if (this.isGroupActive !== isOldGroupActive) {\n                this._onDidActiveGroupChange.fire();\n            }\n        }\n    }\n    get group() {\n        return this._group;\n    }\n    setTitle(title) {\n        this._onDidTitleChange.fire({ title });\n    }\n    close() {\n        if (!this.group) {\n            throw new Error(`panel ${this.id} has no group`);\n        }\n        return this.group.model.closePanel(this.panel);\n    }\n}\n","import { DockviewPanelApiImpl } from '../api/groupPanelApi';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nexport class DockviewGroupPanel extends CompositeDisposable {\n    constructor(id, accessor, containerApi, group) {\n        super();\n        this.id = id;\n        this.containerApi = containerApi;\n        this.mutableDisposable = new MutableDisposable();\n        this._title = '';\n        this._group = group;\n        this.api = new DockviewPanelApiImpl(this, this._group);\n        this.addDisposables(this.api.onActiveChange(() => {\n            accessor.setActivePanel(this);\n        }));\n    }\n    get params() {\n        return this._params;\n    }\n    get title() {\n        return this._title;\n    }\n    get group() {\n        return this._group;\n    }\n    get view() {\n        return this._view;\n    }\n    init(params) {\n        var _a;\n        this._params = params.params;\n        this._view = params.view;\n        this.setTitle(params.title);\n        (_a = this.view) === null || _a === void 0 ? void 0 : _a.init(Object.assign(Object.assign({}, params), { api: this.api, containerApi: this.containerApi }));\n    }\n    focus() {\n        this.api._onFocusEvent.fire();\n    }\n    toJSON() {\n        return {\n            id: this.id,\n            view: this.view.toJSON(),\n            params: Object.keys(this._params || {}).length > 0\n                ? this._params\n                : undefined,\n            title: this.title,\n        };\n    }\n    setTitle(title) {\n        var _a, _b;\n        const didTitleChange = title !== ((_a = this._params) === null || _a === void 0 ? void 0 : _a.title);\n        if (didTitleChange) {\n            this._title = title;\n            (_b = this.view) === null || _b === void 0 ? void 0 : _b.update({\n                params: {\n                    params: this._params,\n                    title: this.title,\n                },\n            });\n            this.api._onDidTitleChange.fire({ title });\n        }\n    }\n    update(event) {\n        var _a;\n        const params = event.params;\n        this._params = Object.assign(Object.assign({}, (this._params || {})), event.params.params);\n        if (typeof params.title === 'string') {\n            if (params.title !== this.title) {\n                this._title = params.title;\n                this.api._onDidTitleChange.fire({ title: this.title });\n            }\n        }\n        (_a = this.view) === null || _a === void 0 ? void 0 : _a.update({\n            params: {\n                params: this._params,\n                title: this.title,\n            },\n        });\n    }\n    updateParentGroup(group, isGroupActive) {\n        var _a;\n        this._group = group;\n        this.api.group = group;\n        const isPanelVisible = this._group.model.isPanelActive(this);\n        this.api._onDidActiveChange.fire({\n            isActive: isGroupActive && isPanelVisible,\n        });\n        this.api._onDidVisibilityChange.fire({\n            isVisible: isPanelVisible,\n        });\n        (_a = this.view) === null || _a === void 0 ? void 0 : _a.updateParentGroup(this._group, this._group.model.isPanelActive(this));\n    }\n    layout(width, height) {\n        var _a;\n        // the obtain the correct dimensions of the content panel we must deduct the tab height\n        this.api._onDidDimensionChange.fire({\n            width,\n            height: height - (this.group.model.header.height || 0),\n        });\n        (_a = this.view) === null || _a === void 0 ? void 0 : _a.layout(width, height);\n    }\n    dispose() {\n        var _a;\n        this.api.dispose();\n        this.mutableDisposable.dispose();\n        (_a = this.view) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","export class ActionContainer {\n    constructor() {\n        this._element = document.createElement('div');\n        this._element.className = 'actions-bar';\n        this._list = document.createElement('ul');\n        this._list.className = 'actions-container';\n        this._element.appendChild(this._list);\n    }\n    get element() {\n        return this._element;\n    }\n    add(element) {\n        const listItem = document.createElement('li');\n        listItem.className = 'action-item';\n        this._list.appendChild(element);\n    }\n}\n","const createSvgElementFromPath = (params) => {\n    const svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n    svg.setAttributeNS(null, 'height', params.height);\n    svg.setAttributeNS(null, 'width', params.width);\n    svg.setAttributeNS(null, 'viewBox', params.viewbox);\n    svg.setAttributeNS(null, 'aria-hidden', 'false');\n    svg.setAttributeNS(null, 'focusable', 'false');\n    svg.classList.add('dockview-svg');\n    const path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n    path.setAttributeNS(null, 'd', params.path);\n    svg.appendChild(path);\n    return svg;\n};\nexport const createCloseButton = () => createSvgElementFromPath({\n    width: '11',\n    height: '11',\n    viewbox: '0 0 28 28',\n    path: 'M2.1 27.3L0 25.2L11.55 13.65L0 2.1L2.1 0L13.65 11.55L25.2 0L27.3 2.1L15.75 13.65L27.3 25.2L25.2 27.3L13.65 15.75L2.1 27.3Z',\n});\nexport const createExpandMoreButton = () => createSvgElementFromPath({\n    width: '11',\n    height: '11',\n    viewbox: '0 0 24 15',\n    path: 'M12 14.15L0 2.15L2.15 0L12 9.9L21.85 0.0499992L24 2.2L12 14.15Z',\n});\nexport const createChevronRightButton = () => createSvgElementFromPath({\n    width: '11',\n    height: '11',\n    viewbox: '0 0 15 25',\n    path: 'M2.15 24.1L0 21.95L9.9 12.05L0 2.15L2.15 0L14.2 12.05L2.15 24.1Z',\n});\n","import { ActionContainer } from '../../../actionbar/actionsContainer';\nimport { addDisposableListener } from '../../../events';\nimport { toggleClass } from '../../../dom';\nimport { CompositeDisposable } from '../../../lifecycle';\nimport { createCloseButton } from '../../../svg';\nexport class Watermark extends CompositeDisposable {\n    constructor() {\n        super();\n        this._element = document.createElement('div');\n        this._element.className = 'watermark';\n        const title = document.createElement('div');\n        title.className = 'watermark-title';\n        const emptySpace = document.createElement('span');\n        emptySpace.style.flexGrow = '1';\n        const content = document.createElement('div');\n        content.className = 'watermark-content';\n        this._element.appendChild(title);\n        this._element.appendChild(content);\n        const actions = new ActionContainer();\n        title.appendChild(emptySpace);\n        title.appendChild(actions.element);\n        const closeAnchor = document.createElement('div');\n        closeAnchor.className = 'close-action';\n        closeAnchor.appendChild(createCloseButton());\n        actions.add(closeAnchor);\n        this.addDisposables(addDisposableListener(closeAnchor, 'click', (ev) => {\n            var _a;\n            ev.preventDefault();\n            if (this.group) {\n                (_a = this.params) === null || _a === void 0 ? void 0 : _a.containerApi.removeGroup(this.group);\n            }\n        }));\n    }\n    get id() {\n        return 'watermark';\n    }\n    update(_event) {\n        // noop\n    }\n    focus() {\n        // noop\n    }\n    toJSON() {\n        return {};\n    }\n    layout(_width, _height) {\n        // noop\n    }\n    init(params) {\n        this.params = params;\n        this.addDisposables(this.params.containerApi.onDidLayoutChange(() => {\n            this.render();\n        }));\n        this.render();\n    }\n    updateParentGroup(group, _visible) {\n        this.group = group;\n        this.render();\n    }\n    get element() {\n        return this._element;\n    }\n    render() {\n        const isOneGroup = !!(this.params && this.params.containerApi.size <= 1);\n        toggleClass(this.element, 'has-actions', isOneGroup);\n    }\n    dispose() {\n        super.dispose();\n    }\n}\n","export function createComponent(id, componentName, components = {}, frameworkComponents = {}, createFrameworkComponent, fallback) {\n    const Component = typeof componentName === 'string'\n        ? components[componentName]\n        : undefined;\n    const FrameworkComponent = typeof componentName === 'string'\n        ? frameworkComponents[componentName]\n        : undefined;\n    if (Component && FrameworkComponent) {\n        throw new Error(`Cannot create '${id}'. component '${componentName}' registered as both a component and frameworkComponent`);\n    }\n    if (FrameworkComponent) {\n        if (!createFrameworkComponent) {\n            throw new Error(`Cannot create '${id}' for framework component '${componentName}'. you must register a frameworkPanelWrapper to use framework components`);\n        }\n        return createFrameworkComponent.createComponent(id, componentName, FrameworkComponent);\n    }\n    if (!Component) {\n        if (fallback) {\n            return fallback();\n        }\n        throw new Error(`Cannot create '${id}', no component '${componentName}' provided`);\n    }\n    return new Component(id, componentName);\n}\n","import { CompositeDisposable } from '../../../lifecycle';\nimport { addDisposableListener } from '../../../events';\nimport { createCloseButton } from '../../../svg';\nexport const DEFAULT_TAB_IDENTIFIER = '__default__tab__';\nexport class DefaultTab extends CompositeDisposable {\n    constructor() {\n        super();\n        this._isPanelVisible = false;\n        this._isGroupActive = false;\n        //\n        this.params = {};\n        this._element = document.createElement('div');\n        this._element.className = 'default-tab';\n        //\n        this._content = document.createElement('div');\n        this._content.className = 'tab-content';\n        //\n        this._actionContainer = document.createElement('div');\n        this._actionContainer.className = 'action-container';\n        //\n        this._list = document.createElement('ul');\n        this._list.className = 'tab-list';\n        //\n        this.action = document.createElement('div');\n        this.action.className = 'tab-action';\n        this.action.appendChild(createCloseButton());\n        //\n        this._element.appendChild(this._content);\n        this._element.appendChild(this._actionContainer);\n        this._actionContainer.appendChild(this._list);\n        this._list.appendChild(this.action);\n        //\n        this.addDisposables(addDisposableListener(this._actionContainer, 'mousedown', (ev) => {\n            ev.preventDefault();\n        }));\n        this.render();\n    }\n    get element() {\n        return this._element;\n    }\n    get id() {\n        return DEFAULT_TAB_IDENTIFIER;\n    }\n    update(event) {\n        this.params = Object.assign(Object.assign({}, this.params), event.params);\n        this.render();\n    }\n    toJSON() {\n        return { id: this.id };\n    }\n    focus() {\n        //noop\n    }\n    init(params) {\n        this.params = params;\n        this._content.textContent = params.title;\n        addDisposableListener(this.action, 'click', (ev) => {\n            ev.preventDefault(); //\n            this.params.api.close();\n        });\n    }\n    updateParentGroup(group, isPanelVisible) {\n        const changed = this._isPanelVisible !== isPanelVisible ||\n            this._isGroupActive !== group.isActive;\n        this._isPanelVisible = isPanelVisible;\n        this._isGroupActive = group.isActive;\n        if (changed) {\n            this.render();\n        }\n    }\n    layout(_width, _height) {\n        // noop\n    }\n    render() {\n        if (this._content.textContent !== this.params.title) {\n            this._content.textContent = this.params.title;\n        }\n    }\n}\n","import { trackFocus } from '../dom';\nimport { CompositeDisposable } from '../lifecycle';\nexport class BasePanelView extends CompositeDisposable {\n    constructor(id, component, api) {\n        super();\n        this.id = id;\n        this.component = component;\n        this.api = api;\n        this._height = 0;\n        this._width = 0;\n        this._element = document.createElement('div');\n        this._element.tabIndex = -1;\n        this._element.style.outline = 'none';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n        this._element.style.overflow = 'hidden';\n        const { onDidFocus, onDidBlur } = trackFocus(this._element);\n        this.addDisposables(this.api, onDidFocus(() => {\n            this.api._onDidChangeFocus.fire({ isFocused: true });\n        }), onDidBlur(() => {\n            this.api._onDidChangeFocus.fire({ isFocused: false });\n        }));\n    }\n    get element() {\n        return this._element;\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    get params() {\n        var _a;\n        return (_a = this._params) === null || _a === void 0 ? void 0 : _a.params;\n    }\n    focus() {\n        this.api._onFocusEvent.fire();\n    }\n    layout(width, height) {\n        this._width = width;\n        this._height = height;\n        this.api._onDidDimensionChange.fire({ width, height });\n        if (this.part) {\n            if (this._params) {\n                this.part.update(this._params.params);\n            }\n        }\n    }\n    init(parameters) {\n        this._params = parameters;\n        this.part = this.getComponent();\n    }\n    update(event) {\n        var _a, _b;\n        this._params = Object.assign(Object.assign({}, this._params), { params: Object.assign(Object.assign({}, (_a = this._params) === null || _a === void 0 ? void 0 : _a.params), event.params) });\n        (_b = this.part) === null || _b === void 0 ? void 0 : _b.update({ params: this._params.params });\n    }\n    toJSON() {\n        var _a, _b;\n        const params = (_b = (_a = this._params) === null || _a === void 0 ? void 0 : _a.params) !== null && _b !== void 0 ? _b : {};\n        return {\n            id: this.id,\n            component: this.component,\n            params: Object.keys(params).length > 0 ? params : undefined,\n        };\n    }\n    dispose() {\n        var _a;\n        super.dispose();\n        this.api.dispose();\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import { BasePanelView, } from './basePanelView';\nimport { GridviewPanelApiImpl } from '../api/gridviewPanelApi';\nimport { Emitter } from '../events';\nexport class GridviewPanel extends BasePanelView {\n    constructor(id, component, api = new GridviewPanelApiImpl(id)) {\n        super(id, component, api);\n        this._evaluatedMinimumWidth = 0;\n        this._evaluatedMaximumWidth = Number.MAX_SAFE_INTEGER;\n        this._evaluatedMinimumHeight = 0;\n        this._evaluatedMaximumHeight = Number.MAX_SAFE_INTEGER;\n        this._minimumWidth = 0;\n        this._minimumHeight = 0;\n        this._maximumWidth = Number.MAX_SAFE_INTEGER;\n        this._maximumHeight = Number.MAX_SAFE_INTEGER;\n        this._snap = false;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this.addDisposables(this._onDidChange, this.api.onVisibilityChange((event) => {\n            const { isVisible } = event;\n            const { accessor } = this._params;\n            accessor.setVisible(this, isVisible);\n        }), this.api.onActiveChange(() => {\n            const { accessor } = this._params;\n            accessor.setActive(this);\n        }), this.api.onDidConstraintsChangeInternal((event) => {\n            if (typeof event.minimumWidth === 'number' ||\n                typeof event.minimumWidth === 'function') {\n                this._minimumWidth = event.minimumWidth;\n            }\n            if (typeof event.minimumHeight === 'number' ||\n                typeof event.minimumHeight === 'function') {\n                this._minimumHeight = event.minimumHeight;\n            }\n            if (typeof event.maximumWidth === 'number' ||\n                typeof event.maximumWidth === 'function') {\n                this._maximumWidth = event.maximumWidth;\n            }\n            if (typeof event.maximumHeight === 'number' ||\n                typeof event.maximumHeight === 'function') {\n                this._maximumHeight = event.maximumHeight;\n            }\n        }), this.api.onDidSizeChange((event) => {\n            this._onDidChange.fire({\n                height: event.height,\n                width: event.width,\n            });\n        }));\n    }\n    get priority() {\n        return this._priority;\n    }\n    get snap() {\n        return this._snap;\n    }\n    get minimumWidth() {\n        const width = typeof this._minimumWidth === 'function'\n            ? this._minimumWidth()\n            : this._minimumWidth;\n        if (width !== this._evaluatedMinimumWidth) {\n            this._evaluatedMinimumWidth = width;\n            this.updateConstraints();\n        }\n        return width;\n    }\n    get minimumHeight() {\n        const height = typeof this._minimumHeight === 'function'\n            ? this._minimumHeight()\n            : this._minimumHeight;\n        if (height !== this._evaluatedMinimumHeight) {\n            this._evaluatedMinimumHeight = height;\n            this.updateConstraints();\n        }\n        return height;\n    }\n    get maximumHeight() {\n        const height = typeof this._maximumHeight === 'function'\n            ? this._maximumHeight()\n            : this._maximumHeight;\n        if (height !== this._evaluatedMaximumHeight) {\n            this._evaluatedMaximumHeight = height;\n            this.updateConstraints();\n        }\n        return height;\n    }\n    get maximumWidth() {\n        const width = typeof this._maximumWidth === 'function'\n            ? this._maximumWidth()\n            : this._maximumWidth;\n        if (width !== this._evaluatedMaximumWidth) {\n            this._evaluatedMaximumWidth = width;\n            this.updateConstraints();\n        }\n        return width;\n    }\n    get isActive() {\n        return this.api.isActive;\n    }\n    setVisible(isVisible) {\n        this.api._onDidVisibilityChange.fire({ isVisible });\n    }\n    setActive(isActive) {\n        this.api._onDidActiveChange.fire({ isActive });\n    }\n    init(parameters) {\n        if (parameters.maximumHeight) {\n            this._maximumHeight = parameters.maximumHeight;\n        }\n        if (parameters.minimumHeight) {\n            this._minimumHeight = parameters.minimumHeight;\n        }\n        if (parameters.maximumWidth) {\n            this._maximumWidth = parameters.maximumWidth;\n        }\n        if (parameters.minimumWidth) {\n            this._minimumWidth = parameters.minimumWidth;\n        }\n        this._priority = parameters.priority;\n        this._snap = !!parameters.snap;\n        super.init(parameters);\n        if (typeof parameters.isVisible === 'boolean') {\n            this.setVisible(parameters.isVisible);\n        }\n    }\n    updateConstraints() {\n        this.api._onDidConstraintsChange.fire({\n            minimumWidth: this._evaluatedMinimumWidth,\n            maximumWidth: this._evaluatedMaximumWidth,\n            minimumHeight: this._evaluatedMinimumHeight,\n            maximumHeight: this._evaluatedMaximumHeight,\n        });\n    }\n    toJSON() {\n        const state = super.toJSON();\n        const maximum = (value) => value === Number.MAX_SAFE_INTEGER ? undefined : value;\n        const minimum = (value) => (value <= 0 ? undefined : value);\n        return Object.assign(Object.assign({}, state), { minimumHeight: minimum(this.minimumHeight), maximumHeight: maximum(this.maximumHeight), minimumWidth: minimum(this.minimumWidth), maximumWidth: maximum(this.maximumWidth), snap: this.snap, priority: this.priority });\n    }\n}\n","import { GridviewPanelApiImpl, } from '../api/gridviewPanelApi';\nimport { Groupview } from './groupview';\nimport { GridviewPanel } from '../gridview/gridviewPanel';\nclass GroupviewApi extends GridviewPanelApiImpl {\n}\nexport class GroupPanel extends GridviewPanel {\n    constructor(accessor, id, options) {\n        super(id, 'groupview_default', new GroupviewApi(id));\n        this._model = new Groupview(this.element, accessor, id, options, this);\n    }\n    get panels() {\n        return this._model.panels;\n    }\n    get activePanel() {\n        return this._model.activePanel;\n    }\n    get size() {\n        return this._model.size;\n    }\n    get model() {\n        return this._model;\n    }\n    get minimumHeight() {\n        return this._model.minimumHeight;\n    }\n    get maximumHeight() {\n        return this._model.maximumHeight;\n    }\n    get minimumWidth() {\n        return this._model.minimumWidth;\n    }\n    get maximumWidth() {\n        return this._model.maximumWidth;\n    }\n    get locked() {\n        return this._model.locked;\n    }\n    set locked(value) {\n        this._model.locked = value;\n    }\n    get header() {\n        return this._model.header;\n    }\n    initialize() {\n        this._model.initialize();\n    }\n    setActive(isActive) {\n        super.setActive(isActive);\n        this.model.setActive(isActive);\n    }\n    layout(width, height) {\n        super.layout(width, height);\n        this.model.layout(width, height);\n    }\n    getComponent() {\n        return this._model;\n    }\n    toJSON() {\n        return this.model.toJSON();\n    }\n}\n","import { DefaultTab } from './components/tab/defaultTab';\nexport class DefaultGroupPanelView {\n    constructor(renderers) {\n        var _a;\n        this._content = renderers.content;\n        this._tab = (_a = renderers.tab) !== null && _a !== void 0 ? _a : new DefaultTab();\n    }\n    get content() {\n        return this._content;\n    }\n    get tab() {\n        return this._tab;\n    }\n    init(params) {\n        this.content.init(Object.assign(Object.assign({}, params), { tab: this.tab }));\n        this.tab.init(params);\n    }\n    updateParentGroup(group, isPanelVisible) {\n        var _a;\n        this._content.updateParentGroup(group, isPanelVisible);\n        (_a = this._tab) === null || _a === void 0 ? void 0 : _a.updateParentGroup(group, isPanelVisible);\n    }\n    layout(width, height) {\n        this.content.layout(width, height);\n    }\n    update(event) {\n        this.content.update(event);\n        this.tab.update(event);\n    }\n    toJSON() {\n        let tab = this.tab instanceof DefaultTab ? undefined : this.tab.toJSON();\n        if (tab && Object.keys(tab).length === 0) {\n            tab = undefined;\n        }\n        return {\n            content: this.content.toJSON(),\n            tab,\n        };\n    }\n    dispose() {\n        this.content.dispose();\n        this.tab.dispose();\n    }\n}\n","import { getRelativeLocation, getGridLocation, } from '../gridview/gridview';\nimport { Position } from '../dnd/droptarget';\nimport { tail, sequenceEquals } from '../array';\nimport { DockviewGroupPanel } from './dockviewGroupPanel';\nimport { CompositeDisposable } from '../lifecycle';\nimport { Event, Emitter } from '../events';\nimport { Watermark } from './components/watermark/watermark';\nimport { sequentialNumberGenerator } from '../math';\nimport { createComponent } from '../panel/componentFactory';\nimport { BaseGrid, toTarget, } from '../gridview/baseComponentGridview';\nimport { DockviewApi } from '../api/component.api';\nimport { Orientation } from '../splitview/core/splitview';\nimport { DefaultTab } from './components/tab/defaultTab';\nimport { GroupPanel } from '../groupview/groupviewPanel';\nimport { DefaultGroupPanelView } from './defaultGroupPanelView';\nconst nextGroupId = sequentialNumberGenerator();\nexport class DockviewComponent extends BaseGrid {\n    constructor(element, options) {\n        super(element, {\n            proportionalLayout: true,\n            orientation: options.orientation || Orientation.HORIZONTAL,\n            styles: options.styles,\n        });\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onDidRemovePanel = new Emitter();\n        this.onDidRemovePanel = this._onDidRemovePanel.event;\n        this._onDidAddPanel = new Emitter();\n        this.onDidAddPanel = this._onDidAddPanel.event;\n        this._onDidLayoutFromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutFromJSON.event;\n        this._onDidActivePanelChange = new Emitter();\n        this.onDidActivePanelChange = this._onDidActivePanelChange.event;\n        this.addDisposables(this._onDidDrop, Event.any(this.onDidAddPanel, this.onDidRemovePanel, this.onDidActivePanelChange)(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }));\n        this._options = options;\n        if (!this.options.components) {\n            this.options.components = {};\n        }\n        if (!this.options.frameworkComponents) {\n            this.options.frameworkComponents = {};\n        }\n        if (!this.options.frameworkTabComponents) {\n            this.options.frameworkTabComponents = {};\n        }\n        if (!this.options.tabComponents) {\n            this.options.tabComponents = {};\n        }\n        if (!this.options.watermarkComponent &&\n            !this.options.watermarkFrameworkComponent) {\n            this.options.watermarkComponent = Watermark;\n        }\n        this._api = new DockviewApi(this);\n    }\n    get totalPanels() {\n        return this.panels.length;\n    }\n    get panels() {\n        return this.groups.flatMap((group) => group.panels);\n    }\n    get deserializer() {\n        return this._deserializer;\n    }\n    set deserializer(value) {\n        this._deserializer = value;\n    }\n    get options() {\n        return this._options;\n    }\n    get activePanel() {\n        const activeGroup = this.activeGroup;\n        if (!activeGroup) {\n            return undefined;\n        }\n        return activeGroup.activePanel;\n    }\n    set tabHeight(height) {\n        this.options.tabHeight = height;\n        this._groups.forEach((value) => {\n            value.value.model.header.height = height;\n        });\n    }\n    get tabHeight() {\n        return this.options.tabHeight;\n    }\n    updateOptions(options) {\n        const hasOrientationChanged = typeof options.orientation === 'string' &&\n            this.gridview.orientation !== options.orientation;\n        this._options = Object.assign(Object.assign({}, this.options), options);\n        if (hasOrientationChanged) {\n            this.gridview.orientation = options.orientation;\n        }\n        this.layout(this.gridview.width, this.gridview.height, true);\n    }\n    focus() {\n        var _a;\n        (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    getGroupPanel(id) {\n        return this.panels.find((panel) => panel.id === id);\n    }\n    setActivePanel(panel) {\n        this.doSetGroupActive(panel.group);\n        panel.group.model.openPanel(panel);\n    }\n    moveToNext(options = {}) {\n        var _a;\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        if (options.includePanel && options.group) {\n            if (options.group.activePanel !==\n                options.group.panels[options.group.panels.length - 1]) {\n                options.group.model.moveToNext({ suppressRoll: true });\n                return;\n            }\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.next(location)) === null || _a === void 0 ? void 0 : _a.view;\n        this.doSetGroupActive(next);\n    }\n    moveToPrevious(options = {}) {\n        var _a;\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        if (options.includePanel && options.group) {\n            if (options.group.activePanel !==\n                options.group.panels[0]) {\n                options.group.model.moveToPrevious({ suppressRoll: true });\n                return;\n            }\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.previous(location)) === null || _a === void 0 ? void 0 : _a.view;\n        if (next) {\n            this.doSetGroupActive(next);\n        }\n    }\n    /**\n     * Serialize the current state of the layout\n     *\n     * @returns A JSON respresentation of the layout\n     */\n    toJSON() {\n        var _a;\n        const data = this.gridview.serialize();\n        const panels = this.panels.reduce((collection, panel) => {\n            collection[panel.id] = panel.toJSON();\n            return collection;\n        }, {});\n        return {\n            grid: data,\n            panels,\n            activeGroup: (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.id,\n            options: { tabHeight: this.tabHeight },\n        };\n    }\n    fromJSON(data) {\n        this.clear();\n        if (!this.deserializer) {\n            throw new Error('invalid deserializer');\n        }\n        const { grid, panels, options, activeGroup } = data;\n        if (typeof (options === null || options === void 0 ? void 0 : options.tabHeight) === 'number') {\n            this.tabHeight = options.tabHeight;\n        }\n        if (!this.deserializer) {\n            throw new Error('no deserializer provided');\n        }\n        this.gridview.deserialize(grid, {\n            fromJSON: (node) => {\n                const { id, locked, hideHeader, views, activeView } = node.data;\n                const group = this.createGroup({\n                    id,\n                    locked: !!locked,\n                    hideHeader: !!hideHeader,\n                });\n                this._onDidAddGroup.fire(group);\n                for (const child of views) {\n                    const panel = this.deserializer.fromJSON(panels[child], group);\n                    const isActive = typeof activeView === 'string' && activeView === panel.id;\n                    group.model.openPanel(panel, {\n                        skipSetPanelActive: !isActive,\n                        skipSetGroupActive: true\n                    });\n                }\n                if (!group.activePanel && group.panels.length > 0) {\n                    group.model.openPanel(group.panels[group.panels.length - 1], {\n                        skipSetGroupActive: true\n                    });\n                }\n                return group;\n            }\n        });\n        if (typeof activeGroup === 'string') {\n            const panel = this.getPanel(activeGroup);\n            if (panel) {\n                this.doSetGroupActive(panel);\n            }\n        }\n        this.gridview.layout(this.width, this.height);\n        this._onDidLayoutFromJSON.fire();\n    }\n    clear() {\n        const groups = Array.from(this._groups.values()).map((_) => _.value);\n        const hasActiveGroup = !!this.activeGroup;\n        const hasActivePanel = !!this.activePanel;\n        for (const group of groups) {\n            // remove the group will automatically remove the panels\n            this.removeGroup(group, true);\n        }\n        if (hasActiveGroup) {\n            this.doSetGroupActive(undefined);\n        }\n        if (hasActivePanel) {\n            this._onDidActivePanelChange.fire(undefined);\n        }\n        this.gridview.clear();\n    }\n    closeAllGroups() {\n        for (const entry of this._groups.entries()) {\n            const [_, group] = entry;\n            group.value.model.closeAllPanels();\n        }\n    }\n    addPanel(options) {\n        var _a, _b;\n        if (this.panels.find((_) => _.id === options.id)) {\n            throw new Error(`panel with id ${options.id} already exists`);\n        }\n        let referenceGroup;\n        if ((_a = options.position) === null || _a === void 0 ? void 0 : _a.referencePanel) {\n            const referencePanel = this.getGroupPanel(options.position.referencePanel);\n            if (!referencePanel) {\n                throw new Error(`referencePanel ${options.position.referencePanel} does not exist`);\n            }\n            referenceGroup = this.findGroup(referencePanel);\n        }\n        else {\n            referenceGroup = this.activeGroup;\n        }\n        let panel;\n        if (referenceGroup) {\n            const target = toTarget(((_b = options.position) === null || _b === void 0 ? void 0 : _b.direction) || 'within');\n            if (target === Position.Center) {\n                panel = this.createPanel(options, referenceGroup);\n                referenceGroup.model.openPanel(panel);\n            }\n            else {\n                const location = getGridLocation(referenceGroup.element);\n                const relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n                const group = this.createGroupAtLocation(relativeLocation);\n                panel = this.createPanel(options, group);\n                group.model.openPanel(panel);\n            }\n        }\n        else {\n            const group = this.createGroupAtLocation();\n            panel = this.createPanel(options, group);\n            group.model.openPanel(panel);\n        }\n        return panel;\n    }\n    removePanel(panel, options = {\n        removeEmptyGroup: true,\n        skipDispose: false,\n    }) {\n        const group = panel.group;\n        if (!group) {\n            throw new Error(`cannot remove panel ${panel.id}. it's missing a group.`);\n        }\n        group.model.removePanel(panel);\n        panel.dispose();\n        const retainGroupForWatermark = this.size === 1;\n        if (!retainGroupForWatermark &&\n            group.size === 0 &&\n            options.removeEmptyGroup) {\n            this.removeGroup(group);\n        }\n    }\n    createWatermarkComponent() {\n        var _a;\n        return createComponent('watermark-id', 'watermark-name', this.options.watermarkComponent\n            ? { 'watermark-name': this.options.watermarkComponent }\n            : {}, this.options.watermarkFrameworkComponent\n            ? { 'watermark-name': this.options.watermarkFrameworkComponent }\n            : {}, (_a = this.options.frameworkComponentFactory) === null || _a === void 0 ? void 0 : _a.watermark);\n    }\n    addEmptyGroup(options) {\n        const group = this.createGroup();\n        if (options) {\n            const referencePanel = this.panels.find((panel) => panel.id === options.referencePanel);\n            if (!referencePanel) {\n                throw new Error(`reference panel ${options.referencePanel} does not exist`);\n            }\n            const referenceGroup = this.findGroup(referencePanel);\n            if (!referenceGroup) {\n                throw new Error(`reference group for reference panel ${options.referencePanel} does not exist`);\n            }\n            const target = toTarget(options.direction || 'within');\n            const location = getGridLocation(referenceGroup.element);\n            const relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n            this.doAddGroup(group, relativeLocation);\n        }\n        else {\n            this.doAddGroup(group);\n        }\n    }\n    removeGroup(group, skipActive = false) {\n        const panels = [...group.panels]; // reassign since group panels will mutate\n        for (const panel of panels) {\n            this.removePanel(panel, {\n                removeEmptyGroup: false,\n                skipDispose: false,\n            });\n        }\n        super.doRemoveGroup(group, { skipActive });\n    }\n    moveGroupOrPanel(referenceGroup, groupId, itemId, target, index) {\n        var _a;\n        const sourceGroup = groupId\n            ? (_a = this._groups.get(groupId)) === null || _a === void 0 ? void 0 : _a.value\n            : undefined;\n        if (!target || target === Position.Center) {\n            const groupItem = (sourceGroup === null || sourceGroup === void 0 ? void 0 : sourceGroup.model.removePanel(itemId)) ||\n                this.panels.find((panel) => panel.id === itemId);\n            if (!groupItem) {\n                throw new Error(`No panel with id ${itemId}`);\n            }\n            if ((sourceGroup === null || sourceGroup === void 0 ? void 0 : sourceGroup.model.size) === 0) {\n                this.doRemoveGroup(sourceGroup);\n            }\n            referenceGroup.model.openPanel(groupItem, { index });\n        }\n        else {\n            const referenceLocation = getGridLocation(referenceGroup.element);\n            const targetLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, target);\n            if (sourceGroup && sourceGroup.size < 2) {\n                const [targetParentLocation, to] = tail(targetLocation);\n                const sourceLocation = getGridLocation(sourceGroup.element);\n                const [sourceParentLocation, from] = tail(sourceLocation);\n                if (sequenceEquals(sourceParentLocation, targetParentLocation)) {\n                    // special case when 'swapping' two views within same grid location\n                    // if a group has one tab - we are essentially moving the 'group'\n                    // which is equivalent to swapping two views in this case\n                    this.gridview.moveView(sourceParentLocation, from, to);\n                }\n                else {\n                    // source group will become empty so delete the group\n                    const targetGroup = this.doRemoveGroup(sourceGroup, {\n                        skipActive: true,\n                        skipDispose: true,\n                    });\n                    // after deleting the group we need to re-evaulate the ref location\n                    const updatedReferenceLocation = getGridLocation(referenceGroup.element);\n                    const location = getRelativeLocation(this.gridview.orientation, updatedReferenceLocation, target);\n                    this.doAddGroup(targetGroup, location);\n                }\n            }\n            else {\n                const groupItem = (sourceGroup === null || sourceGroup === void 0 ? void 0 : sourceGroup.model.removePanel(itemId)) ||\n                    this.panels.find((panel) => panel.id === itemId);\n                if (!groupItem) {\n                    throw new Error(`No panel with id ${itemId}`);\n                }\n                const dropLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, target);\n                const group = this.createGroupAtLocation(dropLocation);\n                group.model.openPanel(groupItem);\n            }\n        }\n    }\n    doSetGroupActive(group, skipFocus) {\n        var _a, _b;\n        const isGroupAlreadyFocused = this._activeGroup === group;\n        super.doSetGroupActive(group, skipFocus);\n        if (!isGroupAlreadyFocused && ((_a = this._activeGroup) === null || _a === void 0 ? void 0 : _a.activePanel)) {\n            this._onDidActivePanelChange.fire((_b = this._activeGroup) === null || _b === void 0 ? void 0 : _b.activePanel);\n        }\n    }\n    createGroup(options) {\n        if (!options) {\n            options = { tabHeight: this.tabHeight };\n        }\n        if (typeof options.tabHeight !== 'number') {\n            options.tabHeight = this.tabHeight;\n        }\n        let id = options === null || options === void 0 ? void 0 : options.id;\n        if (id && this._groups.has(options.id)) {\n            console.warn(`Duplicate group id ${options === null || options === void 0 ? void 0 : options.id}. reassigning group id to avoid errors`);\n            id = undefined;\n        }\n        if (!id) {\n            id = nextGroupId.next();\n            while (this._groups.has(id)) {\n                id = nextGroupId.next();\n            }\n        }\n        const view = new GroupPanel(this, id, options);\n        view.init({ params: {}, accessor: null }); // required to initialized .part and allow for correct disposal of group\n        if (!this._groups.has(view.id)) {\n            const disposable = new CompositeDisposable(view.model.onMove((event) => {\n                const { groupId, itemId, target, index } = event;\n                this.moveGroupOrPanel(view, groupId, itemId, target, index);\n            }), view.model.onDidDrop((event) => {\n                this._onDidDrop.fire(Object.assign(Object.assign({}, event), { api: this._api, group: view }));\n            }), view.model.onDidAddPanel((event) => {\n                this._onDidAddPanel.fire(event.panel);\n            }), view.model.onDidRemovePanel((event) => {\n                this._onDidRemovePanel.fire(event.panel);\n            }), view.model.onDidActivePanelChange((event) => {\n                this._onDidActivePanelChange.fire(event.panel);\n            }));\n            this._groups.set(view.id, { value: view, disposable });\n        }\n        // TODO: must be called after the above listeners have been setup,\n        // not an ideal pattern\n        view.initialize();\n        if (typeof this.options.tabHeight === 'number') {\n            view.model.header.height = this.options.tabHeight;\n        }\n        return view;\n    }\n    createPanel(options, group) {\n        const view = new DefaultGroupPanelView({\n            content: this.createContentComponent(options.id, options.component),\n            tab: this.createTabComponent(options.id, options.tabComponent || this.options.defaultTabComponent),\n        });\n        const panel = new DockviewGroupPanel(options.id, this, this._api, group);\n        panel.init({\n            view,\n            title: options.title || options.id,\n            params: (options === null || options === void 0 ? void 0 : options.params) || {},\n        });\n        return panel;\n    }\n    createContentComponent(id, componentName) {\n        var _a;\n        return createComponent(id, componentName, this.options.components || {}, this.options.frameworkComponents, (_a = this.options.frameworkComponentFactory) === null || _a === void 0 ? void 0 : _a.content);\n    }\n    createTabComponent(id, componentName) {\n        var _a;\n        return createComponent(id, componentName, this.options.tabComponents || {}, this.options.frameworkTabComponents, (_a = this.options.frameworkComponentFactory) === null || _a === void 0 ? void 0 : _a.tab, () => new DefaultTab());\n    }\n    createGroupAtLocation(location = [0]) {\n        const group = this.createGroup();\n        this.doAddGroup(group, location);\n        return group;\n    }\n    findGroup(panel) {\n        var _a;\n        return (_a = Array.from(this._groups.values()).find((group) => group.value.model.containsPanel(panel))) === null || _a === void 0 ? void 0 : _a.value;\n    }\n    dispose() {\n        super.dispose();\n        this._onDidActivePanelChange.dispose();\n        this._onDidAddPanel.dispose();\n        this._onDidRemovePanel.dispose();\n        this._onDidLayoutFromJSON.dispose();\n    }\n}\n","import { getRelativeLocation, getGridLocation, } from './gridview';\nimport { Position } from '../dnd/droptarget';\nimport { tail, sequenceEquals } from '../array';\nimport { CompositeDisposable } from '../lifecycle';\nimport { BaseGrid, toTarget, } from './baseComponentGridview';\nimport { createComponent } from '../panel/componentFactory';\nimport { Emitter } from '../events';\nexport class GridviewComponent extends BaseGrid {\n    constructor(element, options) {\n        super(element, {\n            proportionalLayout: options.proportionalLayout,\n            orientation: options.orientation,\n            styles: options.styles,\n        });\n        this._onDidLayoutfromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutfromJSON.event;\n        this._options = options;\n        if (!this.options.components) {\n            this.options.components = {};\n        }\n        if (!this.options.frameworkComponents) {\n            this.options.frameworkComponents = {};\n        }\n    }\n    get orientation() {\n        return this.gridview.orientation;\n    }\n    set orientation(value) {\n        this.gridview.orientation = value;\n    }\n    get options() {\n        return this._options;\n    }\n    get deserializer() {\n        return this._deserializer;\n    }\n    set deserializer(value) {\n        this._deserializer = value;\n    }\n    updateOptions(options) {\n        const hasOrientationChanged = typeof options.orientation === 'string' &&\n            this.gridview.orientation !== options.orientation;\n        this._options = Object.assign(Object.assign({}, this.options), options);\n        if (hasOrientationChanged) {\n            this.gridview.orientation = options.orientation;\n        }\n        this.layout(this.gridview.width, this.gridview.height, true);\n    }\n    removePanel(panel) {\n        this.removeGroup(panel);\n    }\n    /**\n     * Serialize the current state of the layout\n     *\n     * @returns A JSON respresentation of the layout\n     */\n    toJSON() {\n        var _a;\n        const data = this.gridview.serialize();\n        return {\n            grid: data,\n            activePanel: (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.id,\n        };\n    }\n    setVisible(panel, visible) {\n        this.gridview.setViewVisible(getGridLocation(panel.element), visible);\n    }\n    setActive(panel) {\n        this._groups.forEach((value, _key) => {\n            value.value.setActive(panel === value.value);\n        });\n    }\n    focus() {\n        var _a;\n        (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    fromJSON(serializedGridview) {\n        this.clear();\n        const { grid, activePanel } = serializedGridview;\n        const queue = [];\n        this.gridview.deserialize(grid, {\n            fromJSON: (node) => {\n                const { data } = node;\n                const view = createComponent(data.id, data.component, this.options.components || {}, this.options.frameworkComponents || {}, this.options.frameworkComponentFactory\n                    ? {\n                        createComponent: this.options.frameworkComponentFactory\n                            .createComponent,\n                    }\n                    : undefined);\n                queue.push(() => view.init({\n                    params: data.params,\n                    minimumWidth: data.minimumWidth,\n                    maximumWidth: data.maximumWidth,\n                    minimumHeight: data.minimumHeight,\n                    maximumHeight: data.maximumHeight,\n                    priority: data.priority,\n                    snap: !!data.snap,\n                    accessor: this,\n                    isVisible: node.visible,\n                }));\n                this._onDidAddGroup.fire(view);\n                this.registerPanel(view);\n                return view;\n            },\n        });\n        this.layout(this.width, this.height, true);\n        queue.forEach((f) => f());\n        if (typeof activePanel === 'string') {\n            const panel = this.getPanel(activePanel);\n            if (panel) {\n                this.doSetGroupActive(panel);\n            }\n        }\n        this._onDidLayoutfromJSON.fire();\n    }\n    clear() {\n        const hasActiveGroup = this.activeGroup;\n        const groups = Array.from(this._groups.values()); // reassign since group panels will mutate\n        for (const group of groups) {\n            group.disposable.dispose();\n            this.doRemoveGroup(group.value, { skipActive: true });\n        }\n        if (hasActiveGroup) {\n            this.doSetGroupActive(undefined);\n        }\n        this.gridview.clear();\n    }\n    movePanel(panel, options) {\n        var _a;\n        let relativeLocation;\n        const removedPanel = this.gridview.remove(panel);\n        const referenceGroup = (_a = this._groups.get(options.reference)) === null || _a === void 0 ? void 0 : _a.value;\n        if (!referenceGroup) {\n            throw new Error(`reference group ${options.reference} does not exist`);\n        }\n        const target = toTarget(options.direction);\n        if (target === Position.Center) {\n            throw new Error(`${target} not supported as an option`);\n        }\n        else {\n            const location = getGridLocation(referenceGroup.element);\n            relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n        }\n        this.doAddGroup(removedPanel, relativeLocation, options.size);\n    }\n    addPanel(options) {\n        var _a, _b;\n        let relativeLocation = options.location || [0];\n        if ((_a = options.position) === null || _a === void 0 ? void 0 : _a.referencePanel) {\n            const referenceGroup = (_b = this._groups.get(options.position.referencePanel)) === null || _b === void 0 ? void 0 : _b.value;\n            if (!referenceGroup) {\n                throw new Error(`reference group ${options.position.referencePanel} does not exist`);\n            }\n            const target = toTarget(options.position.direction);\n            if (target === Position.Center) {\n                throw new Error(`${target} not supported as an option`);\n            }\n            else {\n                const location = getGridLocation(referenceGroup.element);\n                relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n            }\n        }\n        const view = createComponent(options.id, options.component, this.options.components || {}, this.options.frameworkComponents || {}, this.options.frameworkComponentFactory\n            ? {\n                createComponent: this.options.frameworkComponentFactory\n                    .createComponent,\n            }\n            : undefined);\n        view.init({\n            params: options.params || {},\n            minimumWidth: options.minimumWidth,\n            maximumWidth: options.maximumWidth,\n            minimumHeight: options.minimumHeight,\n            maximumHeight: options.maximumHeight,\n            priority: options.priority,\n            snap: !!options.snap,\n            accessor: this,\n            isVisible: true,\n        });\n        this.registerPanel(view);\n        this.doAddGroup(view, relativeLocation, options.size);\n        return view;\n    }\n    registerPanel(panel) {\n        const disposable = new CompositeDisposable(panel.api.onDidFocusChange((event) => {\n            if (!event.isFocused) {\n                return;\n            }\n            this._groups.forEach((groupItem) => {\n                const group = groupItem.value;\n                if (group !== panel) {\n                    group.setActive(false);\n                }\n                else {\n                    group.setActive(true);\n                }\n            });\n        }));\n        this._groups.set(panel.id, {\n            value: panel,\n            disposable,\n        });\n    }\n    moveGroup(referenceGroup, groupId, target) {\n        const sourceGroup = this.getPanel(groupId);\n        if (!sourceGroup) {\n            throw new Error('invalid operation');\n        }\n        const referenceLocation = getGridLocation(referenceGroup.element);\n        const targetLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, target);\n        const [targetParentLocation, to] = tail(targetLocation);\n        const sourceLocation = getGridLocation(sourceGroup.element);\n        const [sourceParentLocation, from] = tail(sourceLocation);\n        if (sequenceEquals(sourceParentLocation, targetParentLocation)) {\n            // special case when 'swapping' two views within same grid location\n            // if a group has one tab - we are essentially moving the 'group'\n            // which is equivalent to swapping two views in this case\n            this.gridview.moveView(sourceParentLocation, from, to);\n            return;\n        }\n        // source group will become empty so delete the group\n        const targetGroup = this.doRemoveGroup(sourceGroup, {\n            skipActive: true,\n            skipDispose: true,\n        });\n        // after deleting the group we need to re-evaulate the ref location\n        const updatedReferenceLocation = getGridLocation(referenceGroup.element);\n        const location = getRelativeLocation(this.gridview.orientation, updatedReferenceLocation, target);\n        this.doAddGroup(targetGroup, location);\n    }\n    removeGroup(group) {\n        super.removeGroup(group);\n    }\n    dispose() {\n        super.dispose();\n        this._onDidLayoutfromJSON.dispose();\n    }\n}\n","import { CompositeDisposable, MutableDisposable, } from '../lifecycle';\nimport { Orientation, Sizing, Splitview, } from './core/splitview';\nimport { Emitter } from '../events';\nimport { createComponent } from '../panel/componentFactory';\n/**\n * A high-level implementation of splitview that works using 'panels'\n */\nexport class SplitviewComponent extends CompositeDisposable {\n    constructor(element, options) {\n        super();\n        this.element = element;\n        this._disposable = new MutableDisposable();\n        this._panels = new Map();\n        this._onDidLayoutfromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutfromJSON.event;\n        this._onDidAddView = new Emitter();\n        this.onDidAddView = this._onDidAddView.event;\n        this._onDidRemoveView = new Emitter();\n        this.onDidRemoveView = this._onDidRemoveView.event;\n        this._onDidLayoutChange = new Emitter();\n        this.onDidLayoutChange = this._onDidLayoutChange.event;\n        this._options = options;\n        if (!options.components) {\n            options.components = {};\n        }\n        if (!options.frameworkComponents) {\n            options.frameworkComponents = {};\n        }\n        this.splitview = new Splitview(this.element, options);\n        this.addDisposables(this._disposable, this._onDidAddView, this._onDidLayoutfromJSON, this._onDidRemoveView, this._onDidLayoutChange);\n    }\n    get panels() {\n        return this.splitview.getViews();\n    }\n    get options() {\n        return this._options;\n    }\n    get length() {\n        return this._panels.size;\n    }\n    get orientation() {\n        return this.splitview.orientation;\n    }\n    get splitview() {\n        return this._splitview;\n    }\n    set splitview(value) {\n        this._splitview = value;\n        this._disposable.value = new CompositeDisposable(this._splitview.onDidSashEnd(() => {\n            this._onDidLayoutChange.fire(undefined);\n        }), this._splitview.onDidAddView((e) => this._onDidAddView.fire(e)), this._splitview.onDidRemoveView((e) => this._onDidRemoveView.fire(e)));\n    }\n    get minimumSize() {\n        return this.splitview.minimumSize;\n    }\n    get maximumSize() {\n        return this.splitview.maximumSize;\n    }\n    get height() {\n        return this.splitview.orientation === Orientation.HORIZONTAL\n            ? this.splitview.orthogonalSize\n            : this.splitview.size;\n    }\n    get width() {\n        return this.splitview.orientation === Orientation.HORIZONTAL\n            ? this.splitview.size\n            : this.splitview.orthogonalSize;\n    }\n    updateOptions(options) {\n        const hasOrientationChanged = typeof options.orientation === 'string' &&\n            this.options.orientation !== options.orientation;\n        this._options = Object.assign(Object.assign({}, this.options), options);\n        if (hasOrientationChanged) {\n            this.splitview.orientation = options.orientation;\n        }\n        this.splitview.layout(this.splitview.size, this.splitview.orthogonalSize);\n    }\n    focus() {\n        var _a;\n        (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    movePanel(from, to) {\n        this.splitview.moveView(from, to);\n    }\n    setVisible(panel, visible) {\n        const index = this.panels.indexOf(panel);\n        this.splitview.setViewVisible(index, visible);\n    }\n    setActive(view, skipFocus) {\n        this._activePanel = view;\n        this.panels\n            .filter((v) => v !== view)\n            .forEach((v) => {\n            v.api._onDidActiveChange.fire({ isActive: false });\n            if (!skipFocus) {\n                v.focus();\n            }\n        });\n        view.api._onDidActiveChange.fire({ isActive: true });\n        if (!skipFocus) {\n            view.focus();\n        }\n    }\n    removePanel(panel, sizing) {\n        const disposable = this._panels.get(panel.id);\n        if (!disposable) {\n            throw new Error(`unknown splitview panel ${panel.id}`);\n        }\n        disposable.disposable.dispose();\n        disposable.value.dispose();\n        this._panels.delete(panel.id);\n        const index = this.panels.findIndex((_) => _ === panel);\n        this.splitview.removeView(index, sizing);\n        const panels = this.panels;\n        if (panels.length > 0) {\n            this.setActive(panels[panels.length - 1]);\n        }\n    }\n    getPanel(id) {\n        return this.panels.find((view) => view.id === id);\n    }\n    addPanel(options) {\n        if (this._panels.has(options.id)) {\n            throw new Error(`panel ${options.id} already exists`);\n        }\n        const view = createComponent(options.id, options.component, this.options.components || {}, this.options.frameworkComponents || {}, this.options.frameworkWrapper\n            ? {\n                createComponent: this.options.frameworkWrapper.createComponent,\n            }\n            : undefined);\n        view.orientation = this.splitview.orientation;\n        view.init({\n            params: options.params || {},\n            minimumSize: options.minimumSize,\n            maximumSize: options.maximumSize,\n            snap: options.snap,\n            priority: options.priority,\n            accessor: this,\n        });\n        const size = typeof options.size === 'number' ? options.size : Sizing.Distribute;\n        const index = typeof options.index === 'number' ? options.index : undefined;\n        this.splitview.addView(view, size, index);\n        this.doAddView(view);\n        this.setActive(view);\n        return view;\n    }\n    layout(width, height) {\n        const [size, orthogonalSize] = this.splitview.orientation === Orientation.HORIZONTAL\n            ? [width, height]\n            : [height, width];\n        this.splitview.layout(size, orthogonalSize);\n    }\n    doAddView(view) {\n        const disposable = view.api.onDidFocusChange((event) => {\n            if (!event.isFocused) {\n                return;\n            }\n            this.setActive(view, true);\n        });\n        this._panels.set(view.id, { disposable, value: view });\n    }\n    toJSON() {\n        var _a;\n        const views = this.splitview\n            .getViews()\n            .map((view, i) => {\n            const size = this.splitview.getViewSize(i);\n            return {\n                size,\n                data: view.toJSON(),\n                snap: !!view.snap,\n                priority: view.priority,\n            };\n        });\n        return {\n            views,\n            activeView: (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.id,\n            size: this.splitview.size,\n            orientation: this.splitview.orientation,\n        };\n    }\n    fromJSON(serializedSplitview) {\n        this.clear();\n        const { views, orientation, size, activeView } = serializedSplitview;\n        const queue = [];\n        this.splitview = new Splitview(this.element, {\n            orientation,\n            proportionalLayout: this.options.proportionalLayout,\n            descriptor: {\n                size,\n                views: views.map((view) => {\n                    const data = view.data;\n                    if (this._panels.has(data.id)) {\n                        throw new Error(`panel ${data.id} already exists`);\n                    }\n                    const panel = createComponent(data.id, data.component, this.options.components || {}, this.options.frameworkComponents || {}, this.options.frameworkWrapper\n                        ? {\n                            createComponent: this.options.frameworkWrapper\n                                .createComponent,\n                        }\n                        : undefined);\n                    queue.push(() => {\n                        panel.init({\n                            params: data.params || {},\n                            minimumSize: data.minimumSize,\n                            maximumSize: data.maximumSize,\n                            snap: view.snap,\n                            priority: view.priority,\n                            accessor: this,\n                        });\n                    });\n                    panel.orientation = orientation;\n                    this.doAddView(panel);\n                    setTimeout(() => {\n                        // the original onDidAddView events are missed since they are fired before we can subcribe to them\n                        this._onDidAddView.fire(panel);\n                    }, 0);\n                    return { size: view.size, view: panel };\n                }),\n            },\n        });\n        this.layout(this.width, this.height);\n        queue.forEach((f) => f());\n        if (typeof activeView === 'string') {\n            const panel = this.getPanel(activeView);\n            if (panel) {\n                this.setActive(panel);\n            }\n        }\n        this._onDidLayoutfromJSON.fire();\n    }\n    clear() {\n        for (const [_, value] of this._panels.entries()) {\n            value.disposable.dispose();\n            value.value.dispose();\n        }\n        this._panels.clear();\n        this.splitview.dispose();\n    }\n    dispose() {\n        for (const [_, value] of this._panels.entries()) {\n            value.disposable.dispose();\n            value.value.dispose();\n        }\n        this._panels.clear();\n        this.splitview.dispose();\n        super.dispose();\n    }\n}\n","import { Emitter } from '../events';\nimport { PanelApiImpl } from './panelApi';\nexport class SplitviewPanelApiImpl extends PanelApiImpl {\n    //\n    constructor(id) {\n        super(id);\n        this._onDidConstraintsChangeInternal = new Emitter();\n        this.onDidConstraintsChangeInternal = this._onDidConstraintsChangeInternal.event;\n        //\n        this._onDidConstraintsChange = new Emitter({\n            replay: true,\n        });\n        this.onDidConstraintsChange = this._onDidConstraintsChange.event;\n        //\n        this._onDidSizeChange = new Emitter();\n        this.onDidSizeChange = this._onDidSizeChange.event;\n        this.addDisposables(this._onDidConstraintsChangeInternal, this._onDidConstraintsChange, this._onDidSizeChange);\n    }\n    setConstraints(value) {\n        this._onDidConstraintsChangeInternal.fire(value);\n    }\n    setSize(event) {\n        this._onDidSizeChange.fire(event);\n    }\n}\n","import { Emitter } from '../events';\nimport { SplitviewPanelApiImpl } from './splitviewPanelApi';\nexport class PaneviewPanelApiImpl extends SplitviewPanelApiImpl {\n    constructor(id) {\n        super(id);\n        this._onDidExpansionChange = new Emitter({\n            replay: true,\n        });\n        this.onDidExpansionChange = this._onDidExpansionChange.event;\n        this._onMouseEnter = new Emitter({});\n        this.onMouseEnter = this._onMouseEnter.event;\n        this._onMouseLeave = new Emitter({});\n        this.onMouseLeave = this._onMouseLeave.event;\n        this.addDisposables(this._onDidExpansionChange, this._onMouseEnter, this._onMouseLeave);\n    }\n    set pane(pane) {\n        this._pane = pane;\n    }\n    setExpanded(isExpanded) {\n        var _a;\n        (_a = this._pane) === null || _a === void 0 ? void 0 : _a.setExpanded(isExpanded);\n    }\n    get isExpanded() {\n        var _a;\n        return !!((_a = this._pane) === null || _a === void 0 ? void 0 : _a.isExpanded());\n    }\n}\n","import { PaneviewPanelApiImpl } from '../api/paneviewPanelApi';\nimport { addClasses, removeClasses } from '../dom';\nimport { addDisposableListener, Emitter } from '../events';\nimport { BasePanelView, } from '../gridview/basePanelView';\nimport { Orientation } from '../splitview/core/splitview';\nexport class PaneviewPanel extends BasePanelView {\n    constructor(id, component, headerComponent, orientation, isExpanded, isHeaderVisible) {\n        super(id, component, new PaneviewPanelApiImpl(id));\n        this.headerComponent = headerComponent;\n        this._onDidChangeExpansionState = new Emitter({ replay: true });\n        this.onDidChangeExpansionState = this._onDidChangeExpansionState.event;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this.headerSize = 22;\n        this._orthogonalSize = 0;\n        this._size = 0;\n        this._minimumBodySize = 100;\n        this._maximumBodySize = Number.POSITIVE_INFINITY;\n        this._isExpanded = false;\n        this.expandedSize = 0;\n        this.api.pane = this; // TODO cannot use 'this' before 'super'\n        this._isExpanded = isExpanded;\n        this._headerVisible = isHeaderVisible;\n        this._onDidChangeExpansionState.fire(this.isExpanded()); // initialize value\n        this._orientation = orientation;\n        this.element.classList.add('pane');\n        this.addDisposables(this.api.onDidSizeChange((event) => {\n            this._onDidChange.fire(event.size);\n        }), addDisposableListener(this.element, 'mouseenter', (ev) => {\n            this.api._onMouseEnter.fire(ev);\n        }), addDisposableListener(this.element, 'mouseleave', (ev) => {\n            this.api._onMouseLeave.fire(ev);\n        }));\n        this.addDisposables(this._onDidChangeExpansionState, this.onDidChangeExpansionState((isPanelExpanded) => {\n            this.api._onDidExpansionChange.fire({\n                isExpanded: isPanelExpanded,\n            });\n        }), this.api.onDidFocusChange((e) => {\n            if (!this.header) {\n                return;\n            }\n            if (e.isFocused) {\n                addClasses(this.header, 'focused');\n            }\n            else {\n                removeClasses(this.header, 'focused');\n            }\n        }));\n        this.renderOnce();\n    }\n    set orientation(value) {\n        this._orientation = value;\n    }\n    get orientation() {\n        return this._orientation;\n    }\n    get minimumSize() {\n        const headerSize = this.headerSize;\n        const expanded = this.isExpanded();\n        const minimumBodySize = expanded ? this._minimumBodySize : 0;\n        return headerSize + minimumBodySize;\n    }\n    get maximumSize() {\n        const headerSize = this.headerSize;\n        const expanded = this.isExpanded();\n        const maximumBodySize = expanded ? this._maximumBodySize : 0;\n        return headerSize + maximumBodySize;\n    }\n    get size() {\n        return this._size;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    set orthogonalSize(size) {\n        this._orthogonalSize = size;\n    }\n    get minimumBodySize() {\n        return this._minimumBodySize;\n    }\n    set minimumBodySize(value) {\n        this._minimumBodySize = typeof value === 'number' ? value : 0;\n    }\n    get maximumBodySize() {\n        return this._maximumBodySize;\n    }\n    set maximumBodySize(value) {\n        this._maximumBodySize =\n            typeof value === 'number' ? value : Number.POSITIVE_INFINITY;\n    }\n    get headerVisible() {\n        return this._headerVisible;\n    }\n    set headerVisible(value) {\n        this._headerVisible = value;\n        this.header.style.display = value ? '' : 'none';\n    }\n    setVisible(isVisible) {\n        this.api._onDidVisibilityChange.fire({ isVisible });\n    }\n    setActive(isActive) {\n        this.api._onDidActiveChange.fire({ isActive });\n    }\n    isExpanded() {\n        return this._isExpanded;\n    }\n    setExpanded(expanded) {\n        if (this._isExpanded === expanded) {\n            return;\n        }\n        this._isExpanded = expanded;\n        if (expanded) {\n            if (this.animationTimer) {\n                clearTimeout(this.animationTimer);\n            }\n            if (this.body) {\n                this.element.appendChild(this.body);\n            }\n        }\n        else {\n            this.animationTimer = setTimeout(() => {\n                var _a;\n                (_a = this.body) === null || _a === void 0 ? void 0 : _a.remove();\n            }, 200);\n        }\n        this._onDidChange.fire(expanded ? this.width : undefined);\n        this._onDidChangeExpansionState.fire(expanded);\n    }\n    layout(size, orthogonalSize) {\n        this._size = size;\n        this._orthogonalSize = orthogonalSize;\n        const [width, height] = this.orientation === Orientation.HORIZONTAL\n            ? [size, orthogonalSize]\n            : [orthogonalSize, size];\n        if (this.isExpanded()) {\n            this.expandedSize = width;\n        }\n        super.layout(width, height);\n    }\n    init(parameters) {\n        var _a, _b;\n        super.init(parameters);\n        if (typeof parameters.minimumBodySize === 'number') {\n            this.minimumBodySize = parameters.minimumBodySize;\n        }\n        if (typeof parameters.maximumBodySize === 'number') {\n            this.maximumBodySize = parameters.maximumBodySize;\n        }\n        this.bodyPart = this.getBodyComponent();\n        this.headerPart = this.getHeaderComponent();\n        this.bodyPart.init(Object.assign(Object.assign({}, parameters), { api: this.api }));\n        this.headerPart.init(Object.assign(Object.assign({}, parameters), { api: this.api }));\n        (_a = this.body) === null || _a === void 0 ? void 0 : _a.append(this.bodyPart.element);\n        (_b = this.header) === null || _b === void 0 ? void 0 : _b.append(this.headerPart.element);\n        if (typeof parameters.isExpanded === 'boolean') {\n            this.setExpanded(parameters.isExpanded);\n        }\n    }\n    toJSON() {\n        const params = this._params;\n        return Object.assign(Object.assign({}, super.toJSON()), { headerComponent: this.headerComponent, title: params.title });\n    }\n    renderOnce() {\n        this.header = document.createElement('div');\n        this.header.tabIndex = 0;\n        this.header.className = 'pane-header';\n        this.header.style.height = `${this.headerSize}px`;\n        this.header.style.lineHeight = `${this.headerSize}px`;\n        this.header.style.minHeight = `${this.headerSize}px`;\n        this.header.style.maxHeight = `${this.headerSize}px`;\n        this.element.appendChild(this.header);\n        this.body = document.createElement('div');\n        this.body.className = 'pane-body';\n        this.element.appendChild(this.body);\n    }\n    // TODO slightly hacky by-pass of the component to create a body and header component\n    getComponent() {\n        return {\n            update: (params) => {\n                var _a, _b;\n                (_a = this.bodyPart) === null || _a === void 0 ? void 0 : _a.update({ params });\n                (_b = this.headerPart) === null || _b === void 0 ? void 0 : _b.update({ params });\n            },\n            dispose: () => {\n                var _a, _b;\n                (_a = this.bodyPart) === null || _a === void 0 ? void 0 : _a.dispose();\n                (_b = this.headerPart) === null || _b === void 0 ? void 0 : _b.dispose();\n            },\n        };\n    }\n}\n","import { DragHandler } from '../dnd/abstractDragHandler';\nimport { getPaneData, LocalSelectionTransfer, PaneTransfer, } from '../dnd/dataTransfer';\nimport { Droptarget, Position } from '../dnd/droptarget';\nimport { Emitter } from '../events';\nimport { PaneviewPanel, } from './paneviewPanel';\nexport class DraggablePaneviewPanel extends PaneviewPanel {\n    constructor(accessor, id, component, headerComponent, orientation, isExpanded, disableDnd) {\n        super(id, component, headerComponent, orientation, isExpanded, true);\n        this.accessor = accessor;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        if (!disableDnd) {\n            this.initDragFeatures();\n        }\n    }\n    initDragFeatures() {\n        if (!this.header) {\n            return;\n        }\n        const id = this.id;\n        const accessorId = this.accessor.id;\n        this.header.draggable = true;\n        this.handler = new (class PaneDragHandler extends DragHandler {\n            getData() {\n                LocalSelectionTransfer.getInstance().setData([new PaneTransfer(accessorId, id)], PaneTransfer.prototype);\n                return {\n                    dispose: () => {\n                        LocalSelectionTransfer.getInstance().clearData(PaneTransfer.prototype);\n                    },\n                };\n            }\n        })(this.header);\n        this.target = new Droptarget(this.element, {\n            validOverlays: 'vertical',\n            canDisplayOverlay: (event) => {\n                const data = getPaneData();\n                if (data) {\n                    if (data.paneId !== this.id &&\n                        data.viewId === this.accessor.id) {\n                        return true;\n                    }\n                }\n                if (this.accessor.options.showDndOverlay) {\n                    return this.accessor.options.showDndOverlay({\n                        nativeEvent: event,\n                        getData: getPaneData,\n                        panel: this,\n                    });\n                }\n                return false;\n            },\n        });\n        this.addDisposables(this._onDidDrop, this.handler, this.target, this.target.onDrop((event) => {\n            this.onDrop(event);\n        }));\n    }\n    onDrop(event) {\n        const data = getPaneData();\n        if (!data || data.viewId !== this.accessor.id) {\n            // if there is no local drag event for this panel\n            // or if the drag event was creating by another Paneview instance\n            this._onDidDrop.fire(Object.assign(Object.assign({}, event), { panel: this, getData: getPaneData }));\n            return;\n        }\n        const containerApi = this._params\n            .containerApi;\n        const panelId = data.paneId;\n        const existingPanel = containerApi.getPanel(panelId);\n        if (!existingPanel) {\n            // if the panel doesn't exist\n            this._onDidDrop.fire(Object.assign(Object.assign({}, event), { panel: this, getData: getPaneData }));\n            return;\n        }\n        const allPanels = containerApi.panels;\n        const fromIndex = allPanels.indexOf(existingPanel);\n        let toIndex = containerApi.panels.indexOf(this);\n        if (event.position === Position.Left ||\n            event.position === Position.Top) {\n            toIndex = Math.max(0, toIndex - 1);\n        }\n        if (event.position === Position.Right ||\n            event.position === Position.Bottom) {\n            if (fromIndex > toIndex) {\n                toIndex++;\n            }\n            toIndex = Math.min(allPanels.length - 1, toIndex);\n        }\n        containerApi.movePanel(fromIndex, toIndex);\n    }\n}\n","import { addDisposableListener } from '../events';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nimport { toggleClass } from '../dom';\nimport { createChevronRightButton, createExpandMoreButton } from '../svg';\nexport class DefaultHeader extends CompositeDisposable {\n    constructor() {\n        super();\n        this._expandedIcon = createExpandMoreButton();\n        this._collapsedIcon = createChevronRightButton();\n        this.disposable = new MutableDisposable();\n        this.apiRef = { api: null };\n        this._element = document.createElement('div');\n        this.element.className = 'default-header';\n        this._content = document.createElement('span');\n        this._expander = document.createElement('div');\n        this._expander.className = 'dockview-pane-header-icon';\n        this.element.appendChild(this._expander);\n        this.element.appendChild(this._content);\n        this.addDisposables(addDisposableListener(this._element, 'click', () => {\n            var _a;\n            (_a = this.apiRef.api) === null || _a === void 0 ? void 0 : _a.setExpanded(!this.apiRef.api.isExpanded);\n        }));\n    }\n    get element() {\n        return this._element;\n    }\n    init(params) {\n        this.apiRef.api = params.api;\n        this._content.textContent = params.title;\n        this.updateIcon();\n        this.disposable.value = params.api.onDidExpansionChange(() => {\n            this.updateIcon();\n        });\n    }\n    updateIcon() {\n        var _a;\n        const isExpanded = !!((_a = this.apiRef.api) === null || _a === void 0 ? void 0 : _a.isExpanded);\n        toggleClass(this._expander, 'collapsed', !isExpanded);\n        if (isExpanded) {\n            if (this._expander.contains(this._collapsedIcon)) {\n                this._collapsedIcon.remove();\n            }\n            if (!this._expander.contains(this._expandedIcon)) {\n                this._expander.appendChild(this._expandedIcon);\n            }\n        }\n        else {\n            if (this._expander.contains(this._expandedIcon)) {\n                this._expandedIcon.remove();\n            }\n            if (!this._expander.contains(this._collapsedIcon)) {\n                this._expander.appendChild(this._collapsedIcon);\n            }\n        }\n    }\n    update(_params) {\n        //\n    }\n    dispose() {\n        this.disposable.dispose();\n        super.dispose();\n    }\n}\n","import { PaneviewApi } from '../api/component.api';\nimport { createComponent } from '../panel/componentFactory';\nimport { Emitter } from '../events';\nimport { CompositeDisposable, MutableDisposable, } from '../lifecycle';\nimport { Orientation, Sizing, } from '../splitview/core/splitview';\nimport { Paneview } from './paneview';\nimport { DraggablePaneviewPanel, } from './draggablePaneviewPanel';\nimport { DefaultHeader } from './defaultPaneviewHeader';\nimport { sequentialNumberGenerator } from '../math';\nconst nextLayoutId = sequentialNumberGenerator();\nexport class PaneFramework extends DraggablePaneviewPanel {\n    constructor(options) {\n        super(options.accessor, options.id, options.component, options.headerComponent, options.orientation, options.isExpanded, options.disableDnd);\n        this.options = options;\n    }\n    getBodyComponent() {\n        return this.options.body;\n    }\n    getHeaderComponent() {\n        return this.options.header;\n    }\n}\nexport class PaneviewComponent extends CompositeDisposable {\n    constructor(element, options) {\n        super();\n        this.element = element;\n        this._id = nextLayoutId.next();\n        this._disposable = new MutableDisposable();\n        this._viewDisposables = new Map();\n        this._onDidLayoutfromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutfromJSON.event;\n        this._onDidLayoutChange = new Emitter();\n        this.onDidLayoutChange = this._onDidLayoutChange.event;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onDidAddView = new Emitter();\n        this.onDidAddView = this._onDidAddView.event;\n        this._onDidRemoveView = new Emitter();\n        this.onDidRemoveView = this._onDidRemoveView.event;\n        this.addDisposables(this._onDidLayoutChange, this._onDidLayoutfromJSON, this._onDidDrop, this._onDidAddView, this._onDidRemoveView);\n        this._options = options;\n        if (!options.components) {\n            options.components = {};\n        }\n        if (!options.frameworkComponents) {\n            options.frameworkComponents = {};\n        }\n        this.paneview = new Paneview(this.element, {\n            // only allow paneview in the vertical orientation for now\n            orientation: Orientation.VERTICAL,\n        });\n        this.addDisposables(this._disposable);\n    }\n    get id() {\n        return this._id;\n    }\n    get panels() {\n        return this.paneview.getPanes();\n    }\n    set paneview(value) {\n        this._paneview = value;\n        this._disposable.value = new CompositeDisposable(this._paneview.onDidChange(() => {\n            this._onDidLayoutChange.fire(undefined);\n        }), this._paneview.onDidAddView((e) => this._onDidAddView.fire(e)), this._paneview.onDidRemoveView((e) => this._onDidRemoveView.fire(e)));\n    }\n    get paneview() {\n        return this._paneview;\n    }\n    get minimumSize() {\n        return this.paneview.minimumSize;\n    }\n    get maximumSize() {\n        return this.paneview.maximumSize;\n    }\n    get height() {\n        return this.paneview.orientation === Orientation.HORIZONTAL\n            ? this.paneview.orthogonalSize\n            : this.paneview.size;\n    }\n    get width() {\n        return this.paneview.orientation === Orientation.HORIZONTAL\n            ? this.paneview.size\n            : this.paneview.orthogonalSize;\n    }\n    get options() {\n        return this._options;\n    }\n    focus() {\n        //\n    }\n    updateOptions(options) {\n        this._options = Object.assign(Object.assign({}, this.options), options);\n    }\n    addPanel(options) {\n        const body = createComponent(options.id, options.component, this.options.components || {}, this.options.frameworkComponents || {}, this.options.frameworkWrapper\n            ? {\n                createComponent: this.options.frameworkWrapper.body.createComponent,\n            }\n            : undefined);\n        let header;\n        if (options.headerComponent) {\n            header = createComponent(options.id, options.headerComponent, this.options.headerComponents || {}, this.options.headerframeworkComponents, this.options.frameworkWrapper\n                ? {\n                    createComponent: this.options.frameworkWrapper.header\n                        .createComponent,\n                }\n                : undefined);\n        }\n        else {\n            header = new DefaultHeader();\n        }\n        const view = new PaneFramework({\n            id: options.id,\n            component: options.component,\n            headerComponent: options.headerComponent,\n            header,\n            body,\n            orientation: Orientation.VERTICAL,\n            isExpanded: !!options.isExpanded,\n            disableDnd: !!this.options.disableDnd,\n            accessor: this,\n        });\n        this.doAddPanel(view);\n        const size = typeof options.size === 'number' ? options.size : Sizing.Distribute;\n        const index = typeof options.index === 'number' ? options.index : undefined;\n        view.init({\n            params: options.params || {},\n            minimumBodySize: options.minimumBodySize,\n            maximumBodySize: options.maximumBodySize,\n            isExpanded: options.isExpanded,\n            title: options.title,\n            containerApi: new PaneviewApi(this),\n        });\n        this.paneview.addPane(view, size, index);\n        view.orientation = this.paneview.orientation;\n        return view;\n    }\n    removePanel(panel) {\n        const views = this.panels;\n        const index = views.findIndex((_) => _ === panel);\n        this.paneview.removePane(index);\n        this.doRemovePanel(panel);\n    }\n    movePanel(from, to) {\n        this.paneview.moveView(from, to);\n    }\n    getPanel(id) {\n        return this.panels.find((view) => view.id === id);\n    }\n    layout(width, height) {\n        const [size, orthogonalSize] = this.paneview.orientation === Orientation.HORIZONTAL\n            ? [width, height]\n            : [height, width];\n        this.paneview.layout(size, orthogonalSize);\n    }\n    toJSON() {\n        const maximum = (value) => value === Number.MAX_SAFE_INTEGER ||\n            value === Number.POSITIVE_INFINITY\n            ? undefined\n            : value;\n        const minimum = (value) => (value <= 0 ? undefined : value);\n        const views = this.paneview\n            .getPanes()\n            .map((view, i) => {\n            const size = this.paneview.getViewSize(i);\n            return {\n                size,\n                data: view.toJSON(),\n                minimumSize: minimum(view.minimumBodySize),\n                maximumSize: maximum(view.maximumBodySize),\n                expanded: view.isExpanded(),\n            };\n        });\n        return {\n            views,\n            size: this.paneview.size,\n        };\n    }\n    fromJSON(serializedPaneview) {\n        this.clear();\n        const { views, size } = serializedPaneview;\n        const queue = [];\n        this.paneview = new Paneview(this.element, {\n            orientation: Orientation.VERTICAL,\n            descriptor: {\n                size,\n                views: views.map((view) => {\n                    const data = view.data;\n                    const body = createComponent(data.id, data.component, this.options.components || {}, this.options.frameworkComponents || {}, this.options.frameworkWrapper\n                        ? {\n                            createComponent: this.options.frameworkWrapper.body\n                                .createComponent,\n                        }\n                        : undefined);\n                    let header;\n                    if (data.headerComponent) {\n                        header = createComponent(data.id, data.headerComponent, this.options.headerComponents || {}, this.options.headerframeworkComponents || {}, this.options.frameworkWrapper\n                            ? {\n                                createComponent: this.options.frameworkWrapper.header\n                                    .createComponent,\n                            }\n                            : undefined);\n                    }\n                    else {\n                        header = new DefaultHeader();\n                    }\n                    const panel = new PaneFramework({\n                        id: data.id,\n                        component: data.component,\n                        headerComponent: data.headerComponent,\n                        header,\n                        body,\n                        orientation: Orientation.VERTICAL,\n                        isExpanded: !!view.expanded,\n                        disableDnd: !!this.options.disableDnd,\n                        accessor: this,\n                    });\n                    this.doAddPanel(panel);\n                    queue.push(() => {\n                        panel.init({\n                            params: data.params || {},\n                            minimumBodySize: view.minimumSize,\n                            maximumBodySize: view.maximumSize,\n                            title: data.title,\n                            isExpanded: !!view.expanded,\n                            containerApi: new PaneviewApi(this),\n                        });\n                        panel.orientation = this.paneview.orientation;\n                    });\n                    setTimeout(() => {\n                        // the original onDidAddView events are missed since they are fired before we can subcribe to them\n                        this._onDidAddView.fire(panel);\n                    }, 0);\n                    return { size: view.size, view: panel };\n                }),\n            },\n        });\n        this.layout(this.width, this.height);\n        queue.forEach((f) => f());\n        this._onDidLayoutfromJSON.fire();\n    }\n    clear() {\n        for (const [_, value] of this._viewDisposables.entries()) {\n            value.dispose();\n        }\n        this._viewDisposables.clear();\n        this.paneview.dispose();\n    }\n    doAddPanel(panel) {\n        const disposable = panel.onDidDrop((event) => {\n            this._onDidDrop.fire(event);\n        });\n        this._viewDisposables.set(panel.id, disposable);\n    }\n    doRemovePanel(panel) {\n        const disposable = this._viewDisposables.get(panel.id);\n        if (disposable) {\n            disposable.dispose();\n            this._viewDisposables.delete(panel.id);\n        }\n    }\n    dispose() {\n        super.dispose();\n        for (const [_, value] of this._viewDisposables.entries()) {\n            value.dispose();\n        }\n        this._viewDisposables.clear();\n        this.paneview.dispose();\n    }\n}\n","import { BasePanelView, } from '../gridview/basePanelView';\nimport { SplitviewPanelApiImpl } from '../api/splitviewPanelApi';\nimport { Orientation } from './core/splitview';\nimport { Emitter } from '../events';\nexport class SplitviewPanel extends BasePanelView {\n    constructor(id, componentName) {\n        super(id, componentName, new SplitviewPanelApiImpl(id));\n        this._evaluatedMinimumSize = 0;\n        this._evaluatedMaximumSize = Number.POSITIVE_INFINITY;\n        this._minimumSize = 0;\n        this._maximumSize = Number.POSITIVE_INFINITY;\n        this._snap = false;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this.addDisposables(this._onDidChange, this.api.onVisibilityChange((event) => {\n            const { isVisible } = event;\n            const { accessor } = this._params;\n            accessor.setVisible(this, isVisible);\n        }), this.api.onActiveChange(() => {\n            const { accessor } = this._params;\n            accessor.setActive(this);\n        }), this.api.onDidConstraintsChangeInternal((event) => {\n            if (typeof event.minimumSize === 'number' ||\n                typeof event.minimumSize === 'function') {\n                this._minimumSize = event.minimumSize;\n            }\n            if (typeof event.maximumSize === 'number' ||\n                typeof event.maximumSize === 'function') {\n                this._maximumSize = event.maximumSize;\n            }\n            this.updateConstraints();\n        }), this.api.onDidSizeChange((event) => {\n            this._onDidChange.fire(event.size);\n        }));\n    }\n    get priority() {\n        return this._priority;\n    }\n    set orientation(value) {\n        this._orientation = value;\n    }\n    get orientation() {\n        return this._orientation;\n    }\n    get minimumSize() {\n        const size = typeof this._minimumSize === 'function'\n            ? this._minimumSize()\n            : this._minimumSize;\n        if (size !== this._evaluatedMinimumSize) {\n            this._evaluatedMinimumSize = size;\n            this.updateConstraints();\n        }\n        return size;\n    }\n    get maximumSize() {\n        const size = typeof this._maximumSize === 'function'\n            ? this._maximumSize()\n            : this._maximumSize;\n        if (size !== this._evaluatedMaximumSize) {\n            this._evaluatedMaximumSize = size;\n            this.updateConstraints();\n        }\n        return size;\n    }\n    get snap() {\n        return this._snap;\n    }\n    setVisible(isVisible) {\n        this.api._onDidVisibilityChange.fire({ isVisible });\n    }\n    setActive(isActive) {\n        this.api._onDidActiveChange.fire({ isActive });\n    }\n    layout(size, orthogonalSize) {\n        const [width, height] = this.orientation === Orientation.HORIZONTAL\n            ? [size, orthogonalSize]\n            : [orthogonalSize, size];\n        super.layout(width, height);\n    }\n    init(parameters) {\n        super.init(parameters);\n        this._priority = parameters.priority;\n        if (parameters.minimumSize) {\n            this._minimumSize = parameters.minimumSize;\n        }\n        if (parameters.maximumSize) {\n            this._maximumSize = parameters.maximumSize;\n        }\n        if (parameters.snap) {\n            this._snap = parameters.snap;\n        }\n    }\n    toJSON() {\n        const maximum = (value) => value === Number.MAX_SAFE_INTEGER ||\n            value === Number.POSITIVE_INFINITY\n            ? undefined\n            : value;\n        const minimum = (value) => (value <= 0 ? undefined : value);\n        return Object.assign(Object.assign({}, super.toJSON()), { minimumSize: minimum(this.minimumSize), maximumSize: maximum(this.maximumSize) });\n    }\n    updateConstraints() {\n        this.api._onDidConstraintsChange.fire({\n            maximumSize: this._evaluatedMaximumSize,\n            minimumSize: this._evaluatedMinimumSize,\n        });\n    }\n}\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { sequentialNumberGenerator } from '../math';\n/**\n * This component is intended to interface between vanilla-js and React hence we need to be\n * creative in how we update props.\n * A ref of the component is exposed with an update method; which when called stores the props\n * as a ref within this component and forcefully triggers a re-render of the component using\n * the ref of props we just set on the renderered component as the props passed to the inner\n * component\n */\nconst ReactComponentBridge = (props, ref) => {\n    const [_, triggerRender] = React.useState();\n    const _props = React.useRef(props.componentProps);\n    React.useImperativeHandle(ref, () => ({\n        update: (componentProps) => {\n            _props.current = Object.assign(Object.assign({}, _props.current), componentProps);\n            /**\n             * setting a arbitrary piece of state within this component will\n             * trigger a re-render.\n             * we use this rather than updating through a prop since we can\n             * pass a ref into the vanilla-js world.\n             */\n            triggerRender(Date.now());\n        },\n    }), []);\n    return React.createElement(props.component, _props.current);\n};\nReactComponentBridge.displayName = 'DockviewReactJsBridge';\n/**\n * Since we are storing the React.Portal references in a rendered array they\n * require a key property like any other React element rendered in an array\n * to prevent excessive re-rendering\n */\nconst uniquePortalKeyGenerator = sequentialNumberGenerator();\nexport const ReactPartContext = React.createContext({});\nexport class ReactPart {\n    constructor(parent, portalStore, component, parameters, context) {\n        this.parent = parent;\n        this.portalStore = portalStore;\n        this.component = component;\n        this.parameters = parameters;\n        this.context = context;\n        this._initialProps = {};\n        this.disposed = false;\n        this.createPortal();\n    }\n    update(props) {\n        if (this.disposed) {\n            throw new Error('invalid operation: resource is already disposed');\n        }\n        if (!this.componentInstance) {\n            // if the component is yet to be mounted store the props\n            this._initialProps = Object.assign(Object.assign({}, this._initialProps), props);\n        }\n        else {\n            this.componentInstance.update(props);\n        }\n    }\n    createPortal() {\n        if (this.disposed) {\n            throw new Error('invalid operation: resource is already disposed');\n        }\n        if (typeof this.component !== 'function') {\n            /**\n             * we know this isn't a React.FunctionComponent so throw an error here.\n             * if we do not intercept this the React library will throw a very obsure error\n             * for the same reason, at least at this point we will emit a sensible stacktrace.\n             */\n            throw new Error('Invalid Operation. dockview only supports React Functional Components.');\n        }\n        const bridgeComponent = React.createElement(React.forwardRef(ReactComponentBridge), {\n            component: this\n                .component,\n            componentProps: this.parameters,\n            ref: (element) => {\n                this.componentInstance = element;\n                if (Object.keys(this._initialProps).length > 0) {\n                    this.componentInstance.update(this._initialProps);\n                    this._initialProps = {}; // don't keep a reference to the users object once no longer required\n                }\n            },\n        });\n        const node = this.context\n            ? React.createElement(ReactPartContext.Provider, { value: this.context }, bridgeComponent)\n            : bridgeComponent;\n        const portal = ReactDOM.createPortal(node, this.parent, uniquePortalKeyGenerator.next());\n        this.ref = {\n            portal,\n            disposable: this.portalStore.addPortal(portal),\n        };\n    }\n    dispose() {\n        var _a;\n        (_a = this.ref) === null || _a === void 0 ? void 0 : _a.disposable.dispose();\n        this.disposed = true;\n    }\n}\n/**\n * A React Hook that returns an array of portals to be rendered by the user of this hook\n * and a disposable function to add a portal. Calling dispose removes this portal from the\n * portal array\n */\nexport const usePortalsLifecycle = () => {\n    const [portals, setPortals] = React.useState([]);\n    React.useDebugValue(`Portal count: ${portals.length}`);\n    const addPortal = React.useCallback((portal) => {\n        setPortals((existingPortals) => [...existingPortals, portal]);\n        let disposed = false;\n        return {\n            dispose: () => {\n                if (disposed) {\n                    throw new Error('invalid operation: resource already disposed');\n                }\n                disposed = true;\n                setPortals((existingPortals) => existingPortals.filter((p) => p !== portal));\n            },\n        };\n    }, []);\n    return [portals, addPortal];\n};\n// it does the job...\nexport function isReactElement(element) {\n    return element === null || element === void 0 ? void 0 : element.type;\n}\n","import { ReactPart } from '../react';\nimport { Emitter } from '../../events';\nexport class ReactPanelContentPart {\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._onDidFocus = new Emitter();\n        this.onDidFocus = this._onDidFocus.event;\n        this._onDidBlur = new Emitter();\n        this.onDidBlur = this._onDidBlur.event;\n        this._element = document.createElement('div');\n        this._element.className = 'dockview-react-part';\n    }\n    get element() {\n        return this._element;\n    }\n    focus() {\n        // TODO\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            params: parameters.params,\n            api: parameters.api,\n            containerApi: parameters.containerApi,\n        });\n    }\n    toJSON() {\n        return {\n            id: this.id,\n        };\n    }\n    update(event) {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update(event.params);\n    }\n    updateParentGroup(group, _isPanelVisible) {\n        this._group = group;\n    }\n    layout(_width, _height) {\n        // noop\n    }\n    dispose() {\n        var _a;\n        this._onDidFocus.dispose();\n        this._onDidBlur.dispose();\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import { ReactPart } from '../react';\nimport { DEFAULT_TAB_IDENTIFIER } from '../../dockview/components/tab/defaultTab';\nexport class ReactPanelHeaderPart {\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._element = document.createElement('div');\n        this._element.className = 'dockview-react-part';\n    }\n    get element() {\n        return this._element;\n    }\n    focus() {\n        //noop\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            params: parameters.params,\n            api: parameters.api,\n            containerApi: parameters.containerApi,\n        });\n    }\n    update(event) {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update(event.params);\n    }\n    toJSON() {\n        if (this.id === DEFAULT_TAB_IDENTIFIER) {\n            return {};\n        }\n        return {\n            id: this.id,\n        };\n    }\n    layout(_width, _height) {\n        // noop - retrieval from api\n    }\n    updateParentGroup(_group, _isPanelVisible) {\n        // noop - retrieval from api\n    }\n    dispose() {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import { DockviewGroupPanel } from '../dockview/dockviewGroupPanel';\nimport { createComponent } from '../panel/componentFactory';\nimport { DockviewApi } from '../api/component.api';\nimport { DefaultTab } from '../dockview/components/tab/defaultTab';\nimport { DefaultGroupPanelView } from '../dockview/defaultGroupPanelView';\nexport class ReactPanelDeserialzier {\n    constructor(layout) {\n        this.layout = layout;\n    }\n    fromJSON(panelData, group) {\n        var _a, _b, _c, _d;\n        const panelId = panelData.id;\n        const params = panelData.params;\n        const title = panelData.title;\n        const viewData = panelData.view;\n        let tab;\n        if ((_a = viewData.tab) === null || _a === void 0 ? void 0 : _a.id) {\n            tab = createComponent(viewData.tab.id, viewData.tab.id, this.layout.options.tabComponents, this.layout.options.frameworkTabComponents, (_b = this.layout.options.frameworkComponentFactory) === null || _b === void 0 ? void 0 : _b.tab, () => new DefaultTab());\n        }\n        else if (this.layout.options.defaultTabComponent) {\n            tab = createComponent(this.layout.options.defaultTabComponent, this.layout.options.defaultTabComponent, this.layout.options.tabComponents, this.layout.options.frameworkTabComponents, (_c = this.layout.options.frameworkComponentFactory) === null || _c === void 0 ? void 0 : _c.tab, () => new DefaultTab());\n        }\n        else {\n            tab = new DefaultTab();\n        }\n        const view = new DefaultGroupPanelView({\n            content: createComponent(viewData.content.id, viewData.content.id, this.layout.options.components, this.layout.options.frameworkComponents, (_d = this.layout.options.frameworkComponentFactory) === null || _d === void 0 ? void 0 : _d.content),\n            tab,\n        });\n        const panel = new DockviewGroupPanel(panelId, this.layout, new DockviewApi(this.layout), group);\n        panel.init({\n            view,\n            title,\n            params: params || {},\n        });\n        return panel;\n    }\n}\n","import { ReactPart } from '../react';\nexport class ReactWatermarkPart {\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._groupRef = {\n            value: undefined,\n        };\n        this._element = document.createElement('div');\n        this._element.className = 'dockview-react-part';\n    }\n    get element() {\n        return this._element;\n    }\n    init(parameters) {\n        this.parameters = parameters;\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            params: parameters.params,\n            api: parameters.api,\n            containerApi: parameters.containerApi,\n            close: () => {\n                if (this._groupRef.value) {\n                    parameters.containerApi.removeGroup(this._groupRef.value);\n                }\n            },\n        });\n    }\n    focus() {\n        // noop\n    }\n    update(params) {\n        var _a, _b;\n        if (this.parameters) {\n            this.parameters.params = params.params;\n        }\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update({ params: ((_b = this.parameters) === null || _b === void 0 ? void 0 : _b.params) || {} });\n    }\n    toJSON() {\n        return {\n            id: this.id,\n        };\n    }\n    layout(_width, _height) {\n        // noop - retrieval from api\n    }\n    updateParentGroup(group, _isPanelVisible) {\n        // noop - retrieval from api\n        this._groupRef.value = group;\n    }\n    dispose() {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import { ReactPart } from '../react';\nimport { CompositeDisposable, MutableDisposable, } from '../../lifecycle';\nexport class ReactGroupControlsRendererPart {\n    constructor(component, reactPortalStore, _group) {\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._group = _group;\n        this.mutableDisposable = new MutableDisposable();\n        this._element = document.createElement('div');\n        this._element.className = 'dockview-react-part';\n    }\n    get element() {\n        return this._element;\n    }\n    get part() {\n        return this._part;\n    }\n    get group() {\n        return this._group;\n    }\n    focus() {\n        // TODO\n    }\n    init(parameters) {\n        this.mutableDisposable.value = new CompositeDisposable(this._group.model.onDidAddPanel(() => {\n            this.updatePanels();\n        }), this._group.model.onDidRemovePanel(() => {\n            this.updatePanels();\n        }), this._group.model.onDidActivePanelChange(() => {\n            this.updateActivePanel();\n        }), parameters.api.onDidActiveChange(() => {\n            this.updateGroupActive();\n        }));\n        this._part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            api: parameters.api,\n            containerApi: parameters.containerApi,\n            panels: this._group.model.panels,\n            activePanel: this._group.model.activePanel,\n            isGroupActive: this._group.api.isActive,\n        });\n    }\n    update(event) {\n        var _a;\n        (_a = this._part) === null || _a === void 0 ? void 0 : _a.update(event.params);\n    }\n    dispose() {\n        var _a;\n        this.mutableDisposable.dispose();\n        (_a = this._part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n    updatePanels() {\n        this.update({ params: { panels: this._group.model.panels } });\n    }\n    updateActivePanel() {\n        this.update({\n            params: {\n                activePanel: this._group.model.activePanel,\n            },\n        });\n    }\n    updateGroupActive() {\n        this.update({\n            params: {\n                isGroupActive: this._group.api.isActive,\n            },\n        });\n    }\n}\n","import * as React from 'react';\nimport { DockviewComponent, } from '../../dockview/dockviewComponent';\nimport { ReactPanelContentPart } from './reactContentPart';\nimport { ReactPanelHeaderPart } from './reactHeaderPart';\nimport { ReactPanelDeserialzier } from '../deserializer';\nimport { usePortalsLifecycle } from '../react';\nimport { DockviewApi } from '../../api/component.api';\nimport { ReactWatermarkPart } from './reactWatermarkPart';\nimport { watchElementResize } from '../../dom';\nimport { ReactGroupControlsRendererPart, } from './groupControlsRenderer';\nimport { DEFAULT_TAB_IDENTIFIER } from '../../dockview/components/tab/defaultTab';\nfunction createGroupControlElement(component, store) {\n    return component\n        ? (groupPanel) => {\n            return new ReactGroupControlsRendererPart(component, store, groupPanel);\n        }\n        : undefined;\n}\nexport const DockviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const dockviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    React.useEffect(() => {\n        if (props.disableAutoResizing) {\n            return () => {\n                //\n            };\n        }\n        const watcher = watchElementResize(domRef.current, (entry) => {\n            var _a;\n            const { width, height } = entry.contentRect;\n            (_a = dockviewRef.current) === null || _a === void 0 ? void 0 : _a.layout(width, height);\n        });\n        return () => {\n            watcher.dispose();\n        };\n    }, [props.disableAutoResizing]);\n    React.useEffect(() => {\n        var _a;\n        const factory = {\n            content: {\n                createComponent: (_id, componentId, component) => {\n                    return new ReactPanelContentPart(componentId, component, {\n                        addPortal,\n                    });\n                },\n            },\n            tab: {\n                createComponent: (_id, componentId, component) => {\n                    return new ReactPanelHeaderPart(componentId, component, {\n                        addPortal,\n                    });\n                },\n            },\n            watermark: {\n                createComponent: (_id, componentId, component) => {\n                    return new ReactWatermarkPart(componentId, component, {\n                        addPortal,\n                    });\n                },\n            },\n        };\n        const element = document.createElement('div');\n        const dockview = new DockviewComponent(element, {\n            frameworkComponentFactory: factory,\n            frameworkComponents: props.components,\n            frameworkTabComponents: Object.assign(Object.assign({}, (props.tabComponents || {})), { [DEFAULT_TAB_IDENTIFIER]: props.defaultTabComponent }),\n            tabHeight: props.tabHeight,\n            watermarkFrameworkComponent: props.watermarkComponent,\n            defaultTabComponent: DEFAULT_TAB_IDENTIFIER,\n            styles: props.hideBorders\n                ? { separatorBorder: 'transparent' }\n                : undefined,\n            showDndOverlay: props.showDndOverlay,\n            createGroupControlElement: createGroupControlElement(props.groupControlComponent, { addPortal }),\n        });\n        (_a = domRef.current) === null || _a === void 0 ? void 0 : _a.appendChild(dockview.element);\n        dockview.deserializer = new ReactPanelDeserialzier(dockview);\n        const { clientWidth, clientHeight } = domRef.current;\n        dockview.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api: new DockviewApi(dockview) });\n        }\n        dockviewRef.current = dockview;\n        return () => {\n            dockview.dispose();\n            element.remove();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const disposable = dockviewRef.current.onDidDrop((event) => {\n            if (props.onDidDrop) {\n                props.onDidDrop(event);\n            }\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.onDidDrop]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            frameworkComponents: props.components,\n        });\n    }, [props.components]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            watermarkFrameworkComponent: props.watermarkComponent,\n        });\n    }, [props.watermarkComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            showDndOverlay: props.showDndOverlay,\n        });\n    }, [props.showDndOverlay]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            frameworkTabComponents: props.tabComponents,\n        });\n    }, [props.tabComponents]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            defaultTabComponent: DEFAULT_TAB_IDENTIFIER,\n            frameworkTabComponents: Object.assign(Object.assign({}, (props.tabComponents || {})), { [DEFAULT_TAB_IDENTIFIER]: props.defaultTabComponent }),\n        });\n    }, [props.defaultTabComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createGroupControlElement: createGroupControlElement(props.groupControlComponent, { addPortal }),\n        });\n    }, [props.groupControlComponent]);\n    return (React.createElement(\"div\", { className: props.className, style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nDockviewReact.displayName = 'DockviewComponent';\n","import * as React from 'react';\nexport const CloseButton = () => (React.createElement(\"svg\", { height: \"11\", width: \"11\", viewBox: \"0 0 28 28\", \"aria-hidden\": 'false', focusable: false, className: \"dockview-svg\" },\n    React.createElement(\"path\", { d: \"M2.1 27.3L0 25.2L11.55 13.65L0 2.1L2.1 0L13.65 11.55L25.2 0L27.3 2.1L15.75 13.65L27.3 25.2L25.2 27.3L13.65 15.75L2.1 27.3Z\" })));\nexport const ExpandMore = () => {\n    return (React.createElement(\"svg\", { width: \"11\", height: \"11\", viewBox: \"0 0 24 15\", \"aria-hidden\": 'false', focusable: false, className: \"dockview-svg\" },\n        React.createElement(\"path\", { d: \"M12 14.15L0 2.15L2.15 0L12 9.9L21.85 0.0499992L24 2.2L12 14.15Z\" })));\n};\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from 'react';\nimport { CloseButton } from '../svg';\nexport const DockviewDefaultTab = (_a) => {\n    var { api, containerApi: _containerApi, params: _params } = _a, rest = __rest(_a, [\"api\", \"containerApi\", \"params\"]);\n    const onClose = React.useCallback((event) => {\n        event.stopPropagation();\n        api.close();\n    }, [api]);\n    const onClick = React.useCallback((event) => {\n        api.setActive();\n        if (rest.onClick) {\n            rest.onClick(event);\n        }\n    }, [api, rest.onClick]);\n    const iconClassname = React.useMemo(() => {\n        const cn = ['dockview-react-tab-action'];\n        return cn.join(',');\n    }, []);\n    return (React.createElement(\"div\", Object.assign({}, rest, { onClick: onClick, className: \"dockview-react-tab\" }),\n        React.createElement(\"span\", { className: \"dockview-react-tab-title\" }, api.title),\n        React.createElement(\"div\", { className: iconClassname, onClick: onClose },\n            React.createElement(CloseButton, null))));\n};\n","import { SplitviewApi } from '../../api/component.api';\nimport { SplitviewPanel } from '../../splitview/splitviewPanel';\nimport { ReactPart } from '../react';\nexport class ReactPanelView extends SplitviewPanel {\n    constructor(id, component, reactComponent, reactPortalStore) {\n        super(id, component);\n        this.reactComponent = reactComponent;\n        this.reactPortalStore = reactPortalStore;\n    }\n    getComponent() {\n        var _a;\n        return new ReactPart(this.element, this.reactPortalStore, this.reactComponent, {\n            params: ((_a = this._params) === null || _a === void 0 ? void 0 : _a.params) || {},\n            api: this.api,\n            containerApi: new SplitviewApi(this._params.accessor),\n        });\n    }\n}\n","import * as React from 'react';\nimport { SplitviewApi } from '../../api/component.api';\nimport { SplitviewComponent, } from '../../splitview/splitviewComponent';\nimport { Orientation } from '../../splitview/core/splitview';\nimport { usePortalsLifecycle } from '../react';\nimport { ReactPanelView } from './view';\nimport { watchElementResize } from '../../dom';\nexport const SplitviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const splitviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    React.useEffect(() => {\n        if (props.disableAutoResizing) {\n            return () => {\n                //\n            };\n        }\n        const watcher = watchElementResize(domRef.current, (entry) => {\n            var _a;\n            const { width, height } = entry.contentRect;\n            (_a = splitviewRef.current) === null || _a === void 0 ? void 0 : _a.layout(width, height);\n        });\n        return () => {\n            watcher.dispose();\n        };\n    }, [props.disableAutoResizing]);\n    React.useEffect(() => {\n        const splitview = new SplitviewComponent(domRef.current, {\n            orientation: props.orientation || Orientation.HORIZONTAL,\n            frameworkComponents: props.components,\n            frameworkWrapper: {\n                createComponent: (id, componentId, component) => {\n                    return new ReactPanelView(id, componentId, component, {\n                        addPortal,\n                    });\n                },\n            },\n            proportionalLayout: typeof props.proportionalLayout === 'boolean'\n                ? props.proportionalLayout\n                : true,\n            styles: props.hideBorders\n                ? { separatorBorder: 'transparent' }\n                : undefined,\n        });\n        const { clientWidth, clientHeight } = domRef.current;\n        splitview.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api: new SplitviewApi(splitview) });\n        }\n        splitviewRef.current = splitview;\n        return () => {\n            splitview.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!splitviewRef.current) {\n            return;\n        }\n        splitviewRef.current.updateOptions({\n            frameworkComponents: props.components,\n        });\n    }, [props.components]);\n    return (React.createElement(\"div\", { className: props.className, style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nSplitviewReact.displayName = 'SplitviewComponent';\n","import { GridviewApi } from '../../api/component.api';\nimport { GridviewPanel, } from '../../gridview/gridviewPanel';\nimport { ReactPart } from '../react';\nexport class ReactGridPanelView extends GridviewPanel {\n    constructor(id, component, reactComponent, reactPortalStore) {\n        super(id, component);\n        this.reactComponent = reactComponent;\n        this.reactPortalStore = reactPortalStore;\n    }\n    getComponent() {\n        var _a;\n        return new ReactPart(this.element, this.reactPortalStore, this.reactComponent, {\n            params: ((_a = this._params) === null || _a === void 0 ? void 0 : _a.params) || {},\n            api: this.api,\n            containerApi: new GridviewApi(this._params.accessor),\n        });\n    }\n}\n","import * as React from 'react';\nimport { GridviewComponent, } from '../../gridview/gridviewComponent';\nimport { Orientation } from '../../splitview/core/splitview';\nimport { ReactGridPanelView } from './view';\nimport { usePortalsLifecycle } from '../react';\nimport { GridviewApi } from '../../api/component.api';\nimport { watchElementResize } from '../../dom';\nexport const GridviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const gridviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    React.useEffect(() => {\n        if (props.disableAutoResizing) {\n            return () => {\n                //\n            };\n        }\n        const watcher = watchElementResize(domRef.current, (entry) => {\n            var _a;\n            const { width, height } = entry.contentRect;\n            (_a = gridviewRef.current) === null || _a === void 0 ? void 0 : _a.layout(width, height);\n        });\n        return () => {\n            watcher.dispose();\n        };\n    }, [props.disableAutoResizing]);\n    React.useEffect(() => {\n        var _a;\n        const element = document.createElement('div');\n        const gridview = new GridviewComponent(element, {\n            proportionalLayout: typeof props.proportionalLayout === 'boolean'\n                ? props.proportionalLayout\n                : true,\n            orientation: props.orientation || Orientation.HORIZONTAL,\n            frameworkComponents: props.components,\n            frameworkComponentFactory: {\n                createComponent: (id, componentId, component) => {\n                    return new ReactGridPanelView(id, componentId, component, {\n                        addPortal,\n                    });\n                },\n            },\n            styles: props.hideBorders\n                ? { separatorBorder: 'transparent' }\n                : undefined,\n        });\n        (_a = domRef.current) === null || _a === void 0 ? void 0 : _a.appendChild(gridview.element);\n        const { clientWidth, clientHeight } = domRef.current;\n        gridview.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api: new GridviewApi(gridview) });\n        }\n        gridviewRef.current = gridview;\n        return () => {\n            gridview.dispose();\n            element.remove();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!gridviewRef.current) {\n            return;\n        }\n        gridviewRef.current.updateOptions({\n            frameworkComponents: props.components,\n        });\n    }, [props.components]);\n    return (React.createElement(\"div\", { className: props.className, style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nGridviewReact.displayName = 'GridviewComponent';\n","import { ReactPart } from '../react';\nexport class PanePanelSection {\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._element = document.createElement('div');\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    get element() {\n        return this._element;\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            params: parameters.params,\n            api: parameters.api,\n            title: parameters.title,\n            containerApi: parameters.containerApi,\n        });\n    }\n    toJSON() {\n        return {\n            id: this.id,\n        };\n    }\n    update(params) {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update(params.params);\n    }\n    dispose() {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import * as React from 'react';\nimport { PaneviewComponent, } from '../../paneview/paneviewComponent';\nimport { usePortalsLifecycle } from '../react';\nimport { PaneviewApi } from '../../api/component.api';\nimport { PanePanelSection } from './view';\nimport { watchElementResize } from '../../dom';\nexport const PaneviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const paneviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    React.useEffect(() => {\n        if (props.disableAutoResizing) {\n            return () => {\n                //\n            };\n        }\n        const watcher = watchElementResize(domRef.current, (entry) => {\n            var _a;\n            const { width, height } = entry.contentRect;\n            (_a = paneviewRef.current) === null || _a === void 0 ? void 0 : _a.layout(width, height);\n        });\n        return () => {\n            watcher.dispose();\n        };\n    }, [props.disableAutoResizing]);\n    React.useEffect(() => {\n        const createComponent = (id, _componentId, component) => new PanePanelSection(id, component, {\n            addPortal,\n        });\n        const paneview = new PaneviewComponent(domRef.current, {\n            frameworkComponents: props.components,\n            components: {},\n            headerComponents: {},\n            disableDnd: props.disableDnd,\n            headerframeworkComponents: props.headerComponents,\n            frameworkWrapper: {\n                header: {\n                    createComponent,\n                },\n                body: {\n                    createComponent,\n                },\n            },\n            showDndOverlay: props.showDndOverlay,\n        });\n        const api = new PaneviewApi(paneview);\n        const { clientWidth, clientHeight } = domRef.current;\n        paneview.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api });\n        }\n        paneviewRef.current = paneview;\n        return () => {\n            paneview.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return;\n        }\n        paneviewRef.current.updateOptions({\n            frameworkComponents: props.components,\n        });\n    }, [props.components]);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return;\n        }\n        paneviewRef.current.updateOptions({\n            headerframeworkComponents: props.headerComponents,\n        });\n    }, [props.headerComponents]);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return () => {\n                //\n            };\n        }\n        const paneview = paneviewRef.current;\n        const disposable = paneview.onDidDrop((event) => {\n            if (props.onDidDrop) {\n                props.onDidDrop(Object.assign(Object.assign({}, event), { api: new PaneviewApi(paneview) }));\n            }\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.onDidDrop]);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return;\n        }\n        paneviewRef.current.updateOptions({\n            showDndOverlay: props.showDndOverlay,\n        });\n    }, [props.showDndOverlay]);\n    return (React.createElement(\"div\", { className: props.className, style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nPaneviewReact.displayName = 'PaneviewComponent';\n"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","sourceSymbolKeys","prototype","propertyIsEnumerable","call","MDXContext","useMDXComponents","components","contextComponents","allComponents","MDXProvider","props","Provider","children","DEFAULTS","inlineCode","wrapper","_ref","MDXCreateElement","ref","propComponents","mdxType","originalType","parentName","etc","type","Component","concat","createElement","args","argsLength","createElementArgArray","Array","newProps","hasOwnProperty","displayName","TransferObject","constructor","PanelTransfer","viewId","groupId","panelId","super","this","PaneTransfer","paneId","LocalSelectionTransfer","INSTANCE","hasData","proto","clearData","undefined","data","getData","setData","getPanelData","panelTransfer","getInstance","getPaneData","paneTransfer","Event","Disposable","any","listener","disposables","map","child","dispose","d","Emitter","options","_listeners","_disposed","event","_event","_a","replay","_last","index","splice","fire","e","addDisposableWindowListener","element","addEventListener","removeEventListener","addDisposableListener","TickDelayedEvent","_onFired","onEvent","timer","clearTimeout","setTimeout","NONE","CompositeDisposable","addDisposables","arg","MutableDisposable","_disposable","disposable","watchElementResize","cb","observer","ResizeObserver","entires","firstEntry","observe","unobserve","disconnect","removeClasses","classes","classname","classList","contains","remove","addClasses","add","toggleClass","className","isToggled","hasClass","isAncestor","testChild","testAncestor","parentNode","getElementsByTagName","tag","slice","document","trackFocus","FocusTracker","_onDidFocus","onDidFocus","_onDidBlur","onDidBlur","hasFocus","activeElement","loosingFocus","onFocus","onBlur","window","_refreshStateHandler","HTMLElement","refreshState","clamp","min","max","Error","Math","sequentialNumberGenerator","next","toString","tail","arr","sequenceEquals","arr1","arr2","pushToStart","unshift","pushToEnd","range","from","to","result","ViewItem","container","view","size","_cachedVisibleSize","_size","cachedVisibleSize","visible","setVisible","viewMinimumSize","viewMaximumSize","toggle","minimumSize","maximumSize","priority","snap","enabled","style","pointerEvents","Orientation","SashState","LayoutPriority","Sizing","Position","Distribute","Split","Invisible","Splitview","views","sashes","_orthogonalSize","contentSize","_proportions","_onDidSashEnd","onDidSashEnd","_onDidAddView","onDidAddView","_onDidRemoveView","onDidRemoveView","_startSnappingEnabled","_endSnappingEnabled","resize","delta","sizes","lowPriorityIndexes","highPriorityIndexes","overloadMinDelta","overloadMaxDelta","snapBefore","snapAfter","x","Number","NEGATIVE_INFINITY","POSITIVE_INFINITY","upIndexes","downIndexes","upItems","upSizes","downItems","downSizes","minDeltaUp","reduce","_","maxDeltaUp","maxDeltaDown","minDeltaDown","minDelta","maxDelta","snapped","snapView","limitDelta","actualDelta","deltaUp","item","viewDelta","deltaDown","_orientation","orientation","createContainer","proportionalLayout","viewContainer","createViewContainer","sashContainer","createSashContainer","appendChild","styles","descriptor","viewDescriptor","sizing","addView","r","saveProportions","orthogonalSize","proportions","tmp","HORIZONTAL","startSnappingEnabled","updateSashEnablement","endSnappingEnabled","separatorBorder","removeProperty","setProperty","isViewVisible","setViewVisible","viewItem","distributeEmptySpace","layoutViews","getViewSize","resizeView","indexes","Low","High","round","relayout","getViews","onDidChange","skipLayout","viewSize","newSize","removeChild","insertBefore","sash","onStart","iframes","iframe","start","clientX","clientY","sashIndex","array","fn","firstIndex","s","snapBeforeIndex","findFirstSnapIndex","snapAfterIndex","snappedViewItem","halfSize","floor","mousemove","mousemoveEvent","end","sashItem","distributeViewSizes","flexibleViewItems","flexibleSize","removeView","getViewCachedVisibleSize","moveView","layout","previousSize","lowPriorityIndex","emptyDelta","sum","offset","left","top","VERTICAL","width","height","previous","collapsesDown","expandsDown","reverseViews","reverse","collapsesUp","expandsUp","position","snappedBefore","snappedAfter","updateSash","MINIMUM","MAXIMUM","DISABLED","ENABLED","state","orientationClassname","Paneview","paneItems","skipAnimation","_onDidChange","splitview","getPanes","pane","onDidChangeExpansionState","setupAnimation","paneItem","addPane","removePane","skipDispose","animationTimer","DragAndDropObserver","callbacks","counter","registerListeners","onDragEnter","preventDefault","onDragOver","onDragLeave","onDragEnd","onDrop","Droptarget","_onDrop","clientWidth","clientHeight","xp","offsetX","yp","offsetY","quadrant","calculateQuadrant","validOverlays","canDisplayOverlay","overlay","_state","Center","append","isSmallX","isSmallY","toggleClasses","setState","removeDropTarget","stopPropagation","nativeEvent","isLeft","isRight","isTop","isBottom","Top","Left","Bottom","Right","overlayType","LeafNode","minimumWidth","maximumWidth","minimumHeight","maximumHeight","minimumOrthogonalSize","maximumOrthogonalSize","BranchNode","childDescriptors","_childrenDisposable","childDescriptor","node","c","setupChildrenEvents","Normal","priorities","some","p","isChildVisible","setChildVisible","moveChild","_removeChild","_addChild","getChildSize","resizeChild","addChild","getChildCachedVisibleSize","findLeaf","candiateNode","last","flipNode","orthogonal","totalSize","childSize","getGridLocation","parentElement","test","el","firstElementChild","lastElementChild","nextElementSibling","indexInParent","getRelativeLocation","rootOrientation","location","direction","getLocationOrientation","directionOrientation","getDirectionOrientation","rest","_index","serializeBranchNode","box","isGridBranchNode","toJSON","Gridview","root","serialize","getView","clear","deserialize","json","deserializer","_deserialize","_deserializeNode","isRoot","serializedChild","fromJSON","_root","oldRoot","progmaticSelect","getNode","_getViews","nodeCachedVisibleSize","path","n","l","parent","parentLocation","pathToParent","grandParent","parentIndex","__","newSiblingSize","newSiblingCachedVisibleSize","newParent","newSibling","sibling","isSiblingVisible","siblingSizing","SplitviewApi","component","panels","onDidLayoutFromJSON","onDidLayoutChange","updateOptions","removePanel","panel","focus","getPanel","id","addPanel","movePanel","PaneviewApi","onDidDrop","emitter","assign","api","GridviewApi","onDidAddPanel","onDidAddGroup","onDidRemovePanel","onDidRemoveGroup","onDidActivePanelChange","onDidActiveGroupChange","groups","force","DockviewApi","totalPanels","activePanel","activeGroup","getTabHeight","tabHeight","setTabHeight","getGroupPanel","addEmptyGroup","moveToNext","moveToPrevious","closeAllGroups","removeGroup","group","getGroup","ContentContainer","_element","tabIndex","show","display","hide","openPanel","content","_width","_height","closePanel","_b","_c","DockviewDropTargets","MouseEventKind","DragHandler","_onDragStart","onDragStart","configure","dataTransfer","effectAllowed","Tab","accessor","_onChanged","onChanged","_onDropped","draggable","defaultPrevented","kind","CLICK","droptarget","model","setActive","isActive","setContent","part","TabsContainer","tabs","selectedIndex","_hidden","actionContainer","tabContainer","voidContainer","voidDropTarget","Panel","button","doSetGroupActive","hidden","setActionElement","actions","tab","at","findIndex","_isGroupActive","addTab","delete","tabToRemove","setActivePanel","isActivePanel","find","tabToAdd","alreadyFocused","isContentFocused","skipFocus","Groupview","_locked","mostRecentlyUsed","_panels","_onMove","onMove","_onDidDrop","_onDidAddPanel","_onDidRemovePanel","_onDidActivePanelChange","tabsContainer","contentContainer","dropTarget","locked","header","hideHeader","handleDropEvent","_activePanel","isEmpty","MAX_SAFE_INTEGER","hasWatermark","watermark","initialize","doAddPanel","updateContainer","createGroupControlElement","_control","init","containerApi","activeView","normalizedIndex","suppressRoll","containsPanel","includes","_params","update","skipSetPanelActive","skipSetGroupActive","updateParentGroup","doSetActivePanel","groupItemOrId","panelToRemove","_removePanel","closeAllPanels","arrPanelCpy","doClose","isPanelActive","updateActions","isGroupActive","doRemovePanel","nextPanel","skipSetActive","hasExistingPanel","updateMru","createWatermarkComponent","params","title","showDndOverlay","itemId","nextLayoutId","toTarget","BaseGrid","_id","_groups","Map","_onDidLayoutChange","_onDidRemoveGroup","_onDidAddGroup","_onDidActiveGroupChange","_bufferOnDidLayoutChange","gridview","values","_activeGroup","isVisible","doAddGroup","doRemoveGroup","has","get","skipActive","forceResize","PanelApiImpl","_isFocused","_isActive","_isVisible","_onDidDimensionChange","onDidDimensionsChange","_onDidChangeFocus","onDidFocusChange","_onFocusEvent","onFocusEvent","_onDidVisibilityChange","onDidVisibilityChange","_onVisibilityChange","onVisibilityChange","_onDidActiveChange","onDidActiveChange","_onActiveChange","onActiveChange","isFocused","GridviewPanelApiImpl","_onDidConstraintsChangeInternal","onDidConstraintsChangeInternal","_onDidConstraintsChange","onDidConstraintsChange","_onDidSizeChange","onDidSizeChange","setConstraints","setSize","DockviewPanelApiImpl","_onDidTitleChange","onDidTitleChange","_onDidGroupChange","onDidGroupChange","_group","isOldGroupActive","setTitle","close","DockviewGroupPanel","mutableDisposable","_title","_view","isPanelVisible","ActionContainer","_list","createSvgElementFromPath","svg","createElementNS","setAttributeNS","viewbox","createCloseButton","Watermark","emptySpace","flexGrow","closeAnchor","ev","render","_visible","isOneGroup","createComponent","componentName","frameworkComponents","createFrameworkComponent","fallback","FrameworkComponent","DEFAULT_TAB_IDENTIFIER","DefaultTab","_isPanelVisible","_content","_actionContainer","action","textContent","changed","BasePanelView","outline","overflow","parameters","getComponent","GridviewPanel","_evaluatedMinimumWidth","_evaluatedMaximumWidth","_evaluatedMinimumHeight","_evaluatedMaximumHeight","_minimumWidth","_minimumHeight","_maximumWidth","_maximumHeight","_snap","_priority","updateConstraints","maximum","minimum","GroupviewApi","GroupPanel","_model","DefaultGroupPanelView","renderers","_tab","nextGroupId","DockviewComponent","_onDidLayoutFromJSON","_options","frameworkTabComponents","tabComponents","watermarkComponent","watermarkFrameworkComponent","_api","flatMap","_deserializer","hasOrientationChanged","includePanel","grid","collection","createGroup","hasActiveGroup","hasActivePanel","entry","entries","referenceGroup","referencePanel","findGroup","createPanel","relativeLocation","createGroupAtLocation","removeEmptyGroup","frameworkComponentFactory","moveGroupOrPanel","sourceGroup","referenceLocation","targetLocation","targetParentLocation","sourceLocation","sourceParentLocation","targetGroup","updatedReferenceLocation","groupItem","dropLocation","isGroupAlreadyFocused","console","warn","set","createContentComponent","createTabComponent","tabComponent","defaultTabComponent","GridviewComponent","_onDidLayoutfromJSON","_key","serializedGridview","queue","registerPanel","f","removedPanel","reference","moveGroup","SplitviewComponent","_splitview","v","frameworkWrapper","doAddView","serializedSplitview","SplitviewPanelApiImpl","PaneviewPanelApiImpl","_onDidExpansionChange","onDidExpansionChange","_onMouseEnter","onMouseEnter","_onMouseLeave","onMouseLeave","_pane","setExpanded","isExpanded","PaneviewPanel","headerComponent","isHeaderVisible","_onDidChangeExpansionState","headerSize","_minimumBodySize","_maximumBodySize","_isExpanded","expandedSize","_headerVisible","isPanelExpanded","renderOnce","minimumBodySize","maximumBodySize","headerVisible","expanded","body","bodyPart","getBodyComponent","headerPart","getHeaderComponent","lineHeight","minHeight","maxHeight","DraggablePaneviewPanel","disableDnd","initDragFeatures","accessorId","handler","existingPanel","allPanels","fromIndex","toIndex","DefaultHeader","_expandedIcon","_collapsedIcon","apiRef","_expander","updateIcon","PaneFramework","PaneviewComponent","_viewDisposables","paneview","_paneview","headerComponents","headerframeworkComponents","serializedPaneview","SplitviewPanel","_evaluatedMinimumSize","_evaluatedMaximumSize","_minimumSize","_maximumSize","ReactComponentBridge","triggerRender","React","_props","componentProps","current","Date","now","uniquePortalKeyGenerator","ReactPartContext","ReactPart","portalStore","context","_initialProps","disposed","createPortal","componentInstance","bridgeComponent","portal","ReactDOM","addPortal","usePortalsLifecycle","portals","setPortals","existingPortals","ReactPanelContentPart","reactPortalStore","ReactPanelHeaderPart","ReactPanelDeserialzier","panelData","_d","viewData","ReactWatermarkPart","_groupRef","ReactGroupControlsRendererPart","_part","updatePanels","updateActivePanel","updateGroupActive","store","groupPanel","DockviewReact","domRef","dockviewRef","disableAutoResizing","watcher","contentRect","factory","componentId","dockview","hideBorders","groupControlComponent","onReady","CloseButton","viewBox","focusable","__rest","t","DockviewDefaultTab","_containerApi","onClose","onClick","iconClassname","join","ReactPanelView","reactComponent","SplitviewReact","splitviewRef","ReactGridPanelView","GridviewReact","gridviewRef","PanePanelSection","PaneviewReact","paneviewRef","_componentId"],"sourceRoot":""}