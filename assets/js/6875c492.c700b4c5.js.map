{"version":3,"file":"assets/js/6875c492.c700b4c5.js","mappings":"iKASe,SAASA,EAAkBC,GACxC,MAAM,SAACC,GAAYD,GACb,aAACE,EAAY,SAAEC,GAAYF,EACjC,OACE,uBACEG,UAAU,iBACV,cAAYC,EAAAA,EAAAA,GAAU,CACpBC,GAAI,oCACJC,QAAS,4BACTC,YAAa,4CAEdN,GACC,gBAAC,IAAgB,CACfO,UAAWP,EACXQ,MACE,gBAAC,IAAS,CACRJ,GAAG,oCACHE,YAAY,2EAA0E,mBAM7FL,GACC,gBAAC,IAAgB,CACfM,UAAWN,EACXO,MACE,gBAAC,IAAS,CACRJ,GAAG,oCACHE,YAAY,uEAAsE,iBAItFG,QAAM,IAKhB,C,oECtCe,SAASC,EAAc,GAGlC,IAHkC,MACpCC,EACAC,UAAWC,EAAwBC,EAAAA,GACpC,EACC,OACE,gCACGH,EAAMI,KAAI,QAAEC,QAASC,GAAgB,SACpC,gBAAC,IAAgB,CACfC,IAAKD,EAAgBlB,SAASQ,UAC9BS,QAASC,GACT,gBAACJ,EAAqB,KACpB,gBAACI,EAAe,OAED,IAI3B,C,8JCWA,SAASE,EAA0BC,GACjC,MAAMC,EAjBR,WACE,MAAM,cAACC,IAAiBC,EAAAA,EAAAA,KACxB,OAAQC,GACNF,EACEE,GACArB,EAAAA,EAAAA,GACE,CACEC,GAAI,0BACJE,YACE,2MACFD,QAAS,0BAEX,CAACmB,UAGT,CAE0BC,GACxB,OAAOtB,EAAAA,EAAAA,GACL,CACEC,GAAI,sBACJE,YAAa,uCACbD,QAAS,oCAEX,CAACqB,OAAQL,EAAgBD,EAAII,OAAQG,QAASP,EAAIQ,OAEtD,CACA,SAASC,EAA0B,GAAQ,IAAR,IAACT,GAAI,EACtC,MAAMZ,EAAQW,EAA0BC,GACxC,OACE,gCACE,gBAAC,IAAY,CAACZ,MAAOA,IACrB,gBAAC,IAAc,CAACY,IAAI,oBAG1B,CACA,SAASU,EAAyB,GAAsC,IAAtC,IAACV,EAAG,MAAET,EAAK,QAAEoB,EAAO,aAAEC,GAAa,EACnE,MAAMxB,EAAQW,EAA0BC,GACxC,OACE,gBAAC,IAAU,CAACW,QAASA,GACnB,0BAAQ7B,UAAU,qBAChB,0BAAKM,GAEL,gBAAC,IAAI,CAACyB,KAAMb,EAAIc,aACd,gBAAC,IAAS,CACR9B,GAAG,0BACHE,YAAY,qDAAoD,mBAKtE,gBAAC,IAAa,CAACK,MAAOA,IACtB,gBAAC,IAAiB,CAACZ,SAAUiC,IAGnC,CACe,SAASG,EAAkBrC,GACxC,OACE,gBAAC,KAAqB,CACpBI,WAAWkC,EAAAA,EAAAA,GACTC,EAAAA,EAAAA,QAAAA,UACAA,EAAAA,EAAAA,KAAAA,sBAEF,gBAACR,EAA8B/B,GAC/B,gBAACgC,EAA6BhC,GAGpC,C","sources":["webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/BlogListPaginator/index.js","webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/BlogPostItems/index.js","webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/BlogTagsPostsPage/index.js"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport Translate, {translate} from '@docusaurus/Translate';\nimport PaginatorNavLink from '@theme/PaginatorNavLink';\nexport default function BlogListPaginator(props) {\n  const {metadata} = props;\n  const {previousPage, nextPage} = metadata;\n  return (\n    <nav\n      className=\"pagination-nav\"\n      aria-label={translate({\n        id: 'theme.blog.paginator.navAriaLabel',\n        message: 'Blog list page navigation',\n        description: 'The ARIA label for the blog pagination',\n      })}>\n      {previousPage && (\n        <PaginatorNavLink\n          permalink={previousPage}\n          title={\n            <Translate\n              id=\"theme.blog.paginator.newerEntries\"\n              description=\"The label used to navigate to the newer blog posts page (previous page)\">\n              Newer Entries\n            </Translate>\n          }\n        />\n      )}\n      {nextPage && (\n        <PaginatorNavLink\n          permalink={nextPage}\n          title={\n            <Translate\n              id=\"theme.blog.paginator.olderEntries\"\n              description=\"The label used to navigate to the older blog posts page (next page)\">\n              Older Entries\n            </Translate>\n          }\n          isNext\n        />\n      )}\n    </nav>\n  );\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport {BlogPostProvider} from '@docusaurus/theme-common/internal';\nimport BlogPostItem from '@theme/BlogPostItem';\nexport default function BlogPostItems({\n  items,\n  component: BlogPostItemComponent = BlogPostItem,\n}) {\n  return (\n    <>\n      {items.map(({content: BlogPostContent}) => (\n        <BlogPostProvider\n          key={BlogPostContent.metadata.permalink}\n          content={BlogPostContent}>\n          <BlogPostItemComponent>\n            <BlogPostContent />\n          </BlogPostItemComponent>\n        </BlogPostProvider>\n      ))}\n    </>\n  );\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport clsx from 'clsx';\nimport Translate, {translate} from '@docusaurus/Translate';\nimport {\n  PageMetadata,\n  HtmlClassNameProvider,\n  ThemeClassNames,\n  usePluralForm,\n} from '@docusaurus/theme-common';\nimport Link from '@docusaurus/Link';\nimport BlogLayout from '@theme/BlogLayout';\nimport BlogListPaginator from '@theme/BlogListPaginator';\nimport SearchMetadata from '@theme/SearchMetadata';\nimport BlogPostItems from '@theme/BlogPostItems';\n// Very simple pluralization: probably good enough for now\nfunction useBlogPostsPlural() {\n  const {selectMessage} = usePluralForm();\n  return (count) =>\n    selectMessage(\n      count,\n      translate(\n        {\n          id: 'theme.blog.post.plurals',\n          description:\n            'Pluralized label for \"{count} posts\". Use as much plural forms (separated by \"|\") as your language support (see https://www.unicode.org/cldr/cldr-aux/charts/34/supplemental/language_plural_rules.html)',\n          message: 'One post|{count} posts',\n        },\n        {count},\n      ),\n    );\n}\nfunction useBlogTagsPostsPageTitle(tag) {\n  const blogPostsPlural = useBlogPostsPlural();\n  return translate(\n    {\n      id: 'theme.blog.tagTitle',\n      description: 'The title of the page for a blog tag',\n      message: '{nPosts} tagged with \"{tagName}\"',\n    },\n    {nPosts: blogPostsPlural(tag.count), tagName: tag.label},\n  );\n}\nfunction BlogTagsPostsPageMetadata({tag}) {\n  const title = useBlogTagsPostsPageTitle(tag);\n  return (\n    <>\n      <PageMetadata title={title} />\n      <SearchMetadata tag=\"blog_tags_posts\" />\n    </>\n  );\n}\nfunction BlogTagsPostsPageContent({tag, items, sidebar, listMetadata}) {\n  const title = useBlogTagsPostsPageTitle(tag);\n  return (\n    <BlogLayout sidebar={sidebar}>\n      <header className=\"margin-bottom--xl\">\n        <h1>{title}</h1>\n\n        <Link href={tag.allTagsPath}>\n          <Translate\n            id=\"theme.tags.tagsPageLink\"\n            description=\"The label of the link targeting the tag list page\">\n            View All Tags\n          </Translate>\n        </Link>\n      </header>\n      <BlogPostItems items={items} />\n      <BlogListPaginator metadata={listMetadata} />\n    </BlogLayout>\n  );\n}\nexport default function BlogTagsPostsPage(props) {\n  return (\n    <HtmlClassNameProvider\n      className={clsx(\n        ThemeClassNames.wrapper.blogPages,\n        ThemeClassNames.page.blogTagPostListPage,\n      )}>\n      <BlogTagsPostsPageMetadata {...props} />\n      <BlogTagsPostsPageContent {...props} />\n    </HtmlClassNameProvider>\n  );\n}\n"],"names":["BlogListPaginator","props","metadata","previousPage","nextPage","className","translate","id","message","description","permalink","title","isNext","BlogPostItems","items","component","BlogPostItemComponent","BlogPostItem","map","content","BlogPostContent","key","useBlogTagsPostsPageTitle","tag","blogPostsPlural","selectMessage","usePluralForm","count","useBlogPostsPlural","nPosts","tagName","label","BlogTagsPostsPageMetadata","BlogTagsPostsPageContent","sidebar","listMetadata","href","allTagsPath","BlogTagsPostsPage","clsx","ThemeClassNames"],"sourceRoot":""}