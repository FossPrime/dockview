{"version":3,"file":"assets/js/14eb3368.904f3211.js","mappings":"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","sources":["webpack://dockview-docs/./node_modules/@docusaurus/theme-classic/lib-next/theme/DocBreadcrumbs/styles.module.css","webpack://dockview-docs/./node_modules/@docusaurus/theme-classic/lib-next/theme/IconHome/index.js","webpack://dockview-docs/./node_modules/@docusaurus/theme-classic/lib-next/theme/DocBreadcrumbs/index.js","webpack://dockview-docs/./node_modules/@docusaurus/theme-classic/lib-next/theme/DocCard/styles.module.css","webpack://dockview-docs/./node_modules/@docusaurus/theme-classic/lib-next/theme/DocCard/index.js","webpack://dockview-docs/./node_modules/@docusaurus/theme-classic/lib-next/theme/DocCardList/index.js","webpack://dockview-docs/./node_modules/@docusaurus/theme-classic/lib-next/theme/DocCategoryGeneratedIndexPage/styles.module.css","webpack://dockview-docs/./node_modules/@docusaurus/theme-classic/lib-next/theme/DocCategoryGeneratedIndexPage/index.js","webpack://dockview-docs/./node_modules/@docusaurus/theme-classic/lib-next/theme/DocPaginator/index.js","webpack://dockview-docs/./node_modules/@docusaurus/theme-classic/lib-next/theme/DocVersionBadge/index.js","webpack://dockview-docs/./node_modules/@docusaurus/theme-classic/lib-next/theme/DocVersionBanner/index.js","webpack://dockview-docs/./node_modules/@docusaurus/theme-classic/lib-next/theme/Heading/styles.module.css","webpack://dockview-docs/./node_modules/@docusaurus/theme-classic/lib-next/theme/Heading/index.js","webpack://dockview-docs/./node_modules/@docusaurus/theme-classic/lib-next/theme/PaginatorNavLink/index.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"breadcrumbsContainer\":\"breadcrumbsContainer_Xlws\",\"breadcrumbHomeIcon\":\"breadcrumbHomeIcon_kU5B\"};","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nexport default function IconHome(props) {\n  return (\n    <svg viewBox=\"0 0 24 24\" {...props}>\n      <path\n        d=\"M10 19v-5h4v5c0 .55.45 1 1 1h3c.55 0 1-.45 1-1v-7h1.7c.46 0 .68-.57.33-.87L12.67 3.6c-.38-.34-.96-.34-1.34 0l-8.36 7.53c-.34.3-.13.87.33.87H5v7c0 .55.45 1 1 1h3c.55 0 1-.45 1-1z\"\n        fill=\"currentColor\"\n      />\n    </svg>\n  );\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport {\n  ThemeClassNames,\n  useSidebarBreadcrumbs,\n  useHomePageRoute,\n} from '@docusaurus/theme-common';\nimport styles from './styles.module.css';\nimport clsx from 'clsx';\nimport Link from '@docusaurus/Link';\nimport useBaseUrl from '@docusaurus/useBaseUrl';\nimport {translate} from '@docusaurus/Translate';\nimport IconHome from '@theme/IconHome'; // TODO move to design system folder\n\nfunction BreadcrumbsItemLink({children, href, isLast}) {\n  const className = 'breadcrumbs__link';\n\n  if (isLast) {\n    return (\n      <span className={className} itemProp=\"name\">\n        {children}\n      </span>\n    );\n  }\n\n  return href ? (\n    <Link className={className} href={href} itemProp=\"item\">\n      <span itemProp=\"name\">{children}</span>\n    </Link> // TODO Google search console doesn't like breadcrumb items without href.\n  ) : (\n    // The schema doesn't seem to require `id` for each `item`, although Google\n    // insist to infer one, even if it's invalid. Removing `itemProp=\"item\n    // name\"` for now, since I don't know how to properly fix it.\n    // See https://github.com/facebook/docusaurus/issues/7241\n    <span className={className}>{children}</span>\n  );\n} // TODO move to design system folder\n\nfunction BreadcrumbsItem({children, active, index, addMicrodata}) {\n  return (\n    <li\n      {...(addMicrodata && {\n        itemScope: true,\n        itemProp: 'itemListElement',\n        itemType: 'https://schema.org/ListItem',\n      })}\n      className={clsx('breadcrumbs__item', {\n        'breadcrumbs__item--active': active,\n      })}>\n      {children}\n      <meta itemProp=\"position\" content={String(index + 1)} />\n    </li>\n  );\n}\n\nfunction HomeBreadcrumbItem() {\n  const homeHref = useBaseUrl('/');\n  return (\n    <li className=\"breadcrumbs__item\">\n      <Link\n        aria-label={translate({\n          id: 'theme.docs.breadcrumbs.home',\n          message: 'Home page',\n          description: 'The ARIA label for the home page in the breadcrumbs',\n        })}\n        className={clsx('breadcrumbs__link', styles.breadcrumbsItemLink)}\n        href={homeHref}>\n        <IconHome className={styles.breadcrumbHomeIcon} />\n      </Link>\n    </li>\n  );\n}\n\nexport default function DocBreadcrumbs() {\n  const breadcrumbs = useSidebarBreadcrumbs();\n  const homePageRoute = useHomePageRoute();\n\n  if (!breadcrumbs) {\n    return null;\n  }\n\n  return (\n    <nav\n      className={clsx(\n        ThemeClassNames.docs.docBreadcrumbs,\n        styles.breadcrumbsContainer,\n      )}\n      aria-label={translate({\n        id: 'theme.docs.breadcrumbs.navAriaLabel',\n        message: 'Breadcrumbs',\n        description: 'The ARIA label for the breadcrumbs',\n      })}>\n      <ul\n        className=\"breadcrumbs\"\n        itemScope\n        itemType=\"https://schema.org/BreadcrumbList\">\n        {homePageRoute && <HomeBreadcrumbItem />}\n        {breadcrumbs.map((item, idx) => {\n          const isLast = idx === breadcrumbs.length - 1;\n          return (\n            <BreadcrumbsItem\n              key={idx}\n              active={isLast}\n              index={idx}\n              addMicrodata={!!item.href}>\n              <BreadcrumbsItemLink href={item.href} isLast={isLast}>\n                {item.label}\n              </BreadcrumbsItemLink>\n            </BreadcrumbsItem>\n          );\n        })}\n      </ul>\n    </nav>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"cardContainer\":\"cardContainer_woeA\",\"cardTitle\":\"cardTitle_pNjP\",\"cardDescription\":\"cardDescription_qC_k\"};","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport Link from '@docusaurus/Link';\nimport {findFirstCategoryLink, useDocById} from '@docusaurus/theme-common';\nimport clsx from 'clsx';\nimport styles from './styles.module.css';\nimport isInternalUrl from '@docusaurus/isInternalUrl';\nimport {translate} from '@docusaurus/Translate';\n\nfunction CardContainer({href, children}) {\n  return (\n    <Link\n      href={href}\n      className={clsx('card padding--lg', styles.cardContainer)}>\n      {children}\n    </Link>\n  );\n}\n\nfunction CardLayout({href, icon, title, description}) {\n  return (\n    <CardContainer href={href}>\n      <h2 className={clsx('text--truncate', styles.cardTitle)} title={title}>\n        {icon} {title}\n      </h2>\n      {description && (\n        <p\n          className={clsx('text--truncate', styles.cardDescription)}\n          title={description}>\n          {description}\n        </p>\n      )}\n    </CardContainer>\n  );\n}\n\nfunction CardCategory({item}) {\n  const href = findFirstCategoryLink(item); // Unexpected: categories that don't have a link have been filtered upfront\n\n  if (!href) {\n    return null;\n  }\n\n  return (\n    <CardLayout\n      href={href}\n      icon=\"🗃️\"\n      title={item.label}\n      description={translate(\n        {\n          message: '{count} items',\n          id: 'theme.docs.DocCard.categoryDescription',\n          description:\n            'The default description for a category card in the generated index about how many items this category includes',\n        },\n        {\n          count: item.items.length,\n        },\n      )}\n    />\n  );\n}\n\nfunction CardLink({item}) {\n  const icon = isInternalUrl(item.href) ? '📄️' : '🔗';\n  const doc = useDocById(item.docId ?? undefined);\n  return (\n    <CardLayout\n      href={item.href}\n      icon={icon}\n      title={item.label}\n      description={doc?.description}\n    />\n  );\n}\n\nexport default function DocCard({item}) {\n  switch (item.type) {\n    case 'link':\n      return <CardLink item={item} />;\n\n    case 'category':\n      return <CardCategory item={item} />;\n\n    default:\n      throw new Error(`unknown item type ${JSON.stringify(item)}`);\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport clsx from 'clsx';\nimport DocCard from '@theme/DocCard';\nimport {findFirstCategoryLink} from '@docusaurus/theme-common';\n\n// Filter categories that don't have a link.\nfunction filterItems(items) {\n  return items.filter((item) => {\n    if (item.type === 'category') {\n      return !!findFirstCategoryLink(item);\n    }\n\n    return true;\n  });\n}\n\nexport default function DocCardList({items, className}) {\n  return (\n    <section className={clsx('row', className)}>\n      {filterItems(items).map((item, index) => (\n        <article key={index} className=\"col col--6 margin-bottom--lg\">\n          <DocCard key={index} item={item} />\n        </article>\n      ))}\n    </section>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"generatedIndexPage\":\"generatedIndexPage_vzzw\",\"list\":\"list_HAaG\",\"title\":\"title_qBh7\"};","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport {\n  PageMetadata,\n  useCurrentSidebarCategory,\n} from '@docusaurus/theme-common';\nimport DocCardList from '@theme/DocCardList';\nimport DocPaginator from '@theme/DocPaginator';\nimport DocVersionBanner from '@theme/DocVersionBanner';\nimport DocVersionBadge from '@theme/DocVersionBadge';\nimport DocBreadcrumbs from '@theme/DocBreadcrumbs';\nimport Heading from '@theme/Heading';\nimport useBaseUrl from '@docusaurus/useBaseUrl';\nimport styles from './styles.module.css';\n\nfunction DocCategoryGeneratedIndexPageMetadata({categoryGeneratedIndex}) {\n  return (\n    <PageMetadata\n      title={categoryGeneratedIndex.title}\n      description={categoryGeneratedIndex.description}\n      keywords={categoryGeneratedIndex.keywords} // TODO `require` this?\n      image={useBaseUrl(categoryGeneratedIndex.image)}\n    />\n  );\n}\n\nfunction DocCategoryGeneratedIndexPageContent({categoryGeneratedIndex}) {\n  const category = useCurrentSidebarCategory();\n  return (\n    <>\n      <PageMetadata\n        title={categoryGeneratedIndex.title}\n        description={categoryGeneratedIndex.description}\n        keywords={categoryGeneratedIndex.keywords} // TODO `require` this?\n        image={useBaseUrl(categoryGeneratedIndex.image)}\n      />\n      <div className={styles.generatedIndexPage}>\n        <DocVersionBanner />\n        <DocBreadcrumbs />\n        <DocVersionBadge />\n        <header>\n          <Heading as=\"h1\" className={styles.title}>\n            {categoryGeneratedIndex.title}\n          </Heading>\n          {categoryGeneratedIndex.description && (\n            <p>{categoryGeneratedIndex.description}</p>\n          )}\n        </header>\n        <article className=\"margin-top--lg\">\n          <DocCardList items={category.items} className={styles.list} />\n        </article>\n        <footer className=\"margin-top--lg\">\n          <DocPaginator\n            previous={categoryGeneratedIndex.navigation.previous}\n            next={categoryGeneratedIndex.navigation.next}\n          />\n        </footer>\n      </div>\n    </>\n  );\n}\n\nexport default function DocCategoryGeneratedIndexPage(props) {\n  return (\n    <>\n      <DocCategoryGeneratedIndexPageMetadata {...props} />\n      <DocCategoryGeneratedIndexPageContent {...props} />\n    </>\n  );\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport Translate, {translate} from '@docusaurus/Translate';\nimport PaginatorNavLink from '@theme/PaginatorNavLink';\nexport default function DocPaginator(props) {\n  const {previous, next} = props;\n  return (\n    <nav\n      className=\"pagination-nav docusaurus-mt-lg\"\n      aria-label={translate({\n        id: 'theme.docs.paginator.navAriaLabel',\n        message: 'Docs pages navigation',\n        description: 'The ARIA label for the docs pagination',\n      })}>\n      {previous && (\n        <PaginatorNavLink\n          {...previous}\n          subLabel={\n            <Translate\n              id=\"theme.docs.paginator.previous\"\n              description=\"The label used to navigate to the previous doc\">\n              Previous\n            </Translate>\n          }\n        />\n      )}\n      {next && (\n        <PaginatorNavLink\n          {...next}\n          subLabel={\n            <Translate\n              id=\"theme.docs.paginator.next\"\n              description=\"The label used to navigate to the next doc\">\n              Next\n            </Translate>\n          }\n          isNext\n        />\n      )}\n    </nav>\n  );\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport Translate from '@docusaurus/Translate';\nimport {ThemeClassNames, useDocsVersion} from '@docusaurus/theme-common';\nimport clsx from 'clsx';\nexport default function DocVersionBadge({className}) {\n  const versionMetadata = useDocsVersion();\n\n  if (versionMetadata.badge) {\n    return (\n      <span\n        className={clsx(\n          className,\n          ThemeClassNames.docs.docVersionBadge,\n          'badge badge--secondary',\n        )}>\n        <Translate\n          id=\"theme.docs.versionBadge.label\"\n          values={{\n            versionLabel: versionMetadata.label,\n          }}>\n          {'Version: {versionLabel}'}\n        </Translate>\n      </span>\n    );\n  }\n\n  return null;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport useDocusaurusContext from '@docusaurus/useDocusaurusContext';\nimport Link from '@docusaurus/Link';\nimport Translate from '@docusaurus/Translate';\nimport {\n  useActivePlugin,\n  useDocVersionSuggestions,\n} from '@docusaurus/plugin-content-docs/client';\nimport {\n  ThemeClassNames,\n  useDocsPreferredVersion,\n  useDocsVersion,\n} from '@docusaurus/theme-common';\nimport clsx from 'clsx';\n\nfunction UnreleasedVersionLabel({siteTitle, versionMetadata}) {\n  return (\n    <Translate\n      id=\"theme.docs.versions.unreleasedVersionLabel\"\n      description=\"The label used to tell the user that he's browsing an unreleased doc version\"\n      values={{\n        siteTitle,\n        versionLabel: <b>{versionMetadata.label}</b>,\n      }}>\n      {\n        'This is unreleased documentation for {siteTitle} {versionLabel} version.'\n      }\n    </Translate>\n  );\n}\n\nfunction UnmaintainedVersionLabel({siteTitle, versionMetadata}) {\n  return (\n    <Translate\n      id=\"theme.docs.versions.unmaintainedVersionLabel\"\n      description=\"The label used to tell the user that he's browsing an unmaintained doc version\"\n      values={{\n        siteTitle,\n        versionLabel: <b>{versionMetadata.label}</b>,\n      }}>\n      {\n        'This is documentation for {siteTitle} {versionLabel}, which is no longer actively maintained.'\n      }\n    </Translate>\n  );\n}\n\nconst BannerLabelComponents = {\n  unreleased: UnreleasedVersionLabel,\n  unmaintained: UnmaintainedVersionLabel,\n};\n\nfunction BannerLabel(props) {\n  const BannerLabelComponent =\n    BannerLabelComponents[props.versionMetadata.banner];\n  return <BannerLabelComponent {...props} />;\n}\n\nfunction LatestVersionSuggestionLabel({versionLabel, to, onClick}) {\n  return (\n    <Translate\n      id=\"theme.docs.versions.latestVersionSuggestionLabel\"\n      description=\"The label used to tell the user to check the latest version\"\n      values={{\n        versionLabel,\n        latestVersionLink: (\n          <b>\n            <Link to={to} onClick={onClick}>\n              <Translate\n                id=\"theme.docs.versions.latestVersionLinkLabel\"\n                description=\"The label used for the latest version suggestion link label\">\n                latest version\n              </Translate>\n            </Link>\n          </b>\n        ),\n      }}>\n      {\n        'For up-to-date documentation, see the {latestVersionLink} ({versionLabel}).'\n      }\n    </Translate>\n  );\n}\n\nfunction DocVersionBannerEnabled({className, versionMetadata}) {\n  const {\n    siteConfig: {title: siteTitle},\n  } = useDocusaurusContext();\n  const {pluginId} = useActivePlugin({\n    failfast: true,\n  });\n\n  const getVersionMainDoc = (version) =>\n    version.docs.find((doc) => doc.id === version.mainDocId);\n\n  const {savePreferredVersionName} = useDocsPreferredVersion(pluginId);\n  const {latestDocSuggestion, latestVersionSuggestion} =\n    useDocVersionSuggestions(pluginId); // Try to link to same doc in latest version (not always possible), falling\n  // back to main doc of latest version\n\n  const latestVersionSuggestedDoc =\n    latestDocSuggestion ?? getVersionMainDoc(latestVersionSuggestion);\n  return (\n    <div\n      className={clsx(\n        className,\n        ThemeClassNames.docs.docVersionBanner,\n        'alert alert--warning margin-bottom--md',\n      )}\n      role=\"alert\">\n      <div>\n        <BannerLabel siteTitle={siteTitle} versionMetadata={versionMetadata} />\n      </div>\n      <div className=\"margin-top--md\">\n        <LatestVersionSuggestionLabel\n          versionLabel={latestVersionSuggestion.label}\n          to={latestVersionSuggestedDoc.path}\n          onClick={() => savePreferredVersionName(latestVersionSuggestion.name)}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default function DocVersionBanner({className}) {\n  const versionMetadata = useDocsVersion();\n\n  if (versionMetadata.banner) {\n    return (\n      <DocVersionBannerEnabled\n        className={className}\n        versionMetadata={versionMetadata}\n      />\n    );\n  }\n\n  return null;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"anchorWithStickyNavbar\":\"anchorWithStickyNavbar_mojV\",\"anchorWithHideOnScrollNavbar\":\"anchorWithHideOnScrollNavbar_R0VQ\"};","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport clsx from 'clsx';\nimport {translate} from '@docusaurus/Translate';\nimport {useThemeConfig} from '@docusaurus/theme-common';\nimport styles from './styles.module.css';\nexport default function Heading({as: As, id, ...props}) {\n  const {\n    navbar: {hideOnScroll},\n  } = useThemeConfig(); // H1 headings do not need an id because they don't appear in the TOC.\n\n  if (As === 'h1' || !id) {\n    return <As {...props} id={undefined} />;\n  }\n\n  return (\n    <As\n      {...props}\n      className={clsx(\n        'anchor',\n        hideOnScroll\n          ? styles.anchorWithHideOnScrollNavbar\n          : styles.anchorWithStickyNavbar,\n      )}\n      id={id}>\n      {props.children}\n      <a\n        className=\"hash-link\"\n        href={`#${id}`}\n        title={translate({\n          id: 'theme.common.headingLinkTitle',\n          message: 'Direct link to heading',\n          description: 'Title for link to heading',\n        })}>\n        &#8203;\n      </a>\n    </As>\n  );\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport clsx from 'clsx';\nimport Link from '@docusaurus/Link';\nexport default function PaginatorNavLink(props) {\n  const {permalink, title, subLabel, isNext} = props;\n  return (\n    <Link\n      className={clsx(\n        'pagination-nav__link',\n        isNext ? 'pagination-nav__link--next' : 'pagination-nav__link--prev',\n      )}\n      to={permalink}>\n      {subLabel && <div className=\"pagination-nav__sublabel\">{subLabel}</div>}\n      <div className=\"pagination-nav__label\">{title}</div>\n    </Link>\n  );\n}\n"],"names":["IconHome","props","viewBox","d","fill","BreadcrumbsItemLink","children","href","isLast","className","itemProp","Link","BreadcrumbsItem","active","index","addMicrodata","itemScope","itemType","clsx","content","String","HomeBreadcrumbItem","homeHref","useBaseUrl","translate","id","message","description","styles","DocBreadcrumbs","breadcrumbs","useSidebarBreadcrumbs","homePageRoute","useHomePageRoute","ThemeClassNames","map","item","idx","length","key","label","CardContainer","CardLayout","icon","title","CardCategory","findFirstCategoryLink","count","items","CardLink","isInternalUrl","doc","useDocById","docId","undefined","DocCard","type","Error","JSON","stringify","DocCardList","filter","filterItems","DocCategoryGeneratedIndexPageMetadata","categoryGeneratedIndex","keywords","image","DocCategoryGeneratedIndexPageContent","category","useCurrentSidebarCategory","DocVersionBanner","DocVersionBadge","Heading","as","DocPaginator","previous","navigation","next","DocCategoryGeneratedIndexPage","subLabel","isNext","versionMetadata","useDocsVersion","badge","values","versionLabel","BannerLabelComponents","unreleased","siteTitle","unmaintained","BannerLabel","BannerLabelComponent","banner","LatestVersionSuggestionLabel","to","onClick","latestVersionLink","DocVersionBannerEnabled","siteConfig","useDocusaurusContext","pluginId","useActivePlugin","failfast","savePreferredVersionName","useDocsPreferredVersion","latestDocSuggestion","latestVersionSuggestion","useDocVersionSuggestions","latestVersionSuggestedDoc","version","docs","find","mainDocId","role","path","name","As","navbar","hideOnScroll","useThemeConfig","PaginatorNavLink","permalink"],"sourceRoot":""}