{"version":3,"file":"assets/js/e3ad1f13.79886b2e.js","mappings":"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","sources":["webpack://dockview-docs/../dockview-core/dist/esm/dnd/dataTransfer.js","webpack://dockview-docs/../dockview-core/dist/esm/events.js","webpack://dockview-docs/../dockview-core/dist/esm/lifecycle.js","webpack://dockview-docs/../dockview-core/dist/esm/dom.js","webpack://dockview-docs/../dockview-core/dist/esm/array.js","webpack://dockview-docs/../dockview-core/dist/esm/math.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/viewItem.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/splitview.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/paneview.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/leafNode.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/branchNode.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/gridview.js","webpack://dockview-docs/../dockview-core/dist/esm/api/component.api.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/dnd.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/droptarget.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/panel/content.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/types.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/abstractDragHandler.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/tab/tab.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/groupDragHandler.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/ghost.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/titlebar/voidContainer.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/titlebar/tabsContainer.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewGroupPanelModel.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/baseComponentGridview.js","webpack://dockview-docs/../dockview-core/dist/esm/api/panelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/api/splitviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/api/paneviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/basePanelView.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/paneviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/draggablePaneviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/api/gridviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/gridviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewGroupPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/api/dockviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/svg.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/tab/defaultTab.js","webpack://dockview-docs/../dockview-core/dist/esm/panel/componentFactory.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewPanelModel.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/deserializer.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/watermark/watermark.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/options.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/gridviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/splitviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/defaultPaneviewHeader.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/paneviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/splitviewPanel.js","webpack://dockview-docs/../dockview/dist/esm/react.js","webpack://dockview-docs/../dockview/dist/esm/dockview/reactContentPart.js","webpack://dockview-docs/../dockview/dist/esm/dockview/reactHeaderPart.js","webpack://dockview-docs/../dockview/dist/esm/dockview/reactWatermarkPart.js","webpack://dockview-docs/../dockview/dist/esm/dockview/groupControlsRenderer.js","webpack://dockview-docs/../dockview/dist/esm/dockview/dockview.js","webpack://dockview-docs/../dockview/dist/esm/svg.js","webpack://dockview-docs/../dockview/dist/esm/dockview/defaultTab.js","webpack://dockview-docs/../dockview/dist/esm/splitview/view.js","webpack://dockview-docs/../dockview/dist/esm/splitview/splitview.js","webpack://dockview-docs/../dockview/dist/esm/gridview/view.js","webpack://dockview-docs/../dockview/dist/esm/gridview/gridview.js","webpack://dockview-docs/../dockview/dist/esm/paneview/view.js","webpack://dockview-docs/../dockview/dist/esm/paneview/paneview.js","webpack://dockview-docs/./sandboxes/constraints-dockview/src/app.tsx","webpack://dockview-docs/./sandboxes/customheader-dockview/src/app.tsx","webpack://dockview-docs/./sandboxes/dnd-dockview/src/app.tsx","webpack://dockview-docs/./sandboxes/events-dockview/src/console.tsx","webpack://dockview-docs/./sandboxes/events-dockview/src/app.tsx","webpack://dockview-docs/./sandboxes/fullwidthtab-dockview/src/app.tsx","webpack://dockview-docs/./sandboxes/groupcontrol-dockview/src/app.tsx","webpack://dockview-docs/./sandboxes/layout-dockview/src/app.tsx","webpack://dockview-docs/./sandboxes/nativeapp-dockview/src/app.tsx","webpack://dockview-docs/./sandboxes/nested-dockview/src/app.tsx","webpack://dockview-docs/./sandboxes/rendering-dockview/src/app.tsx","webpack://dockview-docs/./sandboxes/resize-dockview/src/app.tsx","webpack://dockview-docs/./sandboxes/simple-dockview/src/app.tsx","webpack://dockview-docs/./sandboxes/updatetitle-dockview/src/app.tsx","webpack://dockview-docs/./sandboxes/watermark-dockview/src/app.tsx","webpack://dockview-docs/./src/components/ui/codeSandboxButton.tsx","webpack://dockview-docs/./src/components/ui/container.tsx","webpack://dockview-docs/./sandboxes/externaldnd-dockview/src/treeview.tsx","webpack://dockview-docs/./sandboxes/externaldnd-dockview/src/app.tsx","webpack://dockview-docs/./docs/components/dockview.mdx"],"sourcesContent":["class TransferObject {\n    constructor() {\n        //\n    }\n}\nexport class PanelTransfer extends TransferObject {\n    constructor(viewId, groupId, panelId) {\n        super();\n        this.viewId = viewId;\n        this.groupId = groupId;\n        this.panelId = panelId;\n    }\n}\nexport class PaneTransfer extends TransferObject {\n    constructor(viewId, paneId) {\n        super();\n        this.viewId = viewId;\n        this.paneId = paneId;\n    }\n}\n/**\n * A singleton to store transfer data during drag & drop operations that are only valid within the application.\n */\nexport class LocalSelectionTransfer {\n    constructor() {\n        // protect against external instantiation\n    }\n    static getInstance() {\n        return LocalSelectionTransfer.INSTANCE;\n    }\n    hasData(proto) {\n        return proto && proto === this.proto;\n    }\n    clearData(proto) {\n        if (this.hasData(proto)) {\n            this.proto = undefined;\n            this.data = undefined;\n        }\n    }\n    getData(proto) {\n        if (this.hasData(proto)) {\n            return this.data;\n        }\n        return undefined;\n    }\n    setData(data, proto) {\n        if (proto) {\n            this.data = data;\n            this.proto = proto;\n        }\n    }\n}\nLocalSelectionTransfer.INSTANCE = new LocalSelectionTransfer();\nexport function getPanelData() {\n    const panelTransfer = LocalSelectionTransfer.getInstance();\n    const isPanelEvent = panelTransfer.hasData(PanelTransfer.prototype);\n    if (!isPanelEvent) {\n        return undefined;\n    }\n    return panelTransfer.getData(PanelTransfer.prototype)[0];\n}\nexport function getPaneData() {\n    const paneTransfer = LocalSelectionTransfer.getInstance();\n    const isPanelEvent = paneTransfer.hasData(PaneTransfer.prototype);\n    if (!isPanelEvent) {\n        return undefined;\n    }\n    return paneTransfer.getData(PaneTransfer.prototype)[0];\n}\n","export var Event;\n(function (Event) {\n    Event.any = (...children) => {\n        return (listener) => {\n            const disposables = children.map((child) => child(listener));\n            return {\n                dispose: () => {\n                    disposables.forEach((d) => {\n                        d.dispose();\n                    });\n                },\n            };\n        };\n    };\n})(Event || (Event = {}));\n// dumb event emitter with better typings than nodes event emitter\n// https://github.com/microsoft/vscode/blob/master/src/vs/base/common/event.ts\nexport class Emitter {\n    constructor(options) {\n        this.options = options;\n        this._listeners = [];\n        this._disposed = false;\n    }\n    get event() {\n        if (!this._event) {\n            this._event = (listener) => {\n                var _a;\n                if (((_a = this.options) === null || _a === void 0 ? void 0 : _a.replay) && this._last !== undefined) {\n                    listener(this._last);\n                }\n                this._listeners.push(listener);\n                return {\n                    dispose: () => {\n                        const index = this._listeners.indexOf(listener);\n                        if (index > -1) {\n                            this._listeners.splice(index, 1);\n                        }\n                    },\n                };\n            };\n        }\n        return this._event;\n    }\n    fire(e) {\n        this._last = e;\n        for (const listener of this._listeners) {\n            listener(e);\n        }\n    }\n    dispose() {\n        this._listeners = [];\n        this._disposed = true;\n    }\n}\nexport function addDisposableWindowListener(element, type, listener, options) {\n    element.addEventListener(type, listener, options);\n    return {\n        dispose: () => {\n            element.removeEventListener(type, listener);\n        },\n    };\n}\nexport function addDisposableListener(element, type, listener, options) {\n    element.addEventListener(type, listener, options);\n    return {\n        dispose: () => {\n            element.removeEventListener(type, listener);\n        },\n    };\n}\nexport class TickDelayedEvent {\n    constructor() {\n        this._onFired = new Emitter();\n        this.onEvent = this._onFired.event;\n    }\n    fire() {\n        if (this.timer) {\n            clearTimeout(this.timer);\n        }\n        this.timer = setTimeout(() => {\n            this._onFired.fire();\n            clearTimeout(this.timer);\n        });\n    }\n    dispose() {\n        this._onFired.dispose();\n    }\n}\n","export var Disposable;\n(function (Disposable) {\n    Disposable.NONE = {\n        dispose: () => {\n            // noop\n        },\n    };\n})(Disposable || (Disposable = {}));\nexport class CompositeDisposable {\n    static from(...args) {\n        return new CompositeDisposable(...args);\n    }\n    constructor(...args) {\n        this.disposables = args;\n    }\n    addDisposables(...args) {\n        args.forEach((arg) => this.disposables.push(arg));\n    }\n    dispose() {\n        this.disposables.forEach((arg) => arg.dispose());\n    }\n}\nexport class MutableDisposable {\n    constructor() {\n        this._disposable = Disposable.NONE;\n    }\n    set value(disposable) {\n        if (this._disposable) {\n            this._disposable.dispose();\n        }\n        this._disposable = disposable;\n    }\n    dispose() {\n        if (this._disposable) {\n            this._disposable.dispose();\n            this._disposable = Disposable.NONE;\n        }\n    }\n}\n","import { Emitter, addDisposableListener, addDisposableWindowListener, } from './events';\nimport { CompositeDisposable } from './lifecycle';\nexport function watchElementResize(element, cb) {\n    const observer = new ResizeObserver((entires) => {\n        const firstEntry = entires[0];\n        cb(firstEntry);\n    });\n    observer.observe(element);\n    return {\n        dispose: () => {\n            observer.unobserve(element);\n            observer.disconnect();\n        },\n    };\n}\nexport const removeClasses = (element, ...classes) => {\n    for (const classname of classes) {\n        if (element.classList.contains(classname)) {\n            element.classList.remove(classname);\n        }\n    }\n};\nexport const addClasses = (element, ...classes) => {\n    for (const classname of classes) {\n        if (!element.classList.contains(classname)) {\n            element.classList.add(classname);\n        }\n    }\n};\nexport const toggleClass = (element, className, isToggled) => {\n    const hasClass = element.classList.contains(className);\n    if (isToggled && !hasClass) {\n        element.classList.add(className);\n    }\n    if (!isToggled && hasClass) {\n        element.classList.remove(className);\n    }\n};\nexport function isAncestor(testChild, testAncestor) {\n    while (testChild) {\n        if (testChild === testAncestor) {\n            return true;\n        }\n        testChild = testChild.parentNode;\n    }\n    return false;\n}\nexport function getElementsByTagName(tag) {\n    return Array.prototype.slice.call(document.getElementsByTagName(tag), 0);\n}\nexport function trackFocus(element) {\n    return new FocusTracker(element);\n}\n/**\n * Track focus on an element. Ensure tabIndex is set when an HTMLElement is not focusable by default\n */\nclass FocusTracker extends CompositeDisposable {\n    constructor(element) {\n        super();\n        this._onDidFocus = new Emitter();\n        this.onDidFocus = this._onDidFocus.event;\n        this._onDidBlur = new Emitter();\n        this.onDidBlur = this._onDidBlur.event;\n        let hasFocus = isAncestor(document.activeElement, element);\n        let loosingFocus = false;\n        const onFocus = () => {\n            loosingFocus = false;\n            if (!hasFocus) {\n                hasFocus = true;\n                this._onDidFocus.fire();\n            }\n        };\n        const onBlur = () => {\n            if (hasFocus) {\n                loosingFocus = true;\n                window.setTimeout(() => {\n                    if (loosingFocus) {\n                        loosingFocus = false;\n                        hasFocus = false;\n                        this._onDidBlur.fire();\n                    }\n                }, 0);\n            }\n        };\n        this._refreshStateHandler = () => {\n            const currentNodeHasFocus = isAncestor(document.activeElement, element);\n            if (currentNodeHasFocus !== hasFocus) {\n                if (hasFocus) {\n                    onBlur();\n                }\n                else {\n                    onFocus();\n                }\n            }\n        };\n        if (element instanceof HTMLElement) {\n            this.addDisposables(addDisposableListener(element, 'focus', onFocus, true));\n            this.addDisposables(addDisposableListener(element, 'blur', onBlur, true));\n        }\n        else {\n            this.addDisposables(addDisposableWindowListener(element, 'focus', onFocus, true));\n            this.addDisposables(addDisposableWindowListener(element, 'blur', onBlur, true));\n        }\n    }\n    refreshState() {\n        this._refreshStateHandler();\n    }\n    dispose() {\n        super.dispose();\n        this._onDidBlur.dispose();\n        this._onDidFocus.dispose();\n    }\n}\n","export function tail(arr) {\n    if (arr.length === 0) {\n        throw new Error('Invalid tail call');\n    }\n    return [arr.slice(0, arr.length - 1), arr[arr.length - 1]];\n}\nexport function last(arr) {\n    return arr.length > 0 ? arr[arr.length - 1] : undefined;\n}\nexport function sequenceEquals(arr1, arr2) {\n    if (arr1.length !== arr2.length) {\n        return false;\n    }\n    for (let i = 0; i < arr1.length; i++) {\n        if (arr1[i] !== arr2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Pushes an element to the start of the array, if found.\n */\nexport function pushToStart(arr, value) {\n    const index = arr.indexOf(value);\n    if (index > -1) {\n        arr.splice(index, 1);\n        arr.unshift(value);\n    }\n}\n/**\n * Pushes an element to the end of the array, if found.\n */\nexport function pushToEnd(arr, value) {\n    const index = arr.indexOf(value);\n    if (index > -1) {\n        arr.splice(index, 1);\n        arr.push(value);\n    }\n}\nexport function firstIndex(array, fn) {\n    for (let i = 0; i < array.length; i++) {\n        const element = array[i];\n        if (fn(element)) {\n            return i;\n        }\n    }\n    return -1;\n}\n","export const clamp = (value, min, max) => {\n    if (min > max) {\n        throw new Error(`${min} > ${max} is an invalid condition`);\n    }\n    return Math.min(max, Math.max(value, min));\n};\nexport const sequentialNumberGenerator = () => {\n    let value = 1;\n    return { next: () => (value++).toString() };\n};\nexport const range = (from, to) => {\n    const result = [];\n    if (typeof to !== 'number') {\n        to = from;\n        from = 0;\n    }\n    if (from <= to) {\n        for (let i = from; i < to; i++) {\n            result.push(i);\n        }\n    }\n    else {\n        for (let i = from; i > to; i--) {\n            result.push(i);\n        }\n    }\n    return result;\n};\n","import { clamp } from '../math';\nexport class ViewItem {\n    set size(size) {\n        this._size = size;\n    }\n    get size() {\n        return this._size;\n    }\n    get cachedVisibleSize() {\n        return this._cachedVisibleSize;\n    }\n    get visible() {\n        return typeof this._cachedVisibleSize === 'undefined';\n    }\n    get minimumSize() {\n        return this.visible ? this.view.minimumSize : 0;\n    }\n    get viewMinimumSize() {\n        return this.view.minimumSize;\n    }\n    get maximumSize() {\n        return this.visible ? this.view.maximumSize : 0;\n    }\n    get viewMaximumSize() {\n        return this.view.maximumSize;\n    }\n    get priority() {\n        return this.view.priority;\n    }\n    get snap() {\n        return !!this.view.snap;\n    }\n    set enabled(enabled) {\n        this.container.style.pointerEvents = enabled ? '' : 'none';\n    }\n    constructor(container, view, size, disposable) {\n        this.container = container;\n        this.view = view;\n        this.disposable = disposable;\n        this._cachedVisibleSize = undefined;\n        if (typeof size === 'number') {\n            this._size = size;\n            this._cachedVisibleSize = undefined;\n            container.classList.add('visible');\n        }\n        else {\n            this._size = 0;\n            this._cachedVisibleSize = size.cachedVisibleSize;\n        }\n    }\n    setVisible(visible, size) {\n        var _a;\n        if (visible === this.visible) {\n            return;\n        }\n        if (visible) {\n            this.size = clamp((_a = this._cachedVisibleSize) !== null && _a !== void 0 ? _a : 0, this.viewMinimumSize, this.viewMaximumSize);\n            this._cachedVisibleSize = undefined;\n        }\n        else {\n            this._cachedVisibleSize =\n                typeof size === 'number' ? size : this.size;\n            this.size = 0;\n        }\n        this.container.classList.toggle('visible', visible);\n        if (this.view.setVisible) {\n            this.view.setVisible(visible);\n        }\n    }\n    dispose() {\n        this.disposable.dispose();\n        return this.view;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/splitview\n *--------------------------------------------------------------------------------------------*/\nimport { removeClasses, addClasses, toggleClass, getElementsByTagName, } from '../dom';\nimport { Emitter } from '../events';\nimport { pushToStart, pushToEnd, firstIndex } from '../array';\nimport { range, clamp } from '../math';\nimport { ViewItem } from './viewItem';\nexport var Orientation;\n(function (Orientation) {\n    Orientation[\"HORIZONTAL\"] = \"HORIZONTAL\";\n    Orientation[\"VERTICAL\"] = \"VERTICAL\";\n})(Orientation || (Orientation = {}));\nexport var SashState;\n(function (SashState) {\n    SashState[SashState[\"MAXIMUM\"] = 0] = \"MAXIMUM\";\n    SashState[SashState[\"MINIMUM\"] = 1] = \"MINIMUM\";\n    SashState[SashState[\"DISABLED\"] = 2] = \"DISABLED\";\n    SashState[SashState[\"ENABLED\"] = 3] = \"ENABLED\";\n})(SashState || (SashState = {}));\nexport var LayoutPriority;\n(function (LayoutPriority) {\n    LayoutPriority[\"Low\"] = \"low\";\n    LayoutPriority[\"High\"] = \"high\";\n    LayoutPriority[\"Normal\"] = \"normal\";\n})(LayoutPriority || (LayoutPriority = {}));\nexport var Sizing;\n(function (Sizing) {\n    Sizing.Distribute = { type: 'distribute' };\n    function Split(index) {\n        return { type: 'split', index };\n    }\n    Sizing.Split = Split;\n    function Invisible(cachedVisibleSize) {\n        return { type: 'invisible', cachedVisibleSize };\n    }\n    Sizing.Invisible = Invisible;\n})(Sizing || (Sizing = {}));\nexport class Splitview {\n    get size() {\n        return this._size;\n    }\n    set size(value) {\n        this._size = value;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    set orthogonalSize(value) {\n        this._orthogonalSize = value;\n    }\n    get length() {\n        return this.views.length;\n    }\n    get proportions() {\n        return this._proportions ? [...this._proportions] : undefined;\n    }\n    get orientation() {\n        return this._orientation;\n    }\n    set orientation(value) {\n        this._orientation = value;\n        const tmp = this.size;\n        this.size = this.orthogonalSize;\n        this.orthogonalSize = tmp;\n        removeClasses(this.element, 'horizontal', 'vertical');\n        this.element.classList.add(this.orientation == Orientation.HORIZONTAL\n            ? 'horizontal'\n            : 'vertical');\n    }\n    get minimumSize() {\n        return this.views.reduce((r, item) => r + item.minimumSize, 0);\n    }\n    get maximumSize() {\n        return this.length === 0\n            ? Number.POSITIVE_INFINITY\n            : this.views.reduce((r, item) => r + item.maximumSize, 0);\n    }\n    get startSnappingEnabled() {\n        return this._startSnappingEnabled;\n    }\n    set startSnappingEnabled(startSnappingEnabled) {\n        if (this._startSnappingEnabled === startSnappingEnabled) {\n            return;\n        }\n        this._startSnappingEnabled = startSnappingEnabled;\n        this.updateSashEnablement();\n    }\n    get endSnappingEnabled() {\n        return this._endSnappingEnabled;\n    }\n    set endSnappingEnabled(endSnappingEnabled) {\n        if (this._endSnappingEnabled === endSnappingEnabled) {\n            return;\n        }\n        this._endSnappingEnabled = endSnappingEnabled;\n        this.updateSashEnablement();\n    }\n    constructor(container, options) {\n        this.container = container;\n        this.views = [];\n        this.sashes = [];\n        this._size = 0;\n        this._orthogonalSize = 0;\n        this.contentSize = 0;\n        this._proportions = undefined;\n        this._startSnappingEnabled = true;\n        this._endSnappingEnabled = true;\n        this._onDidSashEnd = new Emitter();\n        this.onDidSashEnd = this._onDidSashEnd.event;\n        this._onDidAddView = new Emitter();\n        this.onDidAddView = this._onDidAddView.event;\n        this._onDidRemoveView = new Emitter();\n        this.onDidRemoveView = this._onDidRemoveView.event;\n        this.resize = (index, delta, sizes = this.views.map((x) => x.size), lowPriorityIndexes, highPriorityIndexes, overloadMinDelta = Number.NEGATIVE_INFINITY, overloadMaxDelta = Number.POSITIVE_INFINITY, snapBefore, snapAfter) => {\n            if (index < 0 || index > this.views.length) {\n                return 0;\n            }\n            const upIndexes = range(index, -1);\n            const downIndexes = range(index + 1, this.views.length);\n            //\n            if (highPriorityIndexes) {\n                for (const i of highPriorityIndexes) {\n                    pushToStart(upIndexes, i);\n                    pushToStart(downIndexes, i);\n                }\n            }\n            if (lowPriorityIndexes) {\n                for (const i of lowPriorityIndexes) {\n                    pushToEnd(upIndexes, i);\n                    pushToEnd(downIndexes, i);\n                }\n            }\n            //\n            const upItems = upIndexes.map((i) => this.views[i]);\n            const upSizes = upIndexes.map((i) => sizes[i]);\n            //\n            const downItems = downIndexes.map((i) => this.views[i]);\n            const downSizes = downIndexes.map((i) => sizes[i]);\n            //\n            const minDeltaUp = upIndexes.reduce((_, i) => _ + this.views[i].minimumSize - sizes[i], 0);\n            const maxDeltaUp = upIndexes.reduce((_, i) => _ + this.views[i].maximumSize - sizes[i], 0);\n            //\n            const maxDeltaDown = downIndexes.length === 0\n                ? Number.POSITIVE_INFINITY\n                : downIndexes.reduce((_, i) => _ + sizes[i] - this.views[i].minimumSize, 0);\n            const minDeltaDown = downIndexes.length === 0\n                ? Number.NEGATIVE_INFINITY\n                : downIndexes.reduce((_, i) => _ + sizes[i] - this.views[i].maximumSize, 0);\n            //\n            const minDelta = Math.max(minDeltaUp, minDeltaDown);\n            const maxDelta = Math.min(maxDeltaDown, maxDeltaUp);\n            //\n            let snapped = false;\n            if (snapBefore) {\n                const snapView = this.views[snapBefore.index];\n                const visible = delta >= snapBefore.limitDelta;\n                snapped = visible !== snapView.visible;\n                snapView.setVisible(visible, snapBefore.size);\n            }\n            if (!snapped && snapAfter) {\n                const snapView = this.views[snapAfter.index];\n                const visible = delta < snapAfter.limitDelta;\n                snapped = visible !== snapView.visible;\n                snapView.setVisible(visible, snapAfter.size);\n            }\n            if (snapped) {\n                return this.resize(index, delta, sizes, lowPriorityIndexes, highPriorityIndexes, overloadMinDelta, overloadMaxDelta);\n            }\n            //\n            const tentativeDelta = clamp(delta, minDelta, maxDelta);\n            let actualDelta = 0;\n            //\n            let deltaUp = tentativeDelta;\n            for (let i = 0; i < upItems.length; i++) {\n                const item = upItems[i];\n                const size = clamp(upSizes[i] + deltaUp, item.minimumSize, item.maximumSize);\n                const viewDelta = size - upSizes[i];\n                actualDelta += viewDelta;\n                deltaUp -= viewDelta;\n                item.size = size;\n            }\n            //\n            let deltaDown = actualDelta;\n            for (let i = 0; i < downItems.length; i++) {\n                const item = downItems[i];\n                const size = clamp(downSizes[i] - deltaDown, item.minimumSize, item.maximumSize);\n                const viewDelta = size - downSizes[i];\n                deltaDown += viewDelta;\n                item.size = size;\n            }\n            //\n            return delta;\n        };\n        this._orientation = options.orientation;\n        this.element = this.createContainer();\n        this.proportionalLayout =\n            options.proportionalLayout === undefined\n                ? true\n                : !!options.proportionalLayout;\n        this.viewContainer = this.createViewContainer();\n        this.sashContainer = this.createSashContainer();\n        this.element.appendChild(this.sashContainer);\n        this.element.appendChild(this.viewContainer);\n        this.container.appendChild(this.element);\n        this.style(options.styles);\n        // We have an existing set of view, add them now\n        if (options.descriptor) {\n            this._size = options.descriptor.size;\n            options.descriptor.views.forEach((viewDescriptor, index) => {\n                const sizing = viewDescriptor.visible === undefined ||\n                    viewDescriptor.visible\n                    ? viewDescriptor.size\n                    : {\n                        type: 'invisible',\n                        cachedVisibleSize: viewDescriptor.size,\n                    };\n                const view = viewDescriptor.view;\n                this.addView(view, sizing, index, true\n                // true skip layout\n                );\n            });\n            // Initialize content size and proportions for first layout\n            this.contentSize = this.views.reduce((r, i) => r + i.size, 0);\n            this.saveProportions();\n        }\n    }\n    style(styles) {\n        if ((styles === null || styles === void 0 ? void 0 : styles.separatorBorder) === 'transparent') {\n            removeClasses(this.element, 'separator-border');\n            this.element.style.removeProperty('--dv-separator-border');\n        }\n        else {\n            addClasses(this.element, 'separator-border');\n            if (styles === null || styles === void 0 ? void 0 : styles.separatorBorder) {\n                this.element.style.setProperty('--dv-separator-border', styles.separatorBorder);\n            }\n        }\n    }\n    isViewVisible(index) {\n        if (index < 0 || index >= this.views.length) {\n            throw new Error('Index out of bounds');\n        }\n        const viewItem = this.views[index];\n        return viewItem.visible;\n    }\n    setViewVisible(index, visible) {\n        if (index < 0 || index >= this.views.length) {\n            throw new Error('Index out of bounds');\n        }\n        toggleClass(this.container, 'visible', visible);\n        const viewItem = this.views[index];\n        toggleClass(this.container, 'visible', visible);\n        viewItem.setVisible(visible, viewItem.size);\n        this.distributeEmptySpace(index);\n        this.layoutViews();\n        this.saveProportions();\n    }\n    getViewSize(index) {\n        if (index < 0 || index >= this.views.length) {\n            return -1;\n        }\n        return this.views[index].size;\n    }\n    resizeView(index, size) {\n        if (index < 0 || index >= this.views.length) {\n            return;\n        }\n        const indexes = range(this.views.length).filter((i) => i !== index);\n        const lowPriorityIndexes = [\n            ...indexes.filter((i) => this.views[i].priority === LayoutPriority.Low),\n            index,\n        ];\n        const highPriorityIndexes = indexes.filter((i) => this.views[i].priority === LayoutPriority.High);\n        const item = this.views[index];\n        size = Math.round(size);\n        size = clamp(size, item.minimumSize, Math.min(item.maximumSize, this._size));\n        item.size = size;\n        this.relayout(lowPriorityIndexes, highPriorityIndexes);\n    }\n    getViews() {\n        return this.views.map((x) => x.view);\n    }\n    onDidChange(item, size) {\n        const index = this.views.indexOf(item);\n        if (index < 0 || index >= this.views.length) {\n            return;\n        }\n        size = typeof size === 'number' ? size : item.size;\n        size = clamp(size, item.minimumSize, item.maximumSize);\n        item.size = size;\n        this.relayout([index]);\n    }\n    addView(view, size = { type: 'distribute' }, index = this.views.length, skipLayout) {\n        const container = document.createElement('div');\n        container.className = 'view';\n        container.appendChild(view.element);\n        let viewSize;\n        if (typeof size === 'number') {\n            viewSize = size;\n        }\n        else if (size.type === 'split') {\n            viewSize = this.getViewSize(size.index) / 2;\n        }\n        else if (size.type === 'invisible') {\n            viewSize = { cachedVisibleSize: size.cachedVisibleSize };\n        }\n        else {\n            viewSize = view.minimumSize;\n        }\n        const disposable = view.onDidChange((newSize) => this.onDidChange(viewItem, newSize.size));\n        const dispose = () => {\n            disposable === null || disposable === void 0 ? void 0 : disposable.dispose();\n            this.viewContainer.removeChild(container);\n        };\n        const viewItem = new ViewItem(container, view, viewSize, { dispose });\n        if (index === this.views.length) {\n            this.viewContainer.appendChild(container);\n        }\n        else {\n            this.viewContainer.insertBefore(container, this.viewContainer.children.item(index));\n        }\n        this.views.splice(index, 0, viewItem);\n        if (this.views.length > 1) {\n            //add sash\n            const sash = document.createElement('div');\n            sash.className = 'sash';\n            const onStart = (event) => {\n                for (const item of this.views) {\n                    item.enabled = false;\n                }\n                const iframes = [\n                    ...getElementsByTagName('iframe'),\n                    ...getElementsByTagName('webview'),\n                ];\n                for (const iframe of iframes) {\n                    iframe.style.pointerEvents = 'none';\n                }\n                const start = this._orientation === Orientation.HORIZONTAL\n                    ? event.clientX\n                    : event.clientY;\n                const sashIndex = firstIndex(this.sashes, (s) => s.container === sash);\n                //\n                const sizes = this.views.map((x) => x.size);\n                //\n                let snapBefore;\n                let snapAfter;\n                const upIndexes = range(sashIndex, -1);\n                const downIndexes = range(sashIndex + 1, this.views.length);\n                const minDeltaUp = upIndexes.reduce((r, i) => r + (this.views[i].minimumSize - sizes[i]), 0);\n                const maxDeltaUp = upIndexes.reduce((r, i) => r + (this.views[i].viewMaximumSize - sizes[i]), 0);\n                const maxDeltaDown = downIndexes.length === 0\n                    ? Number.POSITIVE_INFINITY\n                    : downIndexes.reduce((r, i) => r + (sizes[i] - this.views[i].minimumSize), 0);\n                const minDeltaDown = downIndexes.length === 0\n                    ? Number.NEGATIVE_INFINITY\n                    : downIndexes.reduce((r, i) => r +\n                        (sizes[i] - this.views[i].viewMaximumSize), 0);\n                const minDelta = Math.max(minDeltaUp, minDeltaDown);\n                const maxDelta = Math.min(maxDeltaDown, maxDeltaUp);\n                const snapBeforeIndex = this.findFirstSnapIndex(upIndexes);\n                const snapAfterIndex = this.findFirstSnapIndex(downIndexes);\n                if (typeof snapBeforeIndex === 'number') {\n                    const snappedViewItem = this.views[snapBeforeIndex];\n                    const halfSize = Math.floor(snappedViewItem.viewMinimumSize / 2);\n                    snapBefore = {\n                        index: snapBeforeIndex,\n                        limitDelta: snappedViewItem.visible\n                            ? minDelta - halfSize\n                            : minDelta + halfSize,\n                        size: snappedViewItem.size,\n                    };\n                }\n                if (typeof snapAfterIndex === 'number') {\n                    const snappedViewItem = this.views[snapAfterIndex];\n                    const halfSize = Math.floor(snappedViewItem.viewMinimumSize / 2);\n                    snapAfter = {\n                        index: snapAfterIndex,\n                        limitDelta: snappedViewItem.visible\n                            ? maxDelta + halfSize\n                            : maxDelta - halfSize,\n                        size: snappedViewItem.size,\n                    };\n                }\n                //\n                const mousemove = (mousemoveEvent) => {\n                    const current = this._orientation === Orientation.HORIZONTAL\n                        ? mousemoveEvent.clientX\n                        : mousemoveEvent.clientY;\n                    const delta = current - start;\n                    this.resize(sashIndex, delta, sizes, undefined, undefined, minDelta, maxDelta, snapBefore, snapAfter);\n                    this.distributeEmptySpace();\n                    this.layoutViews();\n                };\n                const end = () => {\n                    for (const item of this.views) {\n                        item.enabled = true;\n                    }\n                    for (const iframe of iframes) {\n                        iframe.style.pointerEvents = 'auto';\n                    }\n                    this.saveProportions();\n                    document.removeEventListener('mousemove', mousemove);\n                    document.removeEventListener('mouseup', end);\n                    document.removeEventListener('mouseend', end);\n                    this._onDidSashEnd.fire(undefined);\n                };\n                document.addEventListener('mousemove', mousemove);\n                document.addEventListener('mouseup', end);\n                document.addEventListener('mouseend', end);\n            };\n            sash.addEventListener('mousedown', onStart);\n            const sashItem = {\n                container: sash,\n                disposable: () => {\n                    sash.removeEventListener('mousedown', onStart);\n                    this.sashContainer.removeChild(sash);\n                },\n            };\n            this.sashContainer.appendChild(sash);\n            this.sashes.push(sashItem);\n        }\n        if (!skipLayout) {\n            this.relayout([index]);\n        }\n        if (!skipLayout &&\n            typeof size !== 'number' &&\n            size.type === 'distribute') {\n            this.distributeViewSizes();\n        }\n        this._onDidAddView.fire(view);\n    }\n    distributeViewSizes() {\n        const flexibleViewItems = [];\n        let flexibleSize = 0;\n        for (const item of this.views) {\n            if (item.maximumSize - item.minimumSize > 0) {\n                flexibleViewItems.push(item);\n                flexibleSize += item.size;\n            }\n        }\n        const size = Math.floor(flexibleSize / flexibleViewItems.length);\n        for (const item of flexibleViewItems) {\n            item.size = clamp(size, item.minimumSize, item.maximumSize);\n        }\n        const indexes = range(this.views.length);\n        const lowPriorityIndexes = indexes.filter((i) => this.views[i].priority === LayoutPriority.Low);\n        const highPriorityIndexes = indexes.filter((i) => this.views[i].priority === LayoutPriority.High);\n        this.relayout(lowPriorityIndexes, highPriorityIndexes);\n    }\n    removeView(index, sizing, skipLayout = false) {\n        // Remove view\n        const viewItem = this.views.splice(index, 1)[0];\n        viewItem.dispose();\n        // Remove sash\n        if (this.views.length >= 1) {\n            const sashIndex = Math.max(index - 1, 0);\n            const sashItem = this.sashes.splice(sashIndex, 1)[0];\n            sashItem.disposable();\n        }\n        if (!skipLayout) {\n            this.relayout();\n        }\n        if (sizing && sizing.type === 'distribute') {\n            this.distributeViewSizes();\n        }\n        this._onDidRemoveView.fire(viewItem.view);\n        return viewItem.view;\n    }\n    getViewCachedVisibleSize(index) {\n        if (index < 0 || index >= this.views.length) {\n            throw new Error('Index out of bounds');\n        }\n        const viewItem = this.views[index];\n        return viewItem.cachedVisibleSize;\n    }\n    moveView(from, to) {\n        const cachedVisibleSize = this.getViewCachedVisibleSize(from);\n        const sizing = typeof cachedVisibleSize === 'undefined'\n            ? this.getViewSize(from)\n            : Sizing.Invisible(cachedVisibleSize);\n        const view = this.removeView(from, undefined, true);\n        this.addView(view, sizing, to);\n    }\n    layout(size, orthogonalSize) {\n        const previousSize = Math.max(this.size, this.contentSize);\n        this.size = size;\n        this.orthogonalSize = orthogonalSize;\n        if (!this.proportions) {\n            const indexes = range(this.views.length);\n            const lowPriorityIndexes = indexes.filter((i) => this.views[i].priority === LayoutPriority.Low);\n            const highPriorityIndexes = indexes.filter((i) => this.views[i].priority === LayoutPriority.High);\n            this.resize(this.views.length - 1, size - previousSize, undefined, lowPriorityIndexes, highPriorityIndexes);\n        }\n        else {\n            for (let i = 0; i < this.views.length; i++) {\n                const item = this.views[i];\n                item.size = clamp(Math.round(this.proportions[i] * size), item.minimumSize, item.maximumSize);\n            }\n        }\n        this.distributeEmptySpace();\n        this.layoutViews();\n    }\n    relayout(lowPriorityIndexes, highPriorityIndexes) {\n        const contentSize = this.views.reduce((r, i) => r + i.size, 0);\n        this.resize(this.views.length - 1, this._size - contentSize, undefined, lowPriorityIndexes, highPriorityIndexes);\n        this.distributeEmptySpace();\n        this.layoutViews();\n        this.saveProportions();\n    }\n    distributeEmptySpace(lowPriorityIndex) {\n        const contentSize = this.views.reduce((r, i) => r + i.size, 0);\n        let emptyDelta = this.size - contentSize;\n        const indexes = range(this.views.length - 1, -1);\n        const lowPriorityIndexes = indexes.filter((i) => this.views[i].priority === LayoutPriority.Low);\n        const highPriorityIndexes = indexes.filter((i) => this.views[i].priority === LayoutPriority.High);\n        for (const index of highPriorityIndexes) {\n            pushToStart(indexes, index);\n        }\n        for (const index of lowPriorityIndexes) {\n            pushToEnd(indexes, index);\n        }\n        if (typeof lowPriorityIndex === 'number') {\n            pushToEnd(indexes, lowPriorityIndex);\n        }\n        for (let i = 0; emptyDelta !== 0 && i < indexes.length; i++) {\n            const item = this.views[indexes[i]];\n            const size = clamp(item.size + emptyDelta, item.minimumSize, item.maximumSize);\n            const viewDelta = size - item.size;\n            emptyDelta -= viewDelta;\n            item.size = size;\n        }\n    }\n    saveProportions() {\n        if (this.proportionalLayout && this.contentSize > 0) {\n            this._proportions = this.views.map((i) => i.size / this.contentSize);\n        }\n    }\n    layoutViews() {\n        this.contentSize = this.views.reduce((r, i) => r + i.size, 0);\n        let sum = 0;\n        const x = [];\n        this.updateSashEnablement();\n        for (let i = 0; i < this.views.length - 1; i++) {\n            sum += this.views[i].size;\n            x.push(sum);\n            const offset = Math.min(Math.max(0, sum - 2), this.size - 4);\n            if (this._orientation === Orientation.HORIZONTAL) {\n                this.sashes[i].container.style.left = `${offset}px`;\n                this.sashes[i].container.style.top = `0px`;\n            }\n            if (this._orientation === Orientation.VERTICAL) {\n                this.sashes[i].container.style.left = `0px`;\n                this.sashes[i].container.style.top = `${offset}px`;\n            }\n        }\n        this.views.forEach((view, i) => {\n            if (this._orientation === Orientation.HORIZONTAL) {\n                view.container.style.width = `${view.size}px`;\n                view.container.style.left = i == 0 ? '0px' : `${x[i - 1]}px`;\n                view.container.style.top = '';\n                view.container.style.height = '';\n            }\n            if (this._orientation === Orientation.VERTICAL) {\n                view.container.style.height = `${view.size}px`;\n                view.container.style.top = i == 0 ? '0px' : `${x[i - 1]}px`;\n                view.container.style.width = '';\n                view.container.style.left = '';\n            }\n            view.view.layout(view.size, this._orthogonalSize);\n        });\n    }\n    findFirstSnapIndex(indexes) {\n        // visible views first\n        for (const index of indexes) {\n            const viewItem = this.views[index];\n            if (!viewItem.visible) {\n                continue;\n            }\n            if (viewItem.snap) {\n                return index;\n            }\n        }\n        // then, hidden views\n        for (const index of indexes) {\n            const viewItem = this.views[index];\n            if (viewItem.visible &&\n                viewItem.maximumSize - viewItem.minimumSize > 0) {\n                return undefined;\n            }\n            if (!viewItem.visible && viewItem.snap) {\n                return index;\n            }\n        }\n        return undefined;\n    }\n    updateSashEnablement() {\n        let previous = false;\n        const collapsesDown = this.views.map((i) => (previous = i.size - i.minimumSize > 0 || previous));\n        previous = false;\n        const expandsDown = this.views.map((i) => (previous = i.maximumSize - i.size > 0 || previous));\n        const reverseViews = [...this.views].reverse();\n        previous = false;\n        const collapsesUp = reverseViews\n            .map((i) => (previous = i.size - i.minimumSize > 0 || previous))\n            .reverse();\n        previous = false;\n        const expandsUp = reverseViews\n            .map((i) => (previous = i.maximumSize - i.size > 0 || previous))\n            .reverse();\n        let position = 0;\n        for (let index = 0; index < this.sashes.length; index++) {\n            const sash = this.sashes[index];\n            const viewItem = this.views[index];\n            position += viewItem.size;\n            const min = !(collapsesDown[index] && expandsUp[index + 1]);\n            const max = !(expandsDown[index] && collapsesUp[index + 1]);\n            if (min && max) {\n                const upIndexes = range(index, -1);\n                const downIndexes = range(index + 1, this.views.length);\n                const snapBeforeIndex = this.findFirstSnapIndex(upIndexes);\n                const snapAfterIndex = this.findFirstSnapIndex(downIndexes);\n                const snappedBefore = typeof snapBeforeIndex === 'number' &&\n                    !this.views[snapBeforeIndex].visible;\n                const snappedAfter = typeof snapAfterIndex === 'number' &&\n                    !this.views[snapAfterIndex].visible;\n                if (snappedBefore &&\n                    collapsesUp[index] &&\n                    (position > 0 || this.startSnappingEnabled)) {\n                    this.updateSash(sash, SashState.MINIMUM);\n                }\n                else if (snappedAfter &&\n                    collapsesDown[index] &&\n                    (position < this.contentSize || this.endSnappingEnabled)) {\n                    this.updateSash(sash, SashState.MAXIMUM);\n                }\n                else {\n                    this.updateSash(sash, SashState.DISABLED);\n                }\n            }\n            else if (min && !max) {\n                this.updateSash(sash, SashState.MINIMUM);\n            }\n            else if (!min && max) {\n                this.updateSash(sash, SashState.MAXIMUM);\n            }\n            else {\n                this.updateSash(sash, SashState.ENABLED);\n            }\n        }\n    }\n    updateSash(sash, state) {\n        toggleClass(sash.container, 'disabled', state === SashState.DISABLED);\n        toggleClass(sash.container, 'enabled', state === SashState.ENABLED);\n        toggleClass(sash.container, 'maximum', state === SashState.MAXIMUM);\n        toggleClass(sash.container, 'minimum', state === SashState.MINIMUM);\n    }\n    createViewContainer() {\n        const element = document.createElement('div');\n        element.className = 'view-container';\n        return element;\n    }\n    createSashContainer() {\n        const element = document.createElement('div');\n        element.className = 'sash-container';\n        return element;\n    }\n    createContainer() {\n        const element = document.createElement('div');\n        const orientationClassname = this._orientation === Orientation.HORIZONTAL\n            ? 'horizontal'\n            : 'vertical';\n        element.className = `split-view-container ${orientationClassname}`;\n        return element;\n    }\n    dispose() {\n        this._onDidSashEnd.dispose();\n        this._onDidAddView.dispose();\n        this._onDidRemoveView.dispose();\n        for (let i = 0; i < this.element.children.length; i++) {\n            if (this.element.children.item(i) === this.element) {\n                this.element.removeChild(this.element);\n                break;\n            }\n        }\n        this.element.remove();\n    }\n}\n","import { Splitview, Orientation, } from '../splitview/splitview';\nimport { CompositeDisposable } from '../lifecycle';\nimport { Emitter } from '../events';\nimport { addClasses, removeClasses } from '../dom';\nexport class Paneview extends CompositeDisposable {\n    get onDidAddView() {\n        return this.splitview.onDidAddView;\n    }\n    get onDidRemoveView() {\n        return this.splitview.onDidRemoveView;\n    }\n    get minimumSize() {\n        return this.splitview.minimumSize;\n    }\n    get maximumSize() {\n        return this.splitview.maximumSize;\n    }\n    get orientation() {\n        return this.splitview.orientation;\n    }\n    get size() {\n        return this.splitview.size;\n    }\n    get orthogonalSize() {\n        return this.splitview.orthogonalSize;\n    }\n    constructor(container, options) {\n        var _a;\n        super();\n        this.paneItems = [];\n        this.skipAnimation = false;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._orientation = (_a = options.orientation) !== null && _a !== void 0 ? _a : Orientation.VERTICAL;\n        this.element = document.createElement('div');\n        this.element.className = 'pane-container';\n        container.appendChild(this.element);\n        this.splitview = new Splitview(this.element, {\n            orientation: this._orientation,\n            proportionalLayout: false,\n            descriptor: options.descriptor,\n        });\n        // if we've added views from the descriptor we need to\n        // add the panes to our Pane array and setup animation\n        this.getPanes().forEach((pane) => {\n            const disposable = new CompositeDisposable(pane.onDidChangeExpansionState(() => {\n                this.setupAnimation();\n                this._onDidChange.fire(undefined);\n            }));\n            const paneItem = {\n                pane,\n                disposable: {\n                    dispose: () => {\n                        disposable.dispose();\n                    },\n                },\n            };\n            this.paneItems.push(paneItem);\n            pane.orthogonalSize = this.splitview.orthogonalSize;\n        });\n        this.addDisposables(this._onDidChange, this.splitview.onDidSashEnd(() => {\n            this._onDidChange.fire(undefined);\n        }), this.splitview.onDidAddView(() => {\n            this._onDidChange.fire();\n        }), this.splitview.onDidRemoveView(() => {\n            this._onDidChange.fire();\n        }));\n    }\n    addPane(pane, size, index = this.splitview.length, skipLayout = false) {\n        const disposable = pane.onDidChangeExpansionState(() => {\n            this.setupAnimation();\n            this._onDidChange.fire(undefined);\n        });\n        const paneItem = {\n            pane,\n            disposable: {\n                dispose: () => {\n                    disposable.dispose();\n                },\n            },\n        };\n        this.paneItems.splice(index, 0, paneItem);\n        pane.orthogonalSize = this.splitview.orthogonalSize;\n        this.splitview.addView(pane, size, index, skipLayout);\n    }\n    getViewSize(index) {\n        return this.splitview.getViewSize(index);\n    }\n    getPanes() {\n        return this.splitview.getViews();\n    }\n    removePane(index, options = { skipDispose: false }) {\n        const paneItem = this.paneItems.splice(index, 1)[0];\n        this.splitview.removeView(index);\n        if (!options.skipDispose) {\n            paneItem.disposable.dispose();\n            paneItem.pane.dispose();\n        }\n        return paneItem;\n    }\n    moveView(from, to) {\n        if (from === to) {\n            return;\n        }\n        const view = this.removePane(from, { skipDispose: true });\n        this.skipAnimation = true;\n        try {\n            this.addPane(view.pane, view.pane.size, to, false);\n        }\n        finally {\n            this.skipAnimation = false;\n        }\n    }\n    layout(size, orthogonalSize) {\n        this.splitview.layout(size, orthogonalSize);\n    }\n    setupAnimation() {\n        if (this.skipAnimation) {\n            return;\n        }\n        if (this.animationTimer) {\n            clearTimeout(this.animationTimer);\n            this.animationTimer = undefined;\n        }\n        addClasses(this.element, 'animated');\n        this.animationTimer = setTimeout(() => {\n            this.animationTimer = undefined;\n            removeClasses(this.element, 'animated');\n        }, 200);\n    }\n    dispose() {\n        super.dispose();\n        if (this.animationTimer) {\n            clearTimeout(this.animationTimer);\n            this.animationTimer = undefined;\n        }\n        this.paneItems.forEach((paneItem) => {\n            paneItem.disposable.dispose();\n            paneItem.pane.dispose();\n        });\n        this.paneItems = [];\n        this.splitview.dispose();\n        this.element.remove();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/grid\n *--------------------------------------------------------------------------------------------*/\nimport { Orientation } from '../splitview/splitview';\nimport { Emitter } from '../events';\nexport class LeafNode {\n    get minimumWidth() {\n        return this.view.minimumWidth;\n    }\n    get maximumWidth() {\n        return this.view.maximumWidth;\n    }\n    get minimumHeight() {\n        return this.view.minimumHeight;\n    }\n    get maximumHeight() {\n        return this.view.maximumHeight;\n    }\n    get priority() {\n        return this.view.priority;\n    }\n    get snap() {\n        return this.view.snap;\n    }\n    get minimumSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumHeight\n            : this.minimumWidth;\n    }\n    get maximumSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumHeight\n            : this.maximumWidth;\n    }\n    get minimumOrthogonalSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumWidth\n            : this.minimumHeight;\n    }\n    get maximumOrthogonalSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumWidth\n            : this.maximumHeight;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    get size() {\n        return this._size;\n    }\n    get element() {\n        return this.view.element;\n    }\n    get width() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.orthogonalSize\n            : this.size;\n    }\n    get height() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.size\n            : this.orthogonalSize;\n    }\n    constructor(view, orientation, orthogonalSize, size = 0) {\n        this.view = view;\n        this.orientation = orientation;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._orthogonalSize = orthogonalSize;\n        this._size = size;\n        this._disposable = this.view.onDidChange((event) => {\n            if (event) {\n                this._onDidChange.fire({\n                    size: this.orientation === Orientation.VERTICAL\n                        ? event.width\n                        : event.height,\n                    orthogonalSize: this.orientation === Orientation.VERTICAL\n                        ? event.height\n                        : event.width,\n                });\n            }\n            else {\n                this._onDidChange.fire({});\n            }\n        });\n    }\n    setVisible(visible) {\n        if (this.view.setVisible) {\n            this.view.setVisible(visible);\n            this._onDidChange.fire({});\n        }\n    }\n    layout(size, orthogonalSize) {\n        this._size = size;\n        this._orthogonalSize = orthogonalSize;\n        this.view.layout(this.width, this.height);\n    }\n    dispose() {\n        this._onDidChange.dispose();\n        this._disposable.dispose();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/grid\n *--------------------------------------------------------------------------------------------*/\nimport { Splitview, Orientation, LayoutPriority, } from '../splitview/splitview';\nimport { Emitter, Event } from '../events';\nimport { LeafNode } from './leafNode';\nimport { CompositeDisposable, Disposable } from '../lifecycle';\nexport class BranchNode extends CompositeDisposable {\n    get width() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.size\n            : this.orthogonalSize;\n    }\n    get height() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.orthogonalSize\n            : this.size;\n    }\n    get minimumSize() {\n        return this.children.length === 0\n            ? 0\n            : Math.max(...this.children.map((c) => c.minimumOrthogonalSize));\n    }\n    get maximumSize() {\n        return Math.min(...this.children.map((c) => c.maximumOrthogonalSize));\n    }\n    get minimumOrthogonalSize() {\n        return this.splitview.minimumSize;\n    }\n    get maximumOrthogonalSize() {\n        return this.splitview.maximumSize;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    get size() {\n        return this._size;\n    }\n    get minimumWidth() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumOrthogonalSize\n            : this.minimumSize;\n    }\n    get minimumHeight() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumSize\n            : this.minimumOrthogonalSize;\n    }\n    get maximumWidth() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumOrthogonalSize\n            : this.maximumSize;\n    }\n    get maximumHeight() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumSize\n            : this.maximumOrthogonalSize;\n    }\n    get priority() {\n        if (this.children.length === 0) {\n            return LayoutPriority.Normal;\n        }\n        const priorities = this.children.map((c) => typeof c.priority === 'undefined'\n            ? LayoutPriority.Normal\n            : c.priority);\n        if (priorities.some((p) => p === LayoutPriority.High)) {\n            return LayoutPriority.High;\n        }\n        else if (priorities.some((p) => p === LayoutPriority.Low)) {\n            return LayoutPriority.Low;\n        }\n        return LayoutPriority.Normal;\n    }\n    constructor(orientation, proportionalLayout, styles, size, orthogonalSize, childDescriptors) {\n        super();\n        this.orientation = orientation;\n        this.proportionalLayout = proportionalLayout;\n        this.styles = styles;\n        this._childrenDisposable = Disposable.NONE;\n        this.children = [];\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._orthogonalSize = orthogonalSize;\n        this._size = size;\n        this.element = document.createElement('div');\n        this.element.className = 'branch-node';\n        if (!childDescriptors) {\n            this.splitview = new Splitview(this.element, {\n                orientation: this.orientation,\n                proportionalLayout,\n                styles,\n            });\n            this.splitview.layout(this.size, this.orthogonalSize);\n        }\n        else {\n            const descriptor = {\n                views: childDescriptors.map((childDescriptor) => {\n                    return {\n                        view: childDescriptor.node,\n                        size: childDescriptor.node.size,\n                        visible: childDescriptor.node instanceof LeafNode &&\n                            childDescriptor.visible !== undefined\n                            ? childDescriptor.visible\n                            : true,\n                    };\n                }),\n                size: this.size,\n            };\n            this.children = childDescriptors.map((c) => c.node);\n            this.splitview = new Splitview(this.element, {\n                orientation: this.orientation,\n                descriptor,\n                proportionalLayout,\n            });\n        }\n        this.addDisposables(this._onDidChange, this.splitview.onDidSashEnd(() => {\n            this._onDidChange.fire({});\n        }));\n        this.setupChildrenEvents();\n    }\n    setVisible(visible) {\n        for (const child of this.children) {\n            child.setVisible(visible);\n        }\n    }\n    isChildVisible(index) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        return this.splitview.isViewVisible(index);\n    }\n    setChildVisible(index, visible) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        if (this.splitview.isViewVisible(index) === visible) {\n            return;\n        }\n        this.splitview.setViewVisible(index, visible);\n    }\n    moveChild(from, to) {\n        if (from === to) {\n            return;\n        }\n        if (from < 0 || from >= this.children.length) {\n            throw new Error('Invalid from index');\n        }\n        if (from < to) {\n            to--;\n        }\n        this.splitview.moveView(from, to);\n        const child = this._removeChild(from);\n        this._addChild(child, to);\n    }\n    getChildSize(index) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        return this.splitview.getViewSize(index);\n    }\n    resizeChild(index, size) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        this.splitview.resizeView(index, size);\n    }\n    layout(size, orthogonalSize) {\n        this._size = orthogonalSize;\n        this._orthogonalSize = size;\n        this.splitview.layout(this.size, this.orthogonalSize);\n    }\n    addChild(node, size, index, skipLayout) {\n        if (index < 0 || index > this.children.length) {\n            throw new Error('Invalid index');\n        }\n        this.splitview.addView(node, size, index, skipLayout);\n        this._addChild(node, index);\n    }\n    getChildCachedVisibleSize(index) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        return this.splitview.getViewCachedVisibleSize(index);\n    }\n    removeChild(index, sizing) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        this.splitview.removeView(index, sizing);\n        this._removeChild(index);\n    }\n    _addChild(node, index) {\n        this.children.splice(index, 0, node);\n        this.setupChildrenEvents();\n    }\n    _removeChild(index) {\n        const [child] = this.children.splice(index, 1);\n        this.setupChildrenEvents();\n        return child;\n    }\n    setupChildrenEvents() {\n        this._childrenDisposable.dispose();\n        this._childrenDisposable = Event.any(...this.children.map((c) => c.onDidChange))((e) => {\n            /**\n             * indicate a change has occured to allows any re-rendering but don't bubble\n             * event because that was specific to this branch\n             */\n            this._onDidChange.fire({ size: e.orthogonalSize });\n        });\n    }\n    dispose() {\n        super.dispose();\n        this._childrenDisposable.dispose();\n        this.children.forEach((child) => child.dispose());\n        this.splitview.dispose();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/grid\n *--------------------------------------------------------------------------------------------*/\nimport { Orientation, Sizing, } from '../splitview/splitview';\nimport { tail } from '../array';\nimport { LeafNode } from './leafNode';\nimport { BranchNode } from './branchNode';\nimport { Emitter } from '../events';\nimport { MutableDisposable } from '../lifecycle';\nfunction findLeaf(candiateNode, last) {\n    if (candiateNode instanceof LeafNode) {\n        return candiateNode;\n    }\n    if (candiateNode instanceof BranchNode) {\n        return findLeaf(candiateNode.children[last ? candiateNode.children.length - 1 : 0], last);\n    }\n    throw new Error('invalid node');\n}\nfunction flipNode(node, size, orthogonalSize) {\n    if (node instanceof BranchNode) {\n        const result = new BranchNode(orthogonal(node.orientation), node.proportionalLayout, node.styles, size, orthogonalSize);\n        let totalSize = 0;\n        for (let i = node.children.length - 1; i >= 0; i--) {\n            const child = node.children[i];\n            const childSize = child instanceof BranchNode ? child.orthogonalSize : child.size;\n            let newSize = node.size === 0\n                ? 0\n                : Math.round((size * childSize) / node.size);\n            totalSize += newSize;\n            // The last view to add should adjust to rounding errors\n            if (i === 0) {\n                newSize += size - totalSize;\n            }\n            result.addChild(flipNode(child, orthogonalSize, newSize), newSize, 0, true);\n        }\n        return result;\n    }\n    else {\n        return new LeafNode(node.view, orthogonal(node.orientation), orthogonalSize);\n    }\n}\nexport function indexInParent(element) {\n    const parentElement = element.parentElement;\n    if (!parentElement) {\n        throw new Error('Invalid grid element');\n    }\n    let el = parentElement.firstElementChild;\n    let index = 0;\n    while (el !== element && el !== parentElement.lastElementChild && el) {\n        el = el.nextElementSibling;\n        index++;\n    }\n    return index;\n}\n/**\n * Find the grid location of a specific DOM element by traversing the parent\n * chain and finding each child index on the way.\n *\n * This will break as soon as DOM structures of the Splitview or Gridview change.\n */\nexport function getGridLocation(element) {\n    const parentElement = element.parentElement;\n    if (!parentElement) {\n        throw new Error('Invalid grid element');\n    }\n    if (/\\bgrid-view\\b/.test(parentElement.className)) {\n        return [];\n    }\n    const index = indexInParent(parentElement);\n    const ancestor = parentElement.parentElement.parentElement.parentElement;\n    return [...getGridLocation(ancestor), index];\n}\nexport function getRelativeLocation(rootOrientation, location, direction) {\n    const orientation = getLocationOrientation(rootOrientation, location);\n    const directionOrientation = getDirectionOrientation(direction);\n    if (orientation === directionOrientation) {\n        const [rest, _index] = tail(location);\n        let index = _index;\n        if (direction === 'right' || direction === 'bottom') {\n            index += 1;\n        }\n        return [...rest, index];\n    }\n    else {\n        const index = direction === 'right' || direction === 'bottom' ? 1 : 0;\n        return [...location, index];\n    }\n}\nexport function getDirectionOrientation(direction) {\n    return direction === 'top' || direction === 'bottom'\n        ? Orientation.VERTICAL\n        : Orientation.HORIZONTAL;\n}\nexport function getLocationOrientation(rootOrientation, location) {\n    return location.length % 2 === 0\n        ? orthogonal(rootOrientation)\n        : rootOrientation;\n}\nexport const orthogonal = (orientation) => orientation === Orientation.HORIZONTAL\n    ? Orientation.VERTICAL\n    : Orientation.HORIZONTAL;\nexport function isGridBranchNode(node) {\n    return !!node.children;\n}\nconst serializeBranchNode = (node, orientation) => {\n    const size = orientation === Orientation.VERTICAL ? node.box.width : node.box.height;\n    if (!isGridBranchNode(node)) {\n        if (typeof node.cachedVisibleSize === 'number') {\n            return {\n                type: 'leaf',\n                data: node.view.toJSON(),\n                size: node.cachedVisibleSize,\n                visible: false,\n            };\n        }\n        return { type: 'leaf', data: node.view.toJSON(), size };\n    }\n    return {\n        type: 'branch',\n        data: node.children.map((c) => serializeBranchNode(c, orthogonal(orientation))),\n        size,\n    };\n};\nexport class Gridview {\n    get length() {\n        return this._root ? this._root.children.length : 0;\n    }\n    get orientation() {\n        return this.root.orientation;\n    }\n    set orientation(orientation) {\n        if (this.root.orientation === orientation) {\n            return;\n        }\n        const { size, orthogonalSize } = this.root;\n        this.root = flipNode(this.root, orthogonalSize, size);\n        this.root.layout(size, orthogonalSize);\n    }\n    get width() {\n        return this.root.width;\n    }\n    get height() {\n        return this.root.height;\n    }\n    get minimumWidth() {\n        return this.root.minimumWidth;\n    }\n    get minimumHeight() {\n        return this.root.minimumHeight;\n    }\n    get maximumWidth() {\n        return this.root.maximumHeight;\n    }\n    get maximumHeight() {\n        return this.root.maximumHeight;\n    }\n    serialize() {\n        const root = serializeBranchNode(this.getView(), this.orientation);\n        return {\n            root,\n            width: this.width,\n            height: this.height,\n            orientation: this.orientation,\n        };\n    }\n    dispose() {\n        this.disposable.dispose();\n        this._onDidChange.dispose();\n        this.root.dispose();\n        this.element.remove();\n    }\n    clear() {\n        const orientation = this.root.orientation;\n        this.root = new BranchNode(orientation, this.proportionalLayout, this.styles, this.root.size, this.root.orthogonalSize);\n    }\n    deserialize(json, deserializer) {\n        const orientation = json.orientation;\n        const height = orientation === Orientation.VERTICAL ? json.height : json.width;\n        this._deserialize(json.root, orientation, deserializer, height);\n    }\n    _deserialize(root, orientation, deserializer, orthogonalSize) {\n        this.root = this._deserializeNode(root, orientation, deserializer, orthogonalSize, true);\n    }\n    _deserializeNode(node, orientation, deserializer, orthogonalSize, isRoot = false) {\n        let result;\n        if (node.type === 'branch') {\n            const serializedChildren = node.data;\n            const children = serializedChildren.map((serializedChild) => {\n                return {\n                    node: this._deserializeNode(serializedChild, orthogonal(orientation), deserializer, node.size),\n                    visible: serializedChild.visible,\n                };\n            });\n            // HORIZONTAL => height=orthogonalsize width=size\n            // VERTICAL => height=size width=orthogonalsize\n            result = new BranchNode(orientation, this.proportionalLayout, this.styles, isRoot ? orthogonalSize : node.size, isRoot ? node.size : orthogonalSize, children);\n        }\n        else {\n            result = new LeafNode(deserializer.fromJSON(node), orientation, orthogonalSize, node.size);\n        }\n        return result;\n    }\n    get root() {\n        return this._root;\n    }\n    set root(root) {\n        const oldRoot = this._root;\n        if (oldRoot) {\n            oldRoot.dispose();\n            this.element.removeChild(oldRoot.element);\n        }\n        this._root = root;\n        this.element.appendChild(this._root.element);\n        this.disposable.value = this._root.onDidChange((e) => {\n            this._onDidChange.fire(e);\n        });\n    }\n    /**\n     * If the root is orientated as a VERTICAL node then nest the existing root within a new HORIZIONTAL root node\n     * If the root is orientated as a HORIZONTAL node then nest the existing root within a new VERITCAL root node\n     */\n    insertOrthogonalSplitviewAtRoot() {\n        if (!this._root) {\n            return;\n        }\n        const oldRoot = this.root;\n        oldRoot.element.remove();\n        this._root = new BranchNode(orthogonal(oldRoot.orientation), this.proportionalLayout, this.styles, this.root.orthogonalSize, this.root.size);\n        if (oldRoot.children.length === 1) {\n            // can remove one level of redundant branching if there is only a single child\n            const childReference = oldRoot.children[0];\n            oldRoot.removeChild(0); // remove to prevent disposal when disposing of unwanted root\n            oldRoot.dispose();\n            this._root.addChild(childReference, Sizing.Distribute, 0);\n        }\n        else {\n            this._root.addChild(oldRoot, Sizing.Distribute, 0);\n        }\n        this.element.appendChild(this._root.element);\n        this.disposable.value = this._root.onDidChange((e) => {\n            this._onDidChange.fire(e);\n        });\n    }\n    next(location) {\n        return this.progmaticSelect(location);\n    }\n    previous(location) {\n        return this.progmaticSelect(location, true);\n    }\n    getView(location) {\n        const node = location ? this.getNode(location)[1] : this.root;\n        return this._getViews(node, this.orientation);\n    }\n    _getViews(node, orientation, cachedVisibleSize) {\n        const box = { height: node.height, width: node.width };\n        if (node instanceof LeafNode) {\n            return { box, view: node.view, cachedVisibleSize };\n        }\n        const children = [];\n        for (let i = 0; i < node.children.length; i++) {\n            const child = node.children[i];\n            const nodeCachedVisibleSize = node.getChildCachedVisibleSize(i);\n            children.push(this._getViews(child, orthogonal(orientation), nodeCachedVisibleSize));\n        }\n        return { box, children };\n    }\n    progmaticSelect(location, reverse = false) {\n        const [path, node] = this.getNode(location);\n        if (!(node instanceof LeafNode)) {\n            throw new Error('invalid location');\n        }\n        for (let i = path.length - 1; i > -1; i--) {\n            const n = path[i];\n            const l = location[i] || 0;\n            const canProgressInCurrentLevel = reverse\n                ? l - 1 > -1\n                : l + 1 < n.children.length;\n            if (canProgressInCurrentLevel) {\n                return findLeaf(n.children[reverse ? l - 1 : l + 1], reverse);\n            }\n        }\n        return findLeaf(this.root, reverse);\n    }\n    constructor(proportionalLayout, styles, orientation) {\n        this.proportionalLayout = proportionalLayout;\n        this.styles = styles;\n        this.disposable = new MutableDisposable();\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this.element = document.createElement('div');\n        this.element.className = 'grid-view';\n        this.root = new BranchNode(orientation, proportionalLayout, styles, 0, 0);\n    }\n    isViewVisible(location) {\n        const [rest, index] = tail(location);\n        const [, parent] = this.getNode(rest);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid from location');\n        }\n        return parent.isChildVisible(index);\n    }\n    setViewVisible(location, visible) {\n        const [rest, index] = tail(location);\n        const [, parent] = this.getNode(rest);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid from location');\n        }\n        parent.setChildVisible(index, visible);\n    }\n    moveView(parentLocation, from, to) {\n        const [, parent] = this.getNode(parentLocation);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid location');\n        }\n        parent.moveChild(from, to);\n    }\n    addView(view, size, location) {\n        const [rest, index] = tail(location);\n        const [pathToParent, parent] = this.getNode(rest);\n        if (parent instanceof BranchNode) {\n            const node = new LeafNode(view, orthogonal(parent.orientation), parent.orthogonalSize);\n            parent.addChild(node, size, index);\n        }\n        else {\n            const [grandParent, ..._] = [...pathToParent].reverse();\n            const [parentIndex, ...__] = [...rest].reverse();\n            let newSiblingSize = 0;\n            const newSiblingCachedVisibleSize = grandParent.getChildCachedVisibleSize(parentIndex);\n            if (typeof newSiblingCachedVisibleSize === 'number') {\n                newSiblingSize = Sizing.Invisible(newSiblingCachedVisibleSize);\n            }\n            grandParent.removeChild(parentIndex);\n            const newParent = new BranchNode(parent.orientation, this.proportionalLayout, this.styles, parent.size, parent.orthogonalSize);\n            grandParent.addChild(newParent, parent.size, parentIndex);\n            const newSibling = new LeafNode(parent.view, grandParent.orientation, parent.size);\n            newParent.addChild(newSibling, newSiblingSize, 0);\n            if (typeof size !== 'number' && size.type === 'split') {\n                size = { type: 'split', index: 0 };\n            }\n            const node = new LeafNode(view, grandParent.orientation, parent.size);\n            newParent.addChild(node, size, index);\n        }\n    }\n    remove(view, sizing) {\n        const location = getGridLocation(view.element);\n        return this.removeView(location, sizing);\n    }\n    removeView(location, sizing) {\n        const [rest, index] = tail(location);\n        const [pathToParent, parent] = this.getNode(rest);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid location');\n        }\n        const node = parent.children[index];\n        if (!(node instanceof LeafNode)) {\n            throw new Error('Invalid location');\n        }\n        parent.removeChild(index, sizing);\n        if (parent.children.length === 0) {\n            return node.view;\n        }\n        if (parent.children.length > 1) {\n            return node.view;\n        }\n        const sibling = parent.children[0];\n        if (pathToParent.length === 0) {\n            // parent is root\n            if (sibling instanceof LeafNode) {\n                return node.view;\n            }\n            // we must promote sibling to be the new root\n            parent.removeChild(0, sizing);\n            this.root = sibling;\n            return node.view;\n        }\n        const [grandParent, ..._] = [...pathToParent].reverse();\n        const [parentIndex, ...__] = [...rest].reverse();\n        const isSiblingVisible = parent.isChildVisible(0);\n        parent.removeChild(0, sizing);\n        const sizes = grandParent.children.map((_size, i) => grandParent.getChildSize(i));\n        grandParent.removeChild(parentIndex, sizing);\n        if (sibling instanceof BranchNode) {\n            sizes.splice(parentIndex, 1, ...sibling.children.map((c) => c.size));\n            for (let i = 0; i < sibling.children.length; i++) {\n                const child = sibling.children[i];\n                grandParent.addChild(child, child.size, parentIndex + i);\n            }\n        }\n        else {\n            const newSibling = new LeafNode(sibling.view, orthogonal(sibling.orientation), sibling.size);\n            const siblingSizing = isSiblingVisible\n                ? sibling.orthogonalSize\n                : Sizing.Invisible(sibling.orthogonalSize);\n            grandParent.addChild(newSibling, siblingSizing, parentIndex);\n        }\n        for (let i = 0; i < sizes.length; i++) {\n            grandParent.resizeChild(i, sizes[i]);\n        }\n        return node.view;\n    }\n    layout(width, height) {\n        const [size, orthogonalSize] = this.root.orientation === Orientation.HORIZONTAL\n            ? [height, width]\n            : [width, height];\n        this.root.layout(size, orthogonalSize);\n    }\n    getNode(location, node = this.root, path = []) {\n        if (location.length === 0) {\n            return [path, node];\n        }\n        if (!(node instanceof BranchNode)) {\n            throw new Error('Invalid location');\n        }\n        const [index, ...rest] = location;\n        if (index < 0 || index >= node.children.length) {\n            throw new Error('Invalid location');\n        }\n        const child = node.children[index];\n        path.push(node);\n        return this.getNode(rest, child, path);\n    }\n}\n","import { Emitter } from '../events';\nexport class SplitviewApi {\n    get minimumSize() {\n        return this.component.minimumSize;\n    }\n    get maximumSize() {\n        return this.component.maximumSize;\n    }\n    get height() {\n        return this.component.height;\n    }\n    get width() {\n        return this.component.width;\n    }\n    get length() {\n        return this.component.length;\n    }\n    get orientation() {\n        return this.component.orientation;\n    }\n    get panels() {\n        return this.component.panels;\n    }\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    get onDidAddView() {\n        return this.component.onDidAddView;\n    }\n    get onDidRemoveView() {\n        return this.component.onDidRemoveView;\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    updateOptions(options) {\n        this.component.updateOptions(options);\n    }\n    removePanel(panel, sizing) {\n        this.component.removePanel(panel, sizing);\n    }\n    focus() {\n        this.component.focus();\n    }\n    getPanel(id) {\n        return this.component.getPanel(id);\n    }\n    layout(width, height) {\n        return this.component.layout(width, height);\n    }\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    movePanel(from, to) {\n        this.component.movePanel(from, to);\n    }\n    fromJSON(data) {\n        this.component.fromJSON(data);\n    }\n    toJSON() {\n        return this.component.toJSON();\n    }\n    clear() {\n        this.component.clear();\n    }\n}\nexport class PaneviewApi {\n    get minimumSize() {\n        return this.component.minimumSize;\n    }\n    get maximumSize() {\n        return this.component.maximumSize;\n    }\n    get height() {\n        return this.component.height;\n    }\n    get width() {\n        return this.component.width;\n    }\n    get panels() {\n        return this.component.panels;\n    }\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    get onDidAddView() {\n        return this.component.onDidAddView;\n    }\n    get onDidRemoveView() {\n        return this.component.onDidRemoveView;\n    }\n    get onDidDrop() {\n        const emitter = new Emitter();\n        const disposable = this.component.onDidDrop((e) => {\n            emitter.fire(Object.assign(Object.assign({}, e), { api: this }));\n        });\n        emitter.dispose = () => {\n            disposable.dispose();\n            emitter.dispose();\n        };\n        return emitter.event;\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    removePanel(panel) {\n        this.component.removePanel(panel);\n    }\n    getPanel(id) {\n        return this.component.getPanel(id);\n    }\n    movePanel(from, to) {\n        this.component.movePanel(from, to);\n    }\n    focus() {\n        this.component.focus();\n    }\n    layout(width, height) {\n        this.component.layout(width, height);\n    }\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    fromJSON(data) {\n        this.component.fromJSON(data);\n    }\n    toJSON() {\n        return this.component.toJSON();\n    }\n    clear() {\n        this.component.clear();\n    }\n}\nexport class GridviewApi {\n    get minimumHeight() {\n        return this.component.minimumHeight;\n    }\n    get maximumHeight() {\n        return this.component.maximumHeight;\n    }\n    get minimumWidth() {\n        return this.component.minimumWidth;\n    }\n    get maximumWidth() {\n        return this.component.maximumWidth;\n    }\n    get width() {\n        return this.component.width;\n    }\n    get height() {\n        return this.component.height;\n    }\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    get onDidAddPanel() {\n        return this.component.onDidAddGroup;\n    }\n    get onDidRemovePanel() {\n        return this.component.onDidRemoveGroup;\n    }\n    get onDidActivePanelChange() {\n        return this.component.onDidActiveGroupChange;\n    }\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    get panels() {\n        return this.component.groups;\n    }\n    get orientation() {\n        return this.component.orientation;\n    }\n    set orientation(value) {\n        this.component.updateOptions({ orientation: value });\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    focus() {\n        this.component.focus();\n    }\n    layout(width, height, force = false) {\n        this.component.layout(width, height, force);\n    }\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    removePanel(panel, sizing) {\n        this.component.removePanel(panel, sizing);\n    }\n    movePanel(panel, options) {\n        this.component.movePanel(panel, options);\n    }\n    getPanel(id) {\n        return this.component.getPanel(id);\n    }\n    fromJSON(data) {\n        return this.component.fromJSON(data);\n    }\n    toJSON() {\n        return this.component.toJSON();\n    }\n    clear() {\n        this.component.clear();\n    }\n}\nexport class DockviewApi {\n    get id() {\n        return this.component.id;\n    }\n    get width() {\n        return this.component.width;\n    }\n    get height() {\n        return this.component.height;\n    }\n    get minimumHeight() {\n        return this.component.minimumHeight;\n    }\n    get maximumHeight() {\n        return this.component.maximumHeight;\n    }\n    get minimumWidth() {\n        return this.component.minimumWidth;\n    }\n    get maximumWidth() {\n        return this.component.maximumWidth;\n    }\n    get size() {\n        return this.component.size;\n    }\n    get totalPanels() {\n        return this.component.totalPanels;\n    }\n    get onDidActiveGroupChange() {\n        return this.component.onDidActiveGroupChange;\n    }\n    get onDidAddGroup() {\n        return this.component.onDidAddGroup;\n    }\n    get onDidRemoveGroup() {\n        return this.component.onDidRemoveGroup;\n    }\n    get onDidActivePanelChange() {\n        return this.component.onDidActivePanelChange;\n    }\n    get onDidAddPanel() {\n        return this.component.onDidAddPanel;\n    }\n    get onDidRemovePanel() {\n        return this.component.onDidRemovePanel;\n    }\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    get onDidDrop() {\n        return this.component.onDidDrop;\n    }\n    get panels() {\n        return this.component.panels;\n    }\n    get groups() {\n        return this.component.groups;\n    }\n    get activePanel() {\n        return this.component.activePanel;\n    }\n    get activeGroup() {\n        return this.component.activeGroup;\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    getTabHeight() {\n        return this.component.tabHeight;\n    }\n    setTabHeight(height) {\n        this.component.tabHeight = height;\n    }\n    focus() {\n        this.component.focus();\n    }\n    getPanel(id) {\n        return this.component.getGroupPanel(id);\n    }\n    layout(width, height, force = false) {\n        this.component.layout(width, height, force);\n    }\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    addGroup(options) {\n        return this.component.addGroup(options);\n    }\n    moveToNext(options) {\n        this.component.moveToNext(options);\n    }\n    moveToPrevious(options) {\n        this.component.moveToPrevious(options);\n    }\n    closeAllGroups() {\n        return this.component.closeAllGroups();\n    }\n    removeGroup(group) {\n        this.component.removeGroup(group);\n    }\n    getGroup(id) {\n        return this.component.getPanel(id);\n    }\n    fromJSON(data) {\n        this.component.fromJSON(data);\n    }\n    toJSON() {\n        return this.component.toJSON();\n    }\n    clear() {\n        this.component.clear();\n    }\n}\n","import { addDisposableListener } from '../events';\nimport { CompositeDisposable } from '../lifecycle';\nexport class DragAndDropObserver extends CompositeDisposable {\n    constructor(element, callbacks) {\n        super();\n        this.element = element;\n        this.callbacks = callbacks;\n        this.target = null;\n        this.registerListeners();\n    }\n    registerListeners() {\n        this.addDisposables(addDisposableListener(this.element, 'dragenter', (e) => {\n            this.target = e.target;\n            this.callbacks.onDragEnter(e);\n        }, true));\n        this.addDisposables(addDisposableListener(this.element, 'dragover', (e) => {\n            e.preventDefault(); // needed so that the drop event fires (https://stackoverflow.com/questions/21339924/drop-event-not-firing-in-chrome)\n            if (this.callbacks.onDragOver) {\n                this.callbacks.onDragOver(e);\n            }\n        }, true));\n        this.addDisposables(addDisposableListener(this.element, 'dragleave', (e) => {\n            if (this.target === e.target) {\n                this.target = null;\n                this.callbacks.onDragLeave(e);\n            }\n        }));\n        this.addDisposables(addDisposableListener(this.element, 'dragend', (e) => {\n            this.target = null;\n            this.callbacks.onDragEnd(e);\n        }));\n        this.addDisposables(addDisposableListener(this.element, 'drop', (e) => {\n            this.callbacks.onDrop(e);\n        }));\n    }\n}\n","import { toggleClass } from '../dom';\nimport { Emitter } from '../events';\nimport { CompositeDisposable } from '../lifecycle';\nimport { DragAndDropObserver } from './dnd';\nimport { clamp } from '../math';\nfunction numberOrFallback(maybeNumber, fallback) {\n    return typeof maybeNumber === 'number' ? maybeNumber : fallback;\n}\nexport function directionToPosition(direction) {\n    switch (direction) {\n        case 'above':\n            return 'top';\n        case 'below':\n            return 'bottom';\n        case 'left':\n            return 'left';\n        case 'right':\n            return 'right';\n        case 'within':\n            return 'center';\n        default:\n            throw new Error(`invalid direction '${direction}'`);\n    }\n}\nexport function positionToDirection(position) {\n    switch (position) {\n        case 'top':\n            return 'above';\n        case 'bottom':\n            return 'below';\n        case 'left':\n            return 'left';\n        case 'right':\n            return 'right';\n        case 'center':\n            return 'within';\n        default:\n            throw new Error(`invalid position '${position}'`);\n    }\n}\nexport class Droptarget extends CompositeDisposable {\n    get state() {\n        return this._state;\n    }\n    constructor(element, options) {\n        super();\n        this.element = element;\n        this.options = options;\n        this._onDrop = new Emitter();\n        this.onDrop = this._onDrop.event;\n        // use a set to take advantage of #<set>.has\n        const acceptedTargetZonesSet = new Set(this.options.acceptedTargetZones);\n        this.addDisposables(this._onDrop, new DragAndDropObserver(this.element, {\n            onDragEnter: () => undefined,\n            onDragOver: (e) => {\n                const width = this.element.clientWidth;\n                const height = this.element.clientHeight;\n                if (width === 0 || height === 0) {\n                    return; // avoid div!0\n                }\n                const rect = e.currentTarget.getBoundingClientRect();\n                const x = e.clientX - rect.left;\n                const y = e.clientY - rect.top;\n                const quadrant = this.calculateQuadrant(acceptedTargetZonesSet, x, y, width, height);\n                if (quadrant === null) {\n                    // no drop target should be displayed\n                    this.removeDropTarget();\n                    return;\n                }\n                if (typeof this.options.canDisplayOverlay === 'boolean') {\n                    if (!this.options.canDisplayOverlay) {\n                        return;\n                    }\n                }\n                else if (!this.options.canDisplayOverlay(e, quadrant)) {\n                    return;\n                }\n                if (!this.targetElement) {\n                    this.targetElement = document.createElement('div');\n                    this.targetElement.className = 'drop-target-dropzone';\n                    this.overlayElement = document.createElement('div');\n                    this.overlayElement.className = 'drop-target-selection';\n                    this._state = 'center';\n                    this.targetElement.appendChild(this.overlayElement);\n                    this.element.classList.add('drop-target');\n                    this.element.append(this.targetElement);\n                }\n                if (this.options.acceptedTargetZones.length === 0) {\n                    return;\n                }\n                if (!this.targetElement || !this.overlayElement) {\n                    return;\n                }\n                this.toggleClasses(quadrant, width, height);\n                this.setState(quadrant);\n            },\n            onDragLeave: () => {\n                this.removeDropTarget();\n            },\n            onDragEnd: () => {\n                this.removeDropTarget();\n            },\n            onDrop: (e) => {\n                e.preventDefault();\n                const state = this._state;\n                this.removeDropTarget();\n                if (state) {\n                    // only stop the propagation of the event if we are dealing with it\n                    // which is only when the target has state\n                    e.stopPropagation();\n                    this._onDrop.fire({ position: state, nativeEvent: e });\n                }\n            },\n        }));\n    }\n    dispose() {\n        this.removeDropTarget();\n    }\n    toggleClasses(quadrant, width, height) {\n        var _a, _b, _c, _d;\n        if (!this.overlayElement) {\n            return;\n        }\n        const isSmallX = width < 100;\n        const isSmallY = height < 100;\n        const isLeft = quadrant === 'left';\n        const isRight = quadrant === 'right';\n        const isTop = quadrant === 'top';\n        const isBottom = quadrant === 'bottom';\n        const rightClass = !isSmallX && isRight;\n        const leftClass = !isSmallX && isLeft;\n        const topClass = !isSmallY && isTop;\n        const bottomClass = !isSmallY && isBottom;\n        let size = 0.5;\n        if (((_b = (_a = this.options.overlayModel) === null || _a === void 0 ? void 0 : _a.size) === null || _b === void 0 ? void 0 : _b.type) === 'percentage') {\n            size = clamp(this.options.overlayModel.size.value, 0, 100) / 100;\n        }\n        if (((_d = (_c = this.options.overlayModel) === null || _c === void 0 ? void 0 : _c.size) === null || _d === void 0 ? void 0 : _d.type) === 'pixels') {\n            if (rightClass || leftClass) {\n                size =\n                    clamp(0, this.options.overlayModel.size.value, width) /\n                        width;\n            }\n            if (topClass || bottomClass) {\n                size =\n                    clamp(0, this.options.overlayModel.size.value, height) /\n                        height;\n            }\n        }\n        const translate = (1 - size) / 2;\n        const scale = size;\n        let transform;\n        if (rightClass) {\n            transform = `translateX(${100 * translate}%) scaleX(${scale})`;\n        }\n        else if (leftClass) {\n            transform = `translateX(-${100 * translate}%) scaleX(${scale})`;\n        }\n        else if (topClass) {\n            transform = `translateY(-${100 * translate}%) scaleY(${scale})`;\n        }\n        else if (bottomClass) {\n            transform = `translateY(${100 * translate}%) scaleY(${scale})`;\n        }\n        else {\n            transform = '';\n        }\n        this.overlayElement.style.transform = transform;\n        toggleClass(this.overlayElement, 'small-right', isSmallX && isRight);\n        toggleClass(this.overlayElement, 'small-left', isSmallX && isLeft);\n        toggleClass(this.overlayElement, 'small-top', isSmallY && isTop);\n        toggleClass(this.overlayElement, 'small-bottom', isSmallY && isBottom);\n    }\n    setState(quadrant) {\n        switch (quadrant) {\n            case 'top':\n                this._state = 'top';\n                break;\n            case 'left':\n                this._state = 'left';\n                break;\n            case 'bottom':\n                this._state = 'bottom';\n                break;\n            case 'right':\n                this._state = 'right';\n                break;\n            case 'center':\n                this._state = 'center';\n                break;\n        }\n    }\n    calculateQuadrant(overlayType, x, y, width, height) {\n        var _a, _b, _c, _d, _e, _f;\n        const isPercentage = ((_a = this.options.overlayModel) === null || _a === void 0 ? void 0 : _a.activationSize) === undefined ||\n            ((_c = (_b = this.options.overlayModel) === null || _b === void 0 ? void 0 : _b.activationSize) === null || _c === void 0 ? void 0 : _c.type) === 'percentage';\n        const value = numberOrFallback((_f = (_e = (_d = this.options) === null || _d === void 0 ? void 0 : _d.overlayModel) === null || _e === void 0 ? void 0 : _e.activationSize) === null || _f === void 0 ? void 0 : _f.value, 20);\n        if (isPercentage) {\n            return calculateQuadrantAsPercentage(overlayType, x, y, width, height, value);\n        }\n        return calculateQuadrantAsPixels(overlayType, x, y, width, height, value);\n    }\n    removeDropTarget() {\n        if (this.targetElement) {\n            this._state = undefined;\n            this.element.removeChild(this.targetElement);\n            this.targetElement = undefined;\n            this.overlayElement = undefined;\n            this.element.classList.remove('drop-target');\n        }\n    }\n}\nexport function calculateQuadrantAsPercentage(overlayType, x, y, width, height, threshold) {\n    const xp = (100 * x) / width;\n    const yp = (100 * y) / height;\n    if (overlayType.has('left') && xp < threshold) {\n        return 'left';\n    }\n    if (overlayType.has('right') && xp > 100 - threshold) {\n        return 'right';\n    }\n    if (overlayType.has('top') && yp < threshold) {\n        return 'top';\n    }\n    if (overlayType.has('bottom') && yp > 100 - threshold) {\n        return 'bottom';\n    }\n    if (!overlayType.has('center')) {\n        return null;\n    }\n    return 'center';\n}\nexport function calculateQuadrantAsPixels(overlayType, x, y, width, height, threshold) {\n    if (overlayType.has('left') && x < threshold) {\n        return 'left';\n    }\n    if (overlayType.has('right') && x > width - threshold) {\n        return 'right';\n    }\n    if (overlayType.has('top') && y < threshold) {\n        return 'top';\n    }\n    if (overlayType.has('bottom') && y > height - threshold) {\n        return 'bottom';\n    }\n    if (!overlayType.has('center')) {\n        return null;\n    }\n    return 'center';\n}\n","import { CompositeDisposable, MutableDisposable, } from '../../../lifecycle';\nimport { Emitter } from '../../../events';\nimport { trackFocus } from '../../../dom';\nexport class ContentContainer extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor() {\n        super();\n        this.disposable = new MutableDisposable();\n        this._onDidFocus = new Emitter();\n        this.onDidFocus = this._onDidFocus.event;\n        this._onDidBlur = new Emitter();\n        this.onDidBlur = this._onDidBlur.event;\n        this._element = document.createElement('div');\n        this._element.className = 'content-container';\n        this._element.tabIndex = -1;\n        this.addDisposables(this._onDidFocus, this._onDidBlur);\n        // for hosted containers\n        // 1) register a drop target on the host\n        // 2) register window dragStart events to disable pointer events\n        // 3) register dragEnd events\n        // 4) register mouseMove events (if no buttons are present we take this as a dragEnd event)\n    }\n    show() {\n        this.element.style.display = '';\n    }\n    hide() {\n        this.element.style.display = 'none';\n    }\n    openPanel(panel) {\n        var _a;\n        if (this.panel === panel) {\n            return;\n        }\n        if (this.panel) {\n            if ((_a = this.panel.view) === null || _a === void 0 ? void 0 : _a.content) {\n                this._element.removeChild(this.panel.view.content.element);\n            }\n            this.panel = undefined;\n        }\n        this.panel = panel;\n        const disposable = new CompositeDisposable();\n        if (this.panel.view) {\n            const _onDidFocus = this.panel.view.content.onDidFocus;\n            const _onDidBlur = this.panel.view.content.onDidBlur;\n            const { onDidFocus, onDidBlur } = trackFocus(this._element);\n            disposable.addDisposables(onDidFocus(() => this._onDidFocus.fire()), onDidBlur(() => this._onDidBlur.fire()));\n            if (_onDidFocus) {\n                disposable.addDisposables(_onDidFocus(() => this._onDidFocus.fire()));\n            }\n            if (_onDidBlur) {\n                disposable.addDisposables(_onDidBlur(() => this._onDidBlur.fire()));\n            }\n            this._element.appendChild(this.panel.view.content.element);\n        }\n        this.disposable.value = disposable;\n    }\n    layout(_width, _height) {\n        // noop\n    }\n    closePanel() {\n        var _a, _b, _c;\n        if ((_c = (_b = (_a = this.panel) === null || _a === void 0 ? void 0 : _a.view) === null || _b === void 0 ? void 0 : _b.content) === null || _c === void 0 ? void 0 : _c.element) {\n            this._element.removeChild(this.panel.view.content.element);\n            this.panel = undefined;\n        }\n    }\n    dispose() {\n        this.disposable.dispose();\n        super.dispose();\n    }\n}\n","export var DockviewDropTargets;\n(function (DockviewDropTargets) {\n    DockviewDropTargets[DockviewDropTargets[\"Tab\"] = 0] = \"Tab\";\n    DockviewDropTargets[DockviewDropTargets[\"Panel\"] = 1] = \"Panel\";\n    DockviewDropTargets[DockviewDropTargets[\"TabContainer\"] = 2] = \"TabContainer\";\n    DockviewDropTargets[DockviewDropTargets[\"Edge\"] = 3] = \"Edge\";\n})(DockviewDropTargets || (DockviewDropTargets = {}));\n","import { getElementsByTagName } from '../dom';\nimport { addDisposableListener, Emitter } from '../events';\nimport { CompositeDisposable, MutableDisposable, } from '../lifecycle';\nexport class DragHandler extends CompositeDisposable {\n    constructor(el) {\n        super();\n        this.el = el;\n        this.disposable = new MutableDisposable();\n        this._onDragStart = new Emitter();\n        this.onDragStart = this._onDragStart.event;\n        this.iframes = [];\n        this.configure();\n    }\n    configure() {\n        this.addDisposables(this._onDragStart, addDisposableListener(this.el, 'dragstart', (event) => {\n            this.iframes = [\n                ...getElementsByTagName('iframe'),\n                ...getElementsByTagName('webview'),\n            ];\n            for (const iframe of this.iframes) {\n                iframe.style.pointerEvents = 'none';\n            }\n            this.el.classList.add('dv-dragged');\n            setTimeout(() => this.el.classList.remove('dv-dragged'), 0);\n            this.disposable.value = this.getData(event.dataTransfer);\n            if (event.dataTransfer) {\n                event.dataTransfer.effectAllowed = 'move';\n                /**\n                 * Although this is not used by dockview many third party dnd libraries will check\n                 * dataTransfer.types to determine valid drag events.\n                 *\n                 * For example: in react-dnd if dataTransfer.types is not set then the dragStart event will be cancelled\n                 * through .preventDefault(). Since this is applied globally to all drag events this would break dockviews\n                 * dnd logic. You can see the code at\n                 * https://github.com/react-dnd/react-dnd/blob/main/packages/backend-html5/src/HTML5BackendImpl.ts#L542\n                 */\n                event.dataTransfer.setData('text/plain', '__dockview_internal_drag_event__');\n            }\n        }), addDisposableListener(this.el, 'dragend', () => {\n            for (const iframe of this.iframes) {\n                iframe.style.pointerEvents = 'auto';\n            }\n            this.iframes = [];\n            this.disposable.dispose();\n        }));\n    }\n}\n","import { addDisposableListener, Emitter } from '../../../events';\nimport { CompositeDisposable } from '../../../lifecycle';\nimport { getPanelData, LocalSelectionTransfer, PanelTransfer, } from '../../../dnd/dataTransfer';\nimport { toggleClass } from '../../../dom';\nimport { DockviewDropTargets } from '../../types';\nimport { Droptarget } from '../../../dnd/droptarget';\nimport { DragHandler } from '../../../dnd/abstractDragHandler';\nexport class Tab extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor(panelId, accessor, group) {\n        super();\n        this.panelId = panelId;\n        this.accessor = accessor;\n        this.group = group;\n        this._onChanged = new Emitter();\n        this.onChanged = this._onChanged.event;\n        this._onDropped = new Emitter();\n        this.onDrop = this._onDropped.event;\n        this.addDisposables(this._onChanged, this._onDropped);\n        this._element = document.createElement('div');\n        this._element.className = 'tab';\n        this._element.tabIndex = 0;\n        this._element.draggable = true;\n        toggleClass(this.element, 'inactive-tab', true);\n        this.addDisposables(new (class Handler extends DragHandler {\n            constructor() {\n                super(...arguments);\n                this.panelTransfer = LocalSelectionTransfer.getInstance();\n            }\n            getData() {\n                this.panelTransfer.setData([new PanelTransfer(accessor.id, group.id, panelId)], PanelTransfer.prototype);\n                return {\n                    dispose: () => {\n                        this.panelTransfer.clearData(PanelTransfer.prototype);\n                    },\n                };\n            }\n            dispose() {\n                //\n            }\n        })(this._element));\n        this.addDisposables(addDisposableListener(this._element, 'mousedown', (event) => {\n            if (event.defaultPrevented) {\n                return;\n            }\n            /**\n             * TODO: alternative to stopPropagation\n             *\n             * I need to stop the event propagation here since otherwise it'll be intercepted by event handlers\n             * on the tabs-container. I cannot use event.preventDefault() since I need the on DragStart event to occur\n             */\n            event.stopPropagation();\n            this._onChanged.fire(event);\n        }));\n        this.droptarget = new Droptarget(this._element, {\n            acceptedTargetZones: ['center'],\n            canDisplayOverlay: (event, position) => {\n                if (this.group.locked) {\n                    return false;\n                }\n                const data = getPanelData();\n                if (data && this.accessor.id === data.viewId) {\n                    if (data.panelId === null &&\n                        data.groupId === this.group.id) {\n                        // don't allow group move to drop on self\n                        return false;\n                    }\n                    return this.panelId !== data.panelId;\n                }\n                return this.group.model.canDisplayOverlay(event, position, DockviewDropTargets.Tab);\n            },\n        });\n        this.addDisposables(this.droptarget.onDrop((event) => {\n            this._onDropped.fire(event);\n        }));\n    }\n    setActive(isActive) {\n        toggleClass(this.element, 'active-tab', isActive);\n        toggleClass(this.element, 'inactive-tab', !isActive);\n    }\n    setContent(part) {\n        if (this.content) {\n            this._element.removeChild(this.content.element);\n        }\n        this.content = part;\n        this._element.appendChild(this.content.element);\n    }\n    dispose() {\n        super.dispose();\n        this.droptarget.dispose();\n    }\n}\n","import { DragHandler } from './abstractDragHandler';\nimport { LocalSelectionTransfer, PanelTransfer } from './dataTransfer';\nimport { addGhostImage } from './ghost';\nexport class GroupDragHandler extends DragHandler {\n    constructor(element, accessorId, group) {\n        super(element);\n        this.accessorId = accessorId;\n        this.group = group;\n        this.panelTransfer = LocalSelectionTransfer.getInstance();\n    }\n    getData(dataTransfer) {\n        this.panelTransfer.setData([new PanelTransfer(this.accessorId, this.group.id, null)], PanelTransfer.prototype);\n        const style = window.getComputedStyle(this.el);\n        const bgColor = style.getPropertyValue('--dv-activegroup-visiblepanel-tab-background-color');\n        const color = style.getPropertyValue('--dv-activegroup-visiblepanel-tab-color');\n        if (dataTransfer) {\n            const ghostElement = document.createElement('div');\n            ghostElement.style.backgroundColor = bgColor;\n            ghostElement.style.color = color;\n            ghostElement.style.padding = '2px 8px';\n            ghostElement.style.height = '24px';\n            ghostElement.style.fontSize = '11px';\n            ghostElement.style.lineHeight = '20px';\n            ghostElement.style.borderRadius = '12px';\n            ghostElement.style.position = 'absolute';\n            ghostElement.textContent = `Multiple Panels (${this.group.size})`;\n            addGhostImage(dataTransfer, ghostElement);\n        }\n        return {\n            dispose: () => {\n                this.panelTransfer.clearData(PanelTransfer.prototype);\n            },\n        };\n    }\n    dispose() {\n        //\n    }\n}\n","import { addClasses, removeClasses } from '../dom';\nexport function addGhostImage(dataTransfer, ghostElement) {\n    // class dockview provides to force ghost image to be drawn on a different layer and prevent weird rendering issues\n    addClasses(ghostElement, 'dv-dragged');\n    document.body.appendChild(ghostElement);\n    dataTransfer.setDragImage(ghostElement, 0, 0);\n    setTimeout(() => {\n        removeClasses(ghostElement, 'dv-dragged');\n        ghostElement.remove();\n    }, 0);\n}\n","import { last } from '../../../array';\nimport { getPanelData } from '../../../dnd/dataTransfer';\nimport { Droptarget } from '../../../dnd/droptarget';\nimport { GroupDragHandler } from '../../../dnd/groupDragHandler';\nimport { addDisposableListener, Emitter } from '../../../events';\nimport { CompositeDisposable } from '../../../lifecycle';\nimport { DockviewDropTargets } from '../../types';\nexport class VoidContainer extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor(accessor, group) {\n        super();\n        this.accessor = accessor;\n        this.group = group;\n        this._onDrop = new Emitter();\n        this.onDrop = this._onDrop.event;\n        this._element = document.createElement('div');\n        this._element.className = 'void-container';\n        this._element.tabIndex = 0;\n        this._element.draggable = true;\n        this.addDisposables(this._onDrop, addDisposableListener(this._element, 'click', () => {\n            this.accessor.doSetGroupActive(this.group);\n        }));\n        const handler = new GroupDragHandler(this._element, accessor.id, group);\n        this.voidDropTarget = new Droptarget(this._element, {\n            acceptedTargetZones: ['center'],\n            canDisplayOverlay: (event, position) => {\n                var _a;\n                const data = getPanelData();\n                if (data && this.accessor.id === data.viewId) {\n                    if (data.panelId === null &&\n                        data.groupId === this.group.id) {\n                        // don't allow group move to drop on self\n                        return false;\n                    }\n                    // don't show the overlay if the tab being dragged is the last panel of this group\n                    return ((_a = last(this.group.panels)) === null || _a === void 0 ? void 0 : _a.id) !== data.panelId;\n                }\n                return group.model.canDisplayOverlay(event, position, DockviewDropTargets.Panel);\n            },\n        });\n        this.addDisposables(handler, this.voidDropTarget.onDrop((event) => {\n            this._onDrop.fire(event);\n        }), this.voidDropTarget);\n    }\n}\n","import { CompositeDisposable, } from '../../../lifecycle';\nimport { addDisposableListener, Emitter } from '../../../events';\nimport { Tab } from '../tab/tab';\nimport { VoidContainer } from './voidContainer';\nimport { toggleClass } from '../../../dom';\nexport class TabsContainer extends CompositeDisposable {\n    get panels() {\n        return this.tabs.map((_) => _.value.panelId);\n    }\n    get size() {\n        return this.tabs.length;\n    }\n    get height() {\n        return this._height;\n    }\n    set height(value) {\n        this._height = value;\n        if (typeof value !== 'number') {\n            this.element.style.removeProperty('--dv-tabs-and-actions-container-height');\n        }\n        else {\n            this.element.style.setProperty('--dv-tabs-and-actions-container-height', `${value}px`);\n        }\n    }\n    get hidden() {\n        return this._hidden;\n    }\n    set hidden(value) {\n        this._hidden = value;\n        this.element.style.display = value ? 'none' : '';\n    }\n    show() {\n        if (!this.hidden) {\n            this.element.style.display = '';\n        }\n    }\n    hide() {\n        this._element.style.display = 'none';\n    }\n    setActionElement(element) {\n        if (this.actions === element) {\n            return;\n        }\n        if (this.actions) {\n            this.actions.remove();\n            this.actions = undefined;\n        }\n        if (element) {\n            this.actionContainer.appendChild(element);\n            this.actions = element;\n        }\n    }\n    get element() {\n        return this._element;\n    }\n    isActive(tab) {\n        return (this.selectedIndex > -1 &&\n            this.tabs[this.selectedIndex].value === tab);\n    }\n    indexOf(id) {\n        return this.tabs.findIndex((tab) => tab.value.panelId === id);\n    }\n    constructor(accessor, group) {\n        super();\n        this.accessor = accessor;\n        this.group = group;\n        this.tabs = [];\n        this.selectedIndex = -1;\n        this._hidden = false;\n        this._onDrop = new Emitter();\n        this.onDrop = this._onDrop.event;\n        this.addDisposables(this._onDrop);\n        this._element = document.createElement('div');\n        this._element.className = 'tabs-and-actions-container';\n        this.height = accessor.options.tabHeight;\n        toggleClass(this._element, 'dv-full-width-single-tab', this.accessor.options.singleTabMode === 'fullwidth');\n        this.addDisposables(this.accessor.onDidAddPanel((e) => {\n            if (e.api.group === this.group) {\n                toggleClass(this._element, 'dv-single-tab', this.size === 1);\n            }\n        }), this.accessor.onDidRemovePanel((e) => {\n            if (e.api.group === this.group) {\n                toggleClass(this._element, 'dv-single-tab', this.size === 1);\n            }\n        }));\n        this.actionContainer = document.createElement('div');\n        this.actionContainer.className = 'action-container';\n        this.tabContainer = document.createElement('div');\n        this.tabContainer.className = 'tabs-container';\n        this.voidContainer = new VoidContainer(this.accessor, this.group);\n        this._element.appendChild(this.tabContainer);\n        this._element.appendChild(this.voidContainer.element);\n        this._element.appendChild(this.actionContainer);\n        this.addDisposables(this.voidContainer, this.voidContainer.onDrop((event) => {\n            this._onDrop.fire({\n                event: event.nativeEvent,\n                index: this.tabs.length,\n            });\n        }), addDisposableListener(this.tabContainer, 'mousedown', (event) => {\n            if (event.defaultPrevented) {\n                return;\n            }\n            const isLeftClick = event.button === 0;\n            if (isLeftClick) {\n                this.accessor.doSetGroupActive(this.group);\n            }\n        }));\n    }\n    setActive(_isGroupActive) {\n        // noop\n    }\n    addTab(tab, index = this.tabs.length) {\n        if (index < 0 || index > this.tabs.length) {\n            throw new Error('invalid location');\n        }\n        this.tabContainer.insertBefore(tab.value.element, this.tabContainer.children[index]);\n        this.tabs = [\n            ...this.tabs.slice(0, index),\n            tab,\n            ...this.tabs.slice(index),\n        ];\n        if (this.selectedIndex < 0) {\n            this.selectedIndex = index;\n        }\n    }\n    delete(id) {\n        const index = this.tabs.findIndex((tab) => tab.value.panelId === id);\n        const tabToRemove = this.tabs.splice(index, 1)[0];\n        const { value, disposable } = tabToRemove;\n        disposable.dispose();\n        value.element.remove();\n    }\n    setActivePanel(panel) {\n        this.tabs.forEach((tab) => {\n            const isActivePanel = panel.id === tab.value.panelId;\n            tab.value.setActive(isActivePanel);\n        });\n    }\n    openPanel(panel, index = this.tabs.length) {\n        var _a;\n        if (this.tabs.find((tab) => tab.value.panelId === panel.id)) {\n            return;\n        }\n        const tabToAdd = new Tab(panel.id, this.accessor, this.group);\n        if (!((_a = panel.view) === null || _a === void 0 ? void 0 : _a.tab)) {\n            throw new Error('invalid header component');\n        }\n        tabToAdd.setContent(panel.view.tab);\n        const disposable = CompositeDisposable.from(tabToAdd.onChanged((event) => {\n            var _a;\n            const alreadyFocused = panel.id === ((_a = this.group.model.activePanel) === null || _a === void 0 ? void 0 : _a.id) &&\n                this.group.model.isContentFocused;\n            const isLeftClick = event.button === 0;\n            if (!isLeftClick || event.defaultPrevented) {\n                return;\n            }\n            this.group.model.openPanel(panel, {\n                skipFocus: alreadyFocused,\n            });\n        }), tabToAdd.onDrop((event) => {\n            this._onDrop.fire({\n                event: event.nativeEvent,\n                index: this.tabs.findIndex((x) => x.value === tabToAdd),\n            });\n        }));\n        const value = { value: tabToAdd, disposable };\n        this.addTab(value, index);\n    }\n    closePanel(panel) {\n        this.delete(panel.id);\n    }\n    dispose() {\n        super.dispose();\n        this.tabs.forEach((tab) => {\n            tab.disposable.dispose();\n        });\n        this.tabs = [];\n    }\n}\n","import { DockviewApi } from '../api/component.api';\nimport { getPanelData } from '../dnd/dataTransfer';\nimport { Droptarget } from '../dnd/droptarget';\nimport { isAncestor, toggleClass } from '../dom';\nimport { addDisposableListener, Emitter } from '../events';\nimport { CompositeDisposable } from '../lifecycle';\nimport { ContentContainer, } from './components/panel/content';\nimport { TabsContainer, } from './components/titlebar/tabsContainer';\nimport { DockviewDropTargets } from './types';\nexport class DockviewGroupPanelModel extends CompositeDisposable {\n    get element() {\n        throw new Error('not supported');\n    }\n    get activePanel() {\n        return this._activePanel;\n    }\n    get locked() {\n        return this._locked;\n    }\n    set locked(value) {\n        this._locked = value;\n        toggleClass(this.container, 'locked-groupview', value);\n    }\n    get isActive() {\n        return this._isGroupActive;\n    }\n    get panels() {\n        return this._panels;\n    }\n    get size() {\n        return this._panels.length;\n    }\n    get isEmpty() {\n        return this._panels.length === 0;\n    }\n    get hasWatermark() {\n        return !!(this.watermark && this.container.contains(this.watermark.element));\n    }\n    get header() {\n        return this.tabsContainer;\n    }\n    get isContentFocused() {\n        if (!document.activeElement) {\n            return false;\n        }\n        return isAncestor(document.activeElement, this.contentContainer.element);\n    }\n    constructor(container, accessor, id, options, groupPanel) {\n        super();\n        this.container = container;\n        this.accessor = accessor;\n        this.id = id;\n        this.options = options;\n        this.groupPanel = groupPanel;\n        this._isGroupActive = false;\n        this._locked = false;\n        this.mostRecentlyUsed = [];\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._width = 0;\n        this._height = 0;\n        this._panels = [];\n        this._onMove = new Emitter();\n        this.onMove = this._onMove.event;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onDidAddPanel = new Emitter();\n        this.onDidAddPanel = this._onDidAddPanel.event;\n        this._onDidRemovePanel = new Emitter();\n        this.onDidRemovePanel = this._onDidRemovePanel.event;\n        this._onDidActivePanelChange = new Emitter();\n        this.onDidActivePanelChange = this._onDidActivePanelChange.event;\n        this.container.classList.add('groupview');\n        this.tabsContainer = new TabsContainer(this.accessor, this.groupPanel);\n        this.contentContainer = new ContentContainer();\n        this.dropTarget = new Droptarget(this.contentContainer.element, {\n            acceptedTargetZones: ['top', 'bottom', 'left', 'right', 'center'],\n            canDisplayOverlay: (event, position) => {\n                if (this.locked && position === 'center') {\n                    return false;\n                }\n                const data = getPanelData();\n                if (data && data.viewId === this.accessor.id) {\n                    if (data.groupId === this.id) {\n                        if (position === 'center') {\n                            // don't allow to drop on self for center position\n                            return false;\n                        }\n                        if (data.panelId === null) {\n                            // don't allow group move to drop anywhere on self\n                            return false;\n                        }\n                    }\n                    const groupHasOnePanelAndIsActiveDragElement = this._panels.length === 1 && data.groupId === this.id;\n                    return !groupHasOnePanelAndIsActiveDragElement;\n                }\n                return this.canDisplayOverlay(event, position, DockviewDropTargets.Panel);\n            },\n        });\n        container.append(this.tabsContainer.element, this.contentContainer.element);\n        this.header.hidden = !!options.hideHeader;\n        this.locked = !!options.locked;\n        this.addDisposables(this._onMove, this._onDidChange, this._onDidDrop, this._onDidAddPanel, this._onDidRemovePanel, this._onDidActivePanelChange, this.tabsContainer.onDrop((event) => {\n            this.handleDropEvent(event.event, 'center', event.index);\n        }), this.contentContainer.onDidFocus(() => {\n            this.accessor.doSetGroupActive(this.groupPanel, true);\n        }), this.contentContainer.onDidBlur(() => {\n            // noop\n        }), this.dropTarget.onDrop((event) => {\n            this.handleDropEvent(event.nativeEvent, event.position);\n        }));\n    }\n    initialize() {\n        var _a, _b;\n        if ((_a = this.options) === null || _a === void 0 ? void 0 : _a.panels) {\n            this.options.panels.forEach((panel) => {\n                this.doAddPanel(panel);\n            });\n        }\n        if ((_b = this.options) === null || _b === void 0 ? void 0 : _b.activePanel) {\n            this.openPanel(this.options.activePanel);\n        }\n        // must be run after the constructor otherwise this.parent may not be\n        // correctly initialized\n        this.setActive(this.isActive, true, true);\n        this.updateContainer();\n        if (this.accessor.options.createGroupControlElement) {\n            this._control = this.accessor.options.createGroupControlElement(this.groupPanel);\n            this.addDisposables(this._control);\n            this._control.init({\n                containerApi: new DockviewApi(this.accessor),\n                api: this.groupPanel.api,\n            });\n            this.tabsContainer.setActionElement(this._control.element);\n        }\n    }\n    indexOf(panel) {\n        return this.tabsContainer.indexOf(panel.id);\n    }\n    toJSON() {\n        var _a;\n        const result = {\n            views: this.tabsContainer.panels,\n            activeView: (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.id,\n            id: this.id,\n        };\n        if (this.locked) {\n            result.locked = true;\n        }\n        if (this.header.hidden) {\n            result.hideHeader = true;\n        }\n        return result;\n    }\n    moveToNext(options) {\n        if (!options) {\n            options = {};\n        }\n        if (!options.panel) {\n            options.panel = this.activePanel;\n        }\n        const index = options.panel ? this.panels.indexOf(options.panel) : -1;\n        let normalizedIndex;\n        if (index < this.panels.length - 1) {\n            normalizedIndex = index + 1;\n        }\n        else if (!options.suppressRoll) {\n            normalizedIndex = 0;\n        }\n        else {\n            return;\n        }\n        this.openPanel(this.panels[normalizedIndex]);\n    }\n    moveToPrevious(options) {\n        if (!options) {\n            options = {};\n        }\n        if (!options.panel) {\n            options.panel = this.activePanel;\n        }\n        if (!options.panel) {\n            return;\n        }\n        const index = this.panels.indexOf(options.panel);\n        let normalizedIndex;\n        if (index > 0) {\n            normalizedIndex = index - 1;\n        }\n        else if (!options.suppressRoll) {\n            normalizedIndex = this.panels.length - 1;\n        }\n        else {\n            return;\n        }\n        this.openPanel(this.panels[normalizedIndex]);\n    }\n    containsPanel(panel) {\n        return this.panels.includes(panel);\n    }\n    init(_params) {\n        //noop\n    }\n    update(_params) {\n        //noop\n    }\n    focus() {\n        var _a, _b;\n        (_b = (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.focus) === null || _b === void 0 ? void 0 : _b.call(_a);\n    }\n    openPanel(panel, options = {}) {\n        if (typeof options.index !== 'number' ||\n            options.index > this.panels.length) {\n            options.index = this.panels.length;\n        }\n        const skipSetPanelActive = !!options.skipSetPanelActive;\n        const skipSetGroupActive = !!options.skipSetGroupActive;\n        // ensure the group is updated before we fire any events\n        panel.updateParentGroup(this.groupPanel, true);\n        if (this._activePanel === panel) {\n            if (!skipSetGroupActive) {\n                this.accessor.doSetGroupActive(this.groupPanel);\n            }\n            return;\n        }\n        this.doAddPanel(panel, options.index, skipSetPanelActive);\n        if (!skipSetPanelActive) {\n            this.doSetActivePanel(panel);\n        }\n        if (!skipSetGroupActive) {\n            this.accessor.doSetGroupActive(this.groupPanel, !!options.skipFocus);\n        }\n        this.updateContainer();\n    }\n    removePanel(groupItemOrId) {\n        const id = typeof groupItemOrId === 'string'\n            ? groupItemOrId\n            : groupItemOrId.id;\n        const panelToRemove = this._panels.find((panel) => panel.id === id);\n        if (!panelToRemove) {\n            throw new Error('invalid operation');\n        }\n        return this._removePanel(panelToRemove);\n    }\n    closeAllPanels() {\n        if (this.panels.length > 0) {\n            // take a copy since we will be edting the array as we iterate through\n            const arrPanelCpy = [...this.panels];\n            for (const panel of arrPanelCpy) {\n                this.doClose(panel);\n            }\n        }\n        else {\n            this.accessor.removeGroup(this.groupPanel);\n        }\n    }\n    closePanel(panel) {\n        this.doClose(panel);\n    }\n    doClose(panel) {\n        this.accessor.removePanel(panel);\n    }\n    isPanelActive(panel) {\n        return this._activePanel === panel;\n    }\n    updateActions(element) {\n        this.tabsContainer.setActionElement(element);\n    }\n    setActive(isGroupActive, skipFocus = false, force = false) {\n        var _a, _b, _c, _d;\n        if (!force && this.isActive === isGroupActive) {\n            if (!skipFocus) {\n                (_b = (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.focus) === null || _b === void 0 ? void 0 : _b.call(_a);\n            }\n            return;\n        }\n        this._isGroupActive = isGroupActive;\n        toggleClass(this.container, 'active-group', isGroupActive);\n        toggleClass(this.container, 'inactive-group', !isGroupActive);\n        this.tabsContainer.setActive(this.isActive);\n        if (!this._activePanel && this.panels.length > 0) {\n            this.doSetActivePanel(this.panels[0]);\n        }\n        this.updateContainer();\n        if (isGroupActive) {\n            if (!skipFocus) {\n                (_d = (_c = this._activePanel) === null || _c === void 0 ? void 0 : _c.focus) === null || _d === void 0 ? void 0 : _d.call(_c);\n            }\n        }\n    }\n    layout(width, height) {\n        var _a;\n        this._width = width;\n        this._height = height;\n        this.contentContainer.layout(this._width, this._height);\n        if ((_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.layout) {\n            this._activePanel.layout(this._width, this._height);\n        }\n    }\n    _removePanel(panel) {\n        const isActivePanel = this._activePanel === panel;\n        this.doRemovePanel(panel);\n        if (isActivePanel && this.panels.length > 0) {\n            const nextPanel = this.mostRecentlyUsed[0];\n            this.openPanel(nextPanel);\n        }\n        if (this._activePanel && this.panels.length === 0) {\n            this.doSetActivePanel(undefined);\n        }\n        this.updateContainer();\n        return panel;\n    }\n    doRemovePanel(panel) {\n        const index = this.panels.indexOf(panel);\n        if (this._activePanel === panel) {\n            this.contentContainer.closePanel();\n        }\n        this.tabsContainer.delete(panel.id);\n        this._panels.splice(index, 1);\n        if (this.mostRecentlyUsed.includes(panel)) {\n            this.mostRecentlyUsed.splice(this.mostRecentlyUsed.indexOf(panel), 1);\n        }\n        this._onDidRemovePanel.fire({ panel });\n    }\n    doAddPanel(panel, index = this.panels.length, skipSetActive = false) {\n        const existingPanel = this._panels.indexOf(panel);\n        const hasExistingPanel = existingPanel > -1;\n        this.tabsContainer.openPanel(panel, index);\n        if (!skipSetActive) {\n            this.contentContainer.openPanel(panel);\n        }\n        this.tabsContainer.show();\n        this.contentContainer.show();\n        if (hasExistingPanel) {\n            // TODO - need to ensure ordering hasn't changed and if it has need to re-order this.panels\n            return;\n        }\n        this.updateMru(panel);\n        this.panels.splice(index, 0, panel);\n        this._onDidAddPanel.fire({ panel });\n    }\n    doSetActivePanel(panel) {\n        this._activePanel = panel;\n        if (panel) {\n            this.tabsContainer.setActivePanel(panel);\n            panel.layout(this._width, this._height);\n            this.updateMru(panel);\n            this._onDidActivePanelChange.fire({ panel });\n        }\n    }\n    updateMru(panel) {\n        if (this.mostRecentlyUsed.includes(panel)) {\n            this.mostRecentlyUsed.splice(this.mostRecentlyUsed.indexOf(panel), 1);\n        }\n        this.mostRecentlyUsed = [panel, ...this.mostRecentlyUsed];\n    }\n    updateContainer() {\n        var _a, _b;\n        toggleClass(this.container, 'empty', this.isEmpty);\n        this.panels.forEach((panel) => panel.updateParentGroup(this.groupPanel, this.isActive));\n        if (this.isEmpty && !this.watermark) {\n            const watermark = this.accessor.createWatermarkComponent();\n            watermark.init({\n                containerApi: new DockviewApi(this.accessor),\n                group: this.groupPanel,\n            });\n            this.watermark = watermark;\n            addDisposableListener(this.watermark.element, 'click', () => {\n                if (!this.isActive) {\n                    this.accessor.doSetGroupActive(this.groupPanel);\n                }\n            });\n            this.tabsContainer.hide();\n            this.contentContainer.element.appendChild(this.watermark.element);\n            this.watermark.updateParentGroup(this.groupPanel, true);\n        }\n        if (!this.isEmpty && this.watermark) {\n            this.watermark.element.remove();\n            (_b = (_a = this.watermark).dispose) === null || _b === void 0 ? void 0 : _b.call(_a);\n            this.watermark = undefined;\n            this.tabsContainer.show();\n        }\n    }\n    canDisplayOverlay(event, position, target) {\n        // custom overlay handler\n        if (this.accessor.options.showDndOverlay) {\n            return this.accessor.options.showDndOverlay({\n                nativeEvent: event,\n                target,\n                group: this.accessor.getPanel(this.id),\n                position,\n                getData: getPanelData,\n            });\n        }\n        return false;\n    }\n    handleDropEvent(event, position, index) {\n        const data = getPanelData();\n        if (data && data.viewId === this.accessor.id) {\n            if (data.panelId === null) {\n                // this is a group move dnd event\n                const { groupId } = data;\n                this._onMove.fire({\n                    target: position,\n                    groupId: groupId,\n                    index,\n                });\n                return;\n            }\n            const fromSameGroup = this.tabsContainer.indexOf(data.panelId) !== -1;\n            if (fromSameGroup && this.tabsContainer.size === 1) {\n                return;\n            }\n            const { groupId, panelId } = data;\n            const isSameGroup = this.id === groupId;\n            if (isSameGroup && !position) {\n                const oldIndex = this.tabsContainer.indexOf(panelId);\n                if (oldIndex === index) {\n                    return;\n                }\n            }\n            this._onMove.fire({\n                target: position,\n                groupId: data.groupId,\n                itemId: data.panelId,\n                index,\n            });\n        }\n        else {\n            this._onDidDrop.fire({\n                nativeEvent: event,\n                position,\n                index,\n                getData: () => getPanelData(),\n            });\n        }\n    }\n    dispose() {\n        var _a, _b;\n        super.dispose();\n        (_b = (_a = this.watermark) === null || _a === void 0 ? void 0 : _a.dispose) === null || _b === void 0 ? void 0 : _b.call(_a);\n        for (const panel of this.panels) {\n            panel.dispose();\n        }\n        this.dropTarget.dispose();\n        this.tabsContainer.dispose();\n        this.contentContainer.dispose();\n    }\n}\n","import { Emitter, Event, TickDelayedEvent } from '../events';\nimport { getGridLocation, Gridview } from './gridview';\nimport { CompositeDisposable } from '../lifecycle';\nimport { sequentialNumberGenerator } from '../math';\nimport { Sizing } from '../splitview/splitview';\nconst nextLayoutId = sequentialNumberGenerator();\nexport function toTarget(direction) {\n    switch (direction) {\n        case 'left':\n            return 'left';\n        case 'right':\n            return 'right';\n        case 'above':\n            return 'top';\n        case 'below':\n            return 'bottom';\n        case 'within':\n        default:\n            return 'center';\n    }\n}\nexport class BaseGrid extends CompositeDisposable {\n    get id() {\n        return this._id;\n    }\n    get element() {\n        return this._element;\n    }\n    get size() {\n        return this._groups.size;\n    }\n    get groups() {\n        return Array.from(this._groups.values()).map((_) => _.value);\n    }\n    get width() {\n        return this.gridview.width;\n    }\n    get height() {\n        return this.gridview.height;\n    }\n    get minimumHeight() {\n        return this.gridview.minimumHeight;\n    }\n    get maximumHeight() {\n        return this.gridview.maximumHeight;\n    }\n    get minimumWidth() {\n        return this.gridview.minimumWidth;\n    }\n    get maximumWidth() {\n        return this.gridview.maximumWidth;\n    }\n    get activeGroup() {\n        return this._activeGroup;\n    }\n    constructor(_element, options) {\n        super();\n        this._element = _element;\n        this._id = nextLayoutId.next();\n        this._groups = new Map();\n        this._onDidLayoutChange = new Emitter();\n        this.onDidLayoutChange = this._onDidLayoutChange.event;\n        this._onDidRemoveGroup = new Emitter();\n        this.onDidRemoveGroup = this._onDidRemoveGroup.event;\n        this._onDidAddGroup = new Emitter();\n        this.onDidAddGroup = this._onDidAddGroup.event;\n        this._onDidActiveGroupChange = new Emitter();\n        this.onDidActiveGroupChange = this._onDidActiveGroupChange.event;\n        this._bufferOnDidLayoutChange = new TickDelayedEvent();\n        this.gridview = new Gridview(!!options.proportionalLayout, options.styles, options.orientation);\n        this.element.appendChild(this.gridview.element);\n        this.layout(0, 0, true); // set some elements height/widths\n        this.addDisposables(this.gridview.onDidChange(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }));\n        this.addDisposables(Event.any(this.onDidAddGroup, this.onDidRemoveGroup, this.onDidActiveGroupChange)(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), this._bufferOnDidLayoutChange.onEvent(() => {\n            this._onDidLayoutChange.fire();\n        }), this._bufferOnDidLayoutChange);\n    }\n    setVisible(panel, visible) {\n        this.gridview.setViewVisible(getGridLocation(panel.element), visible);\n        this._onDidLayoutChange.fire();\n    }\n    isVisible(panel) {\n        return this.gridview.isViewVisible(getGridLocation(panel.element));\n    }\n    doAddGroup(group, location = [0], size) {\n        this.gridview.addView(group, size !== null && size !== void 0 ? size : Sizing.Distribute, location);\n        this._onDidAddGroup.fire(group);\n        this.doSetGroupActive(group);\n    }\n    doRemoveGroup(group, options) {\n        if (!this._groups.has(group.id)) {\n            throw new Error('invalid operation');\n        }\n        const item = this._groups.get(group.id);\n        const view = this.gridview.remove(group, Sizing.Distribute);\n        if (item && !(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n            item.disposable.dispose();\n            item.value.dispose();\n            this._groups.delete(group.id);\n        }\n        this._onDidRemoveGroup.fire(group);\n        if (!(options === null || options === void 0 ? void 0 : options.skipActive) && this._activeGroup === group) {\n            const groups = Array.from(this._groups.values());\n            this.doSetGroupActive(groups.length > 0 ? groups[0].value : undefined);\n        }\n        return view;\n    }\n    getPanel(id) {\n        var _a;\n        return (_a = this._groups.get(id)) === null || _a === void 0 ? void 0 : _a.value;\n    }\n    doSetGroupActive(group, skipFocus) {\n        var _a, _b, _c;\n        if (this._activeGroup === group) {\n            return;\n        }\n        if (this._activeGroup) {\n            this._activeGroup.setActive(false);\n            if (!skipFocus) {\n                (_b = (_a = this._activeGroup).focus) === null || _b === void 0 ? void 0 : _b.call(_a);\n            }\n        }\n        if (group) {\n            group.setActive(true);\n            if (!skipFocus) {\n                (_c = group.focus) === null || _c === void 0 ? void 0 : _c.call(group);\n            }\n        }\n        this._activeGroup = group;\n        this._onDidActiveGroupChange.fire(group);\n    }\n    removeGroup(group) {\n        this.doRemoveGroup(group);\n    }\n    moveToNext(options) {\n        var _a;\n        if (!options) {\n            options = {};\n        }\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.next(location)) === null || _a === void 0 ? void 0 : _a.view;\n        this.doSetGroupActive(next);\n    }\n    moveToPrevious(options) {\n        var _a;\n        if (!options) {\n            options = {};\n        }\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.previous(location)) === null || _a === void 0 ? void 0 : _a.view;\n        this.doSetGroupActive(next);\n    }\n    layout(width, height, forceResize) {\n        const different = forceResize || width !== this.width || height !== this.height;\n        if (!different) {\n            return;\n        }\n        this.element.style.height = `${height}px`;\n        this.element.style.width = `${width}px`;\n        this.gridview.layout(width, height);\n    }\n    dispose() {\n        super.dispose();\n        this._onDidActiveGroupChange.dispose();\n        this._onDidAddGroup.dispose();\n        this._onDidRemoveGroup.dispose();\n        this._onDidLayoutChange.dispose();\n        for (const group of this.groups) {\n            group.dispose();\n        }\n        this.gridview.dispose();\n    }\n}\n","import { Emitter } from '../events';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\n/**\n * A core api implementation that should be used across all panel-like objects\n */\nexport class PanelApiImpl extends CompositeDisposable {\n    //\n    get isFocused() {\n        return this._isFocused;\n    }\n    get isActive() {\n        return this._isActive;\n    }\n    get isVisible() {\n        return this._isVisible;\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    constructor(id) {\n        super();\n        this.id = id;\n        this._isFocused = false;\n        this._isActive = false;\n        this._isVisible = true;\n        this._width = 0;\n        this._height = 0;\n        this.panelUpdatesDisposable = new MutableDisposable();\n        this._onDidDimensionChange = new Emitter({\n            replay: true,\n        });\n        this.onDidDimensionsChange = this._onDidDimensionChange.event;\n        //\n        this._onDidChangeFocus = new Emitter({\n            replay: true,\n        });\n        this.onDidFocusChange = this._onDidChangeFocus.event;\n        //\n        this._onFocusEvent = new Emitter();\n        this.onFocusEvent = this._onFocusEvent.event;\n        //\n        this._onDidVisibilityChange = new Emitter({\n            replay: true,\n        });\n        this.onDidVisibilityChange = this._onDidVisibilityChange.event;\n        //\n        this._onVisibilityChange = new Emitter();\n        this.onVisibilityChange = this._onVisibilityChange.event;\n        //\n        this._onDidActiveChange = new Emitter({\n            replay: true,\n        });\n        this.onDidActiveChange = this._onDidActiveChange.event;\n        //\n        this._onActiveChange = new Emitter();\n        this.onActiveChange = this._onActiveChange.event;\n        //\n        this._onUpdateParameters = new Emitter();\n        this.onUpdateParameters = this._onUpdateParameters.event;\n        this.addDisposables(this.panelUpdatesDisposable, this._onDidDimensionChange, this._onDidChangeFocus, this._onDidVisibilityChange, this._onDidActiveChange, this._onFocusEvent, this._onActiveChange, this._onVisibilityChange, this._onUpdateParameters, this.onDidFocusChange((event) => {\n            this._isFocused = event.isFocused;\n        }), this.onDidActiveChange((event) => {\n            this._isActive = event.isActive;\n        }), this.onDidVisibilityChange((event) => {\n            this._isVisible = event.isVisible;\n        }), this.onDidDimensionsChange((event) => {\n            this._width = event.width;\n            this._height = event.height;\n        }));\n    }\n    initialize(panel) {\n        this.panelUpdatesDisposable.value = this._onUpdateParameters.event((parameters) => {\n            panel.update({\n                params: {\n                    params: parameters,\n                },\n            });\n        });\n    }\n    setVisible(isVisible) {\n        this._onVisibilityChange.fire({ isVisible });\n    }\n    setActive() {\n        this._onActiveChange.fire();\n    }\n    updateParameters(parameters) {\n        this._onUpdateParameters.fire(parameters);\n    }\n    dispose() {\n        super.dispose();\n    }\n}\n","import { Emitter } from '../events';\nimport { PanelApiImpl } from './panelApi';\nexport class SplitviewPanelApiImpl extends PanelApiImpl {\n    //\n    constructor(id) {\n        super(id);\n        this._onDidConstraintsChangeInternal = new Emitter();\n        this.onDidConstraintsChangeInternal = this._onDidConstraintsChangeInternal.event;\n        //\n        this._onDidConstraintsChange = new Emitter({\n            replay: true,\n        });\n        this.onDidConstraintsChange = this._onDidConstraintsChange.event;\n        //\n        this._onDidSizeChange = new Emitter();\n        this.onDidSizeChange = this._onDidSizeChange.event;\n        this.addDisposables(this._onDidConstraintsChangeInternal, this._onDidConstraintsChange, this._onDidSizeChange);\n    }\n    setConstraints(value) {\n        this._onDidConstraintsChangeInternal.fire(value);\n    }\n    setSize(event) {\n        this._onDidSizeChange.fire(event);\n    }\n}\n","import { Emitter } from '../events';\nimport { SplitviewPanelApiImpl } from './splitviewPanelApi';\nexport class PaneviewPanelApiImpl extends SplitviewPanelApiImpl {\n    set pane(pane) {\n        this._pane = pane;\n    }\n    constructor(id) {\n        super(id);\n        this._onDidExpansionChange = new Emitter({\n            replay: true,\n        });\n        this.onDidExpansionChange = this._onDidExpansionChange.event;\n        this._onMouseEnter = new Emitter({});\n        this.onMouseEnter = this._onMouseEnter.event;\n        this._onMouseLeave = new Emitter({});\n        this.onMouseLeave = this._onMouseLeave.event;\n        this.addDisposables(this._onDidExpansionChange, this._onMouseEnter, this._onMouseLeave);\n    }\n    setExpanded(isExpanded) {\n        var _a;\n        (_a = this._pane) === null || _a === void 0 ? void 0 : _a.setExpanded(isExpanded);\n    }\n    get isExpanded() {\n        var _a;\n        return !!((_a = this._pane) === null || _a === void 0 ? void 0 : _a.isExpanded());\n    }\n}\n","import { trackFocus } from '../dom';\nimport { CompositeDisposable } from '../lifecycle';\nexport class BasePanelView extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    get params() {\n        var _a;\n        return (_a = this._params) === null || _a === void 0 ? void 0 : _a.params;\n    }\n    constructor(id, component, api) {\n        super();\n        this.id = id;\n        this.component = component;\n        this.api = api;\n        this._height = 0;\n        this._width = 0;\n        this._element = document.createElement('div');\n        this._element.tabIndex = -1;\n        this._element.style.outline = 'none';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n        this._element.style.overflow = 'hidden';\n        const { onDidFocus, onDidBlur } = trackFocus(this._element);\n        this.addDisposables(this.api, onDidFocus(() => {\n            this.api._onDidChangeFocus.fire({ isFocused: true });\n        }), onDidBlur(() => {\n            this.api._onDidChangeFocus.fire({ isFocused: false });\n        }));\n    }\n    focus() {\n        this.api._onFocusEvent.fire();\n    }\n    layout(width, height) {\n        this._width = width;\n        this._height = height;\n        this.api._onDidDimensionChange.fire({ width, height });\n        if (this.part) {\n            if (this._params) {\n                this.part.update(this._params.params);\n            }\n        }\n    }\n    init(parameters) {\n        this._params = parameters;\n        this.part = this.getComponent();\n    }\n    update(event) {\n        var _a, _b;\n        this._params = Object.assign(Object.assign({}, this._params), { params: Object.assign(Object.assign({}, (_a = this._params) === null || _a === void 0 ? void 0 : _a.params), event.params) });\n        (_b = this.part) === null || _b === void 0 ? void 0 : _b.update({ params: this._params.params });\n    }\n    toJSON() {\n        var _a, _b;\n        const params = (_b = (_a = this._params) === null || _a === void 0 ? void 0 : _a.params) !== null && _b !== void 0 ? _b : {};\n        return {\n            id: this.id,\n            component: this.component,\n            params: Object.keys(params).length > 0 ? params : undefined,\n        };\n    }\n    dispose() {\n        var _a;\n        super.dispose();\n        this.api.dispose();\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import { PaneviewPanelApiImpl } from '../api/paneviewPanelApi';\nimport { addClasses, removeClasses } from '../dom';\nimport { addDisposableListener, Emitter } from '../events';\nimport { BasePanelView, } from '../gridview/basePanelView';\nimport { Orientation } from '../splitview/splitview';\nexport class PaneviewPanel extends BasePanelView {\n    set orientation(value) {\n        this._orientation = value;\n    }\n    get orientation() {\n        return this._orientation;\n    }\n    get minimumSize() {\n        const headerSize = this.headerSize;\n        const expanded = this.isExpanded();\n        const minimumBodySize = expanded ? this._minimumBodySize : 0;\n        return headerSize + minimumBodySize;\n    }\n    get maximumSize() {\n        const headerSize = this.headerSize;\n        const expanded = this.isExpanded();\n        const maximumBodySize = expanded ? this._maximumBodySize : 0;\n        return headerSize + maximumBodySize;\n    }\n    get size() {\n        return this._size;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    set orthogonalSize(size) {\n        this._orthogonalSize = size;\n    }\n    get minimumBodySize() {\n        return this._minimumBodySize;\n    }\n    set minimumBodySize(value) {\n        this._minimumBodySize = typeof value === 'number' ? value : 0;\n    }\n    get maximumBodySize() {\n        return this._maximumBodySize;\n    }\n    set maximumBodySize(value) {\n        this._maximumBodySize =\n            typeof value === 'number' ? value : Number.POSITIVE_INFINITY;\n    }\n    get headerVisible() {\n        return this._headerVisible;\n    }\n    set headerVisible(value) {\n        this._headerVisible = value;\n        this.header.style.display = value ? '' : 'none';\n    }\n    constructor(id, component, headerComponent, orientation, isExpanded, isHeaderVisible) {\n        super(id, component, new PaneviewPanelApiImpl(id));\n        this.headerComponent = headerComponent;\n        this._onDidChangeExpansionState = new Emitter({ replay: true });\n        this.onDidChangeExpansionState = this._onDidChangeExpansionState.event;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this.headerSize = 22;\n        this._orthogonalSize = 0;\n        this._size = 0;\n        this._minimumBodySize = 100;\n        this._maximumBodySize = Number.POSITIVE_INFINITY;\n        this._isExpanded = false;\n        this.expandedSize = 0;\n        this.api.pane = this; // TODO cannot use 'this' before 'super'\n        this.api.initialize(this);\n        this._isExpanded = isExpanded;\n        this._headerVisible = isHeaderVisible;\n        this._onDidChangeExpansionState.fire(this.isExpanded()); // initialize value\n        this._orientation = orientation;\n        this.element.classList.add('pane');\n        this.addDisposables(this.api.onDidSizeChange((event) => {\n            this._onDidChange.fire({ size: event.size });\n        }), addDisposableListener(this.element, 'mouseenter', (ev) => {\n            this.api._onMouseEnter.fire(ev);\n        }), addDisposableListener(this.element, 'mouseleave', (ev) => {\n            this.api._onMouseLeave.fire(ev);\n        }));\n        this.addDisposables(this._onDidChangeExpansionState, this.onDidChangeExpansionState((isPanelExpanded) => {\n            this.api._onDidExpansionChange.fire({\n                isExpanded: isPanelExpanded,\n            });\n        }), this.api.onDidFocusChange((e) => {\n            if (!this.header) {\n                return;\n            }\n            if (e.isFocused) {\n                addClasses(this.header, 'focused');\n            }\n            else {\n                removeClasses(this.header, 'focused');\n            }\n        }));\n        this.renderOnce();\n    }\n    setVisible(isVisible) {\n        this.api._onDidVisibilityChange.fire({ isVisible });\n    }\n    setActive(isActive) {\n        this.api._onDidActiveChange.fire({ isActive });\n    }\n    isExpanded() {\n        return this._isExpanded;\n    }\n    setExpanded(expanded) {\n        if (this._isExpanded === expanded) {\n            return;\n        }\n        this._isExpanded = expanded;\n        if (expanded) {\n            if (this.animationTimer) {\n                clearTimeout(this.animationTimer);\n            }\n            if (this.body) {\n                this.element.appendChild(this.body);\n            }\n        }\n        else {\n            this.animationTimer = setTimeout(() => {\n                var _a;\n                (_a = this.body) === null || _a === void 0 ? void 0 : _a.remove();\n            }, 200);\n        }\n        this._onDidChange.fire(expanded ? { size: this.width } : {});\n        this._onDidChangeExpansionState.fire(expanded);\n    }\n    layout(size, orthogonalSize) {\n        this._size = size;\n        this._orthogonalSize = orthogonalSize;\n        const [width, height] = this.orientation === Orientation.HORIZONTAL\n            ? [size, orthogonalSize]\n            : [orthogonalSize, size];\n        if (this.isExpanded()) {\n            this.expandedSize = width;\n        }\n        super.layout(width, height);\n    }\n    init(parameters) {\n        var _a, _b;\n        super.init(parameters);\n        if (typeof parameters.minimumBodySize === 'number') {\n            this.minimumBodySize = parameters.minimumBodySize;\n        }\n        if (typeof parameters.maximumBodySize === 'number') {\n            this.maximumBodySize = parameters.maximumBodySize;\n        }\n        this.bodyPart = this.getBodyComponent();\n        this.headerPart = this.getHeaderComponent();\n        this.bodyPart.init(Object.assign(Object.assign({}, parameters), { api: this.api }));\n        this.headerPart.init(Object.assign(Object.assign({}, parameters), { api: this.api }));\n        (_a = this.body) === null || _a === void 0 ? void 0 : _a.append(this.bodyPart.element);\n        (_b = this.header) === null || _b === void 0 ? void 0 : _b.append(this.headerPart.element);\n        if (typeof parameters.isExpanded === 'boolean') {\n            this.setExpanded(parameters.isExpanded);\n        }\n    }\n    toJSON() {\n        const params = this._params;\n        return Object.assign(Object.assign({}, super.toJSON()), { headerComponent: this.headerComponent, title: params.title });\n    }\n    renderOnce() {\n        this.header = document.createElement('div');\n        this.header.tabIndex = 0;\n        this.header.className = 'pane-header';\n        this.header.style.height = `${this.headerSize}px`;\n        this.header.style.lineHeight = `${this.headerSize}px`;\n        this.header.style.minHeight = `${this.headerSize}px`;\n        this.header.style.maxHeight = `${this.headerSize}px`;\n        this.element.appendChild(this.header);\n        this.body = document.createElement('div');\n        this.body.className = 'pane-body';\n        this.element.appendChild(this.body);\n    }\n    // TODO slightly hacky by-pass of the component to create a body and header component\n    getComponent() {\n        return {\n            update: (params) => {\n                var _a, _b;\n                (_a = this.bodyPart) === null || _a === void 0 ? void 0 : _a.update({ params });\n                (_b = this.headerPart) === null || _b === void 0 ? void 0 : _b.update({ params });\n            },\n            dispose: () => {\n                var _a, _b;\n                (_a = this.bodyPart) === null || _a === void 0 ? void 0 : _a.dispose();\n                (_b = this.headerPart) === null || _b === void 0 ? void 0 : _b.dispose();\n            },\n        };\n    }\n}\n","import { PaneviewApi } from '../api/component.api';\nimport { DragHandler } from '../dnd/abstractDragHandler';\nimport { getPaneData, LocalSelectionTransfer, PaneTransfer, } from '../dnd/dataTransfer';\nimport { Droptarget } from '../dnd/droptarget';\nimport { Emitter } from '../events';\nimport { PaneviewPanel, } from './paneviewPanel';\nexport class DraggablePaneviewPanel extends PaneviewPanel {\n    constructor(accessor, id, component, headerComponent, orientation, isExpanded, disableDnd) {\n        super(id, component, headerComponent, orientation, isExpanded, true);\n        this.accessor = accessor;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        if (!disableDnd) {\n            this.initDragFeatures();\n        }\n    }\n    initDragFeatures() {\n        if (!this.header) {\n            return;\n        }\n        const id = this.id;\n        const accessorId = this.accessor.id;\n        this.header.draggable = true;\n        this.handler = new (class PaneDragHandler extends DragHandler {\n            getData() {\n                LocalSelectionTransfer.getInstance().setData([new PaneTransfer(accessorId, id)], PaneTransfer.prototype);\n                return {\n                    dispose: () => {\n                        LocalSelectionTransfer.getInstance().clearData(PaneTransfer.prototype);\n                    },\n                };\n            }\n        })(this.header);\n        this.target = new Droptarget(this.element, {\n            acceptedTargetZones: ['top', 'bottom'],\n            overlayModel: {\n                activationSize: { type: 'percentage', value: 50 },\n            },\n            canDisplayOverlay: (event) => {\n                const data = getPaneData();\n                if (data) {\n                    if (data.paneId !== this.id &&\n                        data.viewId === this.accessor.id) {\n                        return true;\n                    }\n                }\n                if (this.accessor.options.showDndOverlay) {\n                    return this.accessor.options.showDndOverlay({\n                        nativeEvent: event,\n                        getData: getPaneData,\n                        panel: this,\n                    });\n                }\n                return false;\n            },\n        });\n        this.addDisposables(this._onDidDrop, this.handler, this.target, this.target.onDrop((event) => {\n            this.onDrop(event);\n        }));\n    }\n    onDrop(event) {\n        const data = getPaneData();\n        if (!data || data.viewId !== this.accessor.id) {\n            // if there is no local drag event for this panel\n            // or if the drag event was creating by another Paneview instance\n            this._onDidDrop.fire(Object.assign(Object.assign({}, event), { panel: this, api: new PaneviewApi(this.accessor), getData: getPaneData }));\n            return;\n        }\n        const containerApi = this._params\n            .containerApi;\n        const panelId = data.paneId;\n        const existingPanel = containerApi.getPanel(panelId);\n        if (!existingPanel) {\n            // if the panel doesn't exist\n            this._onDidDrop.fire(Object.assign(Object.assign({}, event), { panel: this, getData: getPaneData, api: new PaneviewApi(this.accessor) }));\n            return;\n        }\n        const allPanels = containerApi.panels;\n        const fromIndex = allPanels.indexOf(existingPanel);\n        let toIndex = containerApi.panels.indexOf(this);\n        if (event.position === 'left' || event.position === 'top') {\n            toIndex = Math.max(0, toIndex - 1);\n        }\n        if (event.position === 'right' || event.position === 'bottom') {\n            if (fromIndex > toIndex) {\n                toIndex++;\n            }\n            toIndex = Math.min(allPanels.length - 1, toIndex);\n        }\n        containerApi.movePanel(fromIndex, toIndex);\n    }\n}\n","import { Emitter } from '../events';\nimport { PanelApiImpl } from './panelApi';\nexport class GridviewPanelApiImpl extends PanelApiImpl {\n    constructor(id, panel) {\n        super(id);\n        this._onDidConstraintsChangeInternal = new Emitter();\n        this.onDidConstraintsChangeInternal = this._onDidConstraintsChangeInternal.event;\n        this._onDidConstraintsChange = new Emitter({\n            replay: true,\n        });\n        this.onDidConstraintsChange = this._onDidConstraintsChange.event;\n        this._onDidSizeChange = new Emitter();\n        this.onDidSizeChange = this._onDidSizeChange.event;\n        this.addDisposables(this._onDidConstraintsChangeInternal, this._onDidConstraintsChange, this._onDidSizeChange);\n        if (panel) {\n            this.initialize(panel);\n        }\n    }\n    setConstraints(value) {\n        this._onDidConstraintsChangeInternal.fire(value);\n    }\n    setSize(event) {\n        this._onDidSizeChange.fire(event);\n    }\n}\n","import { BasePanelView, } from './basePanelView';\nimport { GridviewPanelApiImpl, } from '../api/gridviewPanelApi';\nimport { Emitter } from '../events';\nexport class GridviewPanel extends BasePanelView {\n    get priority() {\n        return this._priority;\n    }\n    get snap() {\n        return this._snap;\n    }\n    get minimumWidth() {\n        const width = typeof this._minimumWidth === 'function'\n            ? this._minimumWidth()\n            : this._minimumWidth;\n        if (width !== this._evaluatedMinimumWidth) {\n            this._evaluatedMinimumWidth = width;\n            this.updateConstraints();\n        }\n        return width;\n    }\n    get minimumHeight() {\n        const height = typeof this._minimumHeight === 'function'\n            ? this._minimumHeight()\n            : this._minimumHeight;\n        if (height !== this._evaluatedMinimumHeight) {\n            this._evaluatedMinimumHeight = height;\n            this.updateConstraints();\n        }\n        return height;\n    }\n    get maximumHeight() {\n        const height = typeof this._maximumHeight === 'function'\n            ? this._maximumHeight()\n            : this._maximumHeight;\n        if (height !== this._evaluatedMaximumHeight) {\n            this._evaluatedMaximumHeight = height;\n            this.updateConstraints();\n        }\n        return height;\n    }\n    get maximumWidth() {\n        const width = typeof this._maximumWidth === 'function'\n            ? this._maximumWidth()\n            : this._maximumWidth;\n        if (width !== this._evaluatedMaximumWidth) {\n            this._evaluatedMaximumWidth = width;\n            this.updateConstraints();\n        }\n        return width;\n    }\n    get isActive() {\n        return this.api.isActive;\n    }\n    constructor(id, component, options) {\n        super(id, component, new GridviewPanelApiImpl(id));\n        this._evaluatedMinimumWidth = 0;\n        this._evaluatedMaximumWidth = Number.MAX_SAFE_INTEGER;\n        this._evaluatedMinimumHeight = 0;\n        this._evaluatedMaximumHeight = Number.MAX_SAFE_INTEGER;\n        this._minimumWidth = 0;\n        this._minimumHeight = 0;\n        this._maximumWidth = Number.MAX_SAFE_INTEGER;\n        this._maximumHeight = Number.MAX_SAFE_INTEGER;\n        this._snap = false;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        if (typeof (options === null || options === void 0 ? void 0 : options.minimumWidth) === 'number') {\n            this._minimumWidth = options.minimumWidth;\n        }\n        if (typeof (options === null || options === void 0 ? void 0 : options.maximumWidth) === 'number') {\n            this._maximumWidth = options.maximumWidth;\n        }\n        if (typeof (options === null || options === void 0 ? void 0 : options.minimumHeight) === 'number') {\n            this._minimumHeight = options.minimumHeight;\n        }\n        if (typeof (options === null || options === void 0 ? void 0 : options.maximumHeight) === 'number') {\n            this._maximumHeight = options.maximumHeight;\n        }\n        this.api.initialize(this); // TODO: required to by-pass 'super before this' requirement\n        this.addDisposables(this._onDidChange, this.api.onVisibilityChange((event) => {\n            const { isVisible } = event;\n            const { accessor } = this._params;\n            accessor.setVisible(this, isVisible);\n        }), this.api.onActiveChange(() => {\n            const { accessor } = this._params;\n            accessor.setActive(this);\n        }), this.api.onDidConstraintsChangeInternal((event) => {\n            if (typeof event.minimumWidth === 'number' ||\n                typeof event.minimumWidth === 'function') {\n                this._minimumWidth = event.minimumWidth;\n            }\n            if (typeof event.minimumHeight === 'number' ||\n                typeof event.minimumHeight === 'function') {\n                this._minimumHeight = event.minimumHeight;\n            }\n            if (typeof event.maximumWidth === 'number' ||\n                typeof event.maximumWidth === 'function') {\n                this._maximumWidth = event.maximumWidth;\n            }\n            if (typeof event.maximumHeight === 'number' ||\n                typeof event.maximumHeight === 'function') {\n                this._maximumHeight = event.maximumHeight;\n            }\n        }), this.api.onDidSizeChange((event) => {\n            this._onDidChange.fire({\n                height: event.height,\n                width: event.width,\n            });\n        }));\n    }\n    setVisible(isVisible) {\n        this.api._onDidVisibilityChange.fire({ isVisible });\n    }\n    setActive(isActive) {\n        this.api._onDidActiveChange.fire({ isActive });\n    }\n    init(parameters) {\n        if (parameters.maximumHeight) {\n            this._maximumHeight = parameters.maximumHeight;\n        }\n        if (parameters.minimumHeight) {\n            this._minimumHeight = parameters.minimumHeight;\n        }\n        if (parameters.maximumWidth) {\n            this._maximumWidth = parameters.maximumWidth;\n        }\n        if (parameters.minimumWidth) {\n            this._minimumWidth = parameters.minimumWidth;\n        }\n        this._priority = parameters.priority;\n        this._snap = !!parameters.snap;\n        super.init(parameters);\n        if (typeof parameters.isVisible === 'boolean') {\n            this.setVisible(parameters.isVisible);\n        }\n    }\n    updateConstraints() {\n        this.api._onDidConstraintsChange.fire({\n            minimumWidth: this._evaluatedMinimumWidth,\n            maximumWidth: this._evaluatedMaximumWidth,\n            minimumHeight: this._evaluatedMinimumHeight,\n            maximumHeight: this._evaluatedMaximumHeight,\n        });\n    }\n    toJSON() {\n        const state = super.toJSON();\n        const maximum = (value) => value === Number.MAX_SAFE_INTEGER ? undefined : value;\n        const minimum = (value) => (value <= 0 ? undefined : value);\n        return Object.assign(Object.assign({}, state), { minimumHeight: minimum(this.minimumHeight), maximumHeight: maximum(this.maximumHeight), minimumWidth: minimum(this.minimumWidth), maximumWidth: maximum(this.maximumWidth), snap: this.snap, priority: this.priority });\n    }\n}\n","import { DockviewGroupPanelModel, } from './dockviewGroupPanelModel';\nimport { GridviewPanel } from '../gridview/gridviewPanel';\nexport class DockviewGroupPanel extends GridviewPanel {\n    get panels() {\n        return this._model.panels;\n    }\n    get activePanel() {\n        return this._model.activePanel;\n    }\n    get size() {\n        return this._model.size;\n    }\n    get model() {\n        return this._model;\n    }\n    get locked() {\n        return this._model.locked;\n    }\n    set locked(value) {\n        this._model.locked = value;\n    }\n    get header() {\n        return this._model.header;\n    }\n    constructor(accessor, id, options) {\n        super(id, 'groupview_default', {\n            minimumHeight: 100,\n            minimumWidth: 100,\n        });\n        this._model = new DockviewGroupPanelModel(this.element, accessor, id, options, this);\n    }\n    initialize() {\n        this._model.initialize();\n    }\n    setActive(isActive) {\n        super.setActive(isActive);\n        this.model.setActive(isActive);\n    }\n    layout(width, height) {\n        super.layout(width, height);\n        this.model.layout(width, height);\n    }\n    getComponent() {\n        return this._model;\n    }\n    toJSON() {\n        // TODO fix typing\n        return this.model.toJSON();\n    }\n}\n","import { Emitter } from '../events';\nimport { GridviewPanelApiImpl } from './gridviewPanelApi';\nimport { MutableDisposable } from '../lifecycle';\nexport class DockviewPanelApiImpl extends GridviewPanelApiImpl {\n    get title() {\n        return this.panel.title;\n    }\n    get isGroupActive() {\n        var _a;\n        return !!((_a = this.group) === null || _a === void 0 ? void 0 : _a.isActive);\n    }\n    set group(value) {\n        const isOldGroupActive = this.isGroupActive;\n        this._group = value;\n        this._onDidGroupChange.fire();\n        if (this._group) {\n            this.disposable.value = this._group.api.onDidActiveChange(() => {\n                this._onDidActiveGroupChange.fire();\n            });\n            if (this.isGroupActive !== isOldGroupActive) {\n                this._onDidActiveGroupChange.fire();\n            }\n        }\n    }\n    get group() {\n        return this._group;\n    }\n    constructor(panel, group) {\n        super(panel.id);\n        this.panel = panel;\n        this._onDidTitleChange = new Emitter();\n        this.onDidTitleChange = this._onDidTitleChange.event;\n        this._onDidActiveGroupChange = new Emitter();\n        this.onDidActiveGroupChange = this._onDidActiveGroupChange.event;\n        this._onDidGroupChange = new Emitter();\n        this.onDidGroupChange = this._onDidGroupChange.event;\n        this.disposable = new MutableDisposable();\n        this.initialize(panel);\n        this._group = group;\n        this.addDisposables(this.disposable, this._onDidTitleChange, this._onDidGroupChange, this._onDidActiveGroupChange);\n    }\n    setTitle(title) {\n        this.panel.update({ params: { title } });\n    }\n    close() {\n        this.group.model.closePanel(this.panel);\n    }\n}\n","import { DockviewPanelApiImpl, } from '../api/dockviewPanelApi';\nimport { CompositeDisposable } from '../lifecycle';\nexport class DockviewPanel extends CompositeDisposable {\n    get params() {\n        return this._params;\n    }\n    get title() {\n        return this._title;\n    }\n    get group() {\n        return this._group;\n    }\n    constructor(id, accessor, containerApi, group, view) {\n        super();\n        this.id = id;\n        this.containerApi = containerApi;\n        this.view = view;\n        this._title = '';\n        this._group = group;\n        this.api = new DockviewPanelApiImpl(this, this._group);\n        this.addDisposables(this.api.onActiveChange(() => {\n            accessor.setActivePanel(this);\n        }), this.api.onDidSizeChange((event) => {\n            // forward the resize event to the group since if you want to resize a panel\n            // you are actually just resizing the panels parent which is the group\n            this.group.api.setSize(event);\n        }));\n    }\n    init(params) {\n        var _a;\n        this._params = params.params;\n        this.setTitle(params.title);\n        (_a = this.view) === null || _a === void 0 ? void 0 : _a.init(Object.assign(Object.assign({}, params), { api: this.api, containerApi: this.containerApi }));\n    }\n    focus() {\n        this.api._onFocusEvent.fire();\n    }\n    toJSON() {\n        return {\n            id: this.id,\n            contentComponent: this.view.contentComponent,\n            tabComponent: this.view.tabComponent,\n            params: Object.keys(this._params || {}).length > 0\n                ? this._params\n                : undefined,\n            title: this.title,\n        };\n    }\n    setTitle(title) {\n        var _a, _b;\n        const didTitleChange = title !== ((_a = this._params) === null || _a === void 0 ? void 0 : _a.title);\n        if (didTitleChange) {\n            this._title = title;\n            (_b = this.view) === null || _b === void 0 ? void 0 : _b.update({\n                params: {\n                    params: this._params,\n                    title: this.title,\n                },\n            });\n            this.api._onDidTitleChange.fire({ title });\n        }\n    }\n    update(event) {\n        var _a;\n        const params = event.params;\n        this._params = Object.assign(Object.assign({}, (this._params || {})), event.params.params);\n        if (params.title !== this.title) {\n            this._title = params.title;\n            this.api._onDidTitleChange.fire({ title: this.title });\n        }\n        (_a = this.view) === null || _a === void 0 ? void 0 : _a.update({\n            params: {\n                params: this._params,\n                title: this.title,\n            },\n        });\n    }\n    updateParentGroup(group, isGroupActive) {\n        this._group = group;\n        this.api.group = group;\n        const isPanelVisible = this._group.model.isPanelActive(this);\n        this.api._onDidActiveChange.fire({\n            isActive: isGroupActive && isPanelVisible,\n        });\n        this.api._onDidVisibilityChange.fire({\n            isVisible: isPanelVisible,\n        });\n        this.view.updateParentGroup(this._group, this._group.model.isPanelActive(this));\n    }\n    layout(width, height) {\n        var _a;\n        // the obtain the correct dimensions of the content panel we must deduct the tab height\n        this.api._onDidDimensionChange.fire({\n            width,\n            height: height - (this.group.model.header.height || 0),\n        });\n        (_a = this.view) === null || _a === void 0 ? void 0 : _a.layout(width, height);\n    }\n    dispose() {\n        var _a;\n        this.api.dispose();\n        (_a = this.view) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","const createSvgElementFromPath = (params) => {\n    const svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n    svg.setAttributeNS(null, 'height', params.height);\n    svg.setAttributeNS(null, 'width', params.width);\n    svg.setAttributeNS(null, 'viewBox', params.viewbox);\n    svg.setAttributeNS(null, 'aria-hidden', 'false');\n    svg.setAttributeNS(null, 'focusable', 'false');\n    svg.classList.add('dockview-svg');\n    const path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n    path.setAttributeNS(null, 'd', params.path);\n    svg.appendChild(path);\n    return svg;\n};\nexport const createCloseButton = () => createSvgElementFromPath({\n    width: '11',\n    height: '11',\n    viewbox: '0 0 28 28',\n    path: 'M2.1 27.3L0 25.2L11.55 13.65L0 2.1L2.1 0L13.65 11.55L25.2 0L27.3 2.1L15.75 13.65L27.3 25.2L25.2 27.3L13.65 15.75L2.1 27.3Z',\n});\nexport const createExpandMoreButton = () => createSvgElementFromPath({\n    width: '11',\n    height: '11',\n    viewbox: '0 0 24 15',\n    path: 'M12 14.15L0 2.15L2.15 0L12 9.9L21.85 0.0499992L24 2.2L12 14.15Z',\n});\nexport const createChevronRightButton = () => createSvgElementFromPath({\n    width: '11',\n    height: '11',\n    viewbox: '0 0 15 25',\n    path: 'M2.15 24.1L0 21.95L9.9 12.05L0 2.15L2.15 0L14.2 12.05L2.15 24.1Z',\n});\n","import { CompositeDisposable } from '../../../lifecycle';\nimport { addDisposableListener } from '../../../events';\nimport { createCloseButton } from '../../../svg';\nexport class DefaultTab extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor() {\n        super();\n        //\n        this.params = {};\n        this._element = document.createElement('div');\n        this._element.className = 'default-tab';\n        //\n        this._content = document.createElement('div');\n        this._content.className = 'tab-content';\n        //\n        this._actionContainer = document.createElement('div');\n        this._actionContainer.className = 'action-container';\n        //\n        this._list = document.createElement('ul');\n        this._list.className = 'tab-list';\n        //\n        this.action = document.createElement('div');\n        this.action.className = 'tab-action';\n        this.action.appendChild(createCloseButton());\n        //\n        this._element.appendChild(this._content);\n        this._element.appendChild(this._actionContainer);\n        this._actionContainer.appendChild(this._list);\n        this._list.appendChild(this.action);\n        //\n        this.addDisposables(addDisposableListener(this._actionContainer, 'mousedown', (ev) => {\n            ev.preventDefault();\n        }));\n        this.render();\n    }\n    update(event) {\n        this.params = Object.assign(Object.assign({}, this.params), event.params);\n        this.render();\n    }\n    focus() {\n        //noop\n    }\n    init(params) {\n        this.params = params;\n        this._content.textContent = params.title;\n        addDisposableListener(this.action, 'click', (ev) => {\n            ev.preventDefault(); //\n            this.params.api.close();\n        });\n    }\n    onGroupChange(_group) {\n        this.render();\n    }\n    onPanelVisibleChange(_isPanelVisible) {\n        this.render();\n    }\n    layout(_width, _height) {\n        // noop\n    }\n    render() {\n        if (this._content.textContent !== this.params.title) {\n            this._content.textContent = this.params.title;\n        }\n    }\n}\n","export function createComponent(id, componentName, components = {}, frameworkComponents = {}, createFrameworkComponent, fallback) {\n    const Component = typeof componentName === 'string'\n        ? components[componentName]\n        : undefined;\n    const FrameworkComponent = typeof componentName === 'string'\n        ? frameworkComponents[componentName]\n        : undefined;\n    if (Component && FrameworkComponent) {\n        throw new Error(`Cannot create '${id}'. component '${componentName}' registered as both a component and frameworkComponent`);\n    }\n    if (FrameworkComponent) {\n        if (!createFrameworkComponent) {\n            throw new Error(`Cannot create '${id}' for framework component '${componentName}'. you must register a frameworkPanelWrapper to use framework components`);\n        }\n        return createFrameworkComponent.createComponent(id, componentName, FrameworkComponent);\n    }\n    if (!Component) {\n        if (fallback) {\n            return fallback();\n        }\n        throw new Error(`Cannot create '${id}', no component '${componentName}' provided`);\n    }\n    return new Component(id, componentName);\n}\n","import { DefaultTab } from './components/tab/defaultTab';\nimport { createComponent } from '../panel/componentFactory';\nexport class DockviewPanelModel {\n    get content() {\n        return this._content;\n    }\n    get tab() {\n        return this._tab;\n    }\n    constructor(accessor, id, contentComponent, tabComponent) {\n        var _a;\n        this.accessor = accessor;\n        this.id = id;\n        this.contentComponent = contentComponent;\n        this.tabComponent = tabComponent;\n        this._group = null;\n        this._isPanelVisible = null;\n        this._content = this.createContentComponent(this.id, contentComponent);\n        this._tab =\n            (_a = this.createTabComponent(this.id, tabComponent)) !== null && _a !== void 0 ? _a : new DefaultTab();\n    }\n    init(params) {\n        this.content.init(Object.assign(Object.assign({}, params), { tab: this.tab }));\n        this.tab.init(params);\n    }\n    updateParentGroup(group, isPanelVisible) {\n        if (group !== this._group) {\n            this._group = group;\n            if (this._content.onGroupChange) {\n                this._content.onGroupChange(group);\n            }\n            if (this._tab.onGroupChange) {\n                this._tab.onGroupChange(group);\n            }\n        }\n        if (isPanelVisible !== this._isPanelVisible) {\n            this._isPanelVisible = isPanelVisible;\n            if (this._content.onPanelVisibleChange) {\n                this._content.onPanelVisibleChange(isPanelVisible);\n            }\n            if (this._tab.onPanelVisibleChange) {\n                this._tab.onPanelVisibleChange(isPanelVisible);\n            }\n        }\n    }\n    layout(width, height) {\n        var _a, _b;\n        (_b = (_a = this.content).layout) === null || _b === void 0 ? void 0 : _b.call(_a, width, height);\n    }\n    update(event) {\n        var _a, _b, _c, _d;\n        (_b = (_a = this.content).update) === null || _b === void 0 ? void 0 : _b.call(_a, event);\n        (_d = (_c = this.tab).update) === null || _d === void 0 ? void 0 : _d.call(_c, event);\n    }\n    dispose() {\n        var _a, _b, _c, _d;\n        (_b = (_a = this.content).dispose) === null || _b === void 0 ? void 0 : _b.call(_a);\n        (_d = (_c = this.tab).dispose) === null || _d === void 0 ? void 0 : _d.call(_c);\n    }\n    createContentComponent(id, componentName) {\n        var _a;\n        return createComponent(id, componentName, this.accessor.options.components || {}, this.accessor.options.frameworkComponents, (_a = this.accessor.options.frameworkComponentFactory) === null || _a === void 0 ? void 0 : _a.content);\n    }\n    createTabComponent(id, componentName) {\n        var _a;\n        return createComponent(id, componentName, this.accessor.options.tabComponents || {}, this.accessor.options.frameworkTabComponents, (_a = this.accessor.options.frameworkComponentFactory) === null || _a === void 0 ? void 0 : _a.tab, () => new DefaultTab());\n    }\n}\n","import { DockviewPanel } from './dockviewPanel';\nimport { createComponent } from '../panel/componentFactory';\nimport { DefaultTab } from './components/tab/defaultTab';\nimport { DockviewPanelModel } from './dockviewPanelModel';\nimport { DockviewApi } from '../api/component.api';\nexport class DefaultDockviewDeserialzier {\n    constructor(layout) {\n        this.layout = layout;\n    }\n    fromJSON(panelData, group) {\n        var _a, _b, _c;\n        const panelId = panelData.id;\n        const params = panelData.params;\n        const title = panelData.title;\n        const viewData = panelData.view;\n        const contentComponent = viewData\n            ? viewData.content.id\n            : panelData.contentComponent || 'unknown';\n        const tabComponent = viewData\n            ? (_a = viewData.tab) === null || _a === void 0 ? void 0 : _a.id\n            : panelData.tabComponent;\n        let tab;\n        if (tabComponent) {\n            tab = createComponent(panelId, tabComponent, this.layout.options.tabComponents, this.layout.options.frameworkTabComponents, (_b = this.layout.options.frameworkComponentFactory) === null || _b === void 0 ? void 0 : _b.tab, () => new DefaultTab());\n        }\n        else if (this.layout.options.defaultTabComponent) {\n            tab = createComponent(panelId, this.layout.options.defaultTabComponent, this.layout.options.tabComponents, this.layout.options.frameworkTabComponents, (_c = this.layout.options.frameworkComponentFactory) === null || _c === void 0 ? void 0 : _c.tab, () => new DefaultTab());\n        }\n        else {\n            tab = new DefaultTab();\n        }\n        const view = new DockviewPanelModel(this.layout, panelId, contentComponent, tabComponent);\n        const panel = new DockviewPanel(panelId, this.layout, new DockviewApi(this.layout), group, view);\n        panel.init({\n            title: title || panelId,\n            params: params || {},\n        });\n        return panel;\n    }\n}\n","import { addDisposableListener } from '../../../events';\nimport { toggleClass } from '../../../dom';\nimport { CompositeDisposable } from '../../../lifecycle';\nimport { createCloseButton } from '../../../svg';\nexport class Watermark extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor() {\n        super();\n        this._element = document.createElement('div');\n        this._element.className = 'watermark';\n        const title = document.createElement('div');\n        title.className = 'watermark-title';\n        const emptySpace = document.createElement('span');\n        emptySpace.style.flexGrow = '1';\n        const content = document.createElement('div');\n        content.className = 'watermark-content';\n        this._element.appendChild(title);\n        this._element.appendChild(content);\n        const actionsContainer = document.createElement('div');\n        actionsContainer.className = 'actions-container';\n        const closeAnchor = document.createElement('div');\n        closeAnchor.className = 'close-action';\n        closeAnchor.appendChild(createCloseButton());\n        actionsContainer.appendChild(closeAnchor);\n        title.appendChild(emptySpace);\n        title.appendChild(actionsContainer);\n        this.addDisposables(addDisposableListener(closeAnchor, 'click', (ev) => {\n            var _a;\n            ev.preventDefault();\n            if (this.group) {\n                (_a = this.params) === null || _a === void 0 ? void 0 : _a.containerApi.removeGroup(this.group);\n            }\n        }));\n    }\n    update(_event) {\n        // noop\n    }\n    focus() {\n        // noop\n    }\n    layout(_width, _height) {\n        // noop\n    }\n    init(_params) {\n        this.render();\n    }\n    updateParentGroup(group, _visible) {\n        this.group = group;\n        this.render();\n    }\n    dispose() {\n        super.dispose();\n    }\n    render() {\n        const isOneGroup = !!(this.params && this.params.containerApi.size <= 1);\n        toggleClass(this.element, 'has-actions', isOneGroup);\n    }\n}\n","import { getRelativeLocation, getGridLocation, } from '../gridview/gridview';\nimport { directionToPosition, Droptarget } from '../dnd/droptarget';\nimport { tail, sequenceEquals } from '../array';\nimport { DockviewPanel } from './dockviewPanel';\nimport { CompositeDisposable } from '../lifecycle';\nimport { Event, Emitter } from '../events';\nimport { Watermark } from './components/watermark/watermark';\nimport { DockviewDropTargets, } from './types';\nimport { sequentialNumberGenerator } from '../math';\nimport { DefaultDockviewDeserialzier } from './deserializer';\nimport { createComponent } from '../panel/componentFactory';\nimport { isGroupOptionsWithGroup, isGroupOptionsWithPanel, isPanelOptionsWithGroup, isPanelOptionsWithPanel, } from './options';\nimport { BaseGrid, toTarget, } from '../gridview/baseComponentGridview';\nimport { DockviewApi } from '../api/component.api';\nimport { Orientation, Sizing } from '../splitview/splitview';\nimport { DockviewGroupPanel } from './dockviewGroupPanel';\nimport { DockviewPanelModel } from './dockviewPanelModel';\nimport { getPanelData } from '../dnd/dataTransfer';\nexport class DockviewComponent extends BaseGrid {\n    get orientation() {\n        return this.gridview.orientation;\n    }\n    get totalPanels() {\n        return this.panels.length;\n    }\n    get panels() {\n        return this.groups.flatMap((group) => group.panels);\n    }\n    get options() {\n        return this._options;\n    }\n    get activePanel() {\n        const activeGroup = this.activeGroup;\n        if (!activeGroup) {\n            return undefined;\n        }\n        return activeGroup.activePanel;\n    }\n    set tabHeight(height) {\n        this.options.tabHeight = height;\n        this._groups.forEach((value) => {\n            value.value.model.header.height = height;\n        });\n    }\n    get tabHeight() {\n        return this.options.tabHeight;\n    }\n    constructor(element, options) {\n        super(element, {\n            proportionalLayout: true,\n            orientation: options.orientation || Orientation.HORIZONTAL,\n            styles: options.styles,\n        });\n        this.nextGroupId = sequentialNumberGenerator();\n        this._deserializer = new DefaultDockviewDeserialzier(this);\n        this.watermark = null;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onDidRemovePanel = new Emitter();\n        this.onDidRemovePanel = this._onDidRemovePanel.event;\n        this._onDidAddPanel = new Emitter();\n        this.onDidAddPanel = this._onDidAddPanel.event;\n        this._onDidLayoutFromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutFromJSON.event;\n        this._onDidActivePanelChange = new Emitter();\n        this.onDidActivePanelChange = this._onDidActivePanelChange.event;\n        this.element.classList.add('dv-dockview');\n        this.addDisposables(this._onDidDrop, Event.any(this.onDidAddGroup, this.onDidRemoveGroup)(() => {\n            this.updateWatermark();\n        }), Event.any(this.onDidAddPanel, this.onDidRemovePanel, this.onDidActivePanelChange)(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }));\n        this._options = options;\n        if (!this.options.components) {\n            this.options.components = {};\n        }\n        if (!this.options.frameworkComponents) {\n            this.options.frameworkComponents = {};\n        }\n        if (!this.options.frameworkTabComponents) {\n            this.options.frameworkTabComponents = {};\n        }\n        if (!this.options.tabComponents) {\n            this.options.tabComponents = {};\n        }\n        if (!this.options.watermarkComponent &&\n            !this.options.watermarkFrameworkComponent) {\n            this.options.watermarkComponent = Watermark;\n        }\n        const dropTarget = new Droptarget(this.element, {\n            canDisplayOverlay: (event, position) => {\n                const data = getPanelData();\n                if (data) {\n                    if (data.viewId !== this.id) {\n                        return false;\n                    }\n                    return true;\n                }\n                if (this.options.showDndOverlay) {\n                    return this.options.showDndOverlay({\n                        nativeEvent: event,\n                        position: position,\n                        target: DockviewDropTargets.Edge,\n                        getData: getPanelData,\n                    });\n                }\n                return false;\n            },\n            acceptedTargetZones: ['top', 'bottom', 'left', 'right'],\n            overlayModel: {\n                activationSize: { type: 'pixels', value: 10 },\n                size: { type: 'pixels', value: 20 },\n            },\n        });\n        this.addDisposables(dropTarget, dropTarget.onDrop((event) => {\n            const data = getPanelData();\n            if (data) {\n                this.moveGroupOrPanel(this.orthogonalize(event.position), data.groupId, data.panelId || undefined, 'center');\n            }\n            else {\n                this._onDidDrop.fire(Object.assign(Object.assign({}, event), { api: this._api, group: null, getData: getPanelData }));\n            }\n        }));\n        this._api = new DockviewApi(this);\n        this.updateWatermark();\n    }\n    orthogonalize(position) {\n        switch (position) {\n            case 'top':\n            case 'bottom':\n                if (this.gridview.orientation === Orientation.HORIZONTAL) {\n                    // we need to add to a vertical splitview but the current root is a horizontal splitview.\n                    // insert a vertical splitview at the root level and add the existing view as a child\n                    this.gridview.insertOrthogonalSplitviewAtRoot();\n                }\n                break;\n            case 'left':\n            case 'right':\n                if (this.gridview.orientation === Orientation.VERTICAL) {\n                    // we need to add to a horizontal splitview but the current root is a vertical splitview.\n                    // insert a horiziontal splitview at the root level and add the existing view as a child\n                    this.gridview.insertOrthogonalSplitviewAtRoot();\n                }\n                break;\n            default:\n                break;\n        }\n        switch (position) {\n            case 'top':\n            case 'left':\n                return this.createGroupAtLocation([0]); // insert into first position\n            case 'bottom':\n            case 'right':\n                return this.createGroupAtLocation([this.gridview.length]); // insert into last position\n            default:\n                throw new Error(`unsupported position ${position}`);\n        }\n    }\n    updateOptions(options) {\n        const hasOrientationChanged = typeof options.orientation === 'string' &&\n            this.gridview.orientation !== options.orientation;\n        this._options = Object.assign(Object.assign({}, this.options), options);\n        if (hasOrientationChanged) {\n            this.gridview.orientation = options.orientation;\n        }\n        this.layout(this.gridview.width, this.gridview.height, true);\n    }\n    focus() {\n        var _a;\n        (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    getGroupPanel(id) {\n        return this.panels.find((panel) => panel.id === id);\n    }\n    setActivePanel(panel) {\n        this.doSetGroupActive(panel.group);\n        panel.group.model.openPanel(panel);\n    }\n    moveToNext(options = {}) {\n        var _a;\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        if (options.includePanel && options.group) {\n            if (options.group.activePanel !==\n                options.group.panels[options.group.panels.length - 1]) {\n                options.group.model.moveToNext({ suppressRoll: true });\n                return;\n            }\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.next(location)) === null || _a === void 0 ? void 0 : _a.view;\n        this.doSetGroupActive(next);\n    }\n    moveToPrevious(options = {}) {\n        var _a;\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        if (options.includePanel && options.group) {\n            if (options.group.activePanel !== options.group.panels[0]) {\n                options.group.model.moveToPrevious({ suppressRoll: true });\n                return;\n            }\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.previous(location)) === null || _a === void 0 ? void 0 : _a.view;\n        if (next) {\n            this.doSetGroupActive(next);\n        }\n    }\n    /**\n     * Serialize the current state of the layout\n     *\n     * @returns A JSON respresentation of the layout\n     */\n    toJSON() {\n        var _a;\n        const data = this.gridview.serialize();\n        const panels = this.panels.reduce((collection, panel) => {\n            collection[panel.id] = panel.toJSON();\n            return collection;\n        }, {});\n        return {\n            grid: data,\n            panels,\n            activeGroup: (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.id,\n            options: { tabHeight: this.tabHeight },\n        };\n    }\n    fromJSON(data) {\n        this.clear();\n        const { grid, panels, options, activeGroup } = data;\n        if (typeof (options === null || options === void 0 ? void 0 : options.tabHeight) === 'number') {\n            this.tabHeight = options.tabHeight;\n        }\n        if (grid.root.type !== 'branch' || !Array.isArray(grid.root.data)) {\n            throw new Error('root must be of type branch');\n        }\n        this.gridview.deserialize(grid, {\n            fromJSON: (node) => {\n                const { id, locked, hideHeader, views, activeView } = node.data;\n                const group = this.createGroup({\n                    id,\n                    locked: !!locked,\n                    hideHeader: !!hideHeader,\n                });\n                this._onDidAddGroup.fire(group);\n                for (const child of views) {\n                    const panel = this._deserializer.fromJSON(panels[child], group);\n                    const isActive = typeof activeView === 'string' &&\n                        activeView === panel.id;\n                    group.model.openPanel(panel, {\n                        skipSetPanelActive: !isActive,\n                        skipSetGroupActive: true,\n                    });\n                }\n                if (!group.activePanel && group.panels.length > 0) {\n                    group.model.openPanel(group.panels[group.panels.length - 1], {\n                        skipSetGroupActive: true,\n                    });\n                }\n                return group;\n            },\n        });\n        if (typeof activeGroup === 'string') {\n            const panel = this.getPanel(activeGroup);\n            if (panel) {\n                this.doSetGroupActive(panel);\n            }\n        }\n        this.gridview.layout(this.width, this.height);\n        this._onDidLayoutFromJSON.fire();\n    }\n    clear() {\n        const groups = Array.from(this._groups.values()).map((_) => _.value);\n        const hasActiveGroup = !!this.activeGroup;\n        const hasActivePanel = !!this.activePanel;\n        for (const group of groups) {\n            // remove the group will automatically remove the panels\n            this.removeGroup(group, true);\n        }\n        if (hasActiveGroup) {\n            this.doSetGroupActive(undefined);\n        }\n        if (hasActivePanel) {\n            this._onDidActivePanelChange.fire(undefined);\n        }\n        this.gridview.clear();\n    }\n    closeAllGroups() {\n        for (const entry of this._groups.entries()) {\n            const [_, group] = entry;\n            group.value.model.closeAllPanels();\n        }\n    }\n    addPanel(options) {\n        var _a, _b;\n        if (this.panels.find((_) => _.id === options.id)) {\n            throw new Error(`panel with id ${options.id} already exists`);\n        }\n        let referenceGroup;\n        if (options.position) {\n            if (isPanelOptionsWithPanel(options.position)) {\n                const referencePanel = typeof options.position.referencePanel === 'string'\n                    ? this.getGroupPanel(options.position.referencePanel)\n                    : options.position.referencePanel;\n                if (!referencePanel) {\n                    throw new Error(`referencePanel ${options.position.referencePanel} does not exist`);\n                }\n                referenceGroup = this.findGroup(referencePanel);\n            }\n            else if (isPanelOptionsWithGroup(options.position)) {\n                referenceGroup =\n                    typeof options.position.referenceGroup === 'string'\n                        ? (_a = this._groups.get(options.position.referenceGroup)) === null || _a === void 0 ? void 0 : _a.value\n                        : options.position.referenceGroup;\n                if (!referenceGroup) {\n                    throw new Error(`referencePanel ${options.position.referenceGroup} does not exist`);\n                }\n            }\n            else {\n                const group = this.orthogonalize(directionToPosition(options.position.direction));\n                const panel = this.createPanel(options, group);\n                group.model.openPanel(panel);\n                return panel;\n            }\n        }\n        else {\n            referenceGroup = this.activeGroup;\n        }\n        let panel;\n        if (referenceGroup) {\n            const target = toTarget(((_b = options.position) === null || _b === void 0 ? void 0 : _b.direction) || 'within');\n            if (target === 'center') {\n                panel = this.createPanel(options, referenceGroup);\n                referenceGroup.model.openPanel(panel);\n            }\n            else {\n                const location = getGridLocation(referenceGroup.element);\n                const relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n                const group = this.createGroupAtLocation(relativeLocation);\n                panel = this.createPanel(options, group);\n                group.model.openPanel(panel);\n            }\n        }\n        else {\n            const group = this.createGroupAtLocation();\n            panel = this.createPanel(options, group);\n            group.model.openPanel(panel);\n        }\n        return panel;\n    }\n    removePanel(panel, options = {\n        removeEmptyGroup: true,\n        skipDispose: false,\n    }) {\n        const group = panel.group;\n        if (!group) {\n            throw new Error(`cannot remove panel ${panel.id}. it's missing a group.`);\n        }\n        group.model.removePanel(panel);\n        panel.dispose();\n        if (group.size === 0 && options.removeEmptyGroup) {\n            this.removeGroup(group);\n        }\n    }\n    createWatermarkComponent() {\n        var _a;\n        return createComponent('watermark-id', 'watermark-name', this.options.watermarkComponent\n            ? { 'watermark-name': this.options.watermarkComponent }\n            : {}, this.options.watermarkFrameworkComponent\n            ? { 'watermark-name': this.options.watermarkFrameworkComponent }\n            : {}, (_a = this.options.frameworkComponentFactory) === null || _a === void 0 ? void 0 : _a.watermark);\n    }\n    updateWatermark() {\n        var _a, _b;\n        if (this.groups.length === 0) {\n            if (!this.watermark) {\n                this.watermark = this.createWatermarkComponent();\n                this.watermark.init({\n                    containerApi: new DockviewApi(this),\n                });\n                const watermarkContainer = document.createElement('div');\n                watermarkContainer.className = 'dv-watermark-container';\n                watermarkContainer.appendChild(this.watermark.element);\n                this.element.appendChild(watermarkContainer);\n            }\n        }\n        else if (this.watermark) {\n            this.watermark.element.parentElement.remove();\n            (_b = (_a = this.watermark).dispose) === null || _b === void 0 ? void 0 : _b.call(_a);\n            this.watermark = null;\n        }\n    }\n    addGroup(options) {\n        var _a;\n        const group = this.createGroup();\n        if (options) {\n            let referenceGroup;\n            if (isGroupOptionsWithPanel(options)) {\n                const referencePanel = typeof options.referencePanel === 'string'\n                    ? this.panels.find((panel) => panel.id === options.referencePanel)\n                    : options.referencePanel;\n                if (!referencePanel) {\n                    throw new Error(`reference panel ${options.referencePanel} does not exist`);\n                }\n                referenceGroup = this.findGroup(referencePanel);\n                if (!referenceGroup) {\n                    throw new Error(`reference group for reference panel ${options.referencePanel} does not exist`);\n                }\n            }\n            else if (isGroupOptionsWithGroup(options)) {\n                referenceGroup =\n                    typeof options.referenceGroup === 'string'\n                        ? (_a = this._groups.get(options.referenceGroup)) === null || _a === void 0 ? void 0 : _a.value\n                        : options.referenceGroup;\n                if (!referenceGroup) {\n                    throw new Error(`reference group ${options.referenceGroup} does not exist`);\n                }\n            }\n            else {\n                const group = this.orthogonalize(directionToPosition(options.direction));\n                return group;\n            }\n            const target = toTarget(options.direction || 'within');\n            const location = getGridLocation(referenceGroup.element);\n            const relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n            this.doAddGroup(group, relativeLocation);\n            return group;\n        }\n        else {\n            this.doAddGroup(group);\n            return group;\n        }\n    }\n    removeGroup(group, skipActive = false) {\n        const panels = [...group.panels]; // reassign since group panels will mutate\n        for (const panel of panels) {\n            this.removePanel(panel, {\n                removeEmptyGroup: false,\n                skipDispose: false,\n            });\n        }\n        super.doRemoveGroup(group, { skipActive });\n    }\n    moveGroupOrPanel(referenceGroup, groupId, itemId, target, index) {\n        var _a;\n        const sourceGroup = groupId\n            ? (_a = this._groups.get(groupId)) === null || _a === void 0 ? void 0 : _a.value\n            : undefined;\n        if (itemId === undefined) {\n            if (sourceGroup) {\n                this.moveGroup(sourceGroup, referenceGroup, target);\n            }\n            return;\n        }\n        if (!target || target === 'center') {\n            const groupItem = (sourceGroup === null || sourceGroup === void 0 ? void 0 : sourceGroup.model.removePanel(itemId)) ||\n                this.panels.find((panel) => panel.id === itemId);\n            if (!groupItem) {\n                throw new Error(`No panel with id ${itemId}`);\n            }\n            if ((sourceGroup === null || sourceGroup === void 0 ? void 0 : sourceGroup.model.size) === 0) {\n                this.doRemoveGroup(sourceGroup);\n            }\n            referenceGroup.model.openPanel(groupItem, { index });\n        }\n        else {\n            const referenceLocation = getGridLocation(referenceGroup.element);\n            const targetLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, target);\n            if (sourceGroup && sourceGroup.size < 2) {\n                const [targetParentLocation, to] = tail(targetLocation);\n                const sourceLocation = getGridLocation(sourceGroup.element);\n                const [sourceParentLocation, from] = tail(sourceLocation);\n                if (sequenceEquals(sourceParentLocation, targetParentLocation)) {\n                    // special case when 'swapping' two views within same grid location\n                    // if a group has one tab - we are essentially moving the 'group'\n                    // which is equivalent to swapping two views in this case\n                    this.gridview.moveView(sourceParentLocation, from, to);\n                }\n                else {\n                    // source group will become empty so delete the group\n                    const targetGroup = this.doRemoveGroup(sourceGroup, {\n                        skipActive: true,\n                        skipDispose: true,\n                    });\n                    // after deleting the group we need to re-evaulate the ref location\n                    const updatedReferenceLocation = getGridLocation(referenceGroup.element);\n                    const location = getRelativeLocation(this.gridview.orientation, updatedReferenceLocation, target);\n                    this.doAddGroup(targetGroup, location);\n                }\n            }\n            else {\n                const groupItem = (sourceGroup === null || sourceGroup === void 0 ? void 0 : sourceGroup.model.removePanel(itemId)) ||\n                    this.panels.find((panel) => panel.id === itemId);\n                if (!groupItem) {\n                    throw new Error(`No panel with id ${itemId}`);\n                }\n                const dropLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, target);\n                const group = this.createGroupAtLocation(dropLocation);\n                group.model.openPanel(groupItem);\n            }\n        }\n    }\n    moveGroup(sourceGroup, referenceGroup, target) {\n        if (sourceGroup) {\n            if (!target || target === 'center') {\n                const activePanel = sourceGroup.activePanel;\n                const panels = [...sourceGroup.panels].map((p) => sourceGroup.model.removePanel(p.id));\n                if ((sourceGroup === null || sourceGroup === void 0 ? void 0 : sourceGroup.model.size) === 0) {\n                    this.doRemoveGroup(sourceGroup);\n                }\n                for (const panel of panels) {\n                    referenceGroup.model.openPanel(panel, {\n                        skipSetPanelActive: panel !== activePanel,\n                    });\n                }\n            }\n            else {\n                this.gridview.removeView(getGridLocation(sourceGroup.element));\n                const referenceLocation = getGridLocation(referenceGroup.element);\n                const dropLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, target);\n                this.gridview.addView(sourceGroup, Sizing.Distribute, dropLocation);\n            }\n        }\n    }\n    doSetGroupActive(group, skipFocus) {\n        var _a, _b;\n        const isGroupAlreadyFocused = this._activeGroup === group;\n        super.doSetGroupActive(group, skipFocus);\n        if (!isGroupAlreadyFocused && ((_a = this._activeGroup) === null || _a === void 0 ? void 0 : _a.activePanel)) {\n            this._onDidActivePanelChange.fire((_b = this._activeGroup) === null || _b === void 0 ? void 0 : _b.activePanel);\n        }\n    }\n    createGroup(options) {\n        if (!options) {\n            options = { tabHeight: this.tabHeight };\n        }\n        if (typeof options.tabHeight !== 'number') {\n            options.tabHeight = this.tabHeight;\n        }\n        let id = options === null || options === void 0 ? void 0 : options.id;\n        if (id && this._groups.has(options.id)) {\n            console.warn(`Duplicate group id ${options === null || options === void 0 ? void 0 : options.id}. reassigning group id to avoid errors`);\n            id = undefined;\n        }\n        if (!id) {\n            id = this.nextGroupId.next();\n            while (this._groups.has(id)) {\n                id = this.nextGroupId.next();\n            }\n        }\n        const view = new DockviewGroupPanel(this, id, options);\n        view.init({ params: {}, accessor: null }); // required to initialized .part and allow for correct disposal of group\n        if (!this._groups.has(view.id)) {\n            const disposable = new CompositeDisposable(view.model.onMove((event) => {\n                const { groupId, itemId, target, index } = event;\n                this.moveGroupOrPanel(view, groupId, itemId, target, index);\n            }), view.model.onDidDrop((event) => {\n                this._onDidDrop.fire(Object.assign(Object.assign({}, event), { api: this._api, group: view }));\n            }), view.model.onDidAddPanel((event) => {\n                this._onDidAddPanel.fire(event.panel);\n            }), view.model.onDidRemovePanel((event) => {\n                this._onDidRemovePanel.fire(event.panel);\n            }), view.model.onDidActivePanelChange((event) => {\n                this._onDidActivePanelChange.fire(event.panel);\n            }));\n            this._groups.set(view.id, { value: view, disposable });\n        }\n        // TODO: must be called after the above listeners have been setup,\n        // not an ideal pattern\n        view.initialize();\n        if (typeof this.options.tabHeight === 'number') {\n            view.model.header.height = this.options.tabHeight;\n        }\n        return view;\n    }\n    createPanel(options, group) {\n        const contentComponent = options.component;\n        const tabComponent = options.tabComponent || this.options.defaultTabComponent;\n        const view = new DockviewPanelModel(this, options.id, contentComponent, tabComponent);\n        const panel = new DockviewPanel(options.id, this, this._api, group, view);\n        panel.init({\n            title: options.title || options.id,\n            params: (options === null || options === void 0 ? void 0 : options.params) || {},\n        });\n        return panel;\n    }\n    createGroupAtLocation(location = [0]) {\n        const group = this.createGroup();\n        this.doAddGroup(group, location);\n        return group;\n    }\n    findGroup(panel) {\n        var _a;\n        return (_a = Array.from(this._groups.values()).find((group) => group.value.model.containsPanel(panel))) === null || _a === void 0 ? void 0 : _a.value;\n    }\n    dispose() {\n        super.dispose();\n        this._onDidActivePanelChange.dispose();\n        this._onDidAddPanel.dispose();\n        this._onDidRemovePanel.dispose();\n        this._onDidLayoutFromJSON.dispose();\n    }\n}\n","export function isPanelOptionsWithPanel(data) {\n    if (data.referencePanel) {\n        return true;\n    }\n    return false;\n}\nexport function isPanelOptionsWithGroup(data) {\n    if (data.referenceGroup) {\n        return true;\n    }\n    return false;\n}\nexport function isGroupOptionsWithPanel(data) {\n    if (data.referencePanel) {\n        return true;\n    }\n    return false;\n}\nexport function isGroupOptionsWithGroup(data) {\n    if (data.referenceGroup) {\n        return true;\n    }\n    return false;\n}\n","import { getRelativeLocation, getGridLocation, } from './gridview';\nimport { tail, sequenceEquals } from '../array';\nimport { CompositeDisposable } from '../lifecycle';\nimport { BaseGrid, toTarget, } from './baseComponentGridview';\nimport { createComponent } from '../panel/componentFactory';\nimport { Emitter } from '../events';\nexport class GridviewComponent extends BaseGrid {\n    get orientation() {\n        return this.gridview.orientation;\n    }\n    set orientation(value) {\n        this.gridview.orientation = value;\n    }\n    get options() {\n        return this._options;\n    }\n    get deserializer() {\n        return this._deserializer;\n    }\n    set deserializer(value) {\n        this._deserializer = value;\n    }\n    constructor(element, options) {\n        super(element, {\n            proportionalLayout: options.proportionalLayout,\n            orientation: options.orientation,\n            styles: options.styles,\n        });\n        this._onDidLayoutfromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutfromJSON.event;\n        this._options = options;\n        if (!this.options.components) {\n            this.options.components = {};\n        }\n        if (!this.options.frameworkComponents) {\n            this.options.frameworkComponents = {};\n        }\n    }\n    updateOptions(options) {\n        const hasOrientationChanged = typeof options.orientation === 'string' &&\n            this.gridview.orientation !== options.orientation;\n        this._options = Object.assign(Object.assign({}, this.options), options);\n        if (hasOrientationChanged) {\n            this.gridview.orientation = options.orientation;\n        }\n        this.layout(this.gridview.width, this.gridview.height, true);\n    }\n    removePanel(panel) {\n        this.removeGroup(panel);\n    }\n    /**\n     * Serialize the current state of the layout\n     *\n     * @returns A JSON respresentation of the layout\n     */\n    toJSON() {\n        var _a;\n        const data = this.gridview.serialize();\n        return {\n            grid: data,\n            activePanel: (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.id,\n        };\n    }\n    setVisible(panel, visible) {\n        this.gridview.setViewVisible(getGridLocation(panel.element), visible);\n    }\n    setActive(panel) {\n        this._groups.forEach((value, _key) => {\n            value.value.setActive(panel === value.value);\n        });\n    }\n    focus() {\n        var _a;\n        (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    fromJSON(serializedGridview) {\n        this.clear();\n        const { grid, activePanel } = serializedGridview;\n        const queue = [];\n        this.gridview.deserialize(grid, {\n            fromJSON: (node) => {\n                const { data } = node;\n                const view = createComponent(data.id, data.component, this.options.components || {}, this.options.frameworkComponents || {}, this.options.frameworkComponentFactory\n                    ? {\n                        createComponent: this.options.frameworkComponentFactory\n                            .createComponent,\n                    }\n                    : undefined);\n                queue.push(() => view.init({\n                    params: data.params,\n                    minimumWidth: data.minimumWidth,\n                    maximumWidth: data.maximumWidth,\n                    minimumHeight: data.minimumHeight,\n                    maximumHeight: data.maximumHeight,\n                    priority: data.priority,\n                    snap: !!data.snap,\n                    accessor: this,\n                    isVisible: node.visible,\n                }));\n                this._onDidAddGroup.fire(view);\n                this.registerPanel(view);\n                return view;\n            },\n        });\n        this.layout(this.width, this.height, true);\n        queue.forEach((f) => f());\n        if (typeof activePanel === 'string') {\n            const panel = this.getPanel(activePanel);\n            if (panel) {\n                this.doSetGroupActive(panel);\n            }\n        }\n        this._onDidLayoutfromJSON.fire();\n    }\n    clear() {\n        const hasActiveGroup = this.activeGroup;\n        const groups = Array.from(this._groups.values()); // reassign since group panels will mutate\n        for (const group of groups) {\n            group.disposable.dispose();\n            this.doRemoveGroup(group.value, { skipActive: true });\n        }\n        if (hasActiveGroup) {\n            this.doSetGroupActive(undefined);\n        }\n        this.gridview.clear();\n    }\n    movePanel(panel, options) {\n        var _a;\n        let relativeLocation;\n        const removedPanel = this.gridview.remove(panel);\n        const referenceGroup = (_a = this._groups.get(options.reference)) === null || _a === void 0 ? void 0 : _a.value;\n        if (!referenceGroup) {\n            throw new Error(`reference group ${options.reference} does not exist`);\n        }\n        const target = toTarget(options.direction);\n        if (target === 'center') {\n            throw new Error(`${target} not supported as an option`);\n        }\n        else {\n            const location = getGridLocation(referenceGroup.element);\n            relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n        }\n        this.doAddGroup(removedPanel, relativeLocation, options.size);\n    }\n    addPanel(options) {\n        var _a, _b;\n        let relativeLocation = options.location || [0];\n        if ((_a = options.position) === null || _a === void 0 ? void 0 : _a.referencePanel) {\n            const referenceGroup = (_b = this._groups.get(options.position.referencePanel)) === null || _b === void 0 ? void 0 : _b.value;\n            if (!referenceGroup) {\n                throw new Error(`reference group ${options.position.referencePanel} does not exist`);\n            }\n            const target = toTarget(options.position.direction);\n            if (target === 'center') {\n                throw new Error(`${target} not supported as an option`);\n            }\n            else {\n                const location = getGridLocation(referenceGroup.element);\n                relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n            }\n        }\n        const view = createComponent(options.id, options.component, this.options.components || {}, this.options.frameworkComponents || {}, this.options.frameworkComponentFactory\n            ? {\n                createComponent: this.options.frameworkComponentFactory\n                    .createComponent,\n            }\n            : undefined);\n        view.init({\n            params: options.params || {},\n            minimumWidth: options.minimumWidth,\n            maximumWidth: options.maximumWidth,\n            minimumHeight: options.minimumHeight,\n            maximumHeight: options.maximumHeight,\n            priority: options.priority,\n            snap: !!options.snap,\n            accessor: this,\n            isVisible: true,\n        });\n        this.registerPanel(view);\n        this.doAddGroup(view, relativeLocation, options.size);\n        return view;\n    }\n    registerPanel(panel) {\n        const disposable = new CompositeDisposable(panel.api.onDidFocusChange((event) => {\n            if (!event.isFocused) {\n                return;\n            }\n            this._groups.forEach((groupItem) => {\n                const group = groupItem.value;\n                if (group !== panel) {\n                    group.setActive(false);\n                }\n                else {\n                    group.setActive(true);\n                }\n            });\n        }));\n        this._groups.set(panel.id, {\n            value: panel,\n            disposable,\n        });\n    }\n    moveGroup(referenceGroup, groupId, target) {\n        const sourceGroup = this.getPanel(groupId);\n        if (!sourceGroup) {\n            throw new Error('invalid operation');\n        }\n        const referenceLocation = getGridLocation(referenceGroup.element);\n        const targetLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, target);\n        const [targetParentLocation, to] = tail(targetLocation);\n        const sourceLocation = getGridLocation(sourceGroup.element);\n        const [sourceParentLocation, from] = tail(sourceLocation);\n        if (sequenceEquals(sourceParentLocation, targetParentLocation)) {\n            // special case when 'swapping' two views within same grid location\n            // if a group has one tab - we are essentially moving the 'group'\n            // which is equivalent to swapping two views in this case\n            this.gridview.moveView(sourceParentLocation, from, to);\n            return;\n        }\n        // source group will become empty so delete the group\n        const targetGroup = this.doRemoveGroup(sourceGroup, {\n            skipActive: true,\n            skipDispose: true,\n        });\n        // after deleting the group we need to re-evaulate the ref location\n        const updatedReferenceLocation = getGridLocation(referenceGroup.element);\n        const location = getRelativeLocation(this.gridview.orientation, updatedReferenceLocation, target);\n        this.doAddGroup(targetGroup, location);\n    }\n    removeGroup(group) {\n        super.removeGroup(group);\n    }\n    dispose() {\n        super.dispose();\n        this._onDidLayoutfromJSON.dispose();\n    }\n}\n","import { CompositeDisposable, MutableDisposable, } from '../lifecycle';\nimport { Orientation, Sizing, Splitview, } from './splitview';\nimport { Emitter } from '../events';\nimport { createComponent } from '../panel/componentFactory';\n/**\n * A high-level implementation of splitview that works using 'panels'\n */\nexport class SplitviewComponent extends CompositeDisposable {\n    get panels() {\n        return this.splitview.getViews();\n    }\n    get options() {\n        return this._options;\n    }\n    get length() {\n        return this._panels.size;\n    }\n    get orientation() {\n        return this.splitview.orientation;\n    }\n    get splitview() {\n        return this._splitview;\n    }\n    set splitview(value) {\n        this._splitview = value;\n        this._disposable.value = new CompositeDisposable(this._splitview.onDidSashEnd(() => {\n            this._onDidLayoutChange.fire(undefined);\n        }), this._splitview.onDidAddView((e) => this._onDidAddView.fire(e)), this._splitview.onDidRemoveView((e) => this._onDidRemoveView.fire(e)));\n    }\n    get minimumSize() {\n        return this.splitview.minimumSize;\n    }\n    get maximumSize() {\n        return this.splitview.maximumSize;\n    }\n    get height() {\n        return this.splitview.orientation === Orientation.HORIZONTAL\n            ? this.splitview.orthogonalSize\n            : this.splitview.size;\n    }\n    get width() {\n        return this.splitview.orientation === Orientation.HORIZONTAL\n            ? this.splitview.size\n            : this.splitview.orthogonalSize;\n    }\n    constructor(element, options) {\n        super();\n        this.element = element;\n        this._disposable = new MutableDisposable();\n        this._panels = new Map();\n        this._onDidLayoutfromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutfromJSON.event;\n        this._onDidAddView = new Emitter();\n        this.onDidAddView = this._onDidAddView.event;\n        this._onDidRemoveView = new Emitter();\n        this.onDidRemoveView = this._onDidRemoveView.event;\n        this._onDidLayoutChange = new Emitter();\n        this.onDidLayoutChange = this._onDidLayoutChange.event;\n        this._options = options;\n        if (!options.components) {\n            options.components = {};\n        }\n        if (!options.frameworkComponents) {\n            options.frameworkComponents = {};\n        }\n        this.splitview = new Splitview(this.element, options);\n        this.addDisposables(this._disposable, this._onDidAddView, this._onDidLayoutfromJSON, this._onDidRemoveView, this._onDidLayoutChange);\n    }\n    updateOptions(options) {\n        const hasOrientationChanged = typeof options.orientation === 'string' &&\n            this.options.orientation !== options.orientation;\n        this._options = Object.assign(Object.assign({}, this.options), options);\n        if (hasOrientationChanged) {\n            this.splitview.orientation = options.orientation;\n        }\n        this.splitview.layout(this.splitview.size, this.splitview.orthogonalSize);\n    }\n    focus() {\n        var _a;\n        (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    movePanel(from, to) {\n        this.splitview.moveView(from, to);\n    }\n    setVisible(panel, visible) {\n        const index = this.panels.indexOf(panel);\n        this.splitview.setViewVisible(index, visible);\n    }\n    setActive(view, skipFocus) {\n        this._activePanel = view;\n        this.panels\n            .filter((v) => v !== view)\n            .forEach((v) => {\n            v.api._onDidActiveChange.fire({ isActive: false });\n            if (!skipFocus) {\n                v.focus();\n            }\n        });\n        view.api._onDidActiveChange.fire({ isActive: true });\n        if (!skipFocus) {\n            view.focus();\n        }\n    }\n    removePanel(panel, sizing) {\n        const disposable = this._panels.get(panel.id);\n        if (!disposable) {\n            throw new Error(`unknown splitview panel ${panel.id}`);\n        }\n        disposable.disposable.dispose();\n        disposable.value.dispose();\n        this._panels.delete(panel.id);\n        const index = this.panels.findIndex((_) => _ === panel);\n        this.splitview.removeView(index, sizing);\n        const panels = this.panels;\n        if (panels.length > 0) {\n            this.setActive(panels[panels.length - 1]);\n        }\n    }\n    getPanel(id) {\n        return this.panels.find((view) => view.id === id);\n    }\n    addPanel(options) {\n        if (this._panels.has(options.id)) {\n            throw new Error(`panel ${options.id} already exists`);\n        }\n        const view = createComponent(options.id, options.component, this.options.components || {}, this.options.frameworkComponents || {}, this.options.frameworkWrapper\n            ? {\n                createComponent: this.options.frameworkWrapper.createComponent,\n            }\n            : undefined);\n        view.orientation = this.splitview.orientation;\n        view.init({\n            params: options.params || {},\n            minimumSize: options.minimumSize,\n            maximumSize: options.maximumSize,\n            snap: options.snap,\n            priority: options.priority,\n            accessor: this,\n        });\n        const size = typeof options.size === 'number' ? options.size : Sizing.Distribute;\n        const index = typeof options.index === 'number' ? options.index : undefined;\n        this.splitview.addView(view, size, index);\n        this.doAddView(view);\n        this.setActive(view);\n        return view;\n    }\n    layout(width, height) {\n        const [size, orthogonalSize] = this.splitview.orientation === Orientation.HORIZONTAL\n            ? [width, height]\n            : [height, width];\n        this.splitview.layout(size, orthogonalSize);\n    }\n    doAddView(view) {\n        const disposable = view.api.onDidFocusChange((event) => {\n            if (!event.isFocused) {\n                return;\n            }\n            this.setActive(view, true);\n        });\n        this._panels.set(view.id, { disposable, value: view });\n    }\n    toJSON() {\n        var _a;\n        const views = this.splitview\n            .getViews()\n            .map((view, i) => {\n            const size = this.splitview.getViewSize(i);\n            return {\n                size,\n                data: view.toJSON(),\n                snap: !!view.snap,\n                priority: view.priority,\n            };\n        });\n        return {\n            views,\n            activeView: (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.id,\n            size: this.splitview.size,\n            orientation: this.splitview.orientation,\n        };\n    }\n    fromJSON(serializedSplitview) {\n        this.clear();\n        const { views, orientation, size, activeView } = serializedSplitview;\n        const queue = [];\n        this.splitview = new Splitview(this.element, {\n            orientation,\n            proportionalLayout: this.options.proportionalLayout,\n            descriptor: {\n                size,\n                views: views.map((view) => {\n                    const data = view.data;\n                    if (this._panels.has(data.id)) {\n                        throw new Error(`panel ${data.id} already exists`);\n                    }\n                    const panel = createComponent(data.id, data.component, this.options.components || {}, this.options.frameworkComponents || {}, this.options.frameworkWrapper\n                        ? {\n                            createComponent: this.options.frameworkWrapper\n                                .createComponent,\n                        }\n                        : undefined);\n                    queue.push(() => {\n                        panel.init({\n                            params: data.params || {},\n                            minimumSize: data.minimumSize,\n                            maximumSize: data.maximumSize,\n                            snap: view.snap,\n                            priority: view.priority,\n                            accessor: this,\n                        });\n                    });\n                    panel.orientation = orientation;\n                    this.doAddView(panel);\n                    setTimeout(() => {\n                        // the original onDidAddView events are missed since they are fired before we can subcribe to them\n                        this._onDidAddView.fire(panel);\n                    }, 0);\n                    return { size: view.size, view: panel };\n                }),\n            },\n        });\n        this.layout(this.width, this.height);\n        queue.forEach((f) => f());\n        if (typeof activeView === 'string') {\n            const panel = this.getPanel(activeView);\n            if (panel) {\n                this.setActive(panel);\n            }\n        }\n        this._onDidLayoutfromJSON.fire();\n    }\n    clear() {\n        for (const [_, value] of this._panels.entries()) {\n            value.disposable.dispose();\n            value.value.dispose();\n        }\n        this._panels.clear();\n        this.splitview.dispose();\n    }\n    dispose() {\n        for (const [_, value] of this._panels.entries()) {\n            value.disposable.dispose();\n            value.value.dispose();\n        }\n        this._panels.clear();\n        this.splitview.dispose();\n        super.dispose();\n    }\n}\n","import { addDisposableListener } from '../events';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nimport { toggleClass } from '../dom';\nimport { createChevronRightButton, createExpandMoreButton } from '../svg';\nexport class DefaultHeader extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor() {\n        super();\n        this._expandedIcon = createExpandMoreButton();\n        this._collapsedIcon = createChevronRightButton();\n        this.disposable = new MutableDisposable();\n        this.apiRef = { api: null };\n        this._element = document.createElement('div');\n        this.element.className = 'default-header';\n        this._content = document.createElement('span');\n        this._expander = document.createElement('div');\n        this._expander.className = 'dockview-pane-header-icon';\n        this.element.appendChild(this._expander);\n        this.element.appendChild(this._content);\n        this.addDisposables(addDisposableListener(this._element, 'click', () => {\n            var _a;\n            (_a = this.apiRef.api) === null || _a === void 0 ? void 0 : _a.setExpanded(!this.apiRef.api.isExpanded);\n        }));\n    }\n    init(params) {\n        this.apiRef.api = params.api;\n        this._content.textContent = params.title;\n        this.updateIcon();\n        this.disposable.value = params.api.onDidExpansionChange(() => {\n            this.updateIcon();\n        });\n    }\n    updateIcon() {\n        var _a;\n        const isExpanded = !!((_a = this.apiRef.api) === null || _a === void 0 ? void 0 : _a.isExpanded);\n        toggleClass(this._expander, 'collapsed', !isExpanded);\n        if (isExpanded) {\n            if (this._expander.contains(this._collapsedIcon)) {\n                this._collapsedIcon.remove();\n            }\n            if (!this._expander.contains(this._expandedIcon)) {\n                this._expander.appendChild(this._expandedIcon);\n            }\n        }\n        else {\n            if (this._expander.contains(this._expandedIcon)) {\n                this._expandedIcon.remove();\n            }\n            if (!this._expander.contains(this._collapsedIcon)) {\n                this._expander.appendChild(this._collapsedIcon);\n            }\n        }\n    }\n    update(_params) {\n        //\n    }\n    dispose() {\n        this.disposable.dispose();\n        super.dispose();\n    }\n}\n","import { PaneviewApi } from '../api/component.api';\nimport { createComponent } from '../panel/componentFactory';\nimport { Emitter } from '../events';\nimport { CompositeDisposable, MutableDisposable, } from '../lifecycle';\nimport { Orientation, Sizing } from '../splitview/splitview';\nimport { Paneview } from './paneview';\nimport { DraggablePaneviewPanel, } from './draggablePaneviewPanel';\nimport { DefaultHeader } from './defaultPaneviewHeader';\nimport { sequentialNumberGenerator } from '../math';\nconst nextLayoutId = sequentialNumberGenerator();\nexport class PaneFramework extends DraggablePaneviewPanel {\n    constructor(options) {\n        super(options.accessor, options.id, options.component, options.headerComponent, options.orientation, options.isExpanded, options.disableDnd);\n        this.options = options;\n    }\n    getBodyComponent() {\n        return this.options.body;\n    }\n    getHeaderComponent() {\n        return this.options.header;\n    }\n}\nexport class PaneviewComponent extends CompositeDisposable {\n    get id() {\n        return this._id;\n    }\n    get panels() {\n        return this.paneview.getPanes();\n    }\n    set paneview(value) {\n        this._paneview = value;\n        this._disposable.value = new CompositeDisposable(this._paneview.onDidChange(() => {\n            this._onDidLayoutChange.fire(undefined);\n        }), this._paneview.onDidAddView((e) => this._onDidAddView.fire(e)), this._paneview.onDidRemoveView((e) => this._onDidRemoveView.fire(e)));\n    }\n    get paneview() {\n        return this._paneview;\n    }\n    get minimumSize() {\n        return this.paneview.minimumSize;\n    }\n    get maximumSize() {\n        return this.paneview.maximumSize;\n    }\n    get height() {\n        return this.paneview.orientation === Orientation.HORIZONTAL\n            ? this.paneview.orthogonalSize\n            : this.paneview.size;\n    }\n    get width() {\n        return this.paneview.orientation === Orientation.HORIZONTAL\n            ? this.paneview.size\n            : this.paneview.orthogonalSize;\n    }\n    get options() {\n        return this._options;\n    }\n    constructor(element, options) {\n        super();\n        this.element = element;\n        this._id = nextLayoutId.next();\n        this._disposable = new MutableDisposable();\n        this._viewDisposables = new Map();\n        this._onDidLayoutfromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutfromJSON.event;\n        this._onDidLayoutChange = new Emitter();\n        this.onDidLayoutChange = this._onDidLayoutChange.event;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onDidAddView = new Emitter();\n        this.onDidAddView = this._onDidAddView.event;\n        this._onDidRemoveView = new Emitter();\n        this.onDidRemoveView = this._onDidRemoveView.event;\n        this.addDisposables(this._onDidLayoutChange, this._onDidLayoutfromJSON, this._onDidDrop, this._onDidAddView, this._onDidRemoveView);\n        this._options = options;\n        if (!options.components) {\n            options.components = {};\n        }\n        if (!options.frameworkComponents) {\n            options.frameworkComponents = {};\n        }\n        this.paneview = new Paneview(this.element, {\n            // only allow paneview in the vertical orientation for now\n            orientation: Orientation.VERTICAL,\n        });\n        this.addDisposables(this._disposable);\n    }\n    focus() {\n        //noop\n    }\n    updateOptions(options) {\n        this._options = Object.assign(Object.assign({}, this.options), options);\n    }\n    addPanel(options) {\n        const body = createComponent(options.id, options.component, this.options.components || {}, this.options.frameworkComponents || {}, this.options.frameworkWrapper\n            ? {\n                createComponent: this.options.frameworkWrapper.body.createComponent,\n            }\n            : undefined);\n        let header;\n        if (options.headerComponent) {\n            header = createComponent(options.id, options.headerComponent, this.options.headerComponents || {}, this.options.headerframeworkComponents, this.options.frameworkWrapper\n                ? {\n                    createComponent: this.options.frameworkWrapper.header\n                        .createComponent,\n                }\n                : undefined);\n        }\n        else {\n            header = new DefaultHeader();\n        }\n        const view = new PaneFramework({\n            id: options.id,\n            component: options.component,\n            headerComponent: options.headerComponent,\n            header,\n            body,\n            orientation: Orientation.VERTICAL,\n            isExpanded: !!options.isExpanded,\n            disableDnd: !!this.options.disableDnd,\n            accessor: this,\n        });\n        this.doAddPanel(view);\n        const size = typeof options.size === 'number' ? options.size : Sizing.Distribute;\n        const index = typeof options.index === 'number' ? options.index : undefined;\n        view.init({\n            params: options.params || {},\n            minimumBodySize: options.minimumBodySize,\n            maximumBodySize: options.maximumBodySize,\n            isExpanded: options.isExpanded,\n            title: options.title,\n            containerApi: new PaneviewApi(this),\n        });\n        this.paneview.addPane(view, size, index);\n        view.orientation = this.paneview.orientation;\n        return view;\n    }\n    removePanel(panel) {\n        const views = this.panels;\n        const index = views.findIndex((_) => _ === panel);\n        this.paneview.removePane(index);\n        this.doRemovePanel(panel);\n    }\n    movePanel(from, to) {\n        this.paneview.moveView(from, to);\n    }\n    getPanel(id) {\n        return this.panels.find((view) => view.id === id);\n    }\n    layout(width, height) {\n        const [size, orthogonalSize] = this.paneview.orientation === Orientation.HORIZONTAL\n            ? [width, height]\n            : [height, width];\n        this.paneview.layout(size, orthogonalSize);\n    }\n    toJSON() {\n        const maximum = (value) => value === Number.MAX_SAFE_INTEGER ||\n            value === Number.POSITIVE_INFINITY\n            ? undefined\n            : value;\n        const minimum = (value) => (value <= 0 ? undefined : value);\n        const views = this.paneview\n            .getPanes()\n            .map((view, i) => {\n            const size = this.paneview.getViewSize(i);\n            return {\n                size,\n                data: view.toJSON(),\n                minimumSize: minimum(view.minimumBodySize),\n                maximumSize: maximum(view.maximumBodySize),\n                expanded: view.isExpanded(),\n            };\n        });\n        return {\n            views,\n            size: this.paneview.size,\n        };\n    }\n    fromJSON(serializedPaneview) {\n        this.clear();\n        const { views, size } = serializedPaneview;\n        const queue = [];\n        this.paneview = new Paneview(this.element, {\n            orientation: Orientation.VERTICAL,\n            descriptor: {\n                size,\n                views: views.map((view) => {\n                    const data = view.data;\n                    const body = createComponent(data.id, data.component, this.options.components || {}, this.options.frameworkComponents || {}, this.options.frameworkWrapper\n                        ? {\n                            createComponent: this.options.frameworkWrapper.body\n                                .createComponent,\n                        }\n                        : undefined);\n                    let header;\n                    if (data.headerComponent) {\n                        header = createComponent(data.id, data.headerComponent, this.options.headerComponents || {}, this.options.headerframeworkComponents || {}, this.options.frameworkWrapper\n                            ? {\n                                createComponent: this.options.frameworkWrapper.header\n                                    .createComponent,\n                            }\n                            : undefined);\n                    }\n                    else {\n                        header = new DefaultHeader();\n                    }\n                    const panel = new PaneFramework({\n                        id: data.id,\n                        component: data.component,\n                        headerComponent: data.headerComponent,\n                        header,\n                        body,\n                        orientation: Orientation.VERTICAL,\n                        isExpanded: !!view.expanded,\n                        disableDnd: !!this.options.disableDnd,\n                        accessor: this,\n                    });\n                    this.doAddPanel(panel);\n                    queue.push(() => {\n                        panel.init({\n                            params: data.params || {},\n                            minimumBodySize: view.minimumSize,\n                            maximumBodySize: view.maximumSize,\n                            title: data.title,\n                            isExpanded: !!view.expanded,\n                            containerApi: new PaneviewApi(this),\n                        });\n                        panel.orientation = this.paneview.orientation;\n                    });\n                    setTimeout(() => {\n                        // the original onDidAddView events are missed since they are fired before we can subcribe to them\n                        this._onDidAddView.fire(panel);\n                    }, 0);\n                    return { size: view.size, view: panel };\n                }),\n            },\n        });\n        this.layout(this.width, this.height);\n        queue.forEach((f) => f());\n        this._onDidLayoutfromJSON.fire();\n    }\n    clear() {\n        for (const [_, value] of this._viewDisposables.entries()) {\n            value.dispose();\n        }\n        this._viewDisposables.clear();\n        this.paneview.dispose();\n    }\n    doAddPanel(panel) {\n        const disposable = panel.onDidDrop((event) => {\n            this._onDidDrop.fire(event);\n        });\n        this._viewDisposables.set(panel.id, disposable);\n    }\n    doRemovePanel(panel) {\n        const disposable = this._viewDisposables.get(panel.id);\n        if (disposable) {\n            disposable.dispose();\n            this._viewDisposables.delete(panel.id);\n        }\n    }\n    dispose() {\n        super.dispose();\n        for (const [_, value] of this._viewDisposables.entries()) {\n            value.dispose();\n        }\n        this._viewDisposables.clear();\n        this.paneview.dispose();\n    }\n}\n","import { BasePanelView, } from '../gridview/basePanelView';\nimport { SplitviewPanelApiImpl } from '../api/splitviewPanelApi';\nimport { Orientation } from './splitview';\nimport { Emitter } from '../events';\nexport class SplitviewPanel extends BasePanelView {\n    get priority() {\n        return this._priority;\n    }\n    set orientation(value) {\n        this._orientation = value;\n    }\n    get orientation() {\n        return this._orientation;\n    }\n    get minimumSize() {\n        const size = typeof this._minimumSize === 'function'\n            ? this._minimumSize()\n            : this._minimumSize;\n        if (size !== this._evaluatedMinimumSize) {\n            this._evaluatedMinimumSize = size;\n            this.updateConstraints();\n        }\n        return size;\n    }\n    get maximumSize() {\n        const size = typeof this._maximumSize === 'function'\n            ? this._maximumSize()\n            : this._maximumSize;\n        if (size !== this._evaluatedMaximumSize) {\n            this._evaluatedMaximumSize = size;\n            this.updateConstraints();\n        }\n        return size;\n    }\n    get snap() {\n        return this._snap;\n    }\n    constructor(id, componentName) {\n        super(id, componentName, new SplitviewPanelApiImpl(id));\n        this._evaluatedMinimumSize = 0;\n        this._evaluatedMaximumSize = Number.POSITIVE_INFINITY;\n        this._minimumSize = 0;\n        this._maximumSize = Number.POSITIVE_INFINITY;\n        this._snap = false;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this.api.initialize(this);\n        this.addDisposables(this._onDidChange, this.api.onVisibilityChange((event) => {\n            const { isVisible } = event;\n            const { accessor } = this._params;\n            accessor.setVisible(this, isVisible);\n        }), this.api.onActiveChange(() => {\n            const { accessor } = this._params;\n            accessor.setActive(this);\n        }), this.api.onDidConstraintsChangeInternal((event) => {\n            if (typeof event.minimumSize === 'number' ||\n                typeof event.minimumSize === 'function') {\n                this._minimumSize = event.minimumSize;\n            }\n            if (typeof event.maximumSize === 'number' ||\n                typeof event.maximumSize === 'function') {\n                this._maximumSize = event.maximumSize;\n            }\n            this.updateConstraints();\n        }), this.api.onDidSizeChange((event) => {\n            this._onDidChange.fire({ size: event.size });\n        }));\n    }\n    setVisible(isVisible) {\n        this.api._onDidVisibilityChange.fire({ isVisible });\n    }\n    setActive(isActive) {\n        this.api._onDidActiveChange.fire({ isActive });\n    }\n    layout(size, orthogonalSize) {\n        const [width, height] = this.orientation === Orientation.HORIZONTAL\n            ? [size, orthogonalSize]\n            : [orthogonalSize, size];\n        super.layout(width, height);\n    }\n    init(parameters) {\n        super.init(parameters);\n        this._priority = parameters.priority;\n        if (parameters.minimumSize) {\n            this._minimumSize = parameters.minimumSize;\n        }\n        if (parameters.maximumSize) {\n            this._maximumSize = parameters.maximumSize;\n        }\n        if (parameters.snap) {\n            this._snap = parameters.snap;\n        }\n    }\n    toJSON() {\n        const maximum = (value) => value === Number.MAX_SAFE_INTEGER ||\n            value === Number.POSITIVE_INFINITY\n            ? undefined\n            : value;\n        const minimum = (value) => (value <= 0 ? undefined : value);\n        return Object.assign(Object.assign({}, super.toJSON()), { minimumSize: minimum(this.minimumSize), maximumSize: maximum(this.maximumSize) });\n    }\n    updateConstraints() {\n        this.api._onDidConstraintsChange.fire({\n            maximumSize: this._evaluatedMaximumSize,\n            minimumSize: this._evaluatedMinimumSize,\n        });\n    }\n}\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\n/**\n * This component is intended to interface between vanilla-js and React hence we need to be\n * creative in how we update props.\n * A ref of the component is exposed with an update method; which when called stores the props\n * as a ref within this component and forcefully triggers a re-render of the component using\n * the ref of props we just set on the renderered component as the props passed to the inner\n * component\n */\nconst ReactComponentBridge = (props, ref) => {\n    const [_, triggerRender] = React.useState();\n    const _props = React.useRef(props.componentProps);\n    React.useImperativeHandle(ref, () => ({\n        update: (componentProps) => {\n            _props.current = Object.assign(Object.assign({}, _props.current), componentProps);\n            /**\n             * setting a arbitrary piece of state within this component will\n             * trigger a re-render.\n             * we use this rather than updating through a prop since we can\n             * pass a ref into the vanilla-js world.\n             */\n            triggerRender(Date.now());\n        },\n    }), []);\n    return React.createElement(props.component, _props.current);\n};\nReactComponentBridge.displayName = 'DockviewReactJsBridge';\n/**\n * Since we are storing the React.Portal references in a rendered array they\n * require a key property like any other React element rendered in an array\n * to prevent excessive re-rendering\n */\nconst uniquePortalKeyGenerator = (() => {\n    let value = 1;\n    return { next: () => `dockview_react_portal_key_${(value++).toString()}` };\n})();\nexport const ReactPartContext = React.createContext({});\nexport class ReactPart {\n    constructor(parent, portalStore, component, parameters, context) {\n        this.parent = parent;\n        this.portalStore = portalStore;\n        this.component = component;\n        this.parameters = parameters;\n        this.context = context;\n        this._initialProps = {};\n        this.disposed = false;\n        this.createPortal();\n    }\n    update(props) {\n        if (this.disposed) {\n            throw new Error('invalid operation: resource is already disposed');\n        }\n        if (!this.componentInstance) {\n            // if the component is yet to be mounted store the props\n            this._initialProps = Object.assign(Object.assign({}, this._initialProps), props);\n        }\n        else {\n            this.componentInstance.update(props);\n        }\n    }\n    createPortal() {\n        if (this.disposed) {\n            throw new Error('invalid operation: resource is already disposed');\n        }\n        if (typeof this.component !== 'function') {\n            /**\n             * we know this isn't a React.FunctionComponent so throw an error here.\n             * if we do not intercept this the React library will throw a very obsure error\n             * for the same reason, at least at this point we will emit a sensible stacktrace.\n             */\n            throw new Error('Invalid Operation. dockview only supports React Functional Components.');\n        }\n        const bridgeComponent = React.createElement(React.forwardRef(ReactComponentBridge), {\n            component: this\n                .component,\n            componentProps: this.parameters,\n            ref: (element) => {\n                this.componentInstance = element;\n                if (Object.keys(this._initialProps).length > 0) {\n                    this.componentInstance.update(this._initialProps);\n                    this._initialProps = {}; // don't keep a reference to the users object once no longer required\n                }\n            },\n        });\n        const node = this.context\n            ? React.createElement(ReactPartContext.Provider, { value: this.context }, bridgeComponent)\n            : bridgeComponent;\n        const portal = ReactDOM.createPortal(node, this.parent, uniquePortalKeyGenerator.next());\n        this.ref = {\n            portal,\n            disposable: this.portalStore.addPortal(portal),\n        };\n    }\n    dispose() {\n        var _a;\n        (_a = this.ref) === null || _a === void 0 ? void 0 : _a.disposable.dispose();\n        this.disposed = true;\n    }\n}\n/**\n * A React Hook that returns an array of portals to be rendered by the user of this hook\n * and a disposable function to add a portal. Calling dispose removes this portal from the\n * portal array\n */\nexport const usePortalsLifecycle = () => {\n    const [portals, setPortals] = React.useState([]);\n    React.useDebugValue(`Portal count: ${portals.length}`);\n    const addPortal = React.useCallback((portal) => {\n        setPortals((existingPortals) => [...existingPortals, portal]);\n        let disposed = false;\n        return {\n            dispose: () => {\n                if (disposed) {\n                    throw new Error('invalid operation: resource already disposed');\n                }\n                disposed = true;\n                setPortals((existingPortals) => existingPortals.filter((p) => p !== portal));\n            },\n        };\n    }, []);\n    return [portals, addPortal];\n};\n// it does the job...\nexport function isReactElement(element) {\n    return element === null || element === void 0 ? void 0 : element.type;\n}\n","import { ReactPart } from '../react';\nimport { DockviewEmitter, } from 'dockview-core';\nexport class ReactPanelContentPart {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._onDidFocus = new DockviewEmitter();\n        this.onDidFocus = this._onDidFocus.event;\n        this._onDidBlur = new DockviewEmitter();\n        this.onDidBlur = this._onDidBlur.event;\n        this._element = document.createElement('div');\n        this._element.className = 'dockview-react-part';\n    }\n    focus() {\n        // TODO\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            params: parameters.params,\n            api: parameters.api,\n            containerApi: parameters.containerApi,\n        });\n    }\n    update(event) {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update(event.params);\n    }\n    layout(_width, _height) {\n        // noop\n    }\n    dispose() {\n        var _a;\n        this._onDidFocus.dispose();\n        this._onDidBlur.dispose();\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import { ReactPart } from '../react';\nexport class ReactPanelHeaderPart {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._element = document.createElement('div');\n        this._element.className = 'dockview-react-part';\n    }\n    focus() {\n        //noop\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            params: parameters.params,\n            api: parameters.api,\n            containerApi: parameters.containerApi,\n        });\n    }\n    update(event) {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update(event.params);\n    }\n    layout(_width, _height) {\n        // noop - retrieval from api\n    }\n    dispose() {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import { ReactPart } from '../react';\nexport class ReactWatermarkPart {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._element = document.createElement('div');\n        this._element.className = 'dockview-react-part';\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            group: parameters.group,\n            containerApi: parameters.containerApi,\n            close: () => {\n                if (parameters.group) {\n                    parameters.containerApi.removeGroup(parameters.group);\n                }\n            },\n        });\n    }\n    focus() {\n        // noop\n    }\n    update(params) {\n        var _a, _b;\n        if (this.parameters) {\n            this.parameters.params = params.params;\n        }\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update({ params: ((_b = this.parameters) === null || _b === void 0 ? void 0 : _b.params) || {} });\n    }\n    layout(_width, _height) {\n        // noop - retrieval from api\n    }\n    updateParentGroup(_group, _isPanelVisible) {\n        // noop\n    }\n    dispose() {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import { ReactPart } from '../react';\nimport { DockviewCompositeDisposable, DockviewMutableDisposable, } from 'dockview-core';\nexport class ReactGroupControlsRendererPart {\n    get element() {\n        return this._element;\n    }\n    get part() {\n        return this._part;\n    }\n    get group() {\n        return this._group;\n    }\n    constructor(component, reactPortalStore, _group) {\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._group = _group;\n        this.mutableDisposable = new DockviewMutableDisposable();\n        this._element = document.createElement('div');\n        this._element.className = 'dockview-react-part';\n    }\n    focus() {\n        // TODO\n    }\n    init(parameters) {\n        this.mutableDisposable.value = new DockviewCompositeDisposable(this._group.model.onDidAddPanel(() => {\n            this.updatePanels();\n        }), this._group.model.onDidRemovePanel(() => {\n            this.updatePanels();\n        }), this._group.model.onDidActivePanelChange(() => {\n            this.updateActivePanel();\n        }), parameters.api.onDidActiveChange(() => {\n            this.updateGroupActive();\n        }));\n        this._part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            api: parameters.api,\n            containerApi: parameters.containerApi,\n            panels: this._group.model.panels,\n            activePanel: this._group.model.activePanel,\n            isGroupActive: this._group.api.isActive,\n        });\n    }\n    update(event) {\n        var _a;\n        (_a = this._part) === null || _a === void 0 ? void 0 : _a.update(event.params);\n    }\n    dispose() {\n        var _a;\n        this.mutableDisposable.dispose();\n        (_a = this._part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n    updatePanels() {\n        this.update({ params: { panels: this._group.model.panels } });\n    }\n    updateActivePanel() {\n        this.update({\n            params: {\n                activePanel: this._group.model.activePanel,\n            },\n        });\n    }\n    updateGroupActive() {\n        this.update({\n            params: {\n                isGroupActive: this._group.api.isActive,\n            },\n        });\n    }\n}\n","import * as React from 'react';\nimport { DockviewComponent, DockviewApi, watchElementResize, } from 'dockview-core';\nimport { ReactPanelContentPart } from './reactContentPart';\nimport { ReactPanelHeaderPart } from './reactHeaderPart';\nimport { usePortalsLifecycle } from '../react';\nimport { ReactWatermarkPart } from './reactWatermarkPart';\nimport { ReactGroupControlsRendererPart, } from './groupControlsRenderer';\nfunction createGroupControlElement(component, store) {\n    return component\n        ? (groupPanel) => {\n            return new ReactGroupControlsRendererPart(component, store, groupPanel);\n        }\n        : undefined;\n}\nconst DEFAULT_REACT_TAB = 'props.defaultTabComponent';\nexport const DockviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const dockviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    React.useEffect(() => {\n        if (props.disableAutoResizing) {\n            return () => {\n                //\n            };\n        }\n        const watcher = watchElementResize(domRef.current, (entry) => {\n            var _a;\n            const { width, height } = entry.contentRect;\n            (_a = dockviewRef.current) === null || _a === void 0 ? void 0 : _a.layout(width, height);\n        });\n        return () => {\n            watcher.dispose();\n        };\n    }, [props.disableAutoResizing]);\n    React.useEffect(() => {\n        var _a;\n        const factory = {\n            content: {\n                createComponent: (_id, componentId, component) => {\n                    return new ReactPanelContentPart(componentId, component, {\n                        addPortal,\n                    });\n                },\n            },\n            tab: {\n                createComponent: (_id, componentId, component) => {\n                    return new ReactPanelHeaderPart(componentId, component, {\n                        addPortal,\n                    });\n                },\n            },\n            watermark: {\n                createComponent: (_id, componentId, component) => {\n                    return new ReactWatermarkPart(componentId, component, {\n                        addPortal,\n                    });\n                },\n            },\n        };\n        const element = document.createElement('div');\n        const frameworkTabComponents = props.tabComponents || {};\n        if (props.defaultTabComponent) {\n            frameworkTabComponents[DEFAULT_REACT_TAB] =\n                props.defaultTabComponent;\n        }\n        const dockview = new DockviewComponent(element, {\n            frameworkComponentFactory: factory,\n            frameworkComponents: props.components,\n            frameworkTabComponents,\n            tabHeight: props.tabHeight,\n            watermarkFrameworkComponent: props.watermarkComponent,\n            defaultTabComponent: props.defaultTabComponent\n                ? DEFAULT_REACT_TAB\n                : undefined,\n            styles: props.hideBorders\n                ? { separatorBorder: 'transparent' }\n                : undefined,\n            showDndOverlay: props.showDndOverlay,\n            createGroupControlElement: createGroupControlElement(props.groupControlComponent, { addPortal }),\n            singleTabMode: props.singleTabMode,\n        });\n        (_a = domRef.current) === null || _a === void 0 ? void 0 : _a.appendChild(dockview.element);\n        const { clientWidth, clientHeight } = domRef.current;\n        dockview.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api: new DockviewApi(dockview) });\n        }\n        dockviewRef.current = dockview;\n        return () => {\n            dockview.dispose();\n            element.remove();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const disposable = dockviewRef.current.onDidDrop((event) => {\n            if (props.onDidDrop) {\n                props.onDidDrop(event);\n            }\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.onDidDrop]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            frameworkComponents: props.components,\n        });\n    }, [props.components]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            watermarkFrameworkComponent: props.watermarkComponent,\n        });\n    }, [props.watermarkComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            showDndOverlay: props.showDndOverlay,\n        });\n    }, [props.showDndOverlay]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            frameworkTabComponents: props.tabComponents,\n        });\n    }, [props.tabComponents]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        const frameworkTabComponents = props.tabComponents || {};\n        if (props.defaultTabComponent) {\n            frameworkTabComponents[DEFAULT_REACT_TAB] =\n                props.defaultTabComponent;\n        }\n        dockviewRef.current.updateOptions({\n            defaultTabComponent: props.defaultTabComponent\n                ? DEFAULT_REACT_TAB\n                : undefined,\n            frameworkTabComponents,\n        });\n    }, [props.defaultTabComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createGroupControlElement: createGroupControlElement(props.groupControlComponent, { addPortal }),\n        });\n    }, [props.groupControlComponent]);\n    return (React.createElement(\"div\", { className: props.className, style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nDockviewReact.displayName = 'DockviewComponent';\n","import * as React from 'react';\nexport const CloseButton = () => (React.createElement(\"svg\", { height: \"11\", width: \"11\", viewBox: \"0 0 28 28\", \"aria-hidden\": 'false', focusable: false, className: \"dockview-svg\" },\n    React.createElement(\"path\", { d: \"M2.1 27.3L0 25.2L11.55 13.65L0 2.1L2.1 0L13.65 11.55L25.2 0L27.3 2.1L15.75 13.65L27.3 25.2L25.2 27.3L13.65 15.75L2.1 27.3Z\" })));\nexport const ExpandMore = () => {\n    return (React.createElement(\"svg\", { width: \"11\", height: \"11\", viewBox: \"0 0 24 15\", \"aria-hidden\": 'false', focusable: false, className: \"dockview-svg\" },\n        React.createElement(\"path\", { d: \"M12 14.15L0 2.15L2.15 0L12 9.9L21.85 0.0499992L24 2.2L12 14.15Z\" })));\n};\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from 'react';\nimport { CloseButton } from '../svg';\nexport const DockviewDefaultTab = (_a) => {\n    var { api, containerApi: _containerApi, params: _params } = _a, rest = __rest(_a, [\"api\", \"containerApi\", \"params\"]);\n    const onClose = React.useCallback((event) => {\n        event.stopPropagation();\n        api.close();\n    }, [api]);\n    const onClick = React.useCallback((event) => {\n        api.setActive();\n        if (rest.onClick) {\n            rest.onClick(event);\n        }\n    }, [api, rest.onClick]);\n    const iconClassname = React.useMemo(() => {\n        const cn = ['dockview-react-tab-action'];\n        return cn.join(',');\n    }, []);\n    return (React.createElement(\"div\", Object.assign({}, rest, { onClick: onClick, className: \"dockview-react-tab\" }),\n        React.createElement(\"span\", { className: \"dockview-react-tab-title\" }, api.title),\n        React.createElement(\"div\", { className: iconClassname, onClick: onClose },\n            React.createElement(CloseButton, null))));\n};\n","import { SplitviewApi, SplitviewPanel, } from 'dockview-core';\nimport { ReactPart } from '../react';\nexport class ReactPanelView extends SplitviewPanel {\n    constructor(id, component, reactComponent, reactPortalStore) {\n        super(id, component);\n        this.reactComponent = reactComponent;\n        this.reactPortalStore = reactPortalStore;\n    }\n    getComponent() {\n        var _a;\n        return new ReactPart(this.element, this.reactPortalStore, this.reactComponent, {\n            params: ((_a = this._params) === null || _a === void 0 ? void 0 : _a.params) || {},\n            api: this.api,\n            containerApi: new SplitviewApi(this._params.accessor),\n        });\n    }\n}\n","import * as React from 'react';\nimport { SplitviewApi, SplitviewComponent, Orientation, watchElementResize, } from 'dockview-core';\nimport { usePortalsLifecycle } from '../react';\nimport { ReactPanelView } from './view';\nexport const SplitviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const splitviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    React.useEffect(() => {\n        if (props.disableAutoResizing) {\n            return () => {\n                //\n            };\n        }\n        const watcher = watchElementResize(domRef.current, (entry) => {\n            var _a;\n            const { width, height } = entry.contentRect;\n            (_a = splitviewRef.current) === null || _a === void 0 ? void 0 : _a.layout(width, height);\n        });\n        return () => {\n            watcher.dispose();\n        };\n    }, [props.disableAutoResizing]);\n    React.useEffect(() => {\n        const splitview = new SplitviewComponent(domRef.current, {\n            orientation: props.orientation || Orientation.HORIZONTAL,\n            frameworkComponents: props.components,\n            frameworkWrapper: {\n                createComponent: (id, componentId, component) => {\n                    return new ReactPanelView(id, componentId, component, {\n                        addPortal,\n                    });\n                },\n            },\n            proportionalLayout: typeof props.proportionalLayout === 'boolean'\n                ? props.proportionalLayout\n                : true,\n            styles: props.hideBorders\n                ? { separatorBorder: 'transparent' }\n                : undefined,\n        });\n        const { clientWidth, clientHeight } = domRef.current;\n        splitview.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api: new SplitviewApi(splitview) });\n        }\n        splitviewRef.current = splitview;\n        return () => {\n            splitview.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!splitviewRef.current) {\n            return;\n        }\n        splitviewRef.current.updateOptions({\n            frameworkComponents: props.components,\n        });\n    }, [props.components]);\n    return (React.createElement(\"div\", { className: props.className, style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nSplitviewReact.displayName = 'SplitviewComponent';\n","import { GridviewApi, GridviewPanel, } from 'dockview-core';\nimport { ReactPart } from '../react';\nexport class ReactGridPanelView extends GridviewPanel {\n    constructor(id, component, reactComponent, reactPortalStore) {\n        super(id, component);\n        this.reactComponent = reactComponent;\n        this.reactPortalStore = reactPortalStore;\n    }\n    getComponent() {\n        var _a;\n        return new ReactPart(this.element, this.reactPortalStore, this.reactComponent, {\n            params: ((_a = this._params) === null || _a === void 0 ? void 0 : _a.params) || {},\n            api: this.api,\n            containerApi: new GridviewApi(this._params.accessor),\n        });\n    }\n}\n","import * as React from 'react';\nimport { GridviewComponent, Orientation, GridviewApi, watchElementResize, } from 'dockview-core';\nimport { ReactGridPanelView } from './view';\nimport { usePortalsLifecycle } from '../react';\nexport const GridviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const gridviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    React.useEffect(() => {\n        if (props.disableAutoResizing) {\n            return () => {\n                //\n            };\n        }\n        const watcher = watchElementResize(domRef.current, (entry) => {\n            var _a;\n            const { width, height } = entry.contentRect;\n            (_a = gridviewRef.current) === null || _a === void 0 ? void 0 : _a.layout(width, height);\n        });\n        return () => {\n            watcher.dispose();\n        };\n    }, [props.disableAutoResizing]);\n    React.useEffect(() => {\n        var _a;\n        const element = document.createElement('div');\n        const gridview = new GridviewComponent(element, {\n            proportionalLayout: typeof props.proportionalLayout === 'boolean'\n                ? props.proportionalLayout\n                : true,\n            orientation: props.orientation || Orientation.HORIZONTAL,\n            frameworkComponents: props.components,\n            frameworkComponentFactory: {\n                createComponent: (id, componentId, component) => {\n                    return new ReactGridPanelView(id, componentId, component, {\n                        addPortal,\n                    });\n                },\n            },\n            styles: props.hideBorders\n                ? { separatorBorder: 'transparent' }\n                : undefined,\n        });\n        (_a = domRef.current) === null || _a === void 0 ? void 0 : _a.appendChild(gridview.element);\n        const { clientWidth, clientHeight } = domRef.current;\n        gridview.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api: new GridviewApi(gridview) });\n        }\n        gridviewRef.current = gridview;\n        return () => {\n            gridview.dispose();\n            element.remove();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!gridviewRef.current) {\n            return;\n        }\n        gridviewRef.current.updateOptions({\n            frameworkComponents: props.components,\n        });\n    }, [props.components]);\n    return (React.createElement(\"div\", { className: props.className, style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nGridviewReact.displayName = 'GridviewComponent';\n","import { ReactPart } from '../react';\nexport class PanePanelSection {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._element = document.createElement('div');\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            params: parameters.params,\n            api: parameters.api,\n            title: parameters.title,\n            containerApi: parameters.containerApi,\n        });\n    }\n    toJSON() {\n        return {\n            id: this.id,\n        };\n    }\n    update(params) {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update(params.params);\n    }\n    dispose() {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import * as React from 'react';\nimport { PaneviewComponent, PaneviewApi, watchElementResize, } from 'dockview-core';\nimport { usePortalsLifecycle } from '../react';\nimport { PanePanelSection } from './view';\nexport const PaneviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const paneviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    React.useEffect(() => {\n        if (props.disableAutoResizing) {\n            return () => {\n                //\n            };\n        }\n        const watcher = watchElementResize(domRef.current, (entry) => {\n            var _a;\n            const { width, height } = entry.contentRect;\n            (_a = paneviewRef.current) === null || _a === void 0 ? void 0 : _a.layout(width, height);\n        });\n        return () => {\n            watcher.dispose();\n        };\n    }, [props.disableAutoResizing]);\n    React.useEffect(() => {\n        const createComponent = (id, _componentId, component) => new PanePanelSection(id, component, {\n            addPortal,\n        });\n        const paneview = new PaneviewComponent(domRef.current, {\n            frameworkComponents: props.components,\n            components: {},\n            headerComponents: {},\n            disableDnd: props.disableDnd,\n            headerframeworkComponents: props.headerComponents,\n            frameworkWrapper: {\n                header: {\n                    createComponent,\n                },\n                body: {\n                    createComponent,\n                },\n            },\n            showDndOverlay: props.showDndOverlay,\n        });\n        const api = new PaneviewApi(paneview);\n        const { clientWidth, clientHeight } = domRef.current;\n        paneview.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api });\n        }\n        paneviewRef.current = paneview;\n        return () => {\n            paneview.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return;\n        }\n        paneviewRef.current.updateOptions({\n            frameworkComponents: props.components,\n        });\n    }, [props.components]);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return;\n        }\n        paneviewRef.current.updateOptions({\n            headerframeworkComponents: props.headerComponents,\n        });\n    }, [props.headerComponents]);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return () => {\n                //\n            };\n        }\n        const paneview = paneviewRef.current;\n        const disposable = paneview.onDidDrop((event) => {\n            if (props.onDidDrop) {\n                props.onDidDrop(Object.assign(Object.assign({}, event), { api: new PaneviewApi(paneview) }));\n            }\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.onDidDrop]);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return;\n        }\n        paneviewRef.current.updateOptions({\n            showDndOverlay: props.showDndOverlay,\n        });\n    }, [props.showDndOverlay]);\n    return (React.createElement(\"div\", { className: props.className, style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nPaneviewReact.displayName = 'PaneviewComponent';\n","import {\n    DockviewApi,\n    DockviewMutableDisposable,\n    DockviewReact,\n    DockviewReadyEvent,\n    GridConstraintChangeEvent,\n    IDockviewPanelProps,\n} from 'dockview';\nimport * as React from 'react';\n\nconst components = {\n    default: (props: IDockviewPanelProps) => {\n        const [contraints, setContraints] =\n            React.useState<GridConstraintChangeEvent | null>(null);\n\n        React.useEffect(() => {\n            props.api.group.api.onDidConstraintsChange((event) => {\n                setContraints(event);\n            });\n        }, []);\n\n        const onClick = () => {\n            props.api.group.api.setConstraints({\n                maximumWidth: 300,\n                maximumHeight: 300,\n            });\n        };\n\n        return (\n            <div\n                style={{\n                    height: '100%',\n                    padding: '20px',\n                    background: 'var(--dv-group-view-background-color)',\n                    color: 'white',\n                }}\n            >\n                <button onClick={onClick}>Set</button>\n                {contraints && (\n                    <div style={{ fontSize: '13px' }}>\n                        {typeof contraints.maximumHeight === 'number' && (\n                            <div\n                                style={{\n                                    border: '1px solid grey',\n                                    margin: '2px',\n                                    padding: '1px',\n                                }}\n                            >\n                                <span\n                                    style={{ color: 'grey' }}\n                                >{`Maximum Height: `}</span>\n                                <span>{`${contraints.maximumHeight}px`}</span>\n                            </div>\n                        )}\n                        {typeof contraints.minimumHeight === 'number' && (\n                            <div\n                                style={{\n                                    border: '1px solid grey',\n                                    margin: '2px',\n                                    padding: '1px',\n                                }}\n                            >\n                                <span\n                                    style={{ color: 'grey' }}\n                                >{`Minimum Height: `}</span>\n                                <span>{`${contraints.minimumHeight}px`}</span>\n                            </div>\n                        )}\n                        {typeof contraints.maximumWidth === 'number' && (\n                            <div\n                                style={{\n                                    border: '1px solid grey',\n                                    margin: '2px',\n                                    padding: '1px',\n                                }}\n                            >\n                                <span\n                                    style={{ color: 'grey' }}\n                                >{`Maximum Width: `}</span>\n                                <span>{`${contraints.maximumWidth}px`}</span>\n                            </div>\n                        )}\n                        {typeof contraints.minimumWidth === 'number' && (\n                            <div\n                                style={{\n                                    border: '1px solid grey',\n                                    margin: '2px',\n                                    padding: '1px',\n                                }}\n                            >\n                                <span\n                                    style={{ color: 'grey' }}\n                                >{`Minimum Width: `}</span>\n                                <span>{`${contraints.minimumWidth}px`}</span>\n                            </div>\n                        )}\n                    </div>\n                )}\n            </div>\n        );\n    },\n};\n\nconst App = () => {\n    const [api, setApi] = React.useState<DockviewApi>();\n\n    const onReady = (event: DockviewReadyEvent) => {\n        const panel1 = event.api.addPanel({\n            id: 'panel_1',\n            component: 'default',\n        });\n\n        const panel2 = event.api.addPanel({\n            id: 'panel_2',\n            component: 'default',\n            position: {\n                referencePanel: panel1,\n                direction: 'right',\n            },\n        });\n\n        const panel3 = event.api.addPanel({\n            id: 'panel_3',\n            component: 'default',\n            position: {\n                referencePanel: panel2,\n                direction: 'right',\n            },\n        });\n\n        const panel4 = event.api.addPanel({\n            id: 'panel_4',\n            component: 'default',\n            position: {\n                direction: 'below',\n            },\n        });\n    };\n\n    return (\n        <DockviewReact\n            onReady={onReady}\n            components={components}\n            className=\"dockview-theme-abyss \"\n        />\n    );\n};\n\nexport default App;\n","import {\n    DockviewDefaultTab,\n    DockviewReact,\n    DockviewReadyEvent,\n    IDockviewPanelHeaderProps,\n    IDockviewPanelProps,\n} from 'dockview';\nimport * as React from 'react';\n\nconst components = {\n    default: (props: IDockviewPanelProps<{ title: string }>) => {\n        return <div style={{ padding: '20px' }}>{props.params.title}</div>;\n    },\n};\n\nconst MyCustomheader = (props: IDockviewPanelHeaderProps) => {\n    const onContextMenu = (event: React.MouseEvent) => {\n        event.preventDefault();\n        alert('context menu');\n    };\n    return <DockviewDefaultTab onContextMenu={onContextMenu} {...props} />;\n};\n\nconst headerComponents = {\n    default: (props: IDockviewPanelHeaderProps) => {\n        const onContextMenu = (event: React.MouseEvent) => {\n            event.preventDefault();\n            alert('context menu');\n        };\n        return <DockviewDefaultTab onContextMenu={onContextMenu} {...props} />;\n    },\n};\n\nconst CustomHeadersDockview = () => {\n    const onReady = (event: DockviewReadyEvent) => {\n        const d = localStorage.getItem('test');\n\n        event.api.addPanel({\n            id: 'panel_1',\n            component: 'default',\n            title: 'Panel 1',\n        });\n        event.api.addPanel({\n            id: 'panel_2',\n            component: 'default',\n            title: 'Panel 2',\n        });\n        event.api.addPanel({\n            id: 'panel_3',\n            component: 'default',\n            title: 'Panel 3',\n        });\n        event.api.addPanel({\n            id: 'panel_4',\n            component: 'default',\n            title: 'Panel 4',\n            position: { referencePanel: 'panel_3', direction: 'right' },\n        });\n        event.api.addPanel({\n            id: 'panel_5',\n            component: 'default',\n            title: 'Panel 5',\n            position: { referencePanel: 'panel_4', direction: 'within' },\n        });\n        const panel6 = event.api.addPanel({\n            id: 'panel_6',\n            component: 'default',\n            title: 'Panel 6',\n            position: { referencePanel: 'panel_4', direction: 'below' },\n        });\n        panel6.group.locked = true;\n        panel6.group.header.hidden = true;\n        event.api.addPanel({\n            id: 'panel_7',\n            component: 'default',\n            title: 'Panel 7',\n            position: { referencePanel: 'panel_6', direction: 'right' },\n        });\n        event.api.addPanel({\n            id: 'panel_8',\n            component: 'default',\n\n            title: 'Panel 8',\n            position: { referencePanel: 'panel_7', direction: 'within' },\n        });\n\n        event.api.addGroup();\n    };\n\n    return (\n        <DockviewReact\n            components={components}\n            defaultTabComponent={headerComponents.default}\n            onReady={onReady}\n            className=\"dockview-theme-abyss\"\n        />\n    );\n};\n\nexport default CustomHeadersDockview;\n","import {\n    DockviewDndOverlayEvent,\n    DockviewDropEvent,\n    DockviewReact,\n    DockviewReadyEvent,\n    IDockviewPanelProps,\n    positionToDirection,\n} from 'dockview';\nimport * as React from 'react';\n\nconst components = {\n    default: (props: IDockviewPanelProps<{ title: string }>) => {\n        return (\n            <div style={{ padding: '20px' }}>\n                <div>{props.params.title}</div>\n            </div>\n        );\n    },\n};\n\nconst DndDockview = (props: { renderVisibleOnly: boolean }) => {\n    const onReady = (event: DockviewReadyEvent) => {\n        event.api.addPanel({\n            id: 'panel_1',\n            component: 'default',\n            params: {\n                title: 'Panel 1',\n            },\n        });\n\n        event.api.addPanel({\n            id: 'panel_2',\n            component: 'default',\n            params: {\n                title: 'Panel 2',\n            },\n        });\n\n        event.api.addPanel({\n            id: 'panel_3',\n            component: 'default',\n            params: {\n                title: 'Panel 3',\n            },\n        });\n\n        event.api.addPanel({\n            id: 'panel_4',\n            component: 'default',\n            params: {\n                title: 'Panel 4',\n            },\n            position: { referencePanel: 'panel_1', direction: 'right' },\n        });\n    };\n\n    const onDidDrop = (event: DockviewDropEvent) => {\n        event.api.addPanel({\n            id: 'test',\n            component: 'default',\n            position: {\n                direction: positionToDirection(event.position),\n                referenceGroup: event.group || undefined,\n            },\n        });\n    };\n\n    const showDndOverlay = (event: DockviewDndOverlayEvent) => {\n        return true;\n    };\n\n    return (\n        <div\n            style={{\n                display: 'flex',\n                flexDirection: 'column',\n                height: '100%',\n            }}\n        >\n            <div\n                style={{\n                    backgroundColor: 'orange',\n                    padding: '0px 8px',\n                    borderRadius: '4px',\n                    width: '100px',\n                    cursor: 'pointer',\n                }}\n                draggable={true}\n            >\n                Drag me\n            </div>\n\n            <DockviewReact\n                components={components}\n                onReady={onReady}\n                className=\"dockview-theme-abyss\"\n                onDidDrop={onDidDrop}\n                showDndOverlay={showDndOverlay}\n            />\n        </div>\n    );\n};\n\nexport default DndDockview;\n","import * as React from 'react';\nimport './console.scss';\n\nconst formatTime = (now: Date) => {\n    const pad = (x: number) => (x < 10 ? `0${x}` : `${x}`);\n\n    return `${pad(now.getHours())}:${pad(now.getMinutes())}:${pad(\n        now.getSeconds()\n    )}.${now.getMilliseconds()}`;\n};\n\nexport interface Line {\n    timestamp: Date;\n    text: string;\n    css?: React.CSSProperties;\n}\n\nexport interface IConsoleProps {\n    lines: Line[];\n}\n\nexport const Console = (props: IConsoleProps) => {\n    const ref = React.useRef<HTMLDivElement>();\n\n    React.useLayoutEffect(() => {\n        if (!ref.current) {\n            return;\n        }\n\n        ref.current.scrollTop = Math.max(\n            0,\n            ref.current.scrollHeight - ref.current.clientHeight\n        );\n    }, [props.lines]);\n\n    return (\n        <div ref={ref} className=\"console-container\">\n            {props.lines.map((line, i) => {\n                return (\n                    <div key={i} className=\"console-line\">\n                        <span className=\"console-line-timestamp\">\n                            {formatTime(line.timestamp)}\n                        </span>\n                        <span className=\"console-line-text\" style={line.css}>\n                            {line.text}\n                        </span>\n                    </div>\n                );\n            })}\n        </div>\n    );\n};\n","import {\n    Orientation,\n    DockviewReact,\n    DockviewReadyEvent,\n    DockviewApi,\n    IDockviewPanelProps,\n} from 'dockview';\nimport * as React from 'react';\nimport { Console, Line } from './console';\n\nconst components = {\n    default: (props: IDockviewPanelProps<{ title: string }>) => {\n        return <div style={{ padding: '20px' }}>{props.params.title}</div>;\n    },\n};\n\nconst EventsDockview = () => {\n    const [lines, setLines] = React.useState<Line[]>([]);\n    const [checked, setChecked] = React.useState<boolean>(false);\n\n    const [api, setApi] = React.useState<DockviewApi | undefined>();\n\n    React.useEffect(() => {\n        if (!api) {\n            return () => {\n                //noop\n            };\n        }\n\n        const disposables = [\n            api.onDidAddPanel((panel) => {\n                setLines((lines) => [\n                    ...lines,\n                    {\n                        timestamp: new Date(),\n                        text: `onDidAddPanel: ${panel.id}`,\n                    },\n                ]);\n            }),\n            api.onDidRemovePanel((panel) => {\n                setLines((lines) => [\n                    ...lines,\n                    {\n                        timestamp: new Date(),\n                        text: `onDidRemovePanel: ${panel.id}`,\n                    },\n                ]);\n            }),\n            api.onDidActivePanelChange((panel) => {\n                setLines((lines) => [\n                    ...lines,\n                    {\n                        timestamp: new Date(),\n                        text: `onDidActivePanelChange: ${panel?.id}`,\n                    },\n                ]);\n            }),\n            api.onDidAddGroup((panel) => {\n                setLines((lines) => [\n                    ...lines,\n                    {\n                        timestamp: new Date(),\n                        text: `onDidAddGroup: ${panel.id}`,\n                    },\n                ]);\n            }),\n            api.onDidRemoveGroup((panel) => {\n                setLines((lines) => [\n                    ...lines,\n                    {\n                        timestamp: new Date(),\n                        text: `onDidRemoveGroup: ${panel.id}`,\n                    },\n                ]);\n            }),\n            api.onDidActiveGroupChange((panel) => {\n                setLines((lines) => [\n                    ...lines,\n                    {\n                        timestamp: new Date(),\n                        text: `onDidActiveGroupChange: ${panel?.id}`,\n                    },\n                ]);\n            }),\n            api.onDidLayoutChange((panel) => {\n                setLines((lines) => [\n                    ...lines,\n                    { timestamp: new Date(), text: `onDidLayoutChange` },\n                ]);\n            }),\n            api.onDidLayoutFromJSON((panel) => {\n                setLines((lines) => [\n                    ...lines,\n                    { timestamp: new Date(), text: `onDidLayoutFromJSON` },\n                ]);\n            }),\n        ];\n\n        return () => {\n            disposables.forEach((disposable) => disposable.dispose());\n        };\n    }, [api]);\n\n    React.useEffect(() => {\n        if (!api) {\n            return;\n        }\n\n        setLines((lines) => [\n            ...lines,\n            {\n                timestamp: new Date(),\n                text: `Rebuilding view fromJSON:${checked}`,\n                css: { color: 'yellow', backgroundColor: 'grey' },\n            },\n        ]);\n\n        if (checked) {\n            api.fromJSON({\n                grid: {\n                    root: {\n                        type: 'branch',\n                        data: [\n                            {\n                                type: 'leaf',\n                                data: {\n                                    views: ['panel_1', 'panel_2', 'panel_3'],\n                                    activeView: 'panel_3',\n                                    id: '77',\n                                },\n                                size: 262,\n                            },\n                            {\n                                type: 'branch',\n                                data: [\n                                    {\n                                        type: 'leaf',\n                                        data: {\n                                            views: ['panel_5'],\n                                            activeView: 'panel_5',\n                                            id: '79',\n                                        },\n                                        size: 100,\n                                    },\n                                    {\n                                        type: 'leaf',\n                                        data: {\n                                            views: ['panel_6', 'panel_8'],\n                                            activeView: 'panel_8',\n                                            id: '80',\n                                        },\n                                        size: 100,\n                                    },\n                                    {\n                                        type: 'leaf',\n                                        data: {\n                                            views: ['panel_7'],\n                                            activeView: 'panel_7',\n                                            id: '81',\n                                        },\n                                        size: 100,\n                                    },\n                                ],\n                                size: 262,\n                            },\n                            {\n                                type: 'leaf',\n                                data: {\n                                    views: ['panel_4'],\n                                    activeView: 'panel_4',\n                                    id: '78',\n                                },\n                                size: 263.75,\n                            },\n                        ],\n                        size: 300,\n                    },\n                    width: 787.75,\n                    height: 300,\n                    orientation: Orientation.HORIZONTAL,\n                },\n                panels: {\n                    panel_1: {\n                        id: 'panel_1',\n                        contentComponent: 'default',\n                        params: { title: 'Panel 1' },\n                        title: 'panel_1',\n                    },\n                    panel_2: {\n                        id: 'panel_2',\n                        contentComponent: 'default',\n                        params: { title: 'Panel 2' },\n                        title: 'panel_2',\n                    },\n                    panel_3: {\n                        id: 'panel_3',\n                        contentComponent: 'default',\n                        params: { title: 'Panel 3' },\n                        title: 'panel_3',\n                    },\n                    panel_4: {\n                        id: 'panel_4',\n                        contentComponent: 'default',\n                        params: { title: 'Panel 4' },\n                        title: 'panel_4',\n                    },\n                    panel_5: {\n                        id: 'panel_5',\n                        contentComponent: 'default',\n                        params: { title: 'Panel 5' },\n                        title: 'panel_5',\n                    },\n                    panel_6: {\n                        id: 'panel_6',\n                        contentComponent: 'default',\n                        params: { title: 'Panel 6' },\n                        title: 'panel_6',\n                    },\n                    panel_8: {\n                        id: 'panel_8',\n                        contentComponent: 'default',\n                        params: { title: 'Panel 8' },\n                        title: 'panel_8',\n                    },\n                    panel_7: {\n                        id: 'panel_7',\n                        contentComponent: 'default',\n                        params: { title: 'Panel 7' },\n                        title: 'panel_7',\n                    },\n                },\n                activeGroup: '80',\n                options: {},\n            });\n            return;\n        }\n\n        api.clear();\n\n        api.addPanel({\n            id: 'panel_1',\n            component: 'default',\n            params: {\n                title: 'Panel 1',\n            },\n        });\n\n        api.addPanel({\n            id: 'panel_2',\n            component: 'default',\n            params: {\n                title: 'Panel 2',\n            },\n        });\n\n        api.addPanel({\n            id: 'panel_3',\n            component: 'default',\n            params: {\n                title: 'Panel 3',\n            },\n        });\n\n        api.addPanel({\n            id: 'panel_4',\n            component: 'default',\n            params: {\n                title: 'Panel 4',\n            },\n            position: { referencePanel: 'panel_1', direction: 'right' },\n        });\n\n        api.addPanel({\n            id: 'panel_5',\n            component: 'default',\n            params: {\n                title: 'Panel 5',\n            },\n            position: { referencePanel: 'panel_3', direction: 'right' },\n        });\n\n        api.addPanel({\n            id: 'panel_6',\n            component: 'default',\n            params: {\n                title: 'Panel 6',\n            },\n            position: { referencePanel: 'panel_5', direction: 'below' },\n        });\n\n        api.addPanel({\n            id: 'panel_7',\n            component: 'default',\n            params: {\n                title: 'Panel 7',\n            },\n            position: { referencePanel: 'panel_6', direction: 'below' },\n        });\n\n        api.addPanel({\n            id: 'panel_8',\n            component: 'default',\n            params: {\n                title: 'Panel 8',\n            },\n            position: { referencePanel: 'panel_6', direction: 'within' },\n        });\n    }, [api, checked]);\n\n    const onReady = (event: DockviewReadyEvent) => {\n        setApi(event.api);\n    };\n\n    return (\n        <div\n            style={{\n                display: 'flex',\n                flexDirection: 'column',\n                height: '100%',\n            }}\n        >\n            <label>\n                <input\n                    type=\"checkbox\"\n                    checked={checked}\n                    onChange={(e) => setChecked(e.target.checked)}\n                />\n                <span>{'fromJSON'}</span>\n            </label>\n            <div style={{ flexGrow: 1 }}>\n                <DockviewReact\n                    components={components}\n                    onReady={onReady}\n                    className=\"dockview-theme-abyss\"\n                />\n            </div>\n            <div style={{ flexGrow: 1, paddingTop: '5px' }}>\n                <Console lines={lines} />\n            </div>\n        </div>\n    );\n};\n\nexport default EventsDockview;\n","import {\n    DockviewReact,\n    DockviewReadyEvent,\n    IDockviewPanelProps,\n    IDockviewPanelHeaderProps,\n} from 'dockview';\nimport * as React from 'react';\nimport './app.scss';\n\nconst components = {\n    default: (props: IDockviewPanelProps<{ title: string; x?: number }>) => {\n        return (\n            <div\n                style={{\n                    display: 'flex',\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    color: 'white',\n                    height: '100%',\n                }}\n            >\n                <span>{`${props.params.title}`}</span>\n                {props.params.x && <span>{`  ${props.params.x}`}</span>}\n            </div>\n        );\n    },\n};\n\nconst tabComponents = {\n    default: (props: IDockviewPanelHeaderProps<{ title: string }>) => {\n        return (\n            <div className=\"my-custom-tab\">\n                <span>{props.params.title}</span>\n                <span style={{ flexGrow: 1 }} />\n\n                <span className=\"my-custom-tab-icon material-symbols-outlined\">\n                    minimize\n                </span>\n                <span className=\"my-custom-tab-icon material-symbols-outlined\">\n                    maximize\n                </span>\n                <span className=\"my-custom-tab-icon material-symbols-outlined\">\n                    close\n                </span>\n            </div>\n        );\n    },\n};\n\nconst DockviewNative = () => {\n    const onReady = (event: DockviewReadyEvent) => {\n        const panel1 = event.api.addPanel({\n            id: 'panel_1',\n            component: 'default',\n            tabComponent: 'default',\n            params: {\n                title: 'Window 1',\n            },\n        });\n        panel1.group.locked = true;\n\n        const panel2 = event.api.addPanel({\n            id: 'panel_2',\n            component: 'default',\n            tabComponent: 'default',\n            params: {\n                title: 'Window 2',\n            },\n            position: {\n                direction: 'right',\n            },\n        });\n        panel2.group.locked = true;\n\n        const panel3 = event.api.addPanel({\n            id: 'panel_3',\n            component: 'default',\n            tabComponent: 'default',\n            params: {\n                title: 'Window 3',\n            },\n            position: {\n                direction: 'below',\n            },\n        });\n        panel3.group.locked = true;\n    };\n\n    return (\n        <DockviewReact\n            onReady={onReady}\n            components={components}\n            tabComponents={tabComponents}\n            className=\"dockview-theme-abyss\"\n            singleTabMode=\"fullwidth\"\n        />\n    );\n};\n\nexport default DockviewNative;\n","import {\n    DockviewReact,\n    DockviewReadyEvent,\n    IDockviewGroupControlProps,\n    IDockviewPanelProps,\n} from 'dockview';\nimport * as React from 'react';\nimport './app.scss';\n\nconst components = {\n    default: (props: IDockviewPanelProps<{ title: string; x?: number }>) => {\n        return (\n            <div\n                style={{\n                    display: 'flex',\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    color: 'white',\n                    height: '100%',\n                }}\n            >\n                <span>{`${props.params.title}`}</span>\n                {props.params.x && <span>{`  ${props.params.x}`}</span>}\n            </div>\n        );\n    },\n};\n\nconst GroupControlComponent = (props: IDockviewGroupControlProps) => {\n    const isGroupActive = props.isGroupActive;\n    const activePanel = props.activePanel;\n\n    return (\n        <div className=\"dockview-groupcontrol-demo\">\n            <span\n                className=\"dockview-groupcontrol-demo-group-active\"\n                style={{\n                    background: isGroupActive ? 'green' : 'red',\n                }}\n            >\n                {isGroupActive ? 'Group Active' : 'Group Inactive'}\n            </span>\n            <span className=\"dockview-groupcontrol-demo-active-panel\">{`activePanel: ${\n                activePanel?.id || 'null'\n            }`}</span>\n        </div>\n    );\n};\n\nconst DockviewGroupControl = () => {\n    const onReady = (event: DockviewReadyEvent) => {\n        const panel1 = event.api.addPanel({\n            id: 'panel_1',\n            component: 'default',\n            tabComponent: 'default',\n            params: {\n                title: 'Window 1',\n            },\n        });\n\n        const panel2 = event.api.addPanel({\n            id: 'panel_2',\n            component: 'default',\n            tabComponent: 'default',\n            params: {\n                title: 'Window 2',\n            },\n            position: {\n                direction: 'right',\n            },\n        });\n\n        const panel3 = event.api.addPanel({\n            id: 'panel_3',\n            component: 'default',\n            tabComponent: 'default',\n            params: {\n                title: 'Window 3',\n            },\n            position: {\n                direction: 'below',\n            },\n        });\n    };\n\n    return (\n        <DockviewReact\n            onReady={onReady}\n            components={components}\n            groupControlComponent={GroupControlComponent}\n            className=\"dockview-theme-abyss\"\n        />\n    );\n};\n\nexport default DockviewGroupControl;\n","import {\n    DockviewApi,\n    DockviewReact,\n    DockviewReadyEvent,\n    IDockviewPanelProps,\n} from 'dockview';\nimport * as React from 'react';\n\nconst components = {\n    default: (props: IDockviewPanelProps<{ title: string }>) => {\n        return (\n            <div\n                style={{\n                    height: '100%',\n                    padding: '20px',\n                    background: 'var(--dv-group-view-background-color)',\n                }}\n            >\n                {props.params.title}\n            </div>\n        );\n    },\n};\n\nconst counter = (() => {\n    let i = 0;\n\n    return {\n        next: () => ++i,\n    };\n})();\n\nfunction loadDefaultLayout(api: DockviewApi) {\n    api.addPanel({\n        id: 'panel_1',\n        component: 'default',\n    });\n\n    api.addPanel({\n        id: 'panel_2',\n        component: 'default',\n    });\n\n    api.addPanel({\n        id: 'panel_3',\n        component: 'default',\n    });\n}\n\nexport const DockviewPersistance = () => {\n    const [api, setApi] = React.useState<DockviewApi>();\n\n    const clearLayout = () => {\n        localStorage.removeItem('dockview_persistance_layout');\n        if (api) {\n            api.clear();\n            loadDefaultLayout(api);\n        }\n    };\n\n    const onReady = (event: DockviewReadyEvent) => {\n        const layoutString = localStorage.getItem(\n            'dockview_persistance_layout'\n        );\n\n        let success = false;\n\n        if (layoutString) {\n            try {\n                const layout = JSON.parse(layoutString);\n                event.api.fromJSON(layout);\n                success = true;\n            } catch (err) {\n                //\n            }\n        }\n\n        if (!success) {\n            loadDefaultLayout(event.api);\n        }\n\n        setApi(event.api);\n    };\n\n    React.useEffect(() => {\n        if (!api) {\n            return;\n        }\n\n        api.onDidLayoutChange(() => {\n            const layout = api.toJSON();\n\n            localStorage.setItem(\n                'dockview_persistance_layout',\n                JSON.stringify(layout)\n            );\n        });\n    }, [api]);\n\n    return (\n        <div\n            style={{\n                display: 'flex',\n                flexDirection: 'column',\n                height: '100%',\n            }}\n        >\n            <div style={{ height: '25px' }}>\n                <button onClick={clearLayout}>Reset Layout</button>\n            </div>\n            <div\n                style={{\n                    flexGrow: 1,\n                    overflow: 'hidden',\n                }}\n            >\n                <DockviewReact\n                    onReady={onReady}\n                    components={components}\n                    watermarkComponent={Watermark}\n                    className=\"dockview-theme-abyss\"\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default DockviewPersistance;\n\nconst Watermark = () => {\n    return <div style={{ color: 'white', padding: '8px' }}>watermark</div>;\n};\n","import {\n    DockviewReact,\n    DockviewReadyEvent,\n    IDockviewPanelProps,\n    IDockviewPanelHeaderProps,\n} from 'dockview';\nimport * as React from 'react';\nimport './app.scss';\n\nconst components = {\n    default: (props: IDockviewPanelProps<{ title: string; x?: number }>) => {\n        return (\n            <div\n                style={{\n                    display: 'flex',\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    color: 'white',\n                    height: '100%',\n                }}\n            >\n                <span>{`${props.params.title}`}</span>\n                {props.params.x && <span>{`  ${props.params.x}`}</span>}\n            </div>\n        );\n    },\n    isolatedApp: (\n        props: IDockviewPanelProps<{ title: string; x?: number }>\n    ) => {\n        const onReady = (event: DockviewReadyEvent) => {\n            const panel1 = event.api.addPanel({\n                id: 'panel_1',\n                component: 'default',\n                params: {\n                    title: 'Tab 1',\n                },\n            });\n            const panel2 = event.api.addPanel({\n                id: 'panel_2',\n                component: 'default',\n                params: {\n                    title: 'Tab 2',\n                },\n            });\n            const panel3 = event.api.addPanel({\n                id: 'panel_3',\n                component: 'default',\n                params: {\n                    title: 'Tab 3',\n                },\n            });\n        };\n        return (\n            <DockviewReact\n                onReady={onReady}\n                components={components}\n                tabComponents={tabComponents}\n                className=\"dockview-theme-abyss\"\n            />\n        );\n    },\n};\n\nconst tabComponents = {\n    default: (props: IDockviewPanelHeaderProps<{ title: string }>) => {\n        return (\n            <div className=\"my-custom-tab\">\n                <span>{props.params.title}</span>\n                <span style={{ flexGrow: 1 }} />\n\n                <span className=\"my-custom-tab-icon material-symbols-outlined\">\n                    minimize\n                </span>\n                <span className=\"my-custom-tab-icon material-symbols-outlined\">\n                    maximize\n                </span>\n                <span className=\"my-custom-tab-icon material-symbols-outlined\">\n                    close\n                </span>\n            </div>\n        );\n    },\n};\n\nconst DockviewNative2 = () => {\n    const onReady = (event: DockviewReadyEvent) => {\n        const panel1 = event.api.addPanel({\n            id: 'panel_1',\n            component: 'isolatedApp',\n            tabComponent: 'default',\n            params: {\n                title: 'Window 1',\n            },\n        });\n        panel1.group.locked = true;\n\n        const panel2 = event.api.addPanel({\n            id: 'panel_2',\n            component: 'isolatedApp',\n            tabComponent: 'default',\n            params: {\n                title: 'Window 2',\n            },\n            position: {\n                direction: 'right',\n            },\n        });\n        panel2.group.locked = true;\n\n        const panel3 = event.api.addPanel({\n            id: 'panel_3',\n            component: 'isolatedApp',\n            tabComponent: 'default',\n            params: {\n                title: 'Window 3',\n            },\n            position: {\n                direction: 'below',\n            },\n        });\n        panel3.group.locked = true;\n    };\n\n    return (\n        <div\n            style={{\n                height: '500px',\n                display: 'flex',\n                flexDirection: 'column',\n            }}\n        >\n            <DockviewReact\n                onReady={onReady}\n                components={components}\n                tabComponents={tabComponents}\n                className=\"dockview-theme-abyss\"\n                singleTabMode=\"fullwidth\"\n            />\n        </div>\n    );\n};\n\nexport default DockviewNative2;\n","import {\n    DockviewDndOverlayEvent,\n    DockviewDropEvent,\n    DockviewReact,\n    DockviewReadyEvent,\n    IDockviewPanelProps,\n} from 'dockview';\nimport * as React from 'react';\nimport './app.scss';\n\nconst InnerDockview = () => {\n    const onReady = (event: DockviewReadyEvent) => {\n        event.api.addPanel({\n            id: 'panel_1',\n            component: 'default',\n        });\n\n        event.api.addPanel({\n            id: 'panel_2',\n            component: 'default',\n        });\n\n        event.api.addPanel({\n            id: 'panel_3',\n            component: 'default',\n        });\n    };\n\n    return (\n        <DockviewReact\n            onReady={onReady}\n            components={components}\n            className=\"dockview-theme-abyss nested-dockview\"\n        />\n    );\n};\n\nconst components = {\n    default: (props: IDockviewPanelProps<{ title: string }>) => {\n        return (\n            <div\n                style={{\n                    height: '100%',\n                    padding: '20px',\n                    background: 'var(--dv-group-view-background-color)',\n                }}\n            >\n                {props.params.title}\n            </div>\n        );\n    },\n    innerDockview: InnerDockview,\n};\n\nconst NestedDockview = () => {\n    const onReady = (event: DockviewReadyEvent) => {\n        event.api.addPanel({\n            id: 'panel_1',\n            component: 'default',\n        });\n\n        event.api.addPanel({\n            id: 'panel_2',\n            component: 'default',\n        });\n\n        event.api.addPanel({\n            id: 'panel_3',\n            component: 'innerDockview',\n            position: { referencePanel: 'panel_2', direction: 'right' },\n        });\n    };\n\n    const showDndOverlay = (event: DockviewDndOverlayEvent) => {\n        // console.log(event.getData());\n\n        return false;\n    };\n\n    const onDidDrop = (event: DockviewDropEvent) => {\n        // event.getData();\n    };\n\n    return (\n        <DockviewReact\n            onReady={onReady}\n            components={components}\n            className=\"dockview-theme-abyss\"\n            showDndOverlay={showDndOverlay}\n            onDidDrop={onDidDrop}\n        />\n    );\n};\n\nexport default NestedDockview;\n","import {\n    DockviewReact,\n    DockviewReadyEvent,\n    IDockviewPanelProps,\n} from 'dockview';\nimport * as React from 'react';\n\nimport { atom, useRecoilState, useRecoilValue } from 'recoil';\n\nconst renderVisibleComponentsOnlyAtom = atom<boolean>({\n    key: 'renderVisibleComponentsOnlyAtom',\n    default: false,\n});\n\nfunction RenderWhenVisible(\n    component: React.FunctionComponent<IDockviewPanelProps>\n) {\n    const HigherOrderComponent = (props: IDockviewPanelProps) => {\n        const [visible, setVisible] = React.useState<boolean>(\n            props.api.isVisible\n        );\n\n        const render = useRecoilValue(renderVisibleComponentsOnlyAtom);\n\n        React.useEffect(() => {\n            const disposable = props.api.onDidVisibilityChange((event) =>\n                setVisible(event.isVisible)\n            );\n\n            return () => {\n                disposable.dispose();\n            };\n        }, [props.api]);\n\n        if (!visible && render) {\n            return null;\n        }\n\n        return React.createElement(component, props);\n    };\n    return HigherOrderComponent;\n}\n\nconst formatLine = (line: string) => {\n    const now = new Date();\n\n    const pad = (x: number) => (x < 10 ? `0${x}` : `${x}`);\n\n    const time = `${pad(now.getHours())}:${pad(now.getMinutes())}:${pad(\n        now.getSeconds()\n    )}`;\n\n    return `[${time}] ${line}`;\n};\n\nconst components = {\n    default: RenderWhenVisible(\n        (props: IDockviewPanelProps<{ title: string }>) => {\n            const [lines, setLines] = React.useState<string[]>([\n                formatLine('Component created'),\n            ]);\n\n            React.useEffect(() => {\n                setLines((lines) => [\n                    ...lines,\n                    formatLine('Running task for 5 seconds'),\n                ]);\n                const timeout = setTimeout(() => {\n                    setLines((lines) => [\n                        ...lines,\n                        formatLine('Task completed'),\n                    ]);\n                }, 5000);\n\n                return () => {\n                    clearTimeout(timeout);\n                };\n            }, []);\n\n            return (\n                <div style={{ padding: '20px' }}>\n                    <div>{props.params.title}</div>\n                    {lines.map((line, i) => (\n                        <div key={i}>{line}</div>\n                    ))}\n                </div>\n            );\n        }\n    ),\n};\n\nconst Checkbox = () => {\n    const [render, setRender] = useRecoilState(renderVisibleComponentsOnlyAtom);\n\n    return (\n        <label>\n            Render only when visible\n            <input\n                type=\"checkbox\"\n                checked={render}\n                onChange={(e) => setRender(e.target.checked)}\n            />\n        </label>\n    );\n};\n\nconst RenderingDockview = (props: { renderVisibleOnly: boolean }) => {\n    const [render, setRender] = useRecoilState(renderVisibleComponentsOnlyAtom);\n\n    React.useEffect(\n        () => setRender(props.renderVisibleOnly),\n        [props.renderVisibleOnly]\n    );\n\n    const onReady = (event: DockviewReadyEvent) => {\n        event.api.addPanel({\n            id: 'panel_1',\n            component: 'default',\n            params: {\n                title: 'Panel 1',\n            },\n        });\n\n        event.api.addPanel({\n            id: 'panel_2',\n            component: 'default',\n            params: {\n                title: 'Panel 2',\n            },\n        });\n\n        event.api.addPanel({\n            id: 'panel_3',\n            component: 'default',\n            params: {\n                title: 'Panel 3',\n            },\n        });\n\n        event.api.addPanel({\n            id: 'panel_4',\n            component: 'default',\n            params: {\n                title: 'Panel 4',\n            },\n            position: { referencePanel: 'panel_1', direction: 'right' },\n        });\n    };\n\n    return (\n        <div\n            style={{\n                display: 'flex',\n                flexDirection: 'column',\n                height: '100%',\n            }}\n        >\n            <Checkbox />\n            <div style={{ flexGrow: 1, color: 'white' }}>\n                <DockviewReact\n                    components={components}\n                    onReady={onReady}\n                    className=\"dockview-theme-abyss\"\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default RenderingDockview;\n","import {\n    DockviewReact,\n    DockviewReadyEvent,\n    IDockviewPanelProps,\n} from 'dockview';\nimport * as React from 'react';\nimport './resize.scss';\n\nconst Default = (props: IDockviewPanelProps) => {\n    const [width, setWidth] = React.useState<number>(100);\n    const [height, setHeight] = React.useState<number>(100);\n\n    return (\n        <div className=\"resize-panel\">\n            <div style={{ height: '25px' }}>{props.api.title}</div>\n            <div className=\"resize-control\">\n                <span>Width:</span>\n                <input\n                    value={width}\n                    onChange={(e) => setWidth(Number(e.target.value))}\n                    type=\"number\"\n                    min={50}\n                    step={1}\n                />\n                <button\n                    style={{ width: '100px' }}\n                    onClick={() => {\n                        props.api.group.api.setSize({\n                            width,\n                        });\n                    }}\n                >\n                    Resize Group\n                </button>\n                <button\n                    style={{ width: '100px' }}\n                    onClick={() => {\n                        props.api.setSize({\n                            width,\n                        });\n                    }}\n                >\n                    Resize panel\n                </button>\n            </div>\n            <div className=\"resize-control\">\n                <span>Height:</span>\n                <input\n                    value={height}\n                    onChange={(e) => setHeight(Number(e.target.value))}\n                    type=\"number\"\n                    min={50}\n                    step={1}\n                />\n                <button\n                    style={{ width: '100px' }}\n                    onClick={() => {\n                        props.api.group.api.setSize({\n                            height,\n                        });\n                    }}\n                >\n                    Resize Group\n                </button>\n                <button\n                    style={{ width: '100px' }}\n                    onClick={() => {\n                        props.api.setSize({\n                            height,\n                        });\n                    }}\n                >\n                    Resize Panel\n                </button>\n            </div>\n        </div>\n    );\n};\n\nconst components = {\n    default: Default,\n};\n\nconst ResizeDockview = () => {\n    const onReady = (event: DockviewReadyEvent) => {\n        event.api.addPanel({\n            id: 'panel_1',\n            component: 'default',\n        });\n\n        event.api.addPanel({\n            id: 'panel_2',\n            component: 'default',\n            position: {\n                direction: 'right',\n                referencePanel: 'panel_1',\n            },\n        });\n\n        event.api.addPanel({\n            id: 'panel_3',\n            component: 'default',\n            position: {\n                direction: 'below',\n                referencePanel: 'panel_1',\n            },\n        });\n        event.api.addPanel({\n            id: 'panel_4',\n            component: 'default',\n        });\n        event.api.addPanel({\n            id: 'panel_5',\n            component: 'default',\n        });\n    };\n\n    return (\n        <DockviewReact\n            className=\"dockview-theme-abyss\"\n            onReady={onReady}\n            components={components}\n        />\n    );\n};\n\nexport default ResizeDockview;\n","import {\n    DockviewReact,\n    DockviewReadyEvent,\n    IDockviewPanelProps,\n} from 'dockview';\nimport * as React from 'react';\n\nconst components = {\n    default: (props: IDockviewPanelProps<{ title: string }>) => {\n        return (\n            <div style={{ padding: '20px', color: 'white' }}>\n                {props.params.title}\n            </div>\n        );\n    },\n};\n\nexport const App: React.FC = () => {\n    const onReady = (event: DockviewReadyEvent) => {\n        const panel = event.api.addPanel({\n            id: 'panel_1',\n            component: 'default',\n            params: {\n                title: 'Panel 1',\n            },\n        });\n\n        panel.group.locked = true;\n        panel.group.header.hidden = true;\n\n        event.api.addPanel({\n            id: 'panel_2',\n            component: 'default',\n            params: {\n                title: 'Panel 2',\n            },\n        });\n\n        event.api.addPanel({\n            id: 'panel_3',\n            component: 'default',\n            params: {\n                title: 'Panel 3',\n            },\n        });\n\n        event.api.addPanel({\n            id: 'panel_4',\n            component: 'default',\n            params: {\n                title: 'Panel 4',\n            },\n            position: { referencePanel: 'panel_1', direction: 'right' },\n        });\n\n        const panel5 = event.api.addPanel({\n            id: 'panel_5',\n            component: 'default',\n            params: {\n                title: 'Panel 5',\n            },\n            position: { referencePanel: 'panel_3', direction: 'right' },\n        });\n\n        // panel5.group!.model.header.hidden = true;\n        // panel5.group!.model.locked = true;\n\n        event.api.addPanel({\n            id: 'panel_6',\n            component: 'default',\n            params: {\n                title: 'Panel 6',\n            },\n            position: { referencePanel: 'panel_5', direction: 'below' },\n        });\n\n        event.api.addPanel({\n            id: 'panel_7',\n            component: 'default',\n            params: {\n                title: 'Panel 7',\n            },\n            position: { referencePanel: 'panel_6', direction: 'right' },\n        });\n    };\n\n    return (\n        <DockviewReact\n            components={components}\n            onReady={onReady}\n            className=\"dockview-theme-abyss\"\n        />\n    );\n};\n\nexport default App;\n","import {\n    DockviewReact,\n    DockviewReadyEvent,\n    IDockviewPanelProps,\n} from 'dockview';\nimport * as React from 'react';\n\nconst components = {\n    default: (\n        props: IDockviewPanelProps<{ title: string; myValue: string }>\n    ) => {\n        const [title, setTitle] = React.useState<string>(props.params.title);\n\n        const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n            setTitle(event.target.value);\n        };\n\n        const onClick = () => {\n            props.api.setTitle(title);\n        };\n\n        return (\n            <div style={{ padding: '20px', color: 'white' }}>\n                <div>\n                    <span style={{ color: 'grey' }}>{'props.api.title='}</span>\n                    <span>{`${props.api.title}`}</span>\n                </div>\n                <input value={title} onChange={onChange} />\n                <button onClick={onClick}>Change</button>\n            </div>\n        );\n    },\n};\n\nexport const App: React.FC = () => {\n    const onReady = (event: DockviewReadyEvent) => {\n        const panel = event.api.addPanel({\n            id: 'panel_1',\n            component: 'default',\n            title: 'Panel 1',\n        });\n\n        const panel2 = event.api.addPanel({\n            id: 'panel_2',\n            component: 'default',\n            title: 'Panel 2',\n\n            position: { referencePanel: panel },\n        });\n\n        const panel3 = event.api.addPanel({\n            id: 'panel_3',\n            component: 'default',\n            title: 'Panel 3',\n\n            position: { referencePanel: panel, direction: 'right' },\n        });\n\n        const panel4 = event.api.addPanel({\n            id: 'panel_4',\n            component: 'default',\n            title: 'Panel 4',\n\n            position: { referencePanel: panel3 },\n        });\n    };\n\n    return (\n        <DockviewReact\n            components={components}\n            onReady={onReady}\n            className=\"dockview-theme-abyss\"\n        />\n    );\n};\n\nexport default App;\n","import {\n    DockviewApi,\n    DockviewReact,\n    DockviewReadyEvent,\n    IDockviewPanelProps,\n    IWatermarkPanelProps,\n    Orientation,\n} from 'dockview';\nimport * as React from 'react';\n\nconst components = {\n    default: (props: IDockviewPanelProps<{ title: string }>) => {\n        return (\n            <div\n                style={{\n                    height: '100%',\n                    padding: '20px',\n                    background: 'var(--dv-group-view-background-color)',\n                }}\n            >\n                {props.params.title}\n            </div>\n        );\n    },\n};\n\nconst counter = (() => {\n    let i = 0;\n\n    return {\n        next: () => ++i,\n    };\n})();\n\nconst Watermark = (props: IWatermarkPanelProps) => {\n    const isGroup = props.containerApi.groups.length > 0;\n\n    const addPanel = () => {\n        props.containerApi.addPanel({\n            id: counter.next().toString(),\n            component: 'default',\n        });\n    };\n\n    return (\n        <div\n            style={{\n                height: '100%',\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'center',\n                color: 'white',\n            }}\n        >\n            <div\n                style={{\n                    display: 'flex',\n                    flexDirection: 'column',\n                }}\n            >\n                <span>\n                    This is a custom watermark. You can put whatever React\n                    component you want here\n                </span>\n                <span>\n                    <button onClick={addPanel}>Add New Panel</button>\n                </span>\n                {isGroup && (\n                    <span>\n                        <button\n                            onClick={() => {\n                                props.close();\n                            }}\n                        >\n                            Close Group\n                        </button>\n                    </span>\n                )}\n            </div>\n        </div>\n    );\n};\n\nconst DockviewWatermark = () => {\n    const [api, setApi] = React.useState<DockviewApi>();\n\n    const onReady = (event: DockviewReadyEvent) => {\n        // event.api.addPanel({\n        //     id: 'panel_1',\n        //     component: 'default',\n        // });\n\n        event.api.fromJSON({\n            grid: {\n                orientation: Orientation.HORIZONTAL,\n                root: { type: 'branch', data: [] },\n                height: 100,\n                width: 100,\n            },\n            panels: {},\n        });\n\n        setApi(event.api);\n    };\n\n    const onClick = () => {\n        if (!api) {\n            return;\n        }\n\n        api.addGroup();\n    };\n\n    return (\n        <div\n            style={{\n                display: 'flex',\n                flexDirection: 'column',\n                height: '100%',\n            }}\n        >\n            <div>\n                <button onClick={onClick}>Add Empty Group</button>\n            </div>\n            <DockviewReact\n                onReady={onReady}\n                components={components}\n                watermarkComponent={Watermark}\n                className=\"dockview-theme-abyss nested-dockview\"\n            />\n        </div>\n    );\n};\n\nexport default DockviewWatermark;\n","import * as React from 'react';\nimport './codeSandboxButton.scss';\n\nconst BASE_SANDBOX_URL =\n    'https://codesandbox.io/s/github/mathuo/dockview/tree/master/packages/docs/sandboxes';\n\nconst createSvgElementFromPath = (params: {\n    height: string;\n    width: string;\n    viewbox: string;\n    path: string;\n}) => {\n    return (\n        <svg\n            height={params.height}\n            width={params.width}\n            viewBox={params.viewbox}\n            focusable={false}\n            className={'dockview-svg'}\n        >\n            <path d={params.path} />\n        </svg>\n    );\n};\n\nconst CloseButton = () =>\n    createSvgElementFromPath({\n        width: '16',\n        height: '16',\n        viewbox: '0 0 50 58',\n        path: 'M22.5581 50.9938V30.1717L4.65116 19.869V31.7386L12.8536 36.4939V45.4198L22.5581 50.9938ZM27.2093 51.1162L37.0931 45.4226V36.2851L45.3488 31.501V19.7801L27.2093 30.2529V51.1162ZM42.9633 15.7867L33.4288 10.2615L25.0571 15.1193L16.6219 10.2567L7.00237 15.8557L24.9542 26.1842L42.9633 15.7867ZM0 43.4008V14.5498L24.9974 0L50 14.4887V43.3552L24.9969 57.7584L0 43.4008Z',\n    });\n\nexport const CodeSandboxButton = (props: { id: string }) => {\n    const url = React.useMemo(() => {\n        if (!props.id) {\n            return '';\n        }\n        return `${BASE_SANDBOX_URL}/${props.id}`;\n    }, [props.id]);\n\n    return (\n        <span\n            className=\"codesandbox-button\"\n            style={{ display: 'flex', alignItems: 'center' }}\n        >\n            <span className=\"codesandbox-button-pretext\">{`Open in `}</span>\n            <a\n                href={url}\n                target={'_blank'}\n                className=\"codesandbox-button-content\"\n            >\n                <span\n                    style={{\n                        fontWeight: 'bold',\n                        paddingRight: '4px',\n                    }}\n                >\n                    CodeSandbox\n                </span>\n                <CloseButton />\n            </a>\n        </span>\n    );\n};\n","import * as React from 'react';\nimport { CodeSandboxButton } from './codeSandboxButton';\n\nexport const Container = (props: {\n    children?: React.ReactNode;\n    height?: number;\n    injectVanillaJS?: (parent: HTMLElement) => void;\n    sandboxId?: string;\n}) => {\n    const ref = React.useRef<HTMLDivElement>(null);\n\n    React.useEffect(() => {\n        if (!props.injectVanillaJS) {\n            return;\n        }\n\n        props.injectVanillaJS(ref.current);\n    }, [props.injectVanillaJS]);\n\n    return (\n        <>\n            <div\n                ref={ref}\n                style={{\n                    height: props.height ? `${props.height}px` : '300px',\n                }}\n            >\n                {props.children}\n            </div>\n            <div\n                style={{\n                    padding: '2px 0px',\n                    display: 'flex',\n                    alignItems: 'center',\n                    fontSize: '14px',\n                }}\n            >\n                <span style={{ flexGrow: 1 }} />\n                {props.sandboxId && <CodeSandboxButton id={props.sandboxId} />}\n            </div>\n        </>\n    );\n};\n","import { useState } from 'react';\nimport { Tree } from '@minoru/react-dnd-treeview';\nimport * as React from 'react';\n\nconst SampleData = [\n    {\n        id: 1,\n        parent: 0,\n        droppable: true,\n        text: 'Folder 1',\n    },\n    {\n        id: 2,\n        parent: 1,\n        droppable: false,\n        text: 'File 1-1',\n    },\n    {\n        id: 3,\n        parent: 1,\n        droppable: false,\n        text: 'File 1-2',\n    },\n    {\n        id: 4,\n        parent: 0,\n        droppable: true,\n        text: 'Folder 2',\n    },\n    {\n        id: 5,\n        parent: 4,\n        droppable: true,\n        text: 'Folder 2-1',\n    },\n    {\n        id: 6,\n        parent: 5,\n        droppable: false,\n        text: 'File 2-1-1',\n    },\n    {\n        id: 7,\n        parent: 0,\n        droppable: false,\n        text: 'File 3',\n    },\n];\n\nconst TreeComponent = () => {\n    const [treeData, setTreeData] = useState(SampleData);\n    const handleDrop = (newTreeData: any) => {\n        console.log('handleDrop');\n        setTreeData(newTreeData);\n    };\n    return (\n        <Tree\n            tree={treeData}\n            rootId={0}\n            onDrop={handleDrop}\n            onDragEnd={(event) => console.log('onDragEnd', event)}\n            render={(node, { depth, isOpen, onToggle }) => (\n                <div style={{ marginLeft: depth * 10 }}>\n                    {node.droppable && (\n                        <span onClick={onToggle}>{isOpen ? '[-]' : '[+]'}</span>\n                    )}\n                    {node.text}\n                </div>\n            )}\n        />\n    );\n};\n\nexport default TreeComponent;\n","import {\n    DockviewReact,\n    DockviewReadyEvent,\n    IDockviewPanelProps,\n} from 'dockview';\nimport * as React from 'react';\nimport TreeComponent from './treeview';\nimport { getBackendOptions, MultiBackend } from '@minoru/react-dnd-treeview';\nimport { DndProvider } from 'react-dnd';\nimport './app.scss';\n\nconst components = {\n    default: (props: IDockviewPanelProps<{ title: string }>) => {\n        return (\n            <div style={{ padding: '20px', color: 'white' }}>\n                {props.params.title}\n            </div>\n        );\n    },\n    treeview: () => {\n        return (\n            <div style={{ color: 'white' }}>\n                <TreeComponent />\n            </div>\n        );\n    },\n};\n\nexport const App: React.FC = () => {\n    const onReady = (event: DockviewReadyEvent) => {\n        const panel = event.api.addPanel({\n            id: 'panel_1',\n            component: 'default',\n            params: {\n                title: 'Panel 1',\n            },\n        });\n\n        panel.group.locked = true;\n        panel.group.header.hidden = true;\n\n        event.api.addPanel({\n            id: 'panel_2',\n            component: 'default',\n            params: {\n                title: 'Panel 2',\n            },\n        });\n\n        event.api.addPanel({\n            id: 'panel_3',\n            component: 'treeview',\n        });\n\n        event.api.addPanel({\n            id: 'panel_4',\n            component: 'default',\n            params: {\n                title: 'Panel 4',\n            },\n            position: { referencePanel: 'panel_1', direction: 'right' },\n        });\n\n        const panel5 = event.api.addPanel({\n            id: 'panel_5',\n            component: 'default',\n            params: {\n                title: 'Panel 5',\n            },\n            position: { referencePanel: 'panel_3', direction: 'right' },\n        });\n\n        // panel5.group!.model.header.hidden = true;\n        // panel5.group!.model.locked = true;\n\n        event.api.addPanel({\n            id: 'panel_6',\n            component: 'default',\n            params: {\n                title: 'Panel 6',\n            },\n            position: { referencePanel: 'panel_5', direction: 'below' },\n        });\n\n        event.api.addPanel({\n            id: 'panel_7',\n            component: 'default',\n            params: {\n                title: 'Panel 7',\n            },\n            position: { referencePanel: 'panel_6', direction: 'right' },\n        });\n    };\n\n    return (\n        <DndProvider backend={MultiBackend} options={getBackendOptions()}>\n            <DockviewReact\n                components={components}\n                onReady={onReady}\n                className=\"dockview-theme-abyss externaldnd-dockview\"\n            />\n        </DndProvider>\n    );\n};\n\nexport default App;\n","\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\n/* @jsxFrag React.Fragment */\n\nimport React from 'react';\nimport { mdx } from '@mdx-js/react';\n\n\nexport const frontMatter = {\n\tdescription: 'Dockview Documentation'\n};\nexport const contentTitle = 'Dockview';\nexport const metadata = {\n  \"unversionedId\": \"components/dockview\",\n  \"id\": \"components/dockview\",\n  \"title\": \"Dockview\",\n  \"description\": \"Dockview Documentation\",\n  \"source\": \"@site/docs/components/dockview.mdx\",\n  \"sourceDirName\": \"components\",\n  \"slug\": \"/components/dockview\",\n  \"permalink\": \"/docs/next/components/dockview\",\n  \"draft\": false,\n  \"editUrl\": \"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/components/dockview.mdx\",\n  \"tags\": [],\n  \"version\": \"current\",\n  \"frontMatter\": {\n    \"description\": \"Dockview Documentation\"\n  },\n  \"sidebar\": \"tutorialSidebar\",\n  \"previous\": {\n    \"title\": \"Components\",\n    \"permalink\": \"/docs/next/category/components\"\n  },\n  \"next\": {\n    \"title\": \"Gridview\",\n    \"permalink\": \"/docs/next/components/gridview\"\n  }\n};\nexport const assets = {\n\n};\n\nimport { Container } from '@site/src/components/ui/container';\nimport Link from '@docusaurus/Link';\nimport useBaseUrl from '@docusaurus/useBaseUrl';\nimport DockviewPersistance from '@site/sandboxes/layout-dockview/src/app';\nimport SimpleDockview from '@site/sandboxes/simple-dockview/src/app';\nimport ResizeDockview from '@site/sandboxes/resize-dockview/src/app';\nimport DockviewWatermark from '@site/sandboxes/watermark-dockview/src/app';\nimport DockviewConstraints from '@site/sandboxes/constraints-dockview/src/app';\nimport DndDockview from '@site/sandboxes/dnd-dockview/src/app';\nimport NestedDockview from '@site/sandboxes/nested-dockview/src/app';\nimport EventsDockview from '@site/sandboxes/events-dockview/src/app';\nimport DockviewGroupControl from '@site/sandboxes/groupcontrol-dockview/src/app';\nimport CustomHeadersDockview from '@site/sandboxes/customheader-dockview/src/app';\nimport DockviewNative from '@site/sandboxes/fullwidthtab-dockview/src/app';\nimport DockviewNative2 from '@site/sandboxes/nativeapp-dockview/src/app';\nimport DockviewSetTitle from '@site/sandboxes/updatetitle-dockview/src/app';\nimport RenderingDockview from '@site/sandboxes/rendering-dockview/src/app';\nimport DockviewExternalDnd from '@site/sandboxes/externaldnd-dockview/src/app';\n// import { attach as attachDockviewVanilla } from '@site/sandboxes/vanilla-dockview/src/app';\nexport const toc = [{\n  value: 'Introduction',\n  id: 'introduction',\n  level: 2\n}, {\n  value: 'DockviewReact Component',\n  id: 'dockviewreact-component',\n  level: 2\n}, {\n  value: 'Dockview API',\n  id: 'dockview-api',\n  level: 2\n}, {\n  value: 'Dockview Panel API',\n  id: 'dockview-panel-api',\n  level: 2\n}, {\n  value: 'Layout Persistance',\n  id: 'layout-persistance',\n  level: 2\n}, {\n  value: 'Resizing',\n  id: 'resizing',\n  level: 2\n}, {\n  value: 'Watermark',\n  id: 'watermark',\n  level: 2\n}, {\n  value: 'Drag And Drop',\n  id: 'drag-and-drop',\n  level: 2\n}, {\n  value: 'Built-in behaviours',\n  id: 'built-in-behaviours',\n  level: 3\n}, {\n  value: 'Extended behaviours',\n  id: 'extended-behaviours',\n  level: 3\n}, {\n  value: 'Third Party Dnd Libraries',\n  id: 'third-party-dnd-libraries',\n  level: 3\n}, {\n  value: 'Panels',\n  id: 'panels',\n  level: 2\n}, {\n  value: 'Add Panel',\n  id: 'add-panel',\n  level: 3\n}, {\n  value: 'Panel Rendering',\n  id: 'panel-rendering',\n  level: 3\n}, {\n  value: 'Headers',\n  id: 'headers',\n  level: 2\n}, {\n  value: 'Custom Tab Headers',\n  id: 'custom-tab-headers',\n  level: 3\n}, {\n  value: 'Default Tab Title',\n  id: 'default-tab-title',\n  level: 3\n}, {\n  value: 'Custom Tab Title',\n  id: 'custom-tab-title',\n  level: 3\n}, {\n  value: 'Hidden Headers',\n  id: 'hidden-headers',\n  level: 3\n}, {\n  value: 'Full width tabs',\n  id: 'full-width-tabs',\n  level: 3\n}, {\n  value: 'Groups',\n  id: 'groups',\n  level: 2\n}, {\n  value: 'Locked group',\n  id: 'locked-group',\n  level: 3\n}, {\n  value: 'Group Controls Panel',\n  id: 'group-controls-panel',\n  level: 3\n}, {\n  value: 'Constraints',\n  id: 'constraints',\n  level: 3\n}, {\n  value: 'Events',\n  id: 'events',\n  level: 2\n}, {\n  value: 'Advanced Examples',\n  id: 'advanced-examples',\n  level: 2\n}, {\n  value: 'Nested Dockviews',\n  id: 'nested-dockviews',\n  level: 3\n}, {\n  value: 'Example',\n  id: 'example',\n  level: 3\n}];\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n      console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n      return <div {...props}/>\n    };\nconst App = makeShortcode(\"App\");\nconst layoutProps = {\n  toc\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n\n    <h1 {...{\n      \"id\": \"dockview\"\n    }}>{`Dockview`}</h1>\n    <h2 {...{\n      \"id\": \"introduction\"\n    }}>{`Introduction`}</h2>\n    <p>{`Dockview is an abstraction built on top of `}<a parentName=\"p\" {...{\n        \"href\": \"./gridview\"\n      }}>{`Gridviews`}</a>{` where each view is a container of many tabbed panels.`}</p>\n    <Container sandboxId=\"simple-dockview\" mdxType=\"Container\">\n    <SimpleDockview mdxType=\"SimpleDockview\" />\n    </Container>\n    <p>{`You can access the panels associated group through the `}<inlineCode parentName=\"p\">{`panel.group`}</inlineCode>{` variable.\nThe group will always be defined and will change if a panel is moved into another group.`}</p>\n    <h2 {...{\n      \"id\": \"dockviewreact-component\"\n    }}>{`DockviewReact Component`}</h2>\n    <p>{`You can create a Dockview through the use of the `}<inlineCode parentName=\"p\">{`DockviewReact`}</inlineCode>{` component.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`import { DockviewReact } from 'dockview';\n`}</code></pre>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Property`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Optional`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Default`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`onReady`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`(event: SplitviewReadyEvent) => void`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`No`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`components`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`object`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`No`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`tabComponents`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`object`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Yes`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`watermarkComponent`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`object`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Yes`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`hideBorders`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`boolean`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Yes`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`false`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`className`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Yes`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`''`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`disableAutoResizing`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`boolean`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Yes`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`false`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`See `}<Link to=\"../basics/#auto-resizing\" mdxType=\"Link\">{`Auto Resizing`}</Link></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`onDidDrop`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Event`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Yes`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`false`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`showDndOverlay`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Event`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Yes`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`false`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`defaultTabComponent`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`object`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Yes`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`groupControlComponent`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`object`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Yes`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`tabHeight`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`number`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Yes`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`singleTabMode`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`'fullwidth' `}{`|`}{` 'default'`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Yes`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`'default'`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n      </tbody>\n    </table>\n    <h2 {...{\n      \"id\": \"dockview-api\"\n    }}>{`Dockview API`}</h2>\n    <p>{`The Dockview API is exposed both at the `}<inlineCode parentName=\"p\">{`onReady`}</inlineCode>{` event and on each panel through `}<inlineCode parentName=\"p\">{`props.containerApi`}</inlineCode>{`.\nThrough this API you can control general features of the component and access all added panels.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\",\n        \"metastring\": \"title=\\\"Dockview API via Panel component\\\"\",\n        \"title\": \"\\\"Dockview\",\n        \"API\": true,\n        \"via\": true,\n        \"Panel\": true,\n        \"component\\\"\": true\n      }}>{`const MyComponent = (props: IDockviewPanelProps<{ title: string }>) => {\n    // props.containerApi...\n\n    return <div>{\\`My first panel has the title: \\${props.params.title}\\`}</div>;\n};\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\",\n        \"metastring\": \"title=\\\"Dockview API via the onReady callback\\\"\",\n        \"title\": \"\\\"Dockview\",\n        \"API\": true,\n        \"via\": true,\n        \"the\": true,\n        \"onReady\": true,\n        \"callback\\\"\": true\n      }}>{`const onReady = (event: DockviewReadyEvent) => {\n    // event.api...\n};\n`}</code></pre>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Property`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`height`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`number`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Component pixel height`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`width`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`number`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Component pixel width`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`minimumHeight`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`number`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`maximumHeight`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`number`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`maximumWidth`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`number`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`maximumWidth`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`number`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`length`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`number`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Number of panels`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`size`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`number`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Number of Groups`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`panels`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`IDockviewPanel[]`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`groups`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`GroupPanel[]`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`activePanel`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`IDockviewPanel \\\\| undefined`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`activeGroup`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`IDockviewPanel \\\\| undefined`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`onDidLayoutChange`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`Event<void>`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`onDidLayoutFromJSON`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`Event<void>`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`onDidAddGroup`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`Event<GroupPanel>`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`onDidRemoveGroup`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`Event<GroupPanel>`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`onDidActiveGroupChange`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`Event<GroupPanel \\\\| undefined>`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`onDidAddPanel`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`Event<IDockviewPanel>`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`onDidRemovePanel`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`Event<IDockviewPanel>`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`onDidActivePanelChange`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`Event<IDockviewPanel \\\\| undefined>`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`onDidDrop`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`Event<DockviewDropEvent`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`addPanel`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`addPanel(options: AddPanelOptions): IDockviewPanel`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`getPanel`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`(id: string) \\\\| IDockviewPanel \\\\| undefined`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`addGroup`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`(options? AddGroupOptions): void`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`closeAllGroups`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`(): void`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`removeGroup`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`(group: GroupPanel): void`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`getGroup`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`(id: string): GroupPanel \\\\| undefined`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`getTabHeight`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`(): number \\\\| undefined`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`setTabHeight`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`(height: number \\\\| undefined): void`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`updateOptions`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`(options:SplitviewComponentUpdateOptions): void`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`focus`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`(): void`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`layout`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`(width: number, height:number): void`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><Link to=\"../basics/#auto-resizing\" mdxType=\"Link\">{`Auto Resizing`}</Link></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`fromJSON`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`(data: SerializedDockview): void`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><Link to=\"../basics/#serialization\" mdxType=\"Link\">{`Serialization`}</Link></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`toJSON`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`(): SerializedDockview`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><Link to=\"../basics/#serialization\" mdxType=\"Link\">{`Serialization`}</Link></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`clear`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`(): void`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Clears the current layout`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h2 {...{\n      \"id\": \"dockview-panel-api\"\n    }}>{`Dockview Panel API`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`const MyComponent = (props: IDockviewPanelProps<{ title: string }>) => {\n    // props.api...\n\n    return <div>{\\`My first panel has the title: \\${props.params.title}\\`}</div>;\n};\n`}</code></pre>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Property`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`id`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`string`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Panel id`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`isFocused`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`boolean`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Is panel focused`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`isActive`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`boolean`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Is panel active`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`width`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`number`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Panel width`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`height`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`number`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Panel height`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`onDidDimensionsChange`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`Event<PanelDimensionChangeEvent>`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`onDidFocusChange`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`Event<FocusEvent>`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`onDidVisibilityChange`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`Event<VisibilityEvent>`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`onDidActiveChange`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`Event<ActiveEvent>`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`setActive`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`(): void`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`onDidConstraintsChange`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`onDidConstraintsChange: Event<PanelConstraintChangeEvent>`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`setConstraints`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`(value: PanelConstraintChangeEvent2): void;`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`setSize`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`(event: SizeEvent): void`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`group`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`\\`GroupPanel`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`undefined\\``}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`isGroupActive`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`boolean`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`title`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`string`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`suppressClosable`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`boolean`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`close`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`(): void`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`setTitle`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`(title: string): void`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n      </tbody>\n    </table>\n    <h2 {...{\n      \"id\": \"layout-persistance\"\n    }}>{`Layout Persistance`}</h2>\n    <p>{`Layouts are loaded and saved via to `}<inlineCode parentName=\"p\">{`fromJSON`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`toJSON`}</inlineCode>{` methods on the Dockview api.\nThe api also exposes an event `}<inlineCode parentName=\"p\">{`onDidLayoutChange`}</inlineCode>{` you can listen on to determine when the layout has changed.\nBelow are some snippets showing how you might load from and save to localStorage.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\",\n        \"metastring\": \"title=\\\"Saving the layout state to localStorage\\\"\",\n        \"title\": \"\\\"Saving\",\n        \"the\": true,\n        \"layout\": true,\n        \"state\": true,\n        \"to\": true,\n        \"localStorage\\\"\": true\n      }}>{`React.useEffect(() => {\n    if (!api) {\n        return;\n    }\n\n    const disposable = api.onDidLayoutChange(() => {\n        const layout = api.toJSON();\n\n        localStorage.setItem(\n            'dockview_persistance_layout',\n            JSON.stringify(layout)\n        );\n    });\n\n    return () => {\n        disposable.dispose();\n    };\n}, [api]);\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\",\n        \"metastring\": \"title=\\\"Loading a layout from localStorage\\\"\",\n        \"title\": \"\\\"Loading\",\n        \"a\": true,\n        \"layout\": true,\n        \"from\": true,\n        \"localStorage\\\"\": true\n      }}>{`const onReady = (event: DockviewReadyEvent) => {\n    const layoutString = localStorage.getItem('dockview_persistance_layout');\n\n    let success = false;\n\n    if (layoutString) {\n        try {\n            const layout = JSON.parse(layoutString);\n            event.api.fromJSON(layout);\n            success = true;\n        } catch (err) {\n            //\n        }\n    }\n\n    if (!success) {\n        // do something if there is no layout or there was a loading error\n    }\n};\n`}</code></pre>\n    <p>{`Here is an example using the above code loading from and saving to localStorage.\nIf you refresh the page you should notice your layout is loaded as you left it.`}</p>\n    <Container sandboxId=\"layout-dockview\" mdxType=\"Container\">\n    <DockviewPersistance mdxType=\"DockviewPersistance\" />\n    </Container>\n    <h2 {...{\n      \"id\": \"resizing\"\n    }}>{`Resizing`}</h2>\n    <p>{`Each Dockview contains of a number of groups and each group has a number of panels.\nLogically a user may want to resize a panel, but this translates to resizing the group which contains that panel.`}</p>\n    <p>{`You can set the size of a panel using `}<inlineCode parentName=\"p\">{`props.api.setSize(...)`}</inlineCode>{`.\nYou can also set the size of the group associated with the panel using `}<inlineCode parentName=\"p\">{`props.api.group.api.setSize(...)`}</inlineCode>{` although this isn't recommended\ndue to the clunky syntax.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`// it's mandatory to provide either a height or a width, providing both is optional\nprops.api.setSize({\n    height: 100,\n    width: 200,\n});\n\n// you could also resize the panels group, although not recommended it achieved the same result\nprops.api.group.api.setSize({\n    height: 100,\n    width: 200,\n});\n`}</code></pre>\n    <p>{`You can see an example invoking both approaches below.`}</p>\n    <Container sandboxId=\"resize-dockview\" mdxType=\"Container\">\n    <ResizeDockview mdxType=\"ResizeDockview\" />\n    </Container>\n    <h2 {...{\n      \"id\": \"watermark\"\n    }}>{`Watermark`}</h2>\n    <p>{`When the dockview is empty you may want to display some fallback content, this is refered to as the `}<inlineCode parentName=\"p\">{`watermark`}</inlineCode>{`.\nBy default there the watermark has no content but you can provide as a prop to `}<inlineCode parentName=\"p\">{`DockviewReact`}</inlineCode>{` a `}<inlineCode parentName=\"p\">{`watermarkComponent`}</inlineCode>{`\nwhich will be rendered when there are no panels or groups.`}</p>\n    <Container sandboxId=\"watermark-dockview\" mdxType=\"Container\">\n    <DockviewWatermark mdxType=\"DockviewWatermark\" />\n    </Container>\n    <h2 {...{\n      \"id\": \"drag-and-drop\"\n    }}>{`Drag And Drop`}</h2>\n    <h3 {...{\n      \"id\": \"built-in-behaviours\"\n    }}>{`Built-in behaviours`}</h3>\n    <p>{`Dockview supports a wide variety of built-in Drag and Drop possibilities.\nBelow are some examples of the operations you can perform.`}</p>\n    <img style={{\n      width: '60%'\n    }} src={useBaseUrl('/img/add_to_tab.svg')} />\n    <blockquote>\n      <p parentName=\"blockquote\">{`Drag a tab onto another tab to place it inbetween existing tabs.`}</p>\n    </blockquote>\n    <img style={{\n      width: '60%'\n    }} src={useBaseUrl('/img/add_to_empty_space.svg')} />\n    <blockquote>\n      <p parentName=\"blockquote\">{`Drag a tab to the right of the last tab to place it after the existing tabs.`}</p>\n    </blockquote>\n    <img style={{\n      width: '60%'\n    }} src={useBaseUrl('/img/add_to_group.svg')} />\n    <blockquote>\n      <p parentName=\"blockquote\">{`Drag a group onto an existing group to merge the two groups.`}</p>\n    </blockquote>\n    <div style={{\n      display: 'flex',\n      justifyContent: 'space-around'\n    }}>\n    <img style={{\n        width: '40%'\n      }} src={useBaseUrl('/img/drop_positions.svg')} />\n    <img style={{\n        width: '40%'\n      }} src={useBaseUrl('/img/magnet_drop_positions.svg')} />\n    </div>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Drag into the left/right/top/bottom target zone of a panel to create a new group in the selected direction.`}</p>\n    </blockquote>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Drag into the center of a panel to add to that group.`}</p>\n    </blockquote>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Drag to the edge of the dockview component to create a new group on the selected edge.`}</p>\n    </blockquote>\n    <h3 {...{\n      \"id\": \"extended-behaviours\"\n    }}>{`Extended behaviours`}</h3>\n    <p>{`For interaction with the Drag events directly the component exposes some method to help determine whether external drag events should be interacted with or not.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`/**\n * called when an ondrop event which does not originate from the dockview libray and\n * passes the showDndOverlay condition occurs\n **/\nconst onDidDrop = (event: DockviewDropEvent) => {\n    const { group } = event;\n\n    event.api.addPanel({\n        id: 'test',\n        component: 'default',\n        position: {\n            referencePanel: group.activePanel.id,\n            direction: 'within',\n        },\n    });\n};\n\n/**\n * called for drag over events which do not originate from the dockview library\n * allowing the developer to decide where the overlay should be shown for a\n * particular drag event\n **/\nconst showDndOverlay = (event: DockviewDndOverlayEvent) => {\n    return true;\n};\n\nreturn (\n    <DockviewReact\n        components={components}\n        onReady={onReady}\n        className=\"dockview-theme-abyss\"\n        onDidDrop={onDidDrop}\n        showDndOverlay={showDndOverlay}\n    />\n);\n`}</code></pre>\n    <Container sandboxId=\"dnd-dockview\" mdxType=\"Container\">\n    <DndDockview mdxType=\"DndDockview\" />\n    </Container>\n    <h3 {...{\n      \"id\": \"third-party-dnd-libraries\"\n    }}>{`Third Party Dnd Libraries`}</h3>\n    <p>{`To be completed...`}</p>\n    <Container mdxType=\"Container\">\n    <DockviewExternalDnd mdxType=\"DockviewExternalDnd\" />\n    </Container>\n    <h2 {...{\n      \"id\": \"panels\"\n    }}>{`Panels`}</h2>\n    <h3 {...{\n      \"id\": \"add-panel\"\n    }}>{`Add Panel`}</h3>\n    <p>{`Using the dockview API you can access the `}<inlineCode parentName=\"p\">{`addPanel`}</inlineCode>{` method which returns an instance of the created panel.\nThe minimum method signature is:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`const panel = api.addPanel({\n    id: 'my_unique_panel_id',\n    component: 'my_component',\n});\n`}</code></pre>\n    <p>{`where `}<inlineCode parentName=\"p\">{`id`}</inlineCode>{` is the unique id of the panel and `}<inlineCode parentName=\"p\">{`component`}</inlineCode>{` is the implenentation which\nwill be used to render the panel. You will have registered this using the `}<inlineCode parentName=\"p\">{`components`}</inlineCode>{` prop of the `}<inlineCode parentName=\"p\">{`DockviewReactComponent`}</inlineCode>{` component.`}</p>\n    <p>{`You can optionally provide a `}<inlineCode parentName=\"p\">{`tabComponent`}</inlineCode>{` parameters to the `}<inlineCode parentName=\"p\">{`addPanel`}</inlineCode>{` method which will render the tab using a custom renderer.\nYou will have registered this using the `}<inlineCode parentName=\"p\">{`tabComponents`}</inlineCode>{` prop of the `}<inlineCode parentName=\"p\">{`DockviewReactComponent`}</inlineCode>{` component.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`const panel = api.addPanel({\n    id: 'my_unique_panel_id',\n    component: 'my_component',\n    tabComponent: 'my_tab_component',\n});\n`}</code></pre>\n    <p>{`You can pass properties to the panel using the `}<inlineCode parentName=\"p\">{`params`}</inlineCode>{` key.\nYou can update these properties through the panels `}<inlineCode parentName=\"p\">{`api`}</inlineCode>{` object and its `}<inlineCode parentName=\"p\">{`updateParameters`}</inlineCode>{` method.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`const panel = api.addPanel({\n    id: 'my_unique_panel_id',\n    component: 'my_component',\n    params: {\n        myCustomKey: 'my_custom_value',\n    },\n});\n\npanel.api.updateParameters({\n    myCustomKey: 'my_custom_value',\n    myOtherCustomKey: 'my_other_custom_key',\n});\n`}</code></pre>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Note `}<inlineCode parentName=\"p\">{`updateParameters`}</inlineCode>{` does not accept partial parameter updates, you should call it with the entire set of parameters\nyou want the panel to receive.`}</p>\n    </blockquote>\n    <p>{`Finally `}<inlineCode parentName=\"p\">{`addPanel`}</inlineCode>{` accepts a `}<inlineCode parentName=\"p\">{`position`}</inlineCode>{` object which tells dockview where to place the panel.`}</p>\n    <ul>\n      <li parentName=\"ul\">{`This object optionally accepts either a `}<inlineCode parentName=\"li\">{`referencePanel`}</inlineCode>{` or `}<inlineCode parentName=\"li\">{`referenceGroup`}</inlineCode>{` which can be the associated id as a string\nor the panel/group object reference.`}</li>\n      <li parentName=\"ul\">{`This object accepts a `}<inlineCode parentName=\"li\">{`direction`}</inlineCode>{` property which dictates where,\nrelative to the provided reference the new panel will be placed.`}</li>\n    </ul>\n    <blockquote>\n      <p parentName=\"blockquote\">{`If neither a `}<inlineCode parentName=\"p\">{`referencePanel`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`referenceGroup`}</inlineCode>{` then the provided `}<inlineCode parentName=\"p\">{`direction`}</inlineCode>{` will be treated as absolute.`}</p>\n    </blockquote>\n    <blockquote>\n      <p parentName=\"blockquote\">{`If no `}<inlineCode parentName=\"p\">{`direction`}</inlineCode>{` is provided the library will place the new panel in a pre-determined position.`}</p>\n    </blockquote>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`const panel = api.addPanel({\n    id: 'panel_1',\n    component: 'default',\n});\n\nconst panel2 = api.addPanel({\n    id: 'panel_2',\n    component: 'default',\n    position: {\n        referencePanel: panel1,\n        direction: 'right',\n    },\n});\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"panel-rendering\"\n    }}>{`Panel Rendering`}</h3>\n    <p>{`By default `}<inlineCode parentName=\"p\">{`DockviewReact`}</inlineCode>{` only adds to the DOM those panels that are visible,\nif a panel is not the active tab and not shown the contents of the hidden panel will be removed from the DOM.`}</p>\n    <p>{`However the React Components associated with each panel are only created once and will always exist for as long as the panel exists, hidden or not.`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`For example this means that any hooks in those components will run whether the panel is visible or not which may lead to excessive background work depending\non the panels implementation.`}</p>\n    </blockquote>\n    <p>{`This is the default behaviour to ensure the greatest flexibility for the user but through the panels `}<inlineCode parentName=\"p\">{`props.api`}</inlineCode>{` you can listen to the visiblity state of the panel\nand write additional logic to optimize your application.`}</p>\n    <p>{`For example if you wanted to unmount the React Components when the panel is not visible you could create a Higher-Order-Component that listens to the panels\nvisiblity state and only renders the panel when visible.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\",\n        \"metastring\": \"title=\\\"Only rendering the React Component when the panel is visible, otherwise rendering a null React Component\\\"\",\n        \"title\": \"\\\"Only\",\n        \"rendering\": true,\n        \"the\": true,\n        \"React\": true,\n        \"Component\": true,\n        \"when\": true,\n        \"panel\": true,\n        \"is\": true,\n        \"visible,\": true,\n        \"otherwise\": true,\n        \"a\": true,\n        \"null\": true,\n        \"Component\\\"\": true\n      }}>{`import { IDockviewPanelProps } from 'dockview';\nimport * as React from 'react';\n\nfunction RenderWhenVisible(\n    component: React.FunctionComponent<IDockviewPanelProps>\n) {\n    const HigherOrderComponent = (props: IDockviewPanelProps) => {\n        const [visible, setVisible] = React.useState<boolean>(\n            props.api.isVisible\n        );\n\n        React.useEffect(() => {\n            const disposable = props.api.onDidVisibilityChange((event) =>\n                setVisible(event.isVisible)\n            );\n\n            return () => {\n                disposable.dispose();\n            };\n        }, [props.api]);\n\n        if (!visible) {\n            return null;\n        }\n\n        return React.createElement(component, props);\n    };\n    return HigherOrderComponent;\n}\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`const components = { default: RenderWhenVisible(MyComponent) };\n`}</code></pre>\n    <p>{`Toggling the checkbox you can see that when you only render those panels which are visible the underling React component is destroyed when it becomes hidden and re-created when it becomes visible.`}</p>\n    <Container sandboxId=\"rendering-dockview\" mdxType=\"Container\">\n    <RenderingDockview renderVisibleOnly={false} mdxType=\"RenderingDockview\" />\n    </Container>\n    <h2 {...{\n      \"id\": \"headers\"\n    }}>{`Headers`}</h2>\n    <h3 {...{\n      \"id\": \"custom-tab-headers\"\n    }}>{`Custom Tab Headers`}</h3>\n    <p>{`You can provide custom renderers for your tab headers for maximum customization.\nA default implementation of `}<inlineCode parentName=\"p\">{`DockviewDefaultTab`}</inlineCode>{` is provided should you only wish to attach minor\nchanges and events that do not alter the default behaviour, for example to add a custom context menu event\nhandler.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\",\n        \"metastring\": \"title=\\\"Attaching a custom context menu event handlers to a custom header\\\"\",\n        \"title\": \"\\\"Attaching\",\n        \"a\": true,\n        \"custom\": true,\n        \"context\": true,\n        \"menu\": true,\n        \"event\": true,\n        \"handlers\": true,\n        \"to\": true,\n        \"header\\\"\": true\n      }}>{`import { IDockviewPanelHeaderProps, DockviewDefaultTab } from 'dockview';\n\nconst MyCustomheader = (props: IDockviewPanelHeaderProps) => {\n    const onContextMenu = (event: React.MouseEvent) => {\n        event.preventDefault();\n        alert('context menu');\n    };\n    return <DockviewDefaultTab onContextMenu={onContextMenu} {...props} />;\n};\n`}</code></pre>\n    <p>{`You are also free to define a custom renderer entirely from scratch and not make use of the `}<inlineCode parentName=\"p\">{`DockviewDefaultTab`}</inlineCode>{` component.\nTo use a custom renderer you can must register a collection of tab components.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`const tabComponents = {\n    myCustomHeader: MyCustomHeader,\n};\n\nreturn <DockviewReact tabComponents={tabComponents}  ... />;\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`api.addPanel({\n    id: 'panel_1',\n    component: 'default',\n    tabComponent: 'myCustomHeader', // <-- your registered renderers\n    title: 'Panel 1',\n});\n`}</code></pre>\n    <p>{`You can also override the default tab renderer which will be used when no `}<inlineCode parentName=\"p\">{`tabComponent`}</inlineCode>{` is provided to the `}<inlineCode parentName=\"p\">{`addPanel`}</inlineCode>{` function.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`<DockviewReact defaultTabComponent={MyCustomHeader}  ... />;\n`}</code></pre>\n    <p>{`As a simple example the below attaches a custom event handler for the context menu on all tabs as a default tab renderer`}</p>\n    <p>{`The below example uses a custom tab renderer to reigster a popover when the user right clicked on a tab.\nThis still makes use of the `}<inlineCode parentName=\"p\">{`DockviewDefaultTab`}</inlineCode>{` since it's only a minor change.`}</p>\n    <Container sandboxId=\"customheader-dockview\" mdxType=\"Container\">\n    <CustomHeadersDockview mdxType=\"CustomHeadersDockview\" />\n    </Container>\n    <h3 {...{\n      \"id\": \"default-tab-title\"\n    }}>{`Default Tab Title`}</h3>\n    <p>{`If you are using the default tab renderer you can set the title of a tab when creating it`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`api.addPanel({\n    id: 'panel_1',\n    component: 'my_component',\n    title: 'my_custom_title', // <-- special param for title\n});\n`}</code></pre>\n    <p>{`You can update the title through the panel api which can be accessed via `}<inlineCode parentName=\"p\">{`props.api`}</inlineCode>{` if you are inside the panel\ncomponent or via `}<inlineCode parentName=\"p\">{`api.getPanel('panel1').api`}</inlineCode>{` if you are accessing from outside of the panel component.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`api.setTitle('my_new_custom_title');\n`}</code></pre>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Note this only works when using the default tab implementation.`}</p>\n    </blockquote>\n    <Container sandboxId=\"updatetitle-dockview\" mdxType=\"Container\">\n    <DockviewSetTitle mdxType=\"DockviewSetTitle\" />\n    </Container>\n    <h3 {...{\n      \"id\": \"custom-tab-title\"\n    }}>{`Custom Tab Title`}</h3>\n    <p>{`If you are using a custom tab implementation you should pass variables through as a parameter and render them\nthrough your tab components implementation.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\",\n        \"metastring\": \"title=\\\"Add a panel with custom parameters\\\"\",\n        \"title\": \"\\\"Add\",\n        \"a\": true,\n        \"panel\": true,\n        \"with\": true,\n        \"custom\": true,\n        \"parameters\\\"\": true\n      }}>{`api.addPanel({\n    id: 'panel_2',\n    component: 'my_component',\n    tabComponent: 'my_tab',\n    params: {\n        myTitle: 'Window 2', // <-- passing a variable to use as a title\n    },\n});\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\",\n        \"metastring\": \"title=\\\"Accessing custom parameters from a custom tab renderer\\\"\",\n        \"title\": \"\\\"Accessing\",\n        \"custom\": true,\n        \"parameters\": true,\n        \"from\": true,\n        \"a\": true,\n        \"tab\": true,\n        \"renderer\\\"\": true\n      }}>{`const tabComponents = {\n    default: (props: IDockviewPanelHeaderProps<{ myTitle: string }>) => {\n        const title = props.params.myTitle; // <-- accessing my custom varaible\n        return <div>{/** tab implementation as chosen by developer */}</div>;\n    },\n};\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"hidden-headers\"\n    }}>{`Hidden Headers`}</h3>\n    <p>{`You may wish to hide the header section of a group. This can achieved through the `}<inlineCode parentName=\"p\">{`hidden`}</inlineCode>{` variable on `}<inlineCode parentName=\"p\">{`panel.group.header`}</inlineCode>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`panel.group.header.hidden = true;\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"full-width-tabs\"\n    }}>{`Full width tabs`}</h3>\n    <p><inlineCode parentName=\"p\">{`DockviewReactComponent`}</inlineCode>{` accepts the prop `}<inlineCode parentName=\"p\">{`singleTabMode`}</inlineCode>{`. If set `}<inlineCode parentName=\"p\">{`singleTabMode=fullwidth`}</inlineCode>{` then when there is only one tab in a group this tab will expand\nto the entire width of the group. For example:`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`This can be conmbined with `}<Link to=\"./dockview/#locked-group\" mdxType=\"Link\">{`Locked Groups`}</Link>{` to create an application that feels more like a Window Manager\nrather than a collection of groups and tabs.`}</p>\n    </blockquote>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`<DockviewReactComponent singleTabMode=\"fullwidth\" {...otherProps} />\n`}</code></pre>\n    <Container sandboxId=\"fullwidthtab-dockview\" mdxType=\"Container\">\n    <DockviewNative mdxType=\"DockviewNative\" />\n    </Container>\n    <h2 {...{\n      \"id\": \"groups\"\n    }}>{`Groups`}</h2>\n    <h3 {...{\n      \"id\": \"locked-group\"\n    }}>{`Locked group`}</h3>\n    <p>{`Locking a group will disable all drop events for this group ensuring no additional panels can be added to the group through drop events.\nYou can still add groups to a locked panel programatically using the API though.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`panel.group.locked = true;\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"group-controls-panel\"\n    }}>{`Group Controls Panel`}</h3>\n    <p><inlineCode parentName=\"p\">{`DockviewReact`}</inlineCode>{` accepts a prop `}<inlineCode parentName=\"p\">{`groupControlComponent`}</inlineCode>{` which expects a React component whos props are `}<inlineCode parentName=\"p\">{`IDockviewGroupControlProps`}</inlineCode>{`.\nThis control will be rendered inside the header bar on the right hand side for each group of tabs.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`const Component: React.FunctionComponent<IDockviewGroupControlProps> = () => {\n    return <div>{'...'}</div>;\n};\n\nreturn <DockviewReact {...props} groupControlComponent={Component} />;\n`}</code></pre>\n    <p>{`As a simple example the below uses the `}<inlineCode parentName=\"p\">{`groupControlComponent`}</inlineCode>{` to render a small control that indicates whether the group\nis active and which panel is active in that group.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`const GroupControlComponent = (props: IDockviewGroupControlProps) => {\n    const isGroupActive = props.isGroupActive;\n    const activePanel = props.activePanel;\n\n    return (\n        <div className=\"dockview-groupcontrol-demo\">\n            <span\n                className=\"dockview-groupcontrol-demo-group-active\"\n                style={{\n                    background: isGroupActive ? 'green' : 'red',\n                }}\n            >\n                {isGroupActive ? 'Group Active' : 'Group Inactive'}\n            </span>\n            <span className=\"dockview-groupcontrol-demo-active-panel\">{\\`activePanel: \\${\n                activePanel?.id || 'null'\n            }\\`}</span>\n        </div>\n    );\n};\n`}</code></pre>\n    <Container sandboxId=\"groupcontrol-dockview\" mdxType=\"Container\">\n    <DockviewGroupControl mdxType=\"DockviewGroupControl\" />\n    </Container>\n    <h3 {...{\n      \"id\": \"constraints\"\n    }}>{`Constraints`}</h3>\n    <p>{`You may wish to specify a minimum or maximum height or width for a group which can be done through the group api.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`api.group.api.setConstraints(...)\n`}</code></pre>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Constraints are currently only supported for groups and not individual panels.\nIf you specific a constraint on a group and move a panel within that group to another group it will no\nlonger be subject to those constraints since those constraints were on the group and not on the individual panel.`}</p>\n    </blockquote>\n    <Container height={500} sandboxId=\"constraints-dockview\" mdxType=\"Container\">\n    <DockviewConstraints mdxType=\"DockviewConstraints\" />\n    </Container>\n    <h2 {...{\n      \"id\": \"events\"\n    }}>{`Events`}</h2>\n    <p>{`A simple example showing events fired by \\`dockviewz that can be interacted with.`}</p>\n    <Container height={600} sandboxId=\"events-dockview\" mdxType=\"Container\">\n    <EventsDockview mdxType=\"EventsDockview\" />\n    </Container>\n    <h2 {...{\n      \"id\": \"advanced-examples\"\n    }}>{`Advanced Examples`}</h2>\n    <h3 {...{\n      \"id\": \"nested-dockviews\"\n    }}>{`Nested Dockviews`}</h3>\n    <p>{`You can safely create multiple dockview instances within one page and nest dockviews within other dockviews.\nIf you wish to interact with the drop event from one dockview instance in another dockview instance you can implement the `}<inlineCode parentName=\"p\">{`showDndOverlay`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`onDidDrop`}</inlineCode>{` props on `}<inlineCode parentName=\"p\">{`DockviewReact`}</inlineCode>{`.`}</p>\n    <Container sandboxId=\"nested-dockview\" mdxType=\"Container\">\n    <NestedDockview mdxType=\"NestedDockview\" />\n    </Container>\n    <h3 {...{\n      \"id\": \"example\"\n    }}>{`Example`}</h3>\n    <p>{`hello`}</p>\n    <DockviewNative2 mdxType=\"DockviewNative2\" />\n    <p>{`hello 2`}</p>\n    <div style={{\n      height: '400px',\n      width: '100%'\n    }}>\n    <App mdxType=\"App\" />\n    </div>\n    {/* ## VanillaJS\n     > Note: This section is experimental and support for Vanilla JS is a work in progress.\n     The `dockview` package contains `ReactJS` wrappers for the core library.\n     The core library is published as an independant package under the name `dockview-core` which you can install standalone.\n     > When using `dockview` there is no need to also install `dockview-core`.\n     > `dockview-core` is a dependency of `dockview` and automatically installed during the installation process of `dockview` via `npm install dockview`.\n     <Container injectVanillaJS={attachDockviewVanilla} /> */}\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n"],"names":["TransferObject","constructor","PanelTransfer","viewId","groupId","panelId","super","this","PaneTransfer","paneId","LocalSelectionTransfer","static","INSTANCE","hasData","proto","clearData","undefined","data","getData","setData","getPanelData","panelTransfer","getInstance","prototype","getPaneData","paneTransfer","Event","Disposable","any","_len","arguments","length","children","Array","_key","listener","disposables","map","child","dispose","forEach","d","Emitter","options","_listeners","_disposed","event","_event","_a","replay","_last","push","index","indexOf","splice","fire","e","addDisposableWindowListener","element","type","addEventListener","removeEventListener","addDisposableListener","TickDelayedEvent","_onFired","onEvent","timer","clearTimeout","setTimeout","NONE","CompositeDisposable","args","_len2","_key2","addDisposables","_len3","_key3","arg","MutableDisposable","_disposable","value","disposable","watchElementResize","cb","observer","ResizeObserver","entires","firstEntry","observe","unobserve","disconnect","removeClasses","classes","classname","classList","contains","remove","addClasses","add","toggleClass","className","isToggled","hasClass","isAncestor","testChild","testAncestor","parentNode","getElementsByTagName","tag","slice","call","document","trackFocus","FocusTracker","_onDidFocus","onDidFocus","_onDidBlur","onDidBlur","hasFocus","activeElement","loosingFocus","onFocus","onBlur","window","_refreshStateHandler","HTMLElement","refreshState","tail","arr","Error","sequenceEquals","arr1","arr2","i","pushToStart","unshift","pushToEnd","clamp","min","max","Math","sequentialNumberGenerator","next","toString","range","from","to","result","ViewItem","size","_size","cachedVisibleSize","_cachedVisibleSize","visible","minimumSize","view","viewMinimumSize","maximumSize","viewMaximumSize","priority","snap","enabled","container","style","pointerEvents","setVisible","toggle","Orientation","SashState","LayoutPriority","Sizing","Distribute","Split","Invisible","Splitview","orthogonalSize","_orthogonalSize","views","proportions","_proportions","orientation","_orientation","tmp","HORIZONTAL","reduce","r","item","Number","POSITIVE_INFINITY","startSnappingEnabled","_startSnappingEnabled","updateSashEnablement","endSnappingEnabled","_endSnappingEnabled","_this","sashes","contentSize","_onDidSashEnd","onDidSashEnd","_onDidAddView","onDidAddView","_onDidRemoveView","onDidRemoveView","resize","delta","sizes","lowPriorityIndexes","highPriorityIndexes","overloadMinDelta","overloadMaxDelta","snapBefore","snapAfter","x","NEGATIVE_INFINITY","upIndexes","downIndexes","upItems","upSizes","downItems","downSizes","minDeltaUp","_","maxDeltaUp","maxDeltaDown","minDeltaDown","minDelta","maxDelta","snapped","snapView","limitDelta","actualDelta","deltaUp","viewDelta","deltaDown","createContainer","proportionalLayout","viewContainer","createViewContainer","sashContainer","createSashContainer","appendChild","styles","descriptor","viewDescriptor","sizing","addView","saveProportions","separatorBorder","removeProperty","setProperty","isViewVisible","setViewVisible","viewItem","distributeEmptySpace","layoutViews","getViewSize","resizeView","indexes","filter","Low","High","round","relayout","getViews","onDidChange","skipLayout","createElement","viewSize","newSize","removeChild","insertBefore","sash","onStart","iframes","iframe","start","clientX","clientY","sashIndex","array","fn","firstIndex","s","snapBeforeIndex","findFirstSnapIndex","snapAfterIndex","snappedViewItem","halfSize","floor","mousemove","mousemoveEvent","end","sashItem","distributeViewSizes","flexibleViewItems","flexibleSize","removeView","getViewCachedVisibleSize","moveView","layout","previousSize","lowPriorityIndex","emptyDelta","sum","offset","left","top","VERTICAL","width","height","previous","collapsesDown","expandsDown","reverseViews","reverse","collapsesUp","expandsUp","position","snappedBefore","snappedAfter","updateSash","MINIMUM","MAXIMUM","DISABLED","ENABLED","state","orientationClassname","Paneview","splitview","paneItems","skipAnimation","_onDidChange","getPanes","pane","onDidChangeExpansionState","setupAnimation","paneItem","addPane","removePane","skipDispose","animationTimer","LeafNode","minimumWidth","maximumWidth","minimumHeight","maximumHeight","minimumOrthogonalSize","maximumOrthogonalSize","BranchNode","c","Normal","priorities","some","p","childDescriptors","_childrenDisposable","childDescriptor","node","setupChildrenEvents","isChildVisible","setChildVisible","moveChild","_removeChild","_addChild","getChildSize","resizeChild","addChild","getChildCachedVisibleSize","findLeaf","candiateNode","last","flipNode","orthogonal","totalSize","childSize","getGridLocation","parentElement","test","el","firstElementChild","lastElementChild","nextElementSibling","indexInParent","getRelativeLocation","rootOrientation","location","direction","getLocationOrientation","directionOrientation","getDirectionOrientation","rest","_index","serializeBranchNode","box","isGridBranchNode","toJSON","Gridview","_root","root","serialize","getView","clear","deserialize","json","deserializer","_deserialize","_deserializeNode","isRoot","serializedChild","fromJSON","oldRoot","insertOrthogonalSplitviewAtRoot","childReference","progmaticSelect","getNode","_getViews","nodeCachedVisibleSize","path","n","l","parent","parentLocation","pathToParent","grandParent","parentIndex","__","newSiblingSize","newSiblingCachedVisibleSize","newParent","newSibling","sibling","isSiblingVisible","siblingSizing","SplitviewApi","component","panels","onDidLayoutFromJSON","onDidLayoutChange","updateOptions","removePanel","panel","focus","getPanel","id","addPanel","movePanel","PaneviewApi","onDidDrop","emitter","Object","assign","api","GridviewApi","onDidAddPanel","onDidAddGroup","onDidRemovePanel","onDidRemoveGroup","onDidActivePanelChange","onDidActiveGroupChange","groups","force","DockviewApi","totalPanels","activePanel","activeGroup","getTabHeight","tabHeight","setTabHeight","getGroupPanel","addGroup","moveToNext","moveToPrevious","closeAllGroups","removeGroup","group","getGroup","DragAndDropObserver","callbacks","target","registerListeners","onDragEnter","preventDefault","onDragOver","onDragLeave","onDragEnd","onDrop","directionToPosition","positionToDirection","Droptarget","_state","_onDrop","acceptedTargetZonesSet","Set","acceptedTargetZones","clientWidth","clientHeight","rect","currentTarget","getBoundingClientRect","y","quadrant","calculateQuadrant","canDisplayOverlay","targetElement","overlayElement","append","toggleClasses","setState","removeDropTarget","stopPropagation","nativeEvent","_b","_c","_d","isSmallX","isSmallY","isLeft","isRight","isTop","isBottom","rightClass","leftClass","topClass","bottomClass","overlayModel","translate","transform","overlayType","_e","_f","isPercentage","activationSize","maybeNumber","fallback","threshold","xp","yp","has","calculateQuadrantAsPercentage","calculateQuadrantAsPixels","ContentContainer","_element","tabIndex","show","display","hide","openPanel","content","_width","_height","closePanel","DockviewDropTargets","DragHandler","_onDragStart","onDragStart","configure","dataTransfer","effectAllowed","Tab","accessor","_onChanged","onChanged","_onDropped","draggable","defaultPrevented","droptarget","locked","model","setActive","isActive","setContent","part","GroupDragHandler","accessorId","getComputedStyle","bgColor","getPropertyValue","color","ghostElement","backgroundColor","padding","fontSize","lineHeight","borderRadius","textContent","body","setDragImage","addGhostImage","VoidContainer","doSetGroupActive","handler","voidDropTarget","Panel","TabsContainer","tabs","hidden","_hidden","setActionElement","actions","actionContainer","tab","selectedIndex","findIndex","singleTabMode","tabContainer","voidContainer","button","_isGroupActive","addTab","delete","tabToRemove","setActivePanel","isActivePanel","find","tabToAdd","alreadyFocused","isContentFocused","skipFocus","DockviewGroupPanelModel","_activePanel","_locked","_panels","isEmpty","hasWatermark","watermark","header","tabsContainer","contentContainer","groupPanel","mostRecentlyUsed","_onMove","onMove","_onDidDrop","_onDidAddPanel","_onDidRemovePanel","_onDidActivePanelChange","dropTarget","hideHeader","handleDropEvent","initialize","doAddPanel","updateContainer","createGroupControlElement","_control","init","containerApi","activeView","normalizedIndex","suppressRoll","containsPanel","includes","_params","update","skipSetPanelActive","skipSetGroupActive","updateParentGroup","doSetActivePanel","groupItemOrId","panelToRemove","_removePanel","closeAllPanels","arrPanelCpy","doClose","isPanelActive","updateActions","isGroupActive","doRemovePanel","nextPanel","skipSetActive","hasExistingPanel","updateMru","createWatermarkComponent","showDndOverlay","itemId","nextLayoutId","toTarget","BaseGrid","_id","_groups","values","gridview","_activeGroup","Map","_onDidLayoutChange","_onDidRemoveGroup","_onDidAddGroup","_onDidActiveGroupChange","_bufferOnDidLayoutChange","isVisible","doAddGroup","doRemoveGroup","get","skipActive","forceResize","PanelApiImpl","isFocused","_isFocused","_isActive","_isVisible","panelUpdatesDisposable","_onDidDimensionChange","onDidDimensionsChange","_onDidChangeFocus","onDidFocusChange","_onFocusEvent","onFocusEvent","_onDidVisibilityChange","onDidVisibilityChange","_onVisibilityChange","onVisibilityChange","_onDidActiveChange","onDidActiveChange","_onActiveChange","onActiveChange","_onUpdateParameters","onUpdateParameters","parameters","params","updateParameters","SplitviewPanelApiImpl","_onDidConstraintsChangeInternal","onDidConstraintsChangeInternal","_onDidConstraintsChange","onDidConstraintsChange","_onDidSizeChange","onDidSizeChange","setConstraints","setSize","PaneviewPanelApiImpl","_pane","_onDidExpansionChange","onDidExpansionChange","_onMouseEnter","onMouseEnter","_onMouseLeave","onMouseLeave","setExpanded","isExpanded","BasePanelView","outline","overflow","getComponent","keys","PaneviewPanel","headerSize","_minimumBodySize","_maximumBodySize","minimumBodySize","maximumBodySize","headerVisible","_headerVisible","headerComponent","isHeaderVisible","_onDidChangeExpansionState","_isExpanded","expandedSize","ev","isPanelExpanded","renderOnce","expanded","bodyPart","getBodyComponent","headerPart","getHeaderComponent","title","minHeight","maxHeight","DraggablePaneviewPanel","disableDnd","initDragFeatures","existingPanel","allPanels","fromIndex","toIndex","GridviewPanelApiImpl","GridviewPanel","_priority","_snap","_minimumWidth","_evaluatedMinimumWidth","updateConstraints","_minimumHeight","_evaluatedMinimumHeight","_maximumHeight","_evaluatedMaximumHeight","_maximumWidth","_evaluatedMaximumWidth","MAX_SAFE_INTEGER","maximum","minimum","DockviewGroupPanel","_model","DockviewPanelApiImpl","isOldGroupActive","_group","_onDidGroupChange","_onDidTitleChange","onDidTitleChange","onDidGroupChange","setTitle","close","DockviewPanel","_title","contentComponent","tabComponent","isPanelVisible","createSvgElementFromPath","svg","createElementNS","setAttributeNS","viewbox","createCloseButton","DefaultTab","_content","_actionContainer","_list","action","render","onGroupChange","onPanelVisibleChange","_isPanelVisible","createComponent","componentName","components","frameworkComponents","createFrameworkComponent","Component","FrameworkComponent","DockviewPanelModel","_tab","createContentComponent","createTabComponent","frameworkComponentFactory","tabComponents","frameworkTabComponents","DefaultDockviewDeserialzier","panelData","viewData","defaultTabComponent","Watermark","emptySpace","flexGrow","actionsContainer","closeAnchor","_visible","isOneGroup","DockviewComponent","flatMap","_options","nextGroupId","_deserializer","_onDidLayoutFromJSON","updateWatermark","watermarkComponent","watermarkFrameworkComponent","Edge","moveGroupOrPanel","orthogonalize","_api","createGroupAtLocation","hasOrientationChanged","includePanel","grid","collection","isArray","createGroup","hasActiveGroup","hasActivePanel","entry","entries","referenceGroup","referencePanel","findGroup","isPanelOptionsWithGroup","createPanel","relativeLocation","removeEmptyGroup","watermarkContainer","isGroupOptionsWithGroup","sourceGroup","referenceLocation","targetLocation","targetParentLocation","sourceLocation","sourceParentLocation","targetGroup","updatedReferenceLocation","groupItem","dropLocation","moveGroup","isGroupAlreadyFocused","console","warn","set","GridviewComponent","_onDidLayoutfromJSON","serializedGridview","queue","registerPanel","f","removedPanel","reference","SplitviewComponent","_splitview","v","frameworkWrapper","doAddView","serializedSplitview","DefaultHeader","_expandedIcon","_collapsedIcon","apiRef","_expander","updateIcon","PaneFramework","PaneviewComponent","paneview","_paneview","_viewDisposables","headerComponents","headerframeworkComponents","serializedPaneview","SplitviewPanel","_minimumSize","_evaluatedMinimumSize","_maximumSize","_evaluatedMaximumSize","ReactComponentBridge","props","ref","triggerRender","React","_props","componentProps","current","Date","now","displayName","uniquePortalKeyGenerator","ReactPartContext","ReactPart","portalStore","context","_initialProps","disposed","createPortal","componentInstance","bridgeComponent","Provider","portal","ReactDOM","addPortal","usePortalsLifecycle","portals","setPortals","existingPortals","ReactPanelContentPart","reactPortalStore","DockviewEmitter","ReactPanelHeaderPart","ReactWatermarkPart","ReactGroupControlsRendererPart","_part","mutableDisposable","DockviewMutableDisposable","DockviewCompositeDisposable","updatePanels","updateActivePanel","updateGroupActive","store","DEFAULT_REACT_TAB","DockviewReact","domRef","dockviewRef","disableAutoResizing","watcher","contentRect","factory","componentId","dockview","hideBorders","groupControlComponent","onReady","CloseButton","viewBox","focusable","__rest","t","hasOwnProperty","getOwnPropertySymbols","propertyIsEnumerable","DockviewDefaultTab","_containerApi","onClose","onClick","iconClassname","join","ReactPanelView","reactComponent","SplitviewReact","splitviewRef","ReactGridPanelView","GridviewReact","gridviewRef","PanePanelSection","PaneviewReact","paneviewRef","_componentId","default","contraints","setContraints","background","border","margin","App","setApi","panel1","panel2","_extends","onContextMenu","alert","CustomHeadersDockview","localStorage","getItem","panel6","flexDirection","cursor","Console","scrollTop","scrollHeight","lines","line","key","pad","getHours","getMinutes","getSeconds","getMilliseconds","formatTime","timestamp","css","text","EventsDockview","setLines","checked","setChecked","panel_1","panel_2","panel_3","panel_4","panel_5","panel_6","panel_8","panel_7","onChange","paddingTop","justifyContent","alignItems","DockviewNative","GroupControlComponent","DockviewGroupControl","loadDefaultLayout","DockviewPersistance","setItem","JSON","stringify","clearLayout","removeItem","layoutString","success","parse","err","isolatedApp","DockviewNative2","innerDockview","InnerDockview","NestedDockview","renderVisibleComponentsOnlyAtom","atom","formatLine","timeout","useRecoilValue","Checkbox","setRender","useRecoilState","renderVisibleOnly","setWidth","setHeight","step","ResizeDockview","panel3","counter","isGroup","DockviewWatermark","CodeSandboxButton","url","href","fontWeight","paddingRight","Container","injectVanillaJS","sandboxId","SampleData","droppable","TreeComponent","treeData","setTreeData","useState","Tree","tree","rootId","newTreeData","log","_ref","depth","isOpen","onToggle","marginLeft","treeview","DndProvider","backend","MultiBackend","getBackendOptions","frontMatter","description","contentTitle","metadata","assets","toc","level","name","mdx","layoutProps","MDXLayout","MDXContent","mdxType","parentName","SimpleDockview","Link","src","useBaseUrl","DndDockview","DockviewExternalDnd","RenderingDockview","DockviewSetTitle","DockviewConstraints","isMDXComponent"],"sourceRoot":""}