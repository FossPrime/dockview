{"version":3,"file":"assets/js/common.2ff4fcb9.js","mappings":"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","sources":["webpack://dockview-docs/../../node_modules/@mdx-js/react/dist/esm.js","webpack://dockview-docs/../dockview/dist/esm/dnd/dataTransfer.js","webpack://dockview-docs/../dockview/dist/esm/events.js","webpack://dockview-docs/../dockview/dist/esm/lifecycle.js","webpack://dockview-docs/../dockview/dist/esm/dom.js","webpack://dockview-docs/../dockview/dist/esm/math.js","webpack://dockview-docs/../dockview/dist/esm/array.js","webpack://dockview-docs/../dockview/dist/esm/splitview/core/viewItem.js","webpack://dockview-docs/../dockview/dist/esm/splitview/core/splitview.js","webpack://dockview-docs/../dockview/dist/esm/paneview/paneview.js","webpack://dockview-docs/../dockview/dist/esm/gridview/leafNode.js","webpack://dockview-docs/../dockview/dist/esm/gridview/branchNode.js","webpack://dockview-docs/../dockview/dist/esm/gridview/gridview.js","webpack://dockview-docs/../dockview/dist/esm/api/component.api.js","webpack://dockview-docs/../dockview/dist/esm/dnd/dnd.js","webpack://dockview-docs/../dockview/dist/esm/dnd/droptarget.js","webpack://dockview-docs/../dockview/dist/esm/types.js","webpack://dockview-docs/../dockview/dist/esm/groupview/panel/content.js","webpack://dockview-docs/../dockview/dist/esm/groupview/dnd.js","webpack://dockview-docs/../dockview/dist/esm/dnd/abstractDragHandler.js","webpack://dockview-docs/../dockview/dist/esm/groupview/tab.js","webpack://dockview-docs/../dockview/dist/esm/dnd/groupDragHandler.js","webpack://dockview-docs/../dockview/dist/esm/dnd/ghost.js","webpack://dockview-docs/../dockview/dist/esm/groupview/titlebar/voidContainer.js","webpack://dockview-docs/../dockview/dist/esm/groupview/titlebar/tabsContainer.js","webpack://dockview-docs/../dockview/dist/esm/groupview/groupview.js","webpack://dockview-docs/../dockview/dist/esm/gridview/baseComponentGridview.js","webpack://dockview-docs/../dockview/dist/esm/api/panelApi.js","webpack://dockview-docs/../dockview/dist/esm/api/gridviewPanelApi.js","webpack://dockview-docs/../dockview/dist/esm/api/dockviewPanelApi.js","webpack://dockview-docs/../dockview/dist/esm/dockview/dockviewPanel.js","webpack://dockview-docs/../dockview/dist/esm/actionbar/actionsContainer.js","webpack://dockview-docs/../dockview/dist/esm/svg.js","webpack://dockview-docs/../dockview/dist/esm/dockview/components/watermark/watermark.js","webpack://dockview-docs/../dockview/dist/esm/panel/componentFactory.js","webpack://dockview-docs/../dockview/dist/esm/dockview/components/tab/defaultTab.js","webpack://dockview-docs/../dockview/dist/esm/gridview/basePanelView.js","webpack://dockview-docs/../dockview/dist/esm/gridview/gridviewPanel.js","webpack://dockview-docs/../dockview/dist/esm/groupview/groupviewPanel.js","webpack://dockview-docs/../dockview/dist/esm/dockview/defaultGroupPanelView.js","webpack://dockview-docs/../dockview/dist/esm/dockview/dockviewComponent.js","webpack://dockview-docs/../dockview/dist/esm/dockview/options.js","webpack://dockview-docs/../dockview/dist/esm/gridview/gridviewComponent.js","webpack://dockview-docs/../dockview/dist/esm/splitview/splitviewComponent.js","webpack://dockview-docs/../dockview/dist/esm/api/splitviewPanelApi.js","webpack://dockview-docs/../dockview/dist/esm/api/paneviewPanelApi.js","webpack://dockview-docs/../dockview/dist/esm/paneview/paneviewPanel.js","webpack://dockview-docs/../dockview/dist/esm/paneview/draggablePaneviewPanel.js","webpack://dockview-docs/../dockview/dist/esm/paneview/defaultPaneviewHeader.js","webpack://dockview-docs/../dockview/dist/esm/paneview/paneviewComponent.js","webpack://dockview-docs/../dockview/dist/esm/splitview/splitviewPanel.js","webpack://dockview-docs/../dockview/dist/esm/react/react.js","webpack://dockview-docs/../dockview/dist/esm/react/dockview/reactContentPart.js","webpack://dockview-docs/../dockview/dist/esm/react/dockview/reactHeaderPart.js","webpack://dockview-docs/../dockview/dist/esm/react/deserializer.js","webpack://dockview-docs/../dockview/dist/esm/react/dockview/reactWatermarkPart.js","webpack://dockview-docs/../dockview/dist/esm/react/dockview/groupControlsRenderer.js","webpack://dockview-docs/../dockview/dist/esm/react/dockview/dockview.js","webpack://dockview-docs/../dockview/dist/esm/react/svg.js","webpack://dockview-docs/../dockview/dist/esm/react/dockview/defaultTab.js","webpack://dockview-docs/../dockview/dist/esm/react/splitview/view.js","webpack://dockview-docs/../dockview/dist/esm/react/splitview/splitview.js","webpack://dockview-docs/../dockview/dist/esm/react/gridview/view.js","webpack://dockview-docs/../dockview/dist/esm/react/gridview/gridview.js","webpack://dockview-docs/../dockview/dist/esm/react/paneview/view.js","webpack://dockview-docs/../dockview/dist/esm/react/paneview/paneview.js"],"sourcesContent":["import React from 'react';\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nvar isFunction = function isFunction(obj) {\n  return typeof obj === 'function';\n};\n\nvar MDXContext = /*#__PURE__*/React.createContext({});\nvar withMDXComponents = function withMDXComponents(Component) {\n  return function (props) {\n    var allComponents = useMDXComponents(props.components);\n    return /*#__PURE__*/React.createElement(Component, _extends({}, props, {\n      components: allComponents\n    }));\n  };\n};\nvar useMDXComponents = function useMDXComponents(components) {\n  var contextComponents = React.useContext(MDXContext);\n  var allComponents = contextComponents;\n\n  if (components) {\n    allComponents = isFunction(components) ? components(contextComponents) : _objectSpread2(_objectSpread2({}, contextComponents), components);\n  }\n\n  return allComponents;\n};\nvar MDXProvider = function MDXProvider(props) {\n  var allComponents = useMDXComponents(props.components);\n  return /*#__PURE__*/React.createElement(MDXContext.Provider, {\n    value: allComponents\n  }, props.children);\n};\n\nvar TYPE_PROP_NAME = 'mdxType';\nvar DEFAULTS = {\n  inlineCode: 'code',\n  wrapper: function wrapper(_ref) {\n    var children = _ref.children;\n    return /*#__PURE__*/React.createElement(React.Fragment, {}, children);\n  }\n};\nvar MDXCreateElement = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var propComponents = props.components,\n      mdxType = props.mdxType,\n      originalType = props.originalType,\n      parentName = props.parentName,\n      etc = _objectWithoutProperties(props, [\"components\", \"mdxType\", \"originalType\", \"parentName\"]);\n\n  var components = useMDXComponents(propComponents);\n  var type = mdxType;\n  var Component = components[\"\".concat(parentName, \".\").concat(type)] || components[type] || DEFAULTS[type] || originalType;\n\n  if (propComponents) {\n    return /*#__PURE__*/React.createElement(Component, _objectSpread2(_objectSpread2({\n      ref: ref\n    }, etc), {}, {\n      components: propComponents\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _objectSpread2({\n    ref: ref\n  }, etc));\n});\nMDXCreateElement.displayName = 'MDXCreateElement';\nfunction createElement (type, props) {\n  var args = arguments;\n  var mdxType = props && props.mdxType;\n\n  if (typeof type === 'string' || mdxType) {\n    var argsLength = args.length;\n    var createElementArgArray = new Array(argsLength);\n    createElementArgArray[0] = MDXCreateElement;\n    var newProps = {};\n\n    for (var key in props) {\n      if (hasOwnProperty.call(props, key)) {\n        newProps[key] = props[key];\n      }\n    }\n\n    newProps.originalType = type;\n    newProps[TYPE_PROP_NAME] = typeof type === 'string' ? type : mdxType;\n    createElementArgArray[1] = newProps;\n\n    for (var i = 2; i < argsLength; i++) {\n      createElementArgArray[i] = args[i];\n    }\n\n    return React.createElement.apply(null, createElementArgArray);\n  }\n\n  return React.createElement.apply(null, args);\n}\n\nexport { MDXContext, MDXProvider, createElement as mdx, useMDXComponents, withMDXComponents };\n","class TransferObject {\n    constructor() {\n        //\n    }\n}\nexport class PanelTransfer extends TransferObject {\n    constructor(viewId, groupId, panelId) {\n        super();\n        this.viewId = viewId;\n        this.groupId = groupId;\n        this.panelId = panelId;\n    }\n}\nexport class PaneTransfer extends TransferObject {\n    constructor(viewId, paneId) {\n        super();\n        this.viewId = viewId;\n        this.paneId = paneId;\n    }\n}\n/**\n * A singleton to store transfer data during drag & drop operations that are only valid within the application.\n */\nexport class LocalSelectionTransfer {\n    constructor() {\n        // protect against external instantiation\n    }\n    static getInstance() {\n        return LocalSelectionTransfer.INSTANCE;\n    }\n    hasData(proto) {\n        return proto && proto === this.proto;\n    }\n    clearData(proto) {\n        if (this.hasData(proto)) {\n            this.proto = undefined;\n            this.data = undefined;\n        }\n    }\n    getData(proto) {\n        if (this.hasData(proto)) {\n            return this.data;\n        }\n        return undefined;\n    }\n    setData(data, proto) {\n        if (proto) {\n            this.data = data;\n            this.proto = proto;\n        }\n    }\n}\nLocalSelectionTransfer.INSTANCE = new LocalSelectionTransfer();\nexport function getPanelData() {\n    const panelTransfer = LocalSelectionTransfer.getInstance();\n    const isPanelEvent = panelTransfer.hasData(PanelTransfer.prototype);\n    if (!isPanelEvent) {\n        return undefined;\n    }\n    return panelTransfer.getData(PanelTransfer.prototype)[0];\n}\nexport function getPaneData() {\n    const paneTransfer = LocalSelectionTransfer.getInstance();\n    const isPanelEvent = paneTransfer.hasData(PaneTransfer.prototype);\n    if (!isPanelEvent) {\n        return undefined;\n    }\n    return paneTransfer.getData(PaneTransfer.prototype)[0];\n}\n","export var Event;\n(function (Event) {\n    Event.any = (...children) => {\n        return (listener) => {\n            const disposables = children.map((child) => child(listener));\n            return {\n                dispose: () => {\n                    disposables.forEach((d) => {\n                        d.dispose();\n                    });\n                },\n            };\n        };\n    };\n})(Event || (Event = {}));\n// dumb event emitter with better typings than nodes event emitter\n// https://github.com/microsoft/vscode/blob/master/src/vs/base/common/event.ts\nexport class Emitter {\n    constructor(options) {\n        this.options = options;\n        this._listeners = [];\n        this._disposed = false;\n    }\n    get event() {\n        if (!this._event) {\n            this._event = (listener) => {\n                var _a;\n                if (((_a = this.options) === null || _a === void 0 ? void 0 : _a.replay) && this._last !== undefined) {\n                    listener(this._last);\n                }\n                this._listeners.push(listener);\n                return {\n                    dispose: () => {\n                        const index = this._listeners.indexOf(listener);\n                        if (index > -1) {\n                            this._listeners.splice(index, 1);\n                        }\n                    },\n                };\n            };\n        }\n        return this._event;\n    }\n    fire(e) {\n        this._last = e;\n        for (const listener of this._listeners) {\n            listener(e);\n        }\n    }\n    dispose() {\n        this._listeners = [];\n        this._disposed = true;\n    }\n}\nexport function addDisposableWindowListener(element, type, listener, options) {\n    element.addEventListener(type, listener, options);\n    return {\n        dispose: () => {\n            element.removeEventListener(type, listener);\n        },\n    };\n}\nexport function addDisposableListener(element, type, listener, options) {\n    element.addEventListener(type, listener, options);\n    return {\n        dispose: () => {\n            element.removeEventListener(type, listener);\n        },\n    };\n}\nexport class TickDelayedEvent {\n    constructor() {\n        this._onFired = new Emitter();\n        this.onEvent = this._onFired.event;\n    }\n    fire() {\n        if (this.timer) {\n            clearTimeout(this.timer);\n        }\n        this.timer = setTimeout(() => {\n            this._onFired.fire();\n            clearTimeout(this.timer);\n        });\n    }\n    dispose() {\n        this._onFired.dispose();\n    }\n}\n","export var Disposable;\n(function (Disposable) {\n    Disposable.NONE = {\n        dispose: () => {\n            // noop\n        },\n    };\n})(Disposable || (Disposable = {}));\nexport class CompositeDisposable {\n    static from(...args) {\n        return new CompositeDisposable(...args);\n    }\n    constructor(...args) {\n        this.disposables = args;\n    }\n    addDisposables(...args) {\n        args.forEach((arg) => this.disposables.push(arg));\n    }\n    dispose() {\n        this.disposables.forEach((arg) => arg.dispose());\n    }\n}\nexport class MutableDisposable {\n    constructor() {\n        this._disposable = Disposable.NONE;\n    }\n    set value(disposable) {\n        if (this._disposable) {\n            this._disposable.dispose();\n        }\n        this._disposable = disposable;\n    }\n    dispose() {\n        if (this._disposable) {\n            this._disposable.dispose();\n            this._disposable = Disposable.NONE;\n        }\n    }\n}\n","import { Emitter, addDisposableListener, addDisposableWindowListener, } from './events';\nimport { CompositeDisposable } from './lifecycle';\nexport function watchElementResize(element, cb) {\n    const observer = new ResizeObserver((entires) => {\n        const firstEntry = entires[0];\n        cb(firstEntry);\n    });\n    observer.observe(element);\n    return {\n        dispose: () => {\n            observer.unobserve(element);\n            observer.disconnect();\n        },\n    };\n}\nexport const removeClasses = (element, ...classes) => {\n    for (const classname of classes) {\n        if (element.classList.contains(classname)) {\n            element.classList.remove(classname);\n        }\n    }\n};\nexport const addClasses = (element, ...classes) => {\n    for (const classname of classes) {\n        if (!element.classList.contains(classname)) {\n            element.classList.add(classname);\n        }\n    }\n};\nexport const toggleClass = (element, className, isToggled) => {\n    const hasClass = element.classList.contains(className);\n    if (isToggled && !hasClass) {\n        element.classList.add(className);\n    }\n    if (!isToggled && hasClass) {\n        element.classList.remove(className);\n    }\n};\nexport function isAncestor(testChild, testAncestor) {\n    while (testChild) {\n        if (testChild === testAncestor) {\n            return true;\n        }\n        testChild = testChild.parentNode;\n    }\n    return false;\n}\nexport function getElementsByTagName(tag) {\n    return Array.prototype.slice.call(document.getElementsByTagName(tag), 0);\n}\nexport function trackFocus(element) {\n    return new FocusTracker(element);\n}\n/**\n * Track focus on an element. Ensure tabIndex is set when an HTMLElement is not focusable by default\n */\nclass FocusTracker extends CompositeDisposable {\n    constructor(element) {\n        super();\n        this._onDidFocus = new Emitter();\n        this.onDidFocus = this._onDidFocus.event;\n        this._onDidBlur = new Emitter();\n        this.onDidBlur = this._onDidBlur.event;\n        let hasFocus = isAncestor(document.activeElement, element);\n        let loosingFocus = false;\n        const onFocus = () => {\n            loosingFocus = false;\n            if (!hasFocus) {\n                hasFocus = true;\n                this._onDidFocus.fire();\n            }\n        };\n        const onBlur = () => {\n            if (hasFocus) {\n                loosingFocus = true;\n                window.setTimeout(() => {\n                    if (loosingFocus) {\n                        loosingFocus = false;\n                        hasFocus = false;\n                        this._onDidBlur.fire();\n                    }\n                }, 0);\n            }\n        };\n        this._refreshStateHandler = () => {\n            const currentNodeHasFocus = isAncestor(document.activeElement, element);\n            if (currentNodeHasFocus !== hasFocus) {\n                if (hasFocus) {\n                    onBlur();\n                }\n                else {\n                    onFocus();\n                }\n            }\n        };\n        if (element instanceof HTMLElement) {\n            this.addDisposables(addDisposableListener(element, 'focus', onFocus, true));\n            this.addDisposables(addDisposableListener(element, 'blur', onBlur, true));\n        }\n        else {\n            this.addDisposables(addDisposableWindowListener(element, 'focus', onFocus, true));\n            this.addDisposables(addDisposableWindowListener(element, 'blur', onBlur, true));\n        }\n    }\n    refreshState() {\n        this._refreshStateHandler();\n    }\n    dispose() {\n        super.dispose();\n        this._onDidBlur.dispose();\n        this._onDidFocus.dispose();\n    }\n}\n","export const clamp = (value, min, max) => {\n    if (min > max) {\n        throw new Error(`${min} > ${max} is an invalid condition`);\n    }\n    return Math.min(max, Math.max(value, min));\n};\nexport const sequentialNumberGenerator = () => {\n    let value = 1;\n    return { next: () => (value++).toString() };\n};\n","export function tail(arr) {\n    if (arr.length === 0) {\n        throw new Error('Invalid tail call');\n    }\n    return [arr.slice(0, arr.length - 1), arr[arr.length - 1]];\n}\nexport function last(arr) {\n    return arr.length > 0 ? arr[arr.length - 1] : undefined;\n}\nexport function sequenceEquals(arr1, arr2) {\n    if (arr1.length !== arr2.length) {\n        return false;\n    }\n    for (let i = 0; i < arr1.length; i++) {\n        if (arr1[i] !== arr2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Pushes an element to the start of the array, if found.\n */\nexport function pushToStart(arr, value) {\n    const index = arr.indexOf(value);\n    if (index > -1) {\n        arr.splice(index, 1);\n        arr.unshift(value);\n    }\n}\n/**\n * Pushes an element to the end of the array, if found.\n */\nexport function pushToEnd(arr, value) {\n    const index = arr.indexOf(value);\n    if (index > -1) {\n        arr.splice(index, 1);\n        arr.push(value);\n    }\n}\nexport const range = (from, to) => {\n    const result = [];\n    if (typeof to !== 'number') {\n        to = from;\n        from = 0;\n    }\n    if (from <= to) {\n        for (let i = from; i < to; i++) {\n            result.push(i);\n        }\n    }\n    else {\n        for (let i = from; i > to; i--) {\n            result.push(i);\n        }\n    }\n    return result;\n};\nexport function firstIndex(array, fn) {\n    for (let i = 0; i < array.length; i++) {\n        const element = array[i];\n        if (fn(element)) {\n            return i;\n        }\n    }\n    return -1;\n}\n","import { clamp } from '../../math';\nexport class ViewItem {\n    set size(size) {\n        this._size = size;\n    }\n    get size() {\n        return this._size;\n    }\n    get cachedVisibleSize() {\n        return this._cachedVisibleSize;\n    }\n    get visible() {\n        return typeof this._cachedVisibleSize === 'undefined';\n    }\n    setVisible(visible, size) {\n        var _a;\n        if (visible === this.visible) {\n            return;\n        }\n        if (visible) {\n            this.size = clamp((_a = this._cachedVisibleSize) !== null && _a !== void 0 ? _a : 0, this.viewMinimumSize, this.viewMaximumSize);\n            this._cachedVisibleSize = undefined;\n        }\n        else {\n            this._cachedVisibleSize =\n                typeof size === 'number' ? size : this.size;\n            this.size = 0;\n        }\n        this.container.classList.toggle('visible', visible);\n        if (this.view.setVisible) {\n            this.view.setVisible(visible);\n        }\n    }\n    get minimumSize() {\n        return this.visible ? this.view.minimumSize : 0;\n    }\n    get viewMinimumSize() {\n        return this.view.minimumSize;\n    }\n    get maximumSize() {\n        return this.visible ? this.view.maximumSize : 0;\n    }\n    get viewMaximumSize() {\n        return this.view.maximumSize;\n    }\n    get priority() {\n        return this.view.priority;\n    }\n    get snap() {\n        return !!this.view.snap;\n    }\n    set enabled(enabled) {\n        this.container.style.pointerEvents = enabled ? '' : 'none';\n    }\n    constructor(container, view, size, disposable) {\n        this.container = container;\n        this.view = view;\n        this.disposable = disposable;\n        this._cachedVisibleSize = undefined;\n        if (typeof size === 'number') {\n            this._size = size;\n            this._cachedVisibleSize = undefined;\n            container.classList.add('visible');\n        }\n        else {\n            this._size = 0;\n            this._cachedVisibleSize = size.cachedVisibleSize;\n        }\n    }\n    // layout(offset: number, layoutContext: TLayoutContext | undefined): void {\n    //     this.layoutContainer(offset);\n    //     this.view.layout(this.size, offset, layoutContext);\n    // }\n    // abstract layoutContainer(offset: number): void;\n    dispose() {\n        this.disposable.dispose();\n        return this.view;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/splitview\n *--------------------------------------------------------------------------------------------*/\nimport { removeClasses, addClasses, toggleClass, getElementsByTagName, } from '../../dom';\nimport { clamp } from '../../math';\nimport { Emitter } from '../../events';\nimport { pushToStart, pushToEnd, range, firstIndex } from '../../array';\nimport { ViewItem } from './viewItem';\nexport var Orientation;\n(function (Orientation) {\n    Orientation[\"HORIZONTAL\"] = \"HORIZONTAL\";\n    Orientation[\"VERTICAL\"] = \"VERTICAL\";\n})(Orientation || (Orientation = {}));\nexport var SashState;\n(function (SashState) {\n    SashState[SashState[\"MAXIMUM\"] = 0] = \"MAXIMUM\";\n    SashState[SashState[\"MINIMUM\"] = 1] = \"MINIMUM\";\n    SashState[SashState[\"DISABLED\"] = 2] = \"DISABLED\";\n    SashState[SashState[\"ENABLED\"] = 3] = \"ENABLED\";\n})(SashState || (SashState = {}));\nexport var LayoutPriority;\n(function (LayoutPriority) {\n    LayoutPriority[\"Low\"] = \"low\";\n    LayoutPriority[\"High\"] = \"high\";\n    LayoutPriority[\"Normal\"] = \"normal\";\n})(LayoutPriority || (LayoutPriority = {}));\nexport var Sizing;\n(function (Sizing) {\n    Sizing.Distribute = { type: 'distribute' };\n    function Split(index) {\n        return { type: 'split', index };\n    }\n    Sizing.Split = Split;\n    function Invisible(cachedVisibleSize) {\n        return { type: 'invisible', cachedVisibleSize };\n    }\n    Sizing.Invisible = Invisible;\n})(Sizing || (Sizing = {}));\nexport class Splitview {\n    get size() {\n        return this._size;\n    }\n    set size(value) {\n        this._size = value;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    set orthogonalSize(value) {\n        this._orthogonalSize = value;\n    }\n    get length() {\n        return this.views.length;\n    }\n    get proportions() {\n        return this._proportions ? [...this._proportions] : undefined;\n    }\n    get orientation() {\n        return this._orientation;\n    }\n    set orientation(value) {\n        this._orientation = value;\n        const tmp = this.size;\n        this.size = this.orthogonalSize;\n        this.orthogonalSize = tmp;\n        removeClasses(this.element, 'horizontal', 'vertical');\n        this.element.classList.add(this.orientation == Orientation.HORIZONTAL\n            ? 'horizontal'\n            : 'vertical');\n    }\n    get minimumSize() {\n        return this.views.reduce((r, item) => r + item.minimumSize, 0);\n    }\n    get maximumSize() {\n        return this.length === 0\n            ? Number.POSITIVE_INFINITY\n            : this.views.reduce((r, item) => r + item.maximumSize, 0);\n    }\n    get startSnappingEnabled() {\n        return this._startSnappingEnabled;\n    }\n    set startSnappingEnabled(startSnappingEnabled) {\n        if (this._startSnappingEnabled === startSnappingEnabled) {\n            return;\n        }\n        this._startSnappingEnabled = startSnappingEnabled;\n        this.updateSashEnablement();\n    }\n    get endSnappingEnabled() {\n        return this._endSnappingEnabled;\n    }\n    set endSnappingEnabled(endSnappingEnabled) {\n        if (this._endSnappingEnabled === endSnappingEnabled) {\n            return;\n        }\n        this._endSnappingEnabled = endSnappingEnabled;\n        this.updateSashEnablement();\n    }\n    constructor(container, options) {\n        this.container = container;\n        this.views = [];\n        this.sashes = [];\n        this._size = 0;\n        this._orthogonalSize = 0;\n        this.contentSize = 0;\n        this._proportions = undefined;\n        this._onDidSashEnd = new Emitter();\n        this.onDidSashEnd = this._onDidSashEnd.event;\n        this._onDidAddView = new Emitter();\n        this.onDidAddView = this._onDidAddView.event;\n        this._onDidRemoveView = new Emitter();\n        this.onDidRemoveView = this._onDidRemoveView.event;\n        this._startSnappingEnabled = true;\n        this._endSnappingEnabled = true;\n        this.resize = (index, delta, sizes = this.views.map((x) => x.size), lowPriorityIndexes, highPriorityIndexes, overloadMinDelta = Number.NEGATIVE_INFINITY, overloadMaxDelta = Number.POSITIVE_INFINITY, snapBefore, snapAfter) => {\n            if (index < 0 || index > this.views.length) {\n                return 0;\n            }\n            const upIndexes = range(index, -1);\n            const downIndexes = range(index + 1, this.views.length);\n            //\n            if (highPriorityIndexes) {\n                for (const i of highPriorityIndexes) {\n                    pushToStart(upIndexes, i);\n                    pushToStart(downIndexes, i);\n                }\n            }\n            if (lowPriorityIndexes) {\n                for (const i of lowPriorityIndexes) {\n                    pushToEnd(upIndexes, i);\n                    pushToEnd(downIndexes, i);\n                }\n            }\n            //\n            const upItems = upIndexes.map((i) => this.views[i]);\n            const upSizes = upIndexes.map((i) => sizes[i]);\n            //\n            const downItems = downIndexes.map((i) => this.views[i]);\n            const downSizes = downIndexes.map((i) => sizes[i]);\n            //\n            const minDeltaUp = upIndexes.reduce((_, i) => _ + this.views[i].minimumSize - sizes[i], 0);\n            const maxDeltaUp = upIndexes.reduce((_, i) => _ + this.views[i].maximumSize - sizes[i], 0);\n            //\n            const maxDeltaDown = downIndexes.length === 0\n                ? Number.POSITIVE_INFINITY\n                : downIndexes.reduce((_, i) => _ + sizes[i] - this.views[i].minimumSize, 0);\n            const minDeltaDown = downIndexes.length === 0\n                ? Number.NEGATIVE_INFINITY\n                : downIndexes.reduce((_, i) => _ + sizes[i] - this.views[i].maximumSize, 0);\n            //\n            const minDelta = Math.max(minDeltaUp, minDeltaDown);\n            const maxDelta = Math.min(maxDeltaDown, maxDeltaUp);\n            //\n            let snapped = false;\n            if (snapBefore) {\n                const snapView = this.views[snapBefore.index];\n                const visible = delta >= snapBefore.limitDelta;\n                snapped = visible !== snapView.visible;\n                snapView.setVisible(visible, snapBefore.size);\n            }\n            if (!snapped && snapAfter) {\n                const snapView = this.views[snapAfter.index];\n                const visible = delta < snapAfter.limitDelta;\n                snapped = visible !== snapView.visible;\n                snapView.setVisible(visible, snapAfter.size);\n            }\n            if (snapped) {\n                return this.resize(index, delta, sizes, lowPriorityIndexes, highPriorityIndexes, overloadMinDelta, overloadMaxDelta);\n            }\n            //\n            const tentativeDelta = clamp(delta, minDelta, maxDelta);\n            let actualDelta = 0;\n            //\n            let deltaUp = tentativeDelta;\n            for (let i = 0; i < upItems.length; i++) {\n                const item = upItems[i];\n                const size = clamp(upSizes[i] + deltaUp, item.minimumSize, item.maximumSize);\n                const viewDelta = size - upSizes[i];\n                actualDelta += viewDelta;\n                deltaUp -= viewDelta;\n                item.size = size;\n            }\n            //\n            let deltaDown = actualDelta;\n            for (let i = 0; i < downItems.length; i++) {\n                const item = downItems[i];\n                const size = clamp(downSizes[i] - deltaDown, item.minimumSize, item.maximumSize);\n                const viewDelta = size - downSizes[i];\n                deltaDown += viewDelta;\n                item.size = size;\n            }\n            //\n            return delta;\n        };\n        this._orientation = options.orientation;\n        this.element = this.createContainer();\n        this.proportionalLayout =\n            options.proportionalLayout === undefined\n                ? true\n                : !!options.proportionalLayout;\n        this.viewContainer = this.createViewContainer();\n        this.sashContainer = this.createSashContainer();\n        this.element.appendChild(this.sashContainer);\n        this.element.appendChild(this.viewContainer);\n        this.container.appendChild(this.element);\n        this.style(options.styles);\n        // We have an existing set of view, add them now\n        if (options.descriptor) {\n            this._size = options.descriptor.size;\n            options.descriptor.views.forEach((viewDescriptor, index) => {\n                const sizing = viewDescriptor.visible === undefined ||\n                    viewDescriptor.visible\n                    ? viewDescriptor.size\n                    : {\n                        type: 'invisible',\n                        cachedVisibleSize: viewDescriptor.size,\n                    };\n                const view = viewDescriptor.view;\n                this.addView(view, sizing, index, true\n                // true skip layout\n                );\n            });\n            // Initialize content size and proportions for first layout\n            this.contentSize = this.views.reduce((r, i) => r + i.size, 0);\n            this.saveProportions();\n        }\n    }\n    style(styles) {\n        if ((styles === null || styles === void 0 ? void 0 : styles.separatorBorder) === 'transparent') {\n            removeClasses(this.element, 'separator-border');\n            this.element.style.removeProperty('--dv-separator-border');\n        }\n        else {\n            addClasses(this.element, 'separator-border');\n            if (styles === null || styles === void 0 ? void 0 : styles.separatorBorder) {\n                this.element.style.setProperty('--dv-separator-border', styles.separatorBorder);\n            }\n        }\n    }\n    isViewVisible(index) {\n        if (index < 0 || index >= this.views.length) {\n            throw new Error('Index out of bounds');\n        }\n        const viewItem = this.views[index];\n        return viewItem.visible;\n    }\n    setViewVisible(index, visible) {\n        if (index < 0 || index >= this.views.length) {\n            throw new Error('Index out of bounds');\n        }\n        toggleClass(this.container, 'visible', visible);\n        const viewItem = this.views[index];\n        toggleClass(this.container, 'visible', visible);\n        viewItem.setVisible(visible, viewItem.size);\n        this.distributeEmptySpace(index);\n        this.layoutViews();\n        this.saveProportions();\n    }\n    getViewSize(index) {\n        if (index < 0 || index >= this.views.length) {\n            return -1;\n        }\n        return this.views[index].size;\n    }\n    resizeView(index, size) {\n        if (index < 0 || index >= this.views.length) {\n            return;\n        }\n        const indexes = range(this.views.length).filter((i) => i !== index);\n        const lowPriorityIndexes = [\n            ...indexes.filter((i) => this.views[i].priority === LayoutPriority.Low),\n            index,\n        ];\n        const highPriorityIndexes = indexes.filter((i) => this.views[i].priority === LayoutPriority.High);\n        const item = this.views[index];\n        size = Math.round(size);\n        size = clamp(size, item.minimumSize, Math.min(item.maximumSize, this._size));\n        item.size = size;\n        this.relayout(lowPriorityIndexes, highPriorityIndexes);\n    }\n    getViews() {\n        return this.views.map((x) => x.view);\n    }\n    onDidChange(item, size) {\n        const index = this.views.indexOf(item);\n        if (index < 0 || index >= this.views.length) {\n            return;\n        }\n        size = typeof size === 'number' ? size : item.size;\n        size = clamp(size, item.minimumSize, item.maximumSize);\n        item.size = size;\n        this.relayout([index]);\n    }\n    addView(view, size = { type: 'distribute' }, index = this.views.length, skipLayout) {\n        const container = document.createElement('div');\n        container.className = 'view';\n        container.appendChild(view.element);\n        let viewSize;\n        if (typeof size === 'number') {\n            viewSize = size;\n        }\n        else if (size.type === 'split') {\n            viewSize = this.getViewSize(size.index) / 2;\n        }\n        else if (size.type === 'invisible') {\n            viewSize = { cachedVisibleSize: size.cachedVisibleSize };\n        }\n        else {\n            viewSize = view.minimumSize;\n        }\n        const disposable = view.onDidChange((newSize) => this.onDidChange(viewItem, newSize.size));\n        const dispose = () => {\n            disposable === null || disposable === void 0 ? void 0 : disposable.dispose();\n            this.viewContainer.removeChild(container);\n        };\n        const viewItem = new ViewItem(container, view, viewSize, { dispose });\n        if (index === this.views.length) {\n            this.viewContainer.appendChild(container);\n        }\n        else {\n            this.viewContainer.insertBefore(container, this.viewContainer.children.item(index));\n        }\n        this.views.splice(index, 0, viewItem);\n        if (this.views.length > 1) {\n            //add sash\n            const sash = document.createElement('div');\n            sash.className = 'sash';\n            const onStart = (event) => {\n                for (const item of this.views) {\n                    item.enabled = false;\n                }\n                const iframes = [\n                    ...getElementsByTagName('iframe'),\n                    ...getElementsByTagName('webview'),\n                ];\n                for (const iframe of iframes) {\n                    iframe.style.pointerEvents = 'none';\n                }\n                const start = this._orientation === Orientation.HORIZONTAL\n                    ? event.clientX\n                    : event.clientY;\n                const sashIndex = firstIndex(this.sashes, (s) => s.container === sash);\n                //\n                const sizes = this.views.map((x) => x.size);\n                //\n                let snapBefore;\n                let snapAfter;\n                const upIndexes = range(sashIndex, -1);\n                const downIndexes = range(sashIndex + 1, this.views.length);\n                const minDeltaUp = upIndexes.reduce((r, i) => r + (this.views[i].minimumSize - sizes[i]), 0);\n                const maxDeltaUp = upIndexes.reduce((r, i) => r + (this.views[i].viewMaximumSize - sizes[i]), 0);\n                const maxDeltaDown = downIndexes.length === 0\n                    ? Number.POSITIVE_INFINITY\n                    : downIndexes.reduce((r, i) => r + (sizes[i] - this.views[i].minimumSize), 0);\n                const minDeltaDown = downIndexes.length === 0\n                    ? Number.NEGATIVE_INFINITY\n                    : downIndexes.reduce((r, i) => r +\n                        (sizes[i] - this.views[i].viewMaximumSize), 0);\n                const minDelta = Math.max(minDeltaUp, minDeltaDown);\n                const maxDelta = Math.min(maxDeltaDown, maxDeltaUp);\n                const snapBeforeIndex = this.findFirstSnapIndex(upIndexes);\n                const snapAfterIndex = this.findFirstSnapIndex(downIndexes);\n                if (typeof snapBeforeIndex === 'number') {\n                    const snappedViewItem = this.views[snapBeforeIndex];\n                    const halfSize = Math.floor(snappedViewItem.viewMinimumSize / 2);\n                    snapBefore = {\n                        index: snapBeforeIndex,\n                        limitDelta: snappedViewItem.visible\n                            ? minDelta - halfSize\n                            : minDelta + halfSize,\n                        size: snappedViewItem.size,\n                    };\n                }\n                if (typeof snapAfterIndex === 'number') {\n                    const snappedViewItem = this.views[snapAfterIndex];\n                    const halfSize = Math.floor(snappedViewItem.viewMinimumSize / 2);\n                    snapAfter = {\n                        index: snapAfterIndex,\n                        limitDelta: snappedViewItem.visible\n                            ? maxDelta + halfSize\n                            : maxDelta - halfSize,\n                        size: snappedViewItem.size,\n                    };\n                }\n                //\n                const mousemove = (mousemoveEvent) => {\n                    const current = this._orientation === Orientation.HORIZONTAL\n                        ? mousemoveEvent.clientX\n                        : mousemoveEvent.clientY;\n                    const delta = current - start;\n                    this.resize(sashIndex, delta, sizes, undefined, undefined, minDelta, maxDelta, snapBefore, snapAfter);\n                    this.distributeEmptySpace();\n                    this.layoutViews();\n                };\n                const end = () => {\n                    for (const item of this.views) {\n                        item.enabled = true;\n                    }\n                    for (const iframe of iframes) {\n                        iframe.style.pointerEvents = 'auto';\n                    }\n                    this.saveProportions();\n                    document.removeEventListener('mousemove', mousemove);\n                    document.removeEventListener('mouseup', end);\n                    document.removeEventListener('mouseend', end);\n                    this._onDidSashEnd.fire(undefined);\n                };\n                document.addEventListener('mousemove', mousemove);\n                document.addEventListener('mouseup', end);\n                document.addEventListener('mouseend', end);\n            };\n            sash.addEventListener('mousedown', onStart);\n            const sashItem = {\n                container: sash,\n                disposable: () => {\n                    sash.removeEventListener('mousedown', onStart);\n                    this.sashContainer.removeChild(sash);\n                },\n            };\n            this.sashContainer.appendChild(sash);\n            this.sashes.push(sashItem);\n        }\n        if (!skipLayout) {\n            this.relayout([index]);\n        }\n        if (!skipLayout &&\n            typeof size !== 'number' &&\n            size.type === 'distribute') {\n            this.distributeViewSizes();\n        }\n        this._onDidAddView.fire(view);\n    }\n    distributeViewSizes() {\n        const flexibleViewItems = [];\n        let flexibleSize = 0;\n        for (const item of this.views) {\n            if (item.maximumSize - item.minimumSize > 0) {\n                flexibleViewItems.push(item);\n                flexibleSize += item.size;\n            }\n        }\n        const size = Math.floor(flexibleSize / flexibleViewItems.length);\n        for (const item of flexibleViewItems) {\n            item.size = clamp(size, item.minimumSize, item.maximumSize);\n        }\n        const indexes = range(this.views.length);\n        const lowPriorityIndexes = indexes.filter((i) => this.views[i].priority === LayoutPriority.Low);\n        const highPriorityIndexes = indexes.filter((i) => this.views[i].priority === LayoutPriority.High);\n        this.relayout(lowPriorityIndexes, highPriorityIndexes);\n    }\n    removeView(index, sizing, skipLayout = false) {\n        // Remove view\n        const viewItem = this.views.splice(index, 1)[0];\n        viewItem.dispose();\n        // Remove sash\n        if (this.views.length >= 1) {\n            const sashIndex = Math.max(index - 1, 0);\n            const sashItem = this.sashes.splice(sashIndex, 1)[0];\n            sashItem.disposable();\n        }\n        if (!skipLayout) {\n            this.relayout();\n        }\n        if (sizing && sizing.type === 'distribute') {\n            this.distributeViewSizes();\n        }\n        this._onDidRemoveView.fire(viewItem.view);\n        return viewItem.view;\n    }\n    getViewCachedVisibleSize(index) {\n        if (index < 0 || index >= this.views.length) {\n            throw new Error('Index out of bounds');\n        }\n        const viewItem = this.views[index];\n        return viewItem.cachedVisibleSize;\n    }\n    moveView(from, to) {\n        const cachedVisibleSize = this.getViewCachedVisibleSize(from);\n        const sizing = typeof cachedVisibleSize === 'undefined'\n            ? this.getViewSize(from)\n            : Sizing.Invisible(cachedVisibleSize);\n        const view = this.removeView(from, undefined, true);\n        this.addView(view, sizing, to);\n    }\n    layout(size, orthogonalSize) {\n        const previousSize = Math.max(this.size, this.contentSize);\n        this.size = size;\n        this.orthogonalSize = orthogonalSize;\n        if (!this.proportions) {\n            const indexes = range(this.views.length);\n            const lowPriorityIndexes = indexes.filter((i) => this.views[i].priority === LayoutPriority.Low);\n            const highPriorityIndexes = indexes.filter((i) => this.views[i].priority === LayoutPriority.High);\n            this.resize(this.views.length - 1, size - previousSize, undefined, lowPriorityIndexes, highPriorityIndexes);\n        }\n        else {\n            for (let i = 0; i < this.views.length; i++) {\n                const item = this.views[i];\n                item.size = clamp(Math.round(this.proportions[i] * size), item.minimumSize, item.maximumSize);\n            }\n        }\n        this.distributeEmptySpace();\n        this.layoutViews();\n    }\n    relayout(lowPriorityIndexes, highPriorityIndexes) {\n        const contentSize = this.views.reduce((r, i) => r + i.size, 0);\n        this.resize(this.views.length - 1, this._size - contentSize, undefined, lowPriorityIndexes, highPriorityIndexes);\n        this.distributeEmptySpace();\n        this.layoutViews();\n        this.saveProportions();\n    }\n    distributeEmptySpace(lowPriorityIndex) {\n        const contentSize = this.views.reduce((r, i) => r + i.size, 0);\n        let emptyDelta = this.size - contentSize;\n        const indexes = range(this.views.length - 1, -1);\n        const lowPriorityIndexes = indexes.filter((i) => this.views[i].priority === LayoutPriority.Low);\n        const highPriorityIndexes = indexes.filter((i) => this.views[i].priority === LayoutPriority.High);\n        for (const index of highPriorityIndexes) {\n            pushToStart(indexes, index);\n        }\n        for (const index of lowPriorityIndexes) {\n            pushToEnd(indexes, index);\n        }\n        if (typeof lowPriorityIndex === 'number') {\n            pushToEnd(indexes, lowPriorityIndex);\n        }\n        for (let i = 0; emptyDelta !== 0 && i < indexes.length; i++) {\n            const item = this.views[indexes[i]];\n            const size = clamp(item.size + emptyDelta, item.minimumSize, item.maximumSize);\n            const viewDelta = size - item.size;\n            emptyDelta -= viewDelta;\n            item.size = size;\n        }\n    }\n    saveProportions() {\n        if (this.proportionalLayout && this.contentSize > 0) {\n            this._proportions = this.views.map((i) => i.size / this.contentSize);\n        }\n    }\n    layoutViews() {\n        this.contentSize = this.views.reduce((r, i) => r + i.size, 0);\n        let sum = 0;\n        const x = [];\n        this.updateSashEnablement();\n        for (let i = 0; i < this.views.length - 1; i++) {\n            sum += this.views[i].size;\n            x.push(sum);\n            const offset = Math.min(Math.max(0, sum - 2), this.size - 4);\n            if (this._orientation === Orientation.HORIZONTAL) {\n                this.sashes[i].container.style.left = `${offset}px`;\n                this.sashes[i].container.style.top = `0px`;\n            }\n            if (this._orientation === Orientation.VERTICAL) {\n                this.sashes[i].container.style.left = `0px`;\n                this.sashes[i].container.style.top = `${offset}px`;\n            }\n        }\n        this.views.forEach((view, i) => {\n            if (this._orientation === Orientation.HORIZONTAL) {\n                view.container.style.width = `${view.size}px`;\n                view.container.style.left = i == 0 ? '0px' : `${x[i - 1]}px`;\n                view.container.style.top = '';\n                view.container.style.height = '';\n            }\n            if (this._orientation === Orientation.VERTICAL) {\n                view.container.style.height = `${view.size}px`;\n                view.container.style.top = i == 0 ? '0px' : `${x[i - 1]}px`;\n                view.container.style.width = '';\n                view.container.style.left = '';\n            }\n            view.view.layout(view.size, this._orthogonalSize);\n        });\n    }\n    findFirstSnapIndex(indexes) {\n        // visible views first\n        for (const index of indexes) {\n            const viewItem = this.views[index];\n            if (!viewItem.visible) {\n                continue;\n            }\n            if (viewItem.snap) {\n                return index;\n            }\n        }\n        // then, hidden views\n        for (const index of indexes) {\n            const viewItem = this.views[index];\n            if (viewItem.visible &&\n                viewItem.maximumSize - viewItem.minimumSize > 0) {\n                return undefined;\n            }\n            if (!viewItem.visible && viewItem.snap) {\n                return index;\n            }\n        }\n        return undefined;\n    }\n    updateSashEnablement() {\n        let previous = false;\n        const collapsesDown = this.views.map((i) => (previous = i.size - i.minimumSize > 0 || previous));\n        previous = false;\n        const expandsDown = this.views.map((i) => (previous = i.maximumSize - i.size > 0 || previous));\n        const reverseViews = [...this.views].reverse();\n        previous = false;\n        const collapsesUp = reverseViews\n            .map((i) => (previous = i.size - i.minimumSize > 0 || previous))\n            .reverse();\n        previous = false;\n        const expandsUp = reverseViews\n            .map((i) => (previous = i.maximumSize - i.size > 0 || previous))\n            .reverse();\n        let position = 0;\n        for (let index = 0; index < this.sashes.length; index++) {\n            const sash = this.sashes[index];\n            const viewItem = this.views[index];\n            position += viewItem.size;\n            const min = !(collapsesDown[index] && expandsUp[index + 1]);\n            const max = !(expandsDown[index] && collapsesUp[index + 1]);\n            if (min && max) {\n                const upIndexes = range(index, -1);\n                const downIndexes = range(index + 1, this.views.length);\n                const snapBeforeIndex = this.findFirstSnapIndex(upIndexes);\n                const snapAfterIndex = this.findFirstSnapIndex(downIndexes);\n                const snappedBefore = typeof snapBeforeIndex === 'number' &&\n                    !this.views[snapBeforeIndex].visible;\n                const snappedAfter = typeof snapAfterIndex === 'number' &&\n                    !this.views[snapAfterIndex].visible;\n                if (snappedBefore &&\n                    collapsesUp[index] &&\n                    (position > 0 || this.startSnappingEnabled)) {\n                    this.updateSash(sash, SashState.MINIMUM);\n                }\n                else if (snappedAfter &&\n                    collapsesDown[index] &&\n                    (position < this.contentSize || this.endSnappingEnabled)) {\n                    this.updateSash(sash, SashState.MAXIMUM);\n                }\n                else {\n                    this.updateSash(sash, SashState.DISABLED);\n                }\n            }\n            else if (min && !max) {\n                this.updateSash(sash, SashState.MINIMUM);\n            }\n            else if (!min && max) {\n                this.updateSash(sash, SashState.MAXIMUM);\n            }\n            else {\n                this.updateSash(sash, SashState.ENABLED);\n            }\n        }\n    }\n    updateSash(sash, state) {\n        toggleClass(sash.container, 'disabled', state === SashState.DISABLED);\n        toggleClass(sash.container, 'enabled', state === SashState.ENABLED);\n        toggleClass(sash.container, 'maximum', state === SashState.MAXIMUM);\n        toggleClass(sash.container, 'minimum', state === SashState.MINIMUM);\n    }\n    createViewContainer() {\n        const element = document.createElement('div');\n        element.className = 'view-container';\n        return element;\n    }\n    createSashContainer() {\n        const element = document.createElement('div');\n        element.className = 'sash-container';\n        return element;\n    }\n    createContainer() {\n        const element = document.createElement('div');\n        const orientationClassname = this._orientation === Orientation.HORIZONTAL\n            ? 'horizontal'\n            : 'vertical';\n        element.className = `split-view-container ${orientationClassname}`;\n        return element;\n    }\n    dispose() {\n        this._onDidSashEnd.dispose();\n        this._onDidAddView.dispose();\n        this._onDidRemoveView.dispose();\n        for (let i = 0; i < this.element.children.length; i++) {\n            if (this.element.children.item(i) === this.element) {\n                this.element.removeChild(this.element);\n                break;\n            }\n        }\n        this.element.remove();\n    }\n}\n","import { Splitview, Orientation, } from '../splitview/core/splitview';\nimport { CompositeDisposable } from '../lifecycle';\nimport { Emitter } from '../events';\nimport { addClasses, removeClasses } from '../dom';\nexport class Paneview extends CompositeDisposable {\n    get onDidAddView() {\n        return this.splitview.onDidAddView;\n    }\n    get onDidRemoveView() {\n        return this.splitview.onDidRemoveView;\n    }\n    get minimumSize() {\n        return this.splitview.minimumSize;\n    }\n    get maximumSize() {\n        return this.splitview.maximumSize;\n    }\n    get orientation() {\n        return this.splitview.orientation;\n    }\n    get size() {\n        return this.splitview.size;\n    }\n    get orthogonalSize() {\n        return this.splitview.orthogonalSize;\n    }\n    constructor(container, options) {\n        var _a;\n        super();\n        this.paneItems = [];\n        this.skipAnimation = false;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._orientation = (_a = options.orientation) !== null && _a !== void 0 ? _a : Orientation.VERTICAL;\n        this.element = document.createElement('div');\n        this.element.className = 'pane-container';\n        container.appendChild(this.element);\n        this.splitview = new Splitview(this.element, {\n            orientation: this._orientation,\n            proportionalLayout: false,\n            descriptor: options.descriptor,\n        });\n        // if we've added views from the descriptor we need to\n        // add the panes to our Pane array and setup animation\n        this.getPanes().forEach((pane) => {\n            const disposable = new CompositeDisposable(pane.onDidChangeExpansionState(() => {\n                this.setupAnimation();\n                this._onDidChange.fire(undefined);\n            }));\n            const paneItem = {\n                pane,\n                disposable: {\n                    dispose: () => {\n                        disposable.dispose();\n                    },\n                },\n            };\n            this.paneItems.push(paneItem);\n            pane.orthogonalSize = this.splitview.orthogonalSize;\n        });\n        this.addDisposables(this._onDidChange, this.splitview.onDidSashEnd(() => {\n            this._onDidChange.fire(undefined);\n        }), this.splitview.onDidAddView(() => {\n            this._onDidChange.fire();\n        }), this.splitview.onDidRemoveView(() => {\n            this._onDidChange.fire();\n        }));\n    }\n    addPane(pane, size, index = this.splitview.length, skipLayout = false) {\n        const disposable = pane.onDidChangeExpansionState(() => {\n            this.setupAnimation();\n            this._onDidChange.fire(undefined);\n        });\n        const paneItem = {\n            pane,\n            disposable: {\n                dispose: () => {\n                    disposable.dispose();\n                },\n            },\n        };\n        this.paneItems.splice(index, 0, paneItem);\n        pane.orthogonalSize = this.splitview.orthogonalSize;\n        this.splitview.addView(pane, size, index, skipLayout);\n    }\n    getViewSize(index) {\n        return this.splitview.getViewSize(index);\n    }\n    getPanes() {\n        return this.splitview.getViews();\n    }\n    removePane(index, options = { skipDispose: false }) {\n        const paneItem = this.paneItems.splice(index, 1)[0];\n        this.splitview.removeView(index);\n        if (!options.skipDispose) {\n            paneItem.disposable.dispose();\n            paneItem.pane.dispose();\n        }\n        return paneItem;\n    }\n    moveView(from, to) {\n        if (from === to) {\n            return;\n        }\n        const view = this.removePane(from, { skipDispose: true });\n        this.skipAnimation = true;\n        try {\n            this.addPane(view.pane, view.pane.size, to, false);\n        }\n        finally {\n            this.skipAnimation = false;\n        }\n    }\n    layout(size, orthogonalSize) {\n        this.splitview.layout(size, orthogonalSize);\n    }\n    setupAnimation() {\n        if (this.skipAnimation) {\n            return;\n        }\n        if (this.animationTimer) {\n            clearTimeout(this.animationTimer);\n            this.animationTimer = undefined;\n        }\n        addClasses(this.element, 'animated');\n        this.animationTimer = setTimeout(() => {\n            this.animationTimer = undefined;\n            removeClasses(this.element, 'animated');\n        }, 200);\n    }\n    dispose() {\n        super.dispose();\n        if (this.animationTimer) {\n            clearTimeout(this.animationTimer);\n            this.animationTimer = undefined;\n        }\n        this.paneItems.forEach((paneItem) => {\n            paneItem.disposable.dispose();\n            paneItem.pane.dispose();\n        });\n        this.paneItems = [];\n        this.splitview.dispose();\n        this.element.remove();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/grid\n *--------------------------------------------------------------------------------------------*/\nimport { Orientation, } from '../splitview/core/splitview';\nimport { Emitter } from '../events';\nexport class LeafNode {\n    get minimumWidth() {\n        return this.view.minimumWidth;\n    }\n    get maximumWidth() {\n        return this.view.maximumWidth;\n    }\n    get minimumHeight() {\n        return this.view.minimumHeight;\n    }\n    get maximumHeight() {\n        return this.view.maximumHeight;\n    }\n    get priority() {\n        return this.view.priority;\n    }\n    get snap() {\n        return this.view.snap;\n    }\n    get minimumSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumHeight\n            : this.minimumWidth;\n    }\n    get maximumSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumHeight\n            : this.maximumWidth;\n    }\n    get minimumOrthogonalSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumWidth\n            : this.minimumHeight;\n    }\n    get maximumOrthogonalSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumWidth\n            : this.maximumHeight;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    get size() {\n        return this._size;\n    }\n    get element() {\n        return this.view.element;\n    }\n    get width() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.orthogonalSize\n            : this.size;\n    }\n    get height() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.size\n            : this.orthogonalSize;\n    }\n    constructor(view, orientation, orthogonalSize, size = 0) {\n        this.view = view;\n        this.orientation = orientation;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._orthogonalSize = orthogonalSize;\n        this._size = size;\n        this._disposable = this.view.onDidChange((event) => {\n            if (event) {\n                this._onDidChange.fire({\n                    size: this.orientation === Orientation.VERTICAL\n                        ? event.width\n                        : event.height,\n                    orthogonalSize: this.orientation === Orientation.VERTICAL\n                        ? event.height\n                        : event.width,\n                });\n            }\n            else {\n                this._onDidChange.fire({});\n            }\n        });\n    }\n    setVisible(visible) {\n        if (this.view.setVisible) {\n            this.view.setVisible(visible);\n            this._onDidChange.fire({});\n        }\n    }\n    layout(size, orthogonalSize) {\n        this._size = size;\n        this._orthogonalSize = orthogonalSize;\n        this.view.layout(this.width, this.height);\n    }\n    dispose() {\n        this._onDidChange.dispose();\n        this._disposable.dispose();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/grid\n *--------------------------------------------------------------------------------------------*/\nimport { Splitview, Orientation, LayoutPriority, } from '../splitview/core/splitview';\nimport { Emitter, Event } from '../events';\nimport { LeafNode } from './leafNode';\nimport { CompositeDisposable, Disposable } from '../lifecycle';\nexport class BranchNode extends CompositeDisposable {\n    get width() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.size\n            : this.orthogonalSize;\n    }\n    get height() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.orthogonalSize\n            : this.size;\n    }\n    get minimumSize() {\n        return this.children.length === 0\n            ? 0\n            : Math.max(...this.children.map((c) => c.minimumOrthogonalSize));\n    }\n    get maximumSize() {\n        return Math.min(...this.children.map((c) => c.maximumOrthogonalSize));\n    }\n    get minimumOrthogonalSize() {\n        return this.splitview.minimumSize;\n    }\n    get maximumOrthogonalSize() {\n        return this.splitview.maximumSize;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    get size() {\n        return this._size;\n    }\n    get minimumWidth() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumOrthogonalSize\n            : this.minimumSize;\n    }\n    get minimumHeight() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumSize\n            : this.minimumOrthogonalSize;\n    }\n    get maximumWidth() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumOrthogonalSize\n            : this.maximumSize;\n    }\n    get maximumHeight() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumSize\n            : this.maximumOrthogonalSize;\n    }\n    get priority() {\n        if (this.children.length === 0) {\n            return LayoutPriority.Normal;\n        }\n        const priorities = this.children.map((c) => typeof c.priority === 'undefined'\n            ? LayoutPriority.Normal\n            : c.priority);\n        if (priorities.some((p) => p === LayoutPriority.High)) {\n            return LayoutPriority.High;\n        }\n        else if (priorities.some((p) => p === LayoutPriority.Low)) {\n            return LayoutPriority.Low;\n        }\n        return LayoutPriority.Normal;\n    }\n    constructor(orientation, proportionalLayout, styles, size, orthogonalSize, childDescriptors) {\n        super();\n        this.orientation = orientation;\n        this.proportionalLayout = proportionalLayout;\n        this.styles = styles;\n        this.children = [];\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._childrenDisposable = Disposable.NONE;\n        this._orthogonalSize = orthogonalSize;\n        this._size = size;\n        this.element = document.createElement('div');\n        this.element.className = 'branch-node';\n        if (!childDescriptors) {\n            this.splitview = new Splitview(this.element, {\n                orientation: this.orientation,\n                proportionalLayout,\n                styles,\n            });\n            this.splitview.layout(this.size, this.orthogonalSize);\n        }\n        else {\n            const descriptor = {\n                views: childDescriptors.map((childDescriptor) => {\n                    return {\n                        view: childDescriptor.node,\n                        size: childDescriptor.node.size,\n                        visible: childDescriptor.node instanceof LeafNode &&\n                            childDescriptor.visible !== undefined\n                            ? childDescriptor.visible\n                            : true,\n                    };\n                }),\n                size: this.size,\n            };\n            this.children = childDescriptors.map((c) => c.node);\n            this.splitview = new Splitview(this.element, {\n                orientation: this.orientation,\n                descriptor,\n                proportionalLayout,\n            });\n        }\n        this.addDisposables(this._onDidChange, this.splitview.onDidSashEnd(() => {\n            this._onDidChange.fire({});\n        }));\n        this.setupChildrenEvents();\n    }\n    setVisible(visible) {\n        for (const child of this.children) {\n            child.setVisible(visible);\n        }\n    }\n    isChildVisible(index) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        return this.splitview.isViewVisible(index);\n    }\n    setChildVisible(index, visible) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        if (this.splitview.isViewVisible(index) === visible) {\n            return;\n        }\n        this.splitview.setViewVisible(index, visible);\n    }\n    moveChild(from, to) {\n        if (from === to) {\n            return;\n        }\n        if (from < 0 || from >= this.children.length) {\n            throw new Error('Invalid from index');\n        }\n        if (from < to) {\n            to--;\n        }\n        this.splitview.moveView(from, to);\n        const child = this._removeChild(from);\n        this._addChild(child, to);\n    }\n    getChildSize(index) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        return this.splitview.getViewSize(index);\n    }\n    resizeChild(index, size) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        this.splitview.resizeView(index, size);\n    }\n    layout(size, orthogonalSize) {\n        this._size = orthogonalSize;\n        this._orthogonalSize = size;\n        this.splitview.layout(this.size, this.orthogonalSize);\n    }\n    addChild(node, size, index, skipLayout) {\n        if (index < 0 || index > this.children.length) {\n            throw new Error('Invalid index');\n        }\n        this.splitview.addView(node, size, index, skipLayout);\n        this._addChild(node, index);\n    }\n    getChildCachedVisibleSize(index) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        return this.splitview.getViewCachedVisibleSize(index);\n    }\n    removeChild(index, sizing) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        this.splitview.removeView(index, sizing);\n        this._removeChild(index);\n    }\n    _addChild(node, index) {\n        this.children.splice(index, 0, node);\n        this.setupChildrenEvents();\n    }\n    _removeChild(index) {\n        const [child] = this.children.splice(index, 1);\n        this.setupChildrenEvents();\n        return child;\n    }\n    setupChildrenEvents() {\n        this._childrenDisposable.dispose();\n        this._childrenDisposable = Event.any(...this.children.map((c) => c.onDidChange))((e) => {\n            /**\n             * indicate a change has occured to allows any re-rendering but don't bubble\n             * event because that was specific to this branch\n             */\n            this._onDidChange.fire({ size: e.orthogonalSize });\n        });\n    }\n    dispose() {\n        super.dispose();\n        this._childrenDisposable.dispose();\n        this.children.forEach((child) => child.dispose());\n        this.splitview.dispose();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/grid\n *--------------------------------------------------------------------------------------------*/\nimport { Orientation, Sizing, } from '../splitview/core/splitview';\nimport { tail } from '../array';\nimport { LeafNode } from './leafNode';\nimport { BranchNode } from './branchNode';\nimport { Emitter } from '../events';\nimport { MutableDisposable } from '../lifecycle';\nfunction findLeaf(candiateNode, last) {\n    if (candiateNode instanceof LeafNode) {\n        return candiateNode;\n    }\n    if (candiateNode instanceof BranchNode) {\n        return findLeaf(candiateNode.children[last ? candiateNode.children.length - 1 : 0], last);\n    }\n    throw new Error('invalid node');\n}\nfunction flipNode(node, size, orthogonalSize) {\n    if (node instanceof BranchNode) {\n        const result = new BranchNode(orthogonal(node.orientation), node.proportionalLayout, node.styles, size, orthogonalSize);\n        let totalSize = 0;\n        for (let i = node.children.length - 1; i >= 0; i--) {\n            const child = node.children[i];\n            const childSize = child instanceof BranchNode ? child.orthogonalSize : child.size;\n            let newSize = node.size === 0\n                ? 0\n                : Math.round((size * childSize) / node.size);\n            totalSize += newSize;\n            // The last view to add should adjust to rounding errors\n            if (i === 0) {\n                newSize += size - totalSize;\n            }\n            result.addChild(flipNode(child, orthogonalSize, newSize), newSize, 0, true);\n        }\n        return result;\n    }\n    else {\n        return new LeafNode(node.view, orthogonal(node.orientation), orthogonalSize);\n    }\n}\nexport function indexInParent(element) {\n    const parentElement = element.parentElement;\n    if (!parentElement) {\n        throw new Error('Invalid grid element');\n    }\n    let el = parentElement.firstElementChild;\n    let index = 0;\n    while (el !== element && el !== parentElement.lastElementChild && el) {\n        el = el.nextElementSibling;\n        index++;\n    }\n    return index;\n}\n/**\n * Find the grid location of a specific DOM element by traversing the parent\n * chain and finding each child index on the way.\n *\n * This will break as soon as DOM structures of the Splitview or Gridview change.\n */\nexport function getGridLocation(element) {\n    const parentElement = element.parentElement;\n    if (!parentElement) {\n        throw new Error('Invalid grid element');\n    }\n    if (/\\bgrid-view\\b/.test(parentElement.className)) {\n        return [];\n    }\n    const index = indexInParent(parentElement);\n    const ancestor = parentElement.parentElement.parentElement.parentElement;\n    return [...getGridLocation(ancestor), index];\n}\nexport function getRelativeLocation(rootOrientation, location, direction) {\n    const orientation = getLocationOrientation(rootOrientation, location);\n    const directionOrientation = getDirectionOrientation(direction);\n    if (orientation === directionOrientation) {\n        const [rest, _index] = tail(location);\n        let index = _index;\n        if (direction === 'right' || direction === 'bottom') {\n            index += 1;\n        }\n        return [...rest, index];\n    }\n    else {\n        const index = direction === 'right' || direction === 'bottom' ? 1 : 0;\n        return [...location, index];\n    }\n}\nexport function getDirectionOrientation(direction) {\n    return direction === 'top' || direction === 'bottom'\n        ? Orientation.VERTICAL\n        : Orientation.HORIZONTAL;\n}\nexport function getLocationOrientation(rootOrientation, location) {\n    return location.length % 2 === 0\n        ? orthogonal(rootOrientation)\n        : rootOrientation;\n}\nexport const orthogonal = (orientation) => orientation === Orientation.HORIZONTAL\n    ? Orientation.VERTICAL\n    : Orientation.HORIZONTAL;\nexport function isGridBranchNode(node) {\n    return !!node.children;\n}\nconst serializeBranchNode = (node, orientation) => {\n    const size = orientation === Orientation.VERTICAL ? node.box.width : node.box.height;\n    if (!isGridBranchNode(node)) {\n        if (typeof node.cachedVisibleSize === 'number') {\n            return {\n                type: 'leaf',\n                data: node.view.toJSON(),\n                size: node.cachedVisibleSize,\n                visible: false,\n            };\n        }\n        return { type: 'leaf', data: node.view.toJSON(), size };\n    }\n    return {\n        type: 'branch',\n        data: node.children.map((c) => serializeBranchNode(c, orthogonal(orientation))),\n        size,\n    };\n};\nexport class Gridview {\n    get length() {\n        return this._root ? this._root.children.length : 0;\n    }\n    serialize() {\n        const root = serializeBranchNode(this.getView(), this.orientation);\n        return {\n            root,\n            width: this.width,\n            height: this.height,\n            orientation: this.orientation,\n        };\n    }\n    dispose() {\n        this.disposable.dispose();\n        this._onDidChange.dispose();\n        this.root.dispose();\n        this.element.remove();\n    }\n    clear() {\n        const orientation = this.root.orientation;\n        this.root = new BranchNode(orientation, this.proportionalLayout, this.styles, this.root.size, this.root.orthogonalSize);\n    }\n    deserialize(json, deserializer) {\n        const orientation = json.orientation;\n        const height = orientation === Orientation.VERTICAL ? json.height : json.width;\n        this._deserialize(json.root, orientation, deserializer, height);\n    }\n    _deserialize(root, orientation, deserializer, orthogonalSize) {\n        this.root = this._deserializeNode(root, orientation, deserializer, orthogonalSize, true);\n    }\n    _deserializeNode(node, orientation, deserializer, orthogonalSize, isRoot = false) {\n        let result;\n        if (node.type === 'branch') {\n            const serializedChildren = node.data;\n            const children = serializedChildren.map((serializedChild) => {\n                return {\n                    node: this._deserializeNode(serializedChild, orthogonal(orientation), deserializer, node.size),\n                    visible: serializedChild.visible,\n                };\n            });\n            // HORIZONTAL => height=orthogonalsize width=size\n            // VERTICAL => height=size width=orthogonalsize\n            result = new BranchNode(orientation, this.proportionalLayout, this.styles, isRoot ? orthogonalSize : node.size, isRoot ? node.size : orthogonalSize, children);\n        }\n        else {\n            result = new LeafNode(deserializer.fromJSON(node), orientation, orthogonalSize, node.size);\n        }\n        return result;\n    }\n    get orientation() {\n        return this.root.orientation;\n    }\n    set orientation(orientation) {\n        if (this.root.orientation === orientation) {\n            return;\n        }\n        const { size, orthogonalSize } = this.root;\n        this.root = flipNode(this.root, orthogonalSize, size);\n        this.root.layout(size, orthogonalSize);\n    }\n    get root() {\n        return this._root;\n    }\n    set root(root) {\n        const oldRoot = this._root;\n        if (oldRoot) {\n            oldRoot.dispose();\n            this.element.removeChild(oldRoot.element);\n        }\n        this._root = root;\n        this.element.appendChild(this._root.element);\n        this.disposable.value = this._root.onDidChange((e) => {\n            this._onDidChange.fire(e);\n        });\n    }\n    /**\n     * If the root is orientated as a VERTICAL node then nest the existing root within a new HORIZIONTAL root node\n     * If the root is orientated as a HORIZONTAL node then nest the existing root within a new VERITCAL root node\n     */\n    insertOrthogonalSplitviewAtRoot() {\n        if (!this._root) {\n            return;\n        }\n        const oldRoot = this.root;\n        oldRoot.element.remove();\n        this._root = new BranchNode(orthogonal(oldRoot.orientation), this.proportionalLayout, this.styles, this.root.orthogonalSize, this.root.size);\n        if (oldRoot.children.length === 1) {\n            // can remove one level of redundant branching if there is only a single child\n            const childReference = oldRoot.children[0];\n            oldRoot.removeChild(0); // remove to prevent disposal when disposing of unwanted root\n            oldRoot.dispose();\n            this._root.addChild(childReference, Sizing.Distribute, 0);\n        }\n        else {\n            this._root.addChild(oldRoot, Sizing.Distribute, 0);\n        }\n        this.element.appendChild(this._root.element);\n        this.disposable.value = this._root.onDidChange((e) => {\n            this._onDidChange.fire(e);\n        });\n    }\n    next(location) {\n        return this.progmaticSelect(location);\n    }\n    previous(location) {\n        return this.progmaticSelect(location, true);\n    }\n    getView(location) {\n        const node = location ? this.getNode(location)[1] : this.root;\n        return this._getViews(node, this.orientation);\n    }\n    _getViews(node, orientation, cachedVisibleSize) {\n        const box = { height: node.height, width: node.width };\n        if (node instanceof LeafNode) {\n            return { box, view: node.view, cachedVisibleSize };\n        }\n        const children = [];\n        for (let i = 0; i < node.children.length; i++) {\n            const child = node.children[i];\n            const nodeCachedVisibleSize = node.getChildCachedVisibleSize(i);\n            children.push(this._getViews(child, orthogonal(orientation), nodeCachedVisibleSize));\n        }\n        return { box, children };\n    }\n    progmaticSelect(location, reverse = false) {\n        const [path, node] = this.getNode(location);\n        if (!(node instanceof LeafNode)) {\n            throw new Error('invalid location');\n        }\n        for (let i = path.length - 1; i > -1; i--) {\n            const n = path[i];\n            const l = location[i] || 0;\n            const canProgressInCurrentLevel = reverse\n                ? l - 1 > -1\n                : l + 1 < n.children.length;\n            if (canProgressInCurrentLevel) {\n                return findLeaf(n.children[reverse ? l - 1 : l + 1], reverse);\n            }\n        }\n        return findLeaf(this.root, reverse);\n    }\n    get width() {\n        return this.root.width;\n    }\n    get height() {\n        return this.root.height;\n    }\n    get minimumWidth() {\n        return this.root.minimumWidth;\n    }\n    get minimumHeight() {\n        return this.root.minimumHeight;\n    }\n    get maximumWidth() {\n        return this.root.maximumHeight;\n    }\n    get maximumHeight() {\n        return this.root.maximumHeight;\n    }\n    constructor(proportionalLayout, styles, orientation) {\n        this.proportionalLayout = proportionalLayout;\n        this.styles = styles;\n        this.disposable = new MutableDisposable();\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this.element = document.createElement('div');\n        this.element.className = 'grid-view';\n        this.root = new BranchNode(orientation, proportionalLayout, styles, 0, 0);\n    }\n    isViewVisible(location) {\n        const [rest, index] = tail(location);\n        const [, parent] = this.getNode(rest);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid from location');\n        }\n        return parent.isChildVisible(index);\n    }\n    setViewVisible(location, visible) {\n        const [rest, index] = tail(location);\n        const [, parent] = this.getNode(rest);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid from location');\n        }\n        parent.setChildVisible(index, visible);\n    }\n    moveView(parentLocation, from, to) {\n        const [, parent] = this.getNode(parentLocation);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid location');\n        }\n        parent.moveChild(from, to);\n    }\n    addView(view, size, location) {\n        const [rest, index] = tail(location);\n        const [pathToParent, parent] = this.getNode(rest);\n        if (parent instanceof BranchNode) {\n            const node = new LeafNode(view, orthogonal(parent.orientation), parent.orthogonalSize);\n            parent.addChild(node, size, index);\n        }\n        else {\n            const [grandParent, ..._] = [...pathToParent].reverse();\n            const [parentIndex, ...__] = [...rest].reverse();\n            let newSiblingSize = 0;\n            const newSiblingCachedVisibleSize = grandParent.getChildCachedVisibleSize(parentIndex);\n            if (typeof newSiblingCachedVisibleSize === 'number') {\n                newSiblingSize = Sizing.Invisible(newSiblingCachedVisibleSize);\n            }\n            grandParent.removeChild(parentIndex);\n            const newParent = new BranchNode(parent.orientation, this.proportionalLayout, this.styles, parent.size, parent.orthogonalSize);\n            grandParent.addChild(newParent, parent.size, parentIndex);\n            const newSibling = new LeafNode(parent.view, grandParent.orientation, parent.size);\n            newParent.addChild(newSibling, newSiblingSize, 0);\n            if (typeof size !== 'number' && size.type === 'split') {\n                size = { type: 'split', index: 0 };\n            }\n            const node = new LeafNode(view, grandParent.orientation, parent.size);\n            newParent.addChild(node, size, index);\n        }\n    }\n    remove(view, sizing) {\n        const location = getGridLocation(view.element);\n        return this.removeView(location, sizing);\n    }\n    removeView(location, sizing) {\n        const [rest, index] = tail(location);\n        const [pathToParent, parent] = this.getNode(rest);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid location');\n        }\n        const node = parent.children[index];\n        if (!(node instanceof LeafNode)) {\n            throw new Error('Invalid location');\n        }\n        parent.removeChild(index, sizing);\n        if (parent.children.length === 0) {\n            return node.view;\n        }\n        if (parent.children.length > 1) {\n            return node.view;\n        }\n        const sibling = parent.children[0];\n        if (pathToParent.length === 0) {\n            // parent is root\n            if (sibling instanceof LeafNode) {\n                return node.view;\n            }\n            // we must promote sibling to be the new root\n            parent.removeChild(0, sizing);\n            this.root = sibling;\n            return node.view;\n        }\n        const [grandParent, ..._] = [...pathToParent].reverse();\n        const [parentIndex, ...__] = [...rest].reverse();\n        const isSiblingVisible = parent.isChildVisible(0);\n        parent.removeChild(0, sizing);\n        const sizes = grandParent.children.map((_size, i) => grandParent.getChildSize(i));\n        grandParent.removeChild(parentIndex, sizing);\n        if (sibling instanceof BranchNode) {\n            sizes.splice(parentIndex, 1, ...sibling.children.map((c) => c.size));\n            for (let i = 0; i < sibling.children.length; i++) {\n                const child = sibling.children[i];\n                grandParent.addChild(child, child.size, parentIndex + i);\n            }\n        }\n        else {\n            const newSibling = new LeafNode(sibling.view, orthogonal(sibling.orientation), sibling.size);\n            const siblingSizing = isSiblingVisible\n                ? sibling.orthogonalSize\n                : Sizing.Invisible(sibling.orthogonalSize);\n            grandParent.addChild(newSibling, siblingSizing, parentIndex);\n        }\n        for (let i = 0; i < sizes.length; i++) {\n            grandParent.resizeChild(i, sizes[i]);\n        }\n        return node.view;\n    }\n    layout(width, height) {\n        const [size, orthogonalSize] = this.root.orientation === Orientation.HORIZONTAL\n            ? [height, width]\n            : [width, height];\n        this.root.layout(size, orthogonalSize);\n    }\n    getNode(location, node = this.root, path = []) {\n        if (location.length === 0) {\n            return [path, node];\n        }\n        if (!(node instanceof BranchNode)) {\n            throw new Error('Invalid location');\n        }\n        const [index, ...rest] = location;\n        if (index < 0 || index >= node.children.length) {\n            throw new Error('Invalid location');\n        }\n        const child = node.children[index];\n        path.push(node);\n        return this.getNode(rest, child, path);\n    }\n}\n","import { Emitter } from '../events';\nexport class SplitviewApi {\n    get minimumSize() {\n        return this.component.minimumSize;\n    }\n    get maximumSize() {\n        return this.component.maximumSize;\n    }\n    get height() {\n        return this.component.height;\n    }\n    get width() {\n        return this.component.width;\n    }\n    get length() {\n        return this.component.length;\n    }\n    get orientation() {\n        return this.component.orientation;\n    }\n    get panels() {\n        return this.component.panels;\n    }\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    get onDidAddView() {\n        return this.component.onDidAddView;\n    }\n    get onDidRemoveView() {\n        return this.component.onDidRemoveView;\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    updateOptions(options) {\n        this.component.updateOptions(options);\n    }\n    removePanel(panel, sizing) {\n        this.component.removePanel(panel, sizing);\n    }\n    focus() {\n        this.component.focus();\n    }\n    getPanel(id) {\n        return this.component.getPanel(id);\n    }\n    layout(width, height) {\n        return this.component.layout(width, height);\n    }\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    movePanel(from, to) {\n        this.component.movePanel(from, to);\n    }\n    fromJSON(data) {\n        this.component.fromJSON(data);\n    }\n    toJSON() {\n        return this.component.toJSON();\n    }\n    clear() {\n        this.component.clear();\n    }\n}\nexport class PaneviewApi {\n    get minimumSize() {\n        return this.component.minimumSize;\n    }\n    get maximumSize() {\n        return this.component.maximumSize;\n    }\n    get height() {\n        return this.component.height;\n    }\n    get width() {\n        return this.component.width;\n    }\n    get panels() {\n        return this.component.panels;\n    }\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    get onDidAddView() {\n        return this.component.onDidAddView;\n    }\n    get onDidRemoveView() {\n        return this.component.onDidRemoveView;\n    }\n    get onDidDrop() {\n        const emitter = new Emitter();\n        const disposable = this.component.onDidDrop((e) => {\n            emitter.fire(Object.assign(Object.assign({}, e), { api: this }));\n        });\n        emitter.dispose = () => {\n            disposable.dispose();\n            emitter.dispose();\n        };\n        return emitter.event;\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    removePanel(panel) {\n        this.component.removePanel(panel);\n    }\n    getPanel(id) {\n        return this.component.getPanel(id);\n    }\n    movePanel(from, to) {\n        this.component.movePanel(from, to);\n    }\n    focus() {\n        this.component.focus();\n    }\n    layout(width, height) {\n        this.component.layout(width, height);\n    }\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    fromJSON(data) {\n        this.component.fromJSON(data);\n    }\n    toJSON() {\n        return this.component.toJSON();\n    }\n    clear() {\n        this.component.clear();\n    }\n}\nexport class GridviewApi {\n    get minimumHeight() {\n        return this.component.minimumHeight;\n    }\n    get maximumHeight() {\n        return this.component.maximumHeight;\n    }\n    get minimumWidth() {\n        return this.component.minimumWidth;\n    }\n    get maximumWidth() {\n        return this.component.maximumWidth;\n    }\n    get width() {\n        return this.component.width;\n    }\n    get height() {\n        return this.component.height;\n    }\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    get onDidAddPanel() {\n        return this.component.onDidAddGroup;\n    }\n    get onDidRemovePanel() {\n        return this.component.onDidRemoveGroup;\n    }\n    get onDidActivePanelChange() {\n        return this.component.onDidActiveGroupChange;\n    }\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    get panels() {\n        return this.component.groups;\n    }\n    get orientation() {\n        return this.component.orientation;\n    }\n    set orientation(value) {\n        this.component.updateOptions({ orientation: value });\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    focus() {\n        this.component.focus();\n    }\n    layout(width, height, force = false) {\n        this.component.layout(width, height, force);\n    }\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    removePanel(panel, sizing) {\n        this.component.removePanel(panel, sizing);\n    }\n    movePanel(panel, options) {\n        this.component.movePanel(panel, options);\n    }\n    getPanel(id) {\n        return this.component.getPanel(id);\n    }\n    fromJSON(data) {\n        return this.component.fromJSON(data);\n    }\n    toJSON() {\n        return this.component.toJSON();\n    }\n    clear() {\n        this.component.clear();\n    }\n}\nexport class DockviewApi {\n    get id() {\n        return this.component.id;\n    }\n    get width() {\n        return this.component.width;\n    }\n    get height() {\n        return this.component.height;\n    }\n    get minimumHeight() {\n        return this.component.minimumHeight;\n    }\n    get maximumHeight() {\n        return this.component.maximumHeight;\n    }\n    get minimumWidth() {\n        return this.component.minimumWidth;\n    }\n    get maximumWidth() {\n        return this.component.maximumWidth;\n    }\n    get size() {\n        return this.component.size;\n    }\n    get totalPanels() {\n        return this.component.totalPanels;\n    }\n    get onDidActiveGroupChange() {\n        return this.component.onDidActiveGroupChange;\n    }\n    get onDidAddGroup() {\n        return this.component.onDidAddGroup;\n    }\n    get onDidRemoveGroup() {\n        return this.component.onDidRemoveGroup;\n    }\n    get onDidActivePanelChange() {\n        return this.component.onDidActivePanelChange;\n    }\n    get onDidAddPanel() {\n        return this.component.onDidAddPanel;\n    }\n    get onDidRemovePanel() {\n        return this.component.onDidRemovePanel;\n    }\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    get onDidDrop() {\n        return this.component.onDidDrop;\n    }\n    get panels() {\n        return this.component.panels;\n    }\n    get groups() {\n        return this.component.groups;\n    }\n    get activePanel() {\n        return this.component.activePanel;\n    }\n    get activeGroup() {\n        return this.component.activeGroup;\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    getTabHeight() {\n        return this.component.tabHeight;\n    }\n    setTabHeight(height) {\n        this.component.tabHeight = height;\n    }\n    focus() {\n        this.component.focus();\n    }\n    getPanel(id) {\n        return this.component.getGroupPanel(id);\n    }\n    layout(width, height, force = false) {\n        this.component.layout(width, height, force);\n    }\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    addGroup(options) {\n        return this.component.addGroup(options);\n    }\n    moveToNext(options) {\n        this.component.moveToNext(options);\n    }\n    moveToPrevious(options) {\n        this.component.moveToPrevious(options);\n    }\n    closeAllGroups() {\n        return this.component.closeAllGroups();\n    }\n    removeGroup(group) {\n        this.component.removeGroup(group);\n    }\n    getGroup(id) {\n        return this.component.getPanel(id);\n    }\n    fromJSON(data) {\n        this.component.fromJSON(data);\n    }\n    toJSON() {\n        return this.component.toJSON();\n    }\n    clear() {\n        this.component.clear();\n    }\n}\n","import { addDisposableListener } from '../events';\nimport { CompositeDisposable } from '../lifecycle';\nexport class DragAndDropObserver extends CompositeDisposable {\n    constructor(element, callbacks) {\n        super();\n        this.element = element;\n        this.callbacks = callbacks;\n        this.target = null;\n        this.registerListeners();\n    }\n    registerListeners() {\n        this.addDisposables(addDisposableListener(this.element, 'dragenter', (e) => {\n            this.target = e.target;\n            this.callbacks.onDragEnter(e);\n        }, true));\n        this.addDisposables(addDisposableListener(this.element, 'dragover', (e) => {\n            e.preventDefault(); // needed so that the drop event fires (https://stackoverflow.com/questions/21339924/drop-event-not-firing-in-chrome)\n            if (this.callbacks.onDragOver) {\n                this.callbacks.onDragOver(e);\n            }\n        }, true));\n        this.addDisposables(addDisposableListener(this.element, 'dragleave', (e) => {\n            if (this.target === e.target) {\n                this.target = null;\n                this.callbacks.onDragLeave(e);\n            }\n        }));\n        this.addDisposables(addDisposableListener(this.element, 'dragend', (e) => {\n            this.target = null;\n            this.callbacks.onDragEnd(e);\n        }));\n        this.addDisposables(addDisposableListener(this.element, 'drop', (e) => {\n            this.callbacks.onDrop(e);\n        }));\n    }\n}\n","import { toggleClass } from '../dom';\nimport { Emitter } from '../events';\nimport { CompositeDisposable } from '../lifecycle';\nimport { DragAndDropObserver } from './dnd';\nimport { clamp } from '../math';\nimport { isBooleanValue } from '../types';\nfunction numberOrFallback(maybeNumber, fallback) {\n    return typeof maybeNumber === 'number' ? maybeNumber : fallback;\n}\nexport function directionToPosition(direction) {\n    switch (direction) {\n        case 'above':\n            return 'top';\n        case 'below':\n            return 'bottom';\n        case 'left':\n            return 'left';\n        case 'right':\n            return 'right';\n        case 'within':\n            return 'center';\n        default:\n            throw new Error(`invalid direction '${direction}'`);\n    }\n}\nexport function positionToDirection(position) {\n    switch (position) {\n        case 'top':\n            return 'above';\n        case 'bottom':\n            return 'below';\n        case 'left':\n            return 'left';\n        case 'right':\n            return 'right';\n        case 'center':\n            return 'within';\n        default:\n            throw new Error(`invalid position '${position}'`);\n    }\n}\nexport class Droptarget extends CompositeDisposable {\n    get state() {\n        return this._state;\n    }\n    constructor(element, options) {\n        super();\n        this.element = element;\n        this.options = options;\n        this._onDrop = new Emitter();\n        this.onDrop = this._onDrop.event;\n        // use a set to take advantage of #<set>.has\n        const acceptedTargetZonesSet = new Set(this.options.acceptedTargetZones);\n        this.addDisposables(this._onDrop, new DragAndDropObserver(this.element, {\n            onDragEnter: () => undefined,\n            onDragOver: (e) => {\n                const width = this.element.clientWidth;\n                const height = this.element.clientHeight;\n                if (width === 0 || height === 0) {\n                    return; // avoid div!0\n                }\n                const rect = e.currentTarget.getBoundingClientRect();\n                const x = e.clientX - rect.left;\n                const y = e.clientY - rect.top;\n                const quadrant = this.calculateQuadrant(acceptedTargetZonesSet, x, y, width, height);\n                if (quadrant === null) {\n                    // no drop target should be displayed\n                    this.removeDropTarget();\n                    return;\n                }\n                if (isBooleanValue(this.options.canDisplayOverlay)) {\n                    if (!this.options.canDisplayOverlay) {\n                        return;\n                    }\n                }\n                else if (!this.options.canDisplayOverlay(e, quadrant)) {\n                    return;\n                }\n                if (!this.target) {\n                    this.target = document.createElement('div');\n                    this.target.className = 'drop-target-dropzone';\n                    this.overlay = document.createElement('div');\n                    this.overlay.className = 'drop-target-selection';\n                    this._state = 'center';\n                    this.target.appendChild(this.overlay);\n                    this.element.classList.add('drop-target');\n                    this.element.append(this.target);\n                }\n                if (this.options.acceptedTargetZones.length === 0) {\n                    return;\n                }\n                if (!this.target || !this.overlay) {\n                    return;\n                }\n                this.toggleClasses(quadrant, width, height);\n                this.setState(quadrant);\n            },\n            onDragLeave: () => {\n                this.removeDropTarget();\n            },\n            onDragEnd: () => {\n                this.removeDropTarget();\n            },\n            onDrop: (e) => {\n                e.preventDefault();\n                e.stopPropagation();\n                const state = this._state;\n                this.removeDropTarget();\n                if (state) {\n                    this._onDrop.fire({ position: state, nativeEvent: e });\n                }\n            },\n        }));\n    }\n    dispose() {\n        this.removeDropTarget();\n    }\n    toggleClasses(quadrant, width, height) {\n        var _a, _b, _c, _d;\n        if (!this.overlay) {\n            return;\n        }\n        const isSmallX = width < 100;\n        const isSmallY = height < 100;\n        const isLeft = quadrant === 'left';\n        const isRight = quadrant === 'right';\n        const isTop = quadrant === 'top';\n        const isBottom = quadrant === 'bottom';\n        const rightClass = !isSmallX && isRight;\n        const leftClass = !isSmallX && isLeft;\n        const topClass = !isSmallY && isTop;\n        const bottomClass = !isSmallY && isBottom;\n        let size = 0.5;\n        if (((_b = (_a = this.options.overlayModel) === null || _a === void 0 ? void 0 : _a.size) === null || _b === void 0 ? void 0 : _b.type) === 'percentage') {\n            size = clamp(this.options.overlayModel.size.value, 0, 100) / 100;\n        }\n        if (((_d = (_c = this.options.overlayModel) === null || _c === void 0 ? void 0 : _c.size) === null || _d === void 0 ? void 0 : _d.type) === 'pixels') {\n            if (rightClass || leftClass) {\n                size =\n                    clamp(0, this.options.overlayModel.size.value, width) /\n                        width;\n            }\n            if (topClass || bottomClass) {\n                size =\n                    clamp(0, this.options.overlayModel.size.value, height) /\n                        height;\n            }\n        }\n        const translate = (1 - size) / 2;\n        const scale = size;\n        let transform;\n        if (rightClass) {\n            transform = `translateX(${100 * translate}%) scaleX(${scale})`;\n        }\n        else if (leftClass) {\n            transform = `translateX(-${100 * translate}%) scaleX(${scale})`;\n        }\n        else if (topClass) {\n            transform = `translateY(-${100 * translate}%) scaleY(${scale})`;\n        }\n        else if (bottomClass) {\n            transform = `translateY(${100 * translate}%) scaleY(${scale})`;\n        }\n        else {\n            transform = '';\n        }\n        this.overlay.style.transform = transform;\n        toggleClass(this.overlay, 'small-right', isSmallX && isRight);\n        toggleClass(this.overlay, 'small-left', isSmallX && isLeft);\n        toggleClass(this.overlay, 'small-top', isSmallY && isTop);\n        toggleClass(this.overlay, 'small-bottom', isSmallY && isBottom);\n    }\n    setState(quadrant) {\n        switch (quadrant) {\n            case 'top':\n                this._state = 'top';\n                break;\n            case 'left':\n                this._state = 'left';\n                break;\n            case 'bottom':\n                this._state = 'bottom';\n                break;\n            case 'right':\n                this._state = 'right';\n                break;\n            case 'center':\n                this._state = 'center';\n                break;\n        }\n    }\n    calculateQuadrant(overlayType, x, y, width, height) {\n        var _a, _b, _c, _d, _e, _f;\n        const isPercentage = ((_a = this.options.overlayModel) === null || _a === void 0 ? void 0 : _a.activationSize) === undefined ||\n            ((_c = (_b = this.options.overlayModel) === null || _b === void 0 ? void 0 : _b.activationSize) === null || _c === void 0 ? void 0 : _c.type) === 'percentage';\n        const value = numberOrFallback((_f = (_e = (_d = this.options) === null || _d === void 0 ? void 0 : _d.overlayModel) === null || _e === void 0 ? void 0 : _e.activationSize) === null || _f === void 0 ? void 0 : _f.value, 20);\n        if (isPercentage) {\n            return calculateQuadrantAsPercentage(overlayType, x, y, width, height, value);\n        }\n        return calculateQuadrantAsPixels(overlayType, x, y, width, height, value);\n    }\n    removeDropTarget() {\n        if (this.target) {\n            this._state = undefined;\n            this.element.removeChild(this.target);\n            this.target = undefined;\n            this.overlay = undefined;\n            this.element.classList.remove('drop-target');\n        }\n    }\n}\nexport function calculateQuadrantAsPercentage(overlayType, x, y, width, height, threshold) {\n    const xp = (100 * x) / width;\n    const yp = (100 * y) / height;\n    if (overlayType.has('left') && xp < threshold) {\n        return 'left';\n    }\n    if (overlayType.has('right') && xp > 100 - threshold) {\n        return 'right';\n    }\n    if (overlayType.has('top') && yp < threshold) {\n        return 'top';\n    }\n    if (overlayType.has('bottom') && yp > 100 - threshold) {\n        return 'bottom';\n    }\n    if (!overlayType.has('center')) {\n        return null;\n    }\n    return 'center';\n}\nexport function calculateQuadrantAsPixels(overlayType, x, y, width, height, threshold) {\n    if (overlayType.has('left') && x < threshold) {\n        return 'left';\n    }\n    if (overlayType.has('right') && x > width - threshold) {\n        return 'right';\n    }\n    if (overlayType.has('top') && y < threshold) {\n        return 'top';\n    }\n    if (overlayType.has('bottom') && y > height - threshold) {\n        return 'bottom';\n    }\n    if (!overlayType.has('center')) {\n        return null;\n    }\n    return 'center';\n}\n","export function isBooleanValue(value) {\n    return typeof value === 'boolean';\n}\n","import { CompositeDisposable, MutableDisposable, } from '../../lifecycle';\nimport { Emitter } from '../../events';\nimport { trackFocus } from '../../dom';\nexport class ContentContainer extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor() {\n        super();\n        this.disposable = new MutableDisposable();\n        this._onDidFocus = new Emitter();\n        this.onDidFocus = this._onDidFocus.event;\n        this._onDidBlur = new Emitter();\n        this.onDidBlur = this._onDidBlur.event;\n        this._element = document.createElement('div');\n        this._element.className = 'content-container';\n        this._element.tabIndex = -1;\n        this.addDisposables(this._onDidFocus, this._onDidBlur);\n        // for hosted containers\n        // 1) register a drop target on the host\n        // 2) register window dragStart events to disable pointer events\n        // 3) register dragEnd events\n        // 4) register mouseMove events (if no buttons are present we take this as a dragEnd event)\n    }\n    show() {\n        this.element.style.display = '';\n    }\n    hide() {\n        this.element.style.display = 'none';\n    }\n    openPanel(panel) {\n        var _a;\n        if (this.panel === panel) {\n            return;\n        }\n        if (this.panel) {\n            if ((_a = this.panel.view) === null || _a === void 0 ? void 0 : _a.content) {\n                this._element.removeChild(this.panel.view.content.element);\n            }\n            this.panel = undefined;\n        }\n        this.panel = panel;\n        const disposable = new CompositeDisposable();\n        if (this.panel.view) {\n            const _onDidFocus = this.panel.view.content.onDidFocus;\n            const _onDidBlur = this.panel.view.content.onDidBlur;\n            const { onDidFocus, onDidBlur } = trackFocus(this._element);\n            disposable.addDisposables(onDidFocus(() => this._onDidFocus.fire()), onDidBlur(() => this._onDidBlur.fire()));\n            if (_onDidFocus) {\n                disposable.addDisposables(_onDidFocus(() => this._onDidFocus.fire()));\n            }\n            if (_onDidBlur) {\n                disposable.addDisposables(_onDidBlur(() => this._onDidBlur.fire()));\n            }\n            this._element.appendChild(this.panel.view.content.element);\n        }\n        this.disposable.value = disposable;\n    }\n    layout(_width, _height) {\n        // noop\n    }\n    closePanel() {\n        var _a, _b, _c;\n        if ((_c = (_b = (_a = this.panel) === null || _a === void 0 ? void 0 : _a.view) === null || _b === void 0 ? void 0 : _b.content) === null || _c === void 0 ? void 0 : _c.element) {\n            this._element.removeChild(this.panel.view.content.element);\n            this.panel = undefined;\n        }\n    }\n    dispose() {\n        this.disposable.dispose();\n        super.dispose();\n    }\n}\n","export var DockviewDropTargets;\n(function (DockviewDropTargets) {\n    DockviewDropTargets[DockviewDropTargets[\"Tab\"] = 0] = \"Tab\";\n    DockviewDropTargets[DockviewDropTargets[\"Panel\"] = 1] = \"Panel\";\n    DockviewDropTargets[DockviewDropTargets[\"TabContainer\"] = 2] = \"TabContainer\";\n    DockviewDropTargets[DockviewDropTargets[\"Edge\"] = 3] = \"Edge\";\n})(DockviewDropTargets || (DockviewDropTargets = {}));\n","import { getElementsByTagName } from '../dom';\nimport { addDisposableListener, Emitter } from '../events';\nimport { CompositeDisposable, MutableDisposable, } from '../lifecycle';\nexport class DragHandler extends CompositeDisposable {\n    constructor(el) {\n        super();\n        this.el = el;\n        this.disposable = new MutableDisposable();\n        this._onDragStart = new Emitter();\n        this.onDragStart = this._onDragStart.event;\n        this.iframes = [];\n        this.configure();\n    }\n    configure() {\n        this.addDisposables(this._onDragStart, addDisposableListener(this.el, 'dragstart', (event) => {\n            this.iframes = [\n                ...getElementsByTagName('iframe'),\n                ...getElementsByTagName('webview'),\n            ];\n            for (const iframe of this.iframes) {\n                iframe.style.pointerEvents = 'none';\n            }\n            this.el.classList.add('dv-dragged');\n            setTimeout(() => this.el.classList.remove('dv-dragged'), 0);\n            this.disposable.value = this.getData(event.dataTransfer);\n            if (event.dataTransfer) {\n                event.dataTransfer.effectAllowed = 'move';\n            }\n        }), addDisposableListener(this.el, 'dragend', () => {\n            for (const iframe of this.iframes) {\n                iframe.style.pointerEvents = 'auto';\n            }\n            this.iframes = [];\n            this.disposable.dispose();\n        }));\n    }\n}\n","import { addDisposableListener, Emitter } from '../events';\nimport { CompositeDisposable } from '../lifecycle';\nimport { getPanelData, LocalSelectionTransfer, PanelTransfer, } from '../dnd/dataTransfer';\nimport { toggleClass } from '../dom';\nimport { Droptarget } from '../dnd/droptarget';\nimport { DockviewDropTargets } from './dnd';\nimport { DragHandler } from '../dnd/abstractDragHandler';\nexport class Tab extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor(panelId, accessor, group) {\n        super();\n        this.panelId = panelId;\n        this.accessor = accessor;\n        this.group = group;\n        this._onChanged = new Emitter();\n        this.onChanged = this._onChanged.event;\n        this._onDropped = new Emitter();\n        this.onDrop = this._onDropped.event;\n        this.addDisposables(this._onChanged, this._onDropped);\n        this._element = document.createElement('div');\n        this._element.className = 'tab';\n        this._element.tabIndex = 0;\n        this._element.draggable = true;\n        toggleClass(this.element, 'inactive-tab', true);\n        this.addDisposables(new (class Handler extends DragHandler {\n            constructor() {\n                super(...arguments);\n                this.panelTransfer = LocalSelectionTransfer.getInstance();\n            }\n            getData() {\n                this.panelTransfer.setData([new PanelTransfer(accessor.id, group.id, panelId)], PanelTransfer.prototype);\n                return {\n                    dispose: () => {\n                        this.panelTransfer.clearData(PanelTransfer.prototype);\n                    },\n                };\n            }\n            dispose() {\n                //\n            }\n        })(this._element));\n        this.addDisposables(addDisposableListener(this._element, 'mousedown', (event) => {\n            if (event.defaultPrevented) {\n                return;\n            }\n            /**\n             * TODO: alternative to stopPropagation\n             *\n             * I need to stop the event propagation here since otherwise it'll be intercepted by event handlers\n             * on the tabs-container. I cannot use event.preventDefault() since I need the on DragStart event to occur\n             */\n            event.stopPropagation();\n            this._onChanged.fire(event);\n        }));\n        this.droptarget = new Droptarget(this._element, {\n            acceptedTargetZones: ['center'],\n            canDisplayOverlay: (event, position) => {\n                if (this.group.locked) {\n                    return false;\n                }\n                const data = getPanelData();\n                if (data && this.accessor.id === data.viewId) {\n                    if (data.panelId === null &&\n                        data.groupId === this.group.id) {\n                        // don't allow group move to drop on self\n                        return false;\n                    }\n                    return this.panelId !== data.panelId;\n                }\n                return this.group.model.canDisplayOverlay(event, position, DockviewDropTargets.Tab);\n            },\n        });\n        this.addDisposables(this.droptarget.onDrop((event) => {\n            this._onDropped.fire(event);\n        }));\n    }\n    setActive(isActive) {\n        toggleClass(this.element, 'active-tab', isActive);\n        toggleClass(this.element, 'inactive-tab', !isActive);\n    }\n    setContent(part) {\n        if (this.content) {\n            this._element.removeChild(this.content.element);\n        }\n        this.content = part;\n        this._element.appendChild(this.content.element);\n    }\n    dispose() {\n        super.dispose();\n        this.droptarget.dispose();\n    }\n}\n","import { DragHandler } from './abstractDragHandler';\nimport { LocalSelectionTransfer, PanelTransfer } from './dataTransfer';\nimport { addGhostImage } from './ghost';\nexport class GroupDragHandler extends DragHandler {\n    constructor(element, accessorId, group) {\n        super(element);\n        this.accessorId = accessorId;\n        this.group = group;\n        this.panelTransfer = LocalSelectionTransfer.getInstance();\n    }\n    getData(dataTransfer) {\n        this.panelTransfer.setData([new PanelTransfer(this.accessorId, this.group.id, null)], PanelTransfer.prototype);\n        const style = window.getComputedStyle(this.el);\n        const bgColor = style.getPropertyValue('--dv-activegroup-visiblepanel-tab-background-color');\n        const color = style.getPropertyValue('--dv-activegroup-visiblepanel-tab-color');\n        if (dataTransfer) {\n            const ghostElement = document.createElement('div');\n            ghostElement.style.backgroundColor = bgColor;\n            ghostElement.style.color = color;\n            ghostElement.style.padding = '2px 8px';\n            ghostElement.style.height = '24px';\n            ghostElement.style.fontSize = '11px';\n            ghostElement.style.lineHeight = '20px';\n            ghostElement.style.borderRadius = '12px';\n            ghostElement.style.position = 'absolute';\n            ghostElement.textContent = `Multiple Panels (${this.group.size})`;\n            addGhostImage(dataTransfer, ghostElement);\n        }\n        return {\n            dispose: () => {\n                this.panelTransfer.clearData(PanelTransfer.prototype);\n            },\n        };\n    }\n    dispose() {\n        //\n    }\n}\n","import { addClasses } from '../dom';\nexport function addGhostImage(dataTransfer, ghostElement) {\n    // class dockview provides to force ghost image to be drawn on a different layer and prevent weird rendering issues\n    addClasses(ghostElement, 'dv-dragged');\n    document.body.appendChild(ghostElement);\n    dataTransfer.setDragImage(ghostElement, 0, 0);\n    setTimeout(() => {\n        ghostElement.remove();\n    }, 0);\n}\n","import { last } from '../../array';\nimport { getPanelData } from '../../dnd/dataTransfer';\nimport { Droptarget } from '../../dnd/droptarget';\nimport { GroupDragHandler } from '../../dnd/groupDragHandler';\nimport { addDisposableListener, Emitter } from '../../events';\nimport { CompositeDisposable } from '../../lifecycle';\nimport { DockviewDropTargets } from '../dnd';\nexport class VoidContainer extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor(accessor, group) {\n        super();\n        this.accessor = accessor;\n        this.group = group;\n        this._onDrop = new Emitter();\n        this.onDrop = this._onDrop.event;\n        this._element = document.createElement('div');\n        this._element.className = 'void-container';\n        this._element.tabIndex = 0;\n        this._element.draggable = true;\n        this.addDisposables(this._onDrop, addDisposableListener(this._element, 'click', () => {\n            this.accessor.doSetGroupActive(this.group);\n        }));\n        const handler = new GroupDragHandler(this._element, accessor.id, group);\n        this.voidDropTarget = new Droptarget(this._element, {\n            acceptedTargetZones: ['center'],\n            canDisplayOverlay: (event, position) => {\n                var _a;\n                const data = getPanelData();\n                if (data && this.accessor.id === data.viewId) {\n                    if (data.panelId === null &&\n                        data.groupId === this.group.id) {\n                        // don't allow group move to drop on self\n                        return false;\n                    }\n                    // don't show the overlay if the tab being dragged is the last panel of this group\n                    return ((_a = last(this.group.panels)) === null || _a === void 0 ? void 0 : _a.id) !== data.panelId;\n                }\n                return group.model.canDisplayOverlay(event, position, DockviewDropTargets.Panel);\n            },\n        });\n        this.addDisposables(handler, this.voidDropTarget.onDrop((event) => {\n            this._onDrop.fire(event);\n        }), this.voidDropTarget);\n    }\n}\n","import { CompositeDisposable, } from '../../lifecycle';\nimport { addDisposableListener, Emitter } from '../../events';\nimport { Tab } from '../tab';\nimport { VoidContainer } from './voidContainer';\nimport { toggleClass } from '../../dom';\nexport class TabsContainer extends CompositeDisposable {\n    get panels() {\n        return this.tabs.map((_) => _.value.panelId);\n    }\n    get size() {\n        return this.tabs.length;\n    }\n    get height() {\n        return this._height;\n    }\n    set height(value) {\n        this._height = value;\n        if (typeof value !== 'number') {\n            this.element.style.removeProperty('--dv-tabs-and-actions-container-height');\n        }\n        else {\n            this.element.style.setProperty('--dv-tabs-and-actions-container-height', `${value}px`);\n        }\n    }\n    get hidden() {\n        return this._hidden;\n    }\n    set hidden(value) {\n        this._hidden = value;\n        this.element.style.display = value ? 'none' : '';\n    }\n    show() {\n        if (!this.hidden) {\n            this.element.style.display = '';\n        }\n    }\n    hide() {\n        this._element.style.display = 'none';\n    }\n    setActionElement(element) {\n        if (this.actions === element) {\n            return;\n        }\n        if (this.actions) {\n            this.actions.remove();\n            this.actions = undefined;\n        }\n        if (element) {\n            this.actionContainer.appendChild(element);\n            this.actions = element;\n        }\n    }\n    get element() {\n        return this._element;\n    }\n    isActive(tab) {\n        return (this.selectedIndex > -1 &&\n            this.tabs[this.selectedIndex].value === tab);\n    }\n    at(index) {\n        var _a;\n        return (_a = this.tabs[index]) === null || _a === void 0 ? void 0 : _a.value;\n    }\n    indexOf(id) {\n        return this.tabs.findIndex((tab) => tab.value.panelId === id);\n    }\n    constructor(accessor, group) {\n        super();\n        this.accessor = accessor;\n        this.group = group;\n        this.tabs = [];\n        this.selectedIndex = -1;\n        this._hidden = false;\n        this._onDrop = new Emitter();\n        this.onDrop = this._onDrop.event;\n        this.addDisposables(this._onDrop);\n        this._element = document.createElement('div');\n        this._element.className = 'tabs-and-actions-container';\n        this.height = accessor.options.tabHeight;\n        toggleClass(this._element, 'dv-full-width-single-tab', this.accessor.options.singleTabMode === 'fullwidth');\n        this.addDisposables(this.accessor.onDidAddPanel((e) => {\n            if (e.api.group === this.group) {\n                toggleClass(this._element, 'dv-single-tab', this.size === 1);\n            }\n        }), this.accessor.onDidRemovePanel((e) => {\n            if (e.api.group === this.group) {\n                toggleClass(this._element, 'dv-single-tab', this.size === 1);\n            }\n        }));\n        this.actionContainer = document.createElement('div');\n        this.actionContainer.className = 'action-container';\n        this.tabContainer = document.createElement('div');\n        this.tabContainer.className = 'tabs-container';\n        this.voidContainer = new VoidContainer(this.accessor, this.group);\n        this._element.appendChild(this.tabContainer);\n        this._element.appendChild(this.voidContainer.element);\n        this._element.appendChild(this.actionContainer);\n        this.addDisposables(this.voidContainer, this.voidContainer.onDrop((event) => {\n            this._onDrop.fire({\n                event: event.nativeEvent,\n                index: this.tabs.length,\n            });\n        }), addDisposableListener(this.tabContainer, 'mousedown', (event) => {\n            if (event.defaultPrevented) {\n                return;\n            }\n            const isLeftClick = event.button === 0;\n            if (isLeftClick) {\n                this.accessor.doSetGroupActive(this.group);\n            }\n        }));\n    }\n    setActive(_isGroupActive) {\n        // noop\n    }\n    addTab(tab, index = this.tabs.length) {\n        if (index < 0 || index > this.tabs.length) {\n            throw new Error('invalid location');\n        }\n        this.tabContainer.insertBefore(tab.value.element, this.tabContainer.children[index]);\n        this.tabs = [\n            ...this.tabs.slice(0, index),\n            tab,\n            ...this.tabs.slice(index),\n        ];\n        if (this.selectedIndex < 0) {\n            this.selectedIndex = index;\n        }\n    }\n    delete(id) {\n        const index = this.tabs.findIndex((tab) => tab.value.panelId === id);\n        const tabToRemove = this.tabs.splice(index, 1)[0];\n        const { value, disposable } = tabToRemove;\n        disposable.dispose();\n        value.element.remove();\n    }\n    setActivePanel(panel) {\n        this.tabs.forEach((tab) => {\n            const isActivePanel = panel.id === tab.value.panelId;\n            tab.value.setActive(isActivePanel);\n        });\n    }\n    openPanel(panel, index = this.tabs.length) {\n        var _a;\n        if (this.tabs.find((tab) => tab.value.panelId === panel.id)) {\n            return;\n        }\n        const tabToAdd = new Tab(panel.id, this.accessor, this.group);\n        if (!((_a = panel.view) === null || _a === void 0 ? void 0 : _a.tab)) {\n            throw new Error('invalid header component');\n        }\n        tabToAdd.setContent(panel.view.tab);\n        const disposable = CompositeDisposable.from(tabToAdd.onChanged((event) => {\n            var _a;\n            const alreadyFocused = panel.id === ((_a = this.group.model.activePanel) === null || _a === void 0 ? void 0 : _a.id) &&\n                this.group.model.isContentFocused;\n            const isLeftClick = event.button === 0;\n            if (!isLeftClick || event.defaultPrevented) {\n                return;\n            }\n            this.group.model.openPanel(panel, {\n                skipFocus: alreadyFocused,\n            });\n        }), tabToAdd.onDrop((event) => {\n            this._onDrop.fire({\n                event: event.nativeEvent,\n                index: this.tabs.findIndex((x) => x.value === tabToAdd),\n            });\n        }));\n        const value = { value: tabToAdd, disposable };\n        this.addTab(value, index);\n    }\n    closePanel(panel) {\n        this.delete(panel.id);\n    }\n    dispose() {\n        super.dispose();\n        this.tabs.forEach((tab) => {\n            tab.disposable.dispose();\n        });\n        this.tabs = [];\n    }\n}\n","import { DockviewApi } from '../api/component.api';\nimport { getPanelData } from '../dnd/dataTransfer';\nimport { Droptarget } from '../dnd/droptarget';\nimport { isAncestor, toggleClass } from '../dom';\nimport { addDisposableListener, Emitter } from '../events';\nimport { CompositeDisposable } from '../lifecycle';\nimport { ContentContainer } from './panel/content';\nimport { TabsContainer } from './titlebar/tabsContainer';\nimport { DockviewDropTargets } from './dnd';\nexport class Groupview extends CompositeDisposable {\n    get element() {\n        throw new Error('not supported');\n    }\n    get activePanel() {\n        return this._activePanel;\n    }\n    get locked() {\n        return this._locked;\n    }\n    set locked(value) {\n        this._locked = value;\n        toggleClass(this.container, 'locked-groupview', value);\n    }\n    get isActive() {\n        return this._isGroupActive;\n    }\n    get panels() {\n        return this._panels;\n    }\n    get size() {\n        return this._panels.length;\n    }\n    get isEmpty() {\n        return this._panels.length === 0;\n    }\n    get minimumHeight() {\n        return 100;\n    }\n    get maximumHeight() {\n        return Number.MAX_SAFE_INTEGER;\n    }\n    get minimumWidth() {\n        return 100;\n    }\n    get maximumWidth() {\n        return Number.MAX_SAFE_INTEGER;\n    }\n    get hasWatermark() {\n        return !!(this.watermark && this.container.contains(this.watermark.element));\n    }\n    get header() {\n        return this.tabsContainer;\n    }\n    get isContentFocused() {\n        if (!document.activeElement) {\n            return false;\n        }\n        return isAncestor(document.activeElement, this.contentContainer.element);\n    }\n    constructor(container, accessor, id, options, groupPanel) {\n        super();\n        this.container = container;\n        this.accessor = accessor;\n        this.id = id;\n        this.options = options;\n        this.groupPanel = groupPanel;\n        this._isGroupActive = false;\n        this._locked = false;\n        this.mostRecentlyUsed = [];\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._width = 0;\n        this._height = 0;\n        this._panels = [];\n        this._onMove = new Emitter();\n        this.onMove = this._onMove.event;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onDidAddPanel = new Emitter();\n        this.onDidAddPanel = this._onDidAddPanel.event;\n        this._onDidRemovePanel = new Emitter();\n        this.onDidRemovePanel = this._onDidRemovePanel.event;\n        this._onDidActivePanelChange = new Emitter();\n        this.onDidActivePanelChange = this._onDidActivePanelChange.event;\n        this.container.classList.add('groupview');\n        this.tabsContainer = new TabsContainer(this.accessor, this.groupPanel);\n        this.contentContainer = new ContentContainer();\n        this.dropTarget = new Droptarget(this.contentContainer.element, {\n            acceptedTargetZones: ['top', 'bottom', 'left', 'right', 'center'],\n            canDisplayOverlay: (event, position) => {\n                if (this.locked && position === 'center') {\n                    return false;\n                }\n                const data = getPanelData();\n                if (data && data.viewId === this.accessor.id) {\n                    if (data.groupId === this.id) {\n                        if (position === 'center') {\n                            // don't allow to drop on self for center position\n                            return false;\n                        }\n                        if (data.panelId === null) {\n                            // don't allow group move to drop anywhere on self\n                            return false;\n                        }\n                    }\n                    const groupHasOnePanelAndIsActiveDragElement = this._panels.length === 1 && data.groupId === this.id;\n                    return !groupHasOnePanelAndIsActiveDragElement;\n                }\n                return this.canDisplayOverlay(event, position, DockviewDropTargets.Panel);\n            },\n        });\n        container.append(this.tabsContainer.element, this.contentContainer.element);\n        this.header.hidden = !!options.hideHeader;\n        this.locked = !!options.locked;\n        this.addDisposables(this._onMove, this._onDidChange, this._onDidDrop, this._onDidAddPanel, this._onDidRemovePanel, this._onDidActivePanelChange, this.tabsContainer.onDrop((event) => {\n            this.handleDropEvent(event.event, 'center', event.index);\n        }), this.contentContainer.onDidFocus(() => {\n            this.accessor.doSetGroupActive(this.groupPanel, true);\n        }), this.contentContainer.onDidBlur(() => {\n            // noop\n        }), this.dropTarget.onDrop((event) => {\n            this.handleDropEvent(event.nativeEvent, event.position);\n        }));\n    }\n    initialize() {\n        var _a, _b;\n        if ((_a = this.options) === null || _a === void 0 ? void 0 : _a.panels) {\n            this.options.panels.forEach((panel) => {\n                this.doAddPanel(panel);\n            });\n        }\n        if ((_b = this.options) === null || _b === void 0 ? void 0 : _b.activePanel) {\n            this.openPanel(this.options.activePanel);\n        }\n        // must be run after the constructor otherwise this.parent may not be\n        // correctly initialized\n        this.setActive(this.isActive, true, true);\n        this.updateContainer();\n        if (this.accessor.options.createGroupControlElement) {\n            this._control = this.accessor.options.createGroupControlElement(this.groupPanel);\n            this.addDisposables(this._control);\n            this._control.init({\n                containerApi: new DockviewApi(this.accessor),\n                api: this.groupPanel.api,\n            });\n            this.tabsContainer.setActionElement(this._control.element);\n        }\n    }\n    indexOf(panel) {\n        return this.tabsContainer.indexOf(panel.id);\n    }\n    toJSON() {\n        var _a;\n        const result = {\n            views: this.tabsContainer.panels,\n            activeView: (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.id,\n            id: this.id,\n        };\n        if (this.locked) {\n            result.locked = true;\n        }\n        if (this.header.hidden) {\n            result.hideHeader = true;\n        }\n        return result;\n    }\n    moveToNext(options) {\n        if (!options) {\n            options = {};\n        }\n        if (!options.panel) {\n            options.panel = this.activePanel;\n        }\n        const index = options.panel ? this.panels.indexOf(options.panel) : -1;\n        let normalizedIndex;\n        if (index < this.panels.length - 1) {\n            normalizedIndex = index + 1;\n        }\n        else if (!options.suppressRoll) {\n            normalizedIndex = 0;\n        }\n        else {\n            return;\n        }\n        this.openPanel(this.panels[normalizedIndex]);\n    }\n    moveToPrevious(options) {\n        if (!options) {\n            options = {};\n        }\n        if (!options.panel) {\n            options.panel = this.activePanel;\n        }\n        if (!options.panel) {\n            return;\n        }\n        const index = this.panels.indexOf(options.panel);\n        let normalizedIndex;\n        if (index > 0) {\n            normalizedIndex = index - 1;\n        }\n        else if (!options.suppressRoll) {\n            normalizedIndex = this.panels.length - 1;\n        }\n        else {\n            return;\n        }\n        this.openPanel(this.panels[normalizedIndex]);\n    }\n    containsPanel(panel) {\n        return this.panels.includes(panel);\n    }\n    init(_params) {\n        //noop\n    }\n    update(_params) {\n        //noop\n    }\n    focus() {\n        var _a;\n        (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    openPanel(panel, options = {}) {\n        if (typeof options.index !== 'number' ||\n            options.index > this.panels.length) {\n            options.index = this.panels.length;\n        }\n        const skipSetPanelActive = !!options.skipSetPanelActive;\n        const skipSetGroupActive = !!options.skipSetGroupActive;\n        // ensure the group is updated before we fire any events\n        panel.updateParentGroup(this.groupPanel, true);\n        if (this._activePanel === panel) {\n            if (!skipSetGroupActive) {\n                this.accessor.doSetGroupActive(this.groupPanel);\n            }\n            return;\n        }\n        this.doAddPanel(panel, options.index, skipSetPanelActive);\n        if (!skipSetPanelActive) {\n            this.doSetActivePanel(panel);\n        }\n        if (!skipSetGroupActive) {\n            this.accessor.doSetGroupActive(this.groupPanel, !!options.skipFocus);\n        }\n        this.updateContainer();\n    }\n    removePanel(groupItemOrId) {\n        const id = typeof groupItemOrId === 'string'\n            ? groupItemOrId\n            : groupItemOrId.id;\n        const panelToRemove = this._panels.find((panel) => panel.id === id);\n        if (!panelToRemove) {\n            throw new Error('invalid operation');\n        }\n        return this._removePanel(panelToRemove);\n    }\n    closeAllPanels() {\n        if (this.panels.length > 0) {\n            // take a copy since we will be edting the array as we iterate through\n            const arrPanelCpy = [...this.panels];\n            for (const panel of arrPanelCpy) {\n                this.doClose(panel);\n            }\n        }\n        else {\n            this.accessor.removeGroup(this.groupPanel);\n        }\n    }\n    closePanel(panel) {\n        this.doClose(panel);\n    }\n    doClose(panel) {\n        this.accessor.removePanel(panel);\n    }\n    isPanelActive(panel) {\n        return this._activePanel === panel;\n    }\n    updateActions(element) {\n        this.tabsContainer.setActionElement(element);\n    }\n    setActive(isGroupActive, skipFocus = false, force = false) {\n        var _a, _b;\n        if (!force && this.isActive === isGroupActive) {\n            if (!skipFocus) {\n                (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.focus();\n            }\n            return;\n        }\n        this._isGroupActive = isGroupActive;\n        toggleClass(this.container, 'active-group', isGroupActive);\n        toggleClass(this.container, 'inactive-group', !isGroupActive);\n        this.tabsContainer.setActive(this.isActive);\n        if (!this._activePanel && this.panels.length > 0) {\n            this.doSetActivePanel(this.panels[0]);\n        }\n        this.updateContainer();\n        if (isGroupActive) {\n            if (!skipFocus) {\n                (_b = this._activePanel) === null || _b === void 0 ? void 0 : _b.focus();\n            }\n        }\n    }\n    layout(width, height) {\n        var _a;\n        this._width = width;\n        this._height = height;\n        this.contentContainer.layout(this._width, this._height);\n        if ((_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.layout) {\n            this._activePanel.layout(this._width, this._height);\n        }\n    }\n    _removePanel(panel) {\n        const isActivePanel = this._activePanel === panel;\n        this.doRemovePanel(panel);\n        if (isActivePanel && this.panels.length > 0) {\n            const nextPanel = this.mostRecentlyUsed[0];\n            this.openPanel(nextPanel);\n        }\n        if (this._activePanel && this.panels.length === 0) {\n            this.doSetActivePanel(undefined);\n        }\n        this.updateContainer();\n        return panel;\n    }\n    doRemovePanel(panel) {\n        const index = this.panels.indexOf(panel);\n        if (this._activePanel === panel) {\n            this.contentContainer.closePanel();\n        }\n        this.tabsContainer.delete(panel.id);\n        this._panels.splice(index, 1);\n        if (this.mostRecentlyUsed.includes(panel)) {\n            this.mostRecentlyUsed.splice(this.mostRecentlyUsed.indexOf(panel), 1);\n        }\n        this._onDidRemovePanel.fire({ panel });\n    }\n    doAddPanel(panel, index = this.panels.length, skipSetActive = false) {\n        const existingPanel = this._panels.indexOf(panel);\n        const hasExistingPanel = existingPanel > -1;\n        this.tabsContainer.openPanel(panel, index);\n        if (!skipSetActive) {\n            this.contentContainer.openPanel(panel);\n        }\n        this.tabsContainer.show();\n        this.contentContainer.show();\n        if (hasExistingPanel) {\n            // TODO - need to ensure ordering hasn't changed and if it has need to re-order this.panels\n            return;\n        }\n        this.updateMru(panel);\n        this.panels.splice(index, 0, panel);\n        this._onDidAddPanel.fire({ panel });\n    }\n    doSetActivePanel(panel) {\n        this._activePanel = panel;\n        if (panel) {\n            this.tabsContainer.setActivePanel(panel);\n            panel.layout(this._width, this._height);\n            this.updateMru(panel);\n            this._onDidActivePanelChange.fire({ panel });\n        }\n    }\n    updateMru(panel) {\n        if (this.mostRecentlyUsed.includes(panel)) {\n            this.mostRecentlyUsed.splice(this.mostRecentlyUsed.indexOf(panel), 1);\n        }\n        this.mostRecentlyUsed = [panel, ...this.mostRecentlyUsed];\n    }\n    updateContainer() {\n        toggleClass(this.container, 'empty', this.isEmpty);\n        this.panels.forEach((panel) => panel.updateParentGroup(this.groupPanel, this.isActive));\n        if (this.isEmpty && !this.watermark) {\n            const watermark = this.accessor.createWatermarkComponent();\n            watermark.init({\n                containerApi: new DockviewApi(this.accessor),\n                params: {},\n                title: '',\n                api: null,\n            });\n            this.watermark = watermark;\n            addDisposableListener(this.watermark.element, 'click', () => {\n                if (!this.isActive) {\n                    this.accessor.doSetGroupActive(this.groupPanel);\n                }\n            });\n            this.tabsContainer.hide();\n            this.contentContainer.element.appendChild(this.watermark.element);\n            this.watermark.updateParentGroup(this.groupPanel, true);\n        }\n        if (!this.isEmpty && this.watermark) {\n            this.watermark.element.remove();\n            this.watermark.dispose();\n            this.watermark = undefined;\n            this.tabsContainer.show();\n        }\n    }\n    canDisplayOverlay(event, position, target) {\n        // custom overlay handler\n        if (this.accessor.options.showDndOverlay) {\n            return this.accessor.options.showDndOverlay({\n                nativeEvent: event,\n                target,\n                group: this.accessor.getPanel(this.id),\n                position,\n                getData: getPanelData,\n            });\n        }\n        return false;\n    }\n    handleDropEvent(event, position, index) {\n        const data = getPanelData();\n        if (data && data.viewId === this.accessor.id) {\n            if (data.panelId === null) {\n                // this is a group move dnd event\n                const { groupId } = data;\n                this._onMove.fire({\n                    target: position,\n                    groupId: groupId,\n                    index,\n                });\n                return;\n            }\n            const fromSameGroup = this.tabsContainer.indexOf(data.panelId) !== -1;\n            if (fromSameGroup && this.tabsContainer.size === 1) {\n                return;\n            }\n            const { groupId, panelId } = data;\n            const isSameGroup = this.id === groupId;\n            if (isSameGroup && !position) {\n                const oldIndex = this.tabsContainer.indexOf(panelId);\n                if (oldIndex === index) {\n                    return;\n                }\n            }\n            this._onMove.fire({\n                target: position,\n                groupId: data.groupId,\n                itemId: data.panelId,\n                index,\n            });\n        }\n        else {\n            this._onDidDrop.fire({\n                nativeEvent: event,\n                position,\n                index,\n                getData: () => getPanelData(),\n            });\n        }\n    }\n    dispose() {\n        var _a;\n        super.dispose();\n        (_a = this.watermark) === null || _a === void 0 ? void 0 : _a.dispose();\n        for (const panel of this.panels) {\n            panel.dispose();\n        }\n        this.dropTarget.dispose();\n        this.tabsContainer.dispose();\n        this.contentContainer.dispose();\n    }\n}\n","import { Emitter, Event, TickDelayedEvent } from '../events';\nimport { getGridLocation, Gridview } from './gridview';\nimport { CompositeDisposable } from '../lifecycle';\nimport { sequentialNumberGenerator } from '../math';\nimport { Sizing, } from '../splitview/core/splitview';\nconst nextLayoutId = sequentialNumberGenerator();\nexport function toTarget(direction) {\n    switch (direction) {\n        case 'left':\n            return 'left';\n        case 'right':\n            return 'right';\n        case 'above':\n            return 'top';\n        case 'below':\n            return 'bottom';\n        case 'within':\n        default:\n            return 'center';\n    }\n}\nexport class BaseGrid extends CompositeDisposable {\n    get id() {\n        return this._id;\n    }\n    get element() {\n        return this._element;\n    }\n    get size() {\n        return this._groups.size;\n    }\n    get groups() {\n        return Array.from(this._groups.values()).map((_) => _.value);\n    }\n    get width() {\n        return this.gridview.width;\n    }\n    get height() {\n        return this.gridview.height;\n    }\n    get minimumHeight() {\n        return this.gridview.minimumHeight;\n    }\n    get maximumHeight() {\n        return this.gridview.maximumHeight;\n    }\n    get minimumWidth() {\n        return this.gridview.minimumWidth;\n    }\n    get maximumWidth() {\n        return this.gridview.maximumWidth;\n    }\n    get activeGroup() {\n        return this._activeGroup;\n    }\n    constructor(_element, options) {\n        super();\n        this._element = _element;\n        this._id = nextLayoutId.next();\n        this._groups = new Map();\n        this._onDidLayoutChange = new Emitter();\n        this.onDidLayoutChange = this._onDidLayoutChange.event;\n        this._onDidRemoveGroup = new Emitter();\n        this.onDidRemoveGroup = this._onDidRemoveGroup.event;\n        this._onDidAddGroup = new Emitter();\n        this.onDidAddGroup = this._onDidAddGroup.event;\n        this._onDidActiveGroupChange = new Emitter();\n        this.onDidActiveGroupChange = this._onDidActiveGroupChange.event;\n        this._bufferOnDidLayoutChange = new TickDelayedEvent();\n        this.gridview = new Gridview(!!options.proportionalLayout, options.styles, options.orientation);\n        this.element.appendChild(this.gridview.element);\n        this.layout(0, 0, true); // set some elements height/widths\n        this.addDisposables(this.gridview.onDidChange(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }));\n        this.addDisposables(Event.any(this.onDidAddGroup, this.onDidRemoveGroup, this.onDidActiveGroupChange)(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), this._bufferOnDidLayoutChange.onEvent(() => {\n            this._onDidLayoutChange.fire();\n        }), this._bufferOnDidLayoutChange);\n    }\n    setVisible(panel, visible) {\n        this.gridview.setViewVisible(getGridLocation(panel.element), visible);\n        this._onDidLayoutChange.fire();\n    }\n    isVisible(panel) {\n        return this.gridview.isViewVisible(getGridLocation(panel.element));\n    }\n    doAddGroup(group, location = [0], size) {\n        this.gridview.addView(group, size !== null && size !== void 0 ? size : Sizing.Distribute, location);\n        this._onDidAddGroup.fire(group);\n        this.doSetGroupActive(group);\n    }\n    doRemoveGroup(group, options) {\n        if (!this._groups.has(group.id)) {\n            throw new Error('invalid operation');\n        }\n        const item = this._groups.get(group.id);\n        const view = this.gridview.remove(group, Sizing.Distribute);\n        if (item && !(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n            item.disposable.dispose();\n            item.value.dispose();\n            this._groups.delete(group.id);\n        }\n        this._onDidRemoveGroup.fire(group);\n        if (!(options === null || options === void 0 ? void 0 : options.skipActive) && this._activeGroup === group) {\n            const groups = Array.from(this._groups.values());\n            this.doSetGroupActive(groups.length > 0 ? groups[0].value : undefined);\n        }\n        return view;\n    }\n    getPanel(id) {\n        var _a;\n        return (_a = this._groups.get(id)) === null || _a === void 0 ? void 0 : _a.value;\n    }\n    doSetGroupActive(group, skipFocus) {\n        if (this._activeGroup === group) {\n            return;\n        }\n        if (this._activeGroup) {\n            this._activeGroup.setActive(false);\n            if (!skipFocus) {\n                this._activeGroup.focus();\n            }\n        }\n        if (group) {\n            group.setActive(true);\n            if (!skipFocus) {\n                group.focus();\n            }\n        }\n        this._activeGroup = group;\n        this._onDidActiveGroupChange.fire(group);\n    }\n    removeGroup(group) {\n        this.doRemoveGroup(group);\n    }\n    moveToNext(options) {\n        var _a;\n        if (!options) {\n            options = {};\n        }\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.next(location)) === null || _a === void 0 ? void 0 : _a.view;\n        this.doSetGroupActive(next);\n    }\n    moveToPrevious(options) {\n        var _a;\n        if (!options) {\n            options = {};\n        }\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.previous(location)) === null || _a === void 0 ? void 0 : _a.view;\n        this.doSetGroupActive(next);\n    }\n    layout(width, height, forceResize) {\n        const different = forceResize || width !== this.width || height !== this.height;\n        if (!different) {\n            return;\n        }\n        this.element.style.height = `${height}px`;\n        this.element.style.width = `${width}px`;\n        this.gridview.layout(width, height);\n    }\n    dispose() {\n        super.dispose();\n        this._onDidActiveGroupChange.dispose();\n        this._onDidAddGroup.dispose();\n        this._onDidRemoveGroup.dispose();\n        this._onDidLayoutChange.dispose();\n        for (const group of this.groups) {\n            group.dispose();\n        }\n        this.gridview.dispose();\n    }\n}\n","import { Emitter } from '../events';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\n/**\n * A core api implementation that should be used across all panel-like objects\n */\nexport class PanelApiImpl extends CompositeDisposable {\n    //\n    get isFocused() {\n        return this._isFocused;\n    }\n    get isActive() {\n        return this._isActive;\n    }\n    get isVisible() {\n        return this._isVisible;\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    constructor(id) {\n        super();\n        this.id = id;\n        this._isFocused = false;\n        this._isActive = false;\n        this._isVisible = true;\n        this._width = 0;\n        this._height = 0;\n        this.panelUpdatesDisposable = new MutableDisposable();\n        this._onDidDimensionChange = new Emitter({\n            replay: true,\n        });\n        this.onDidDimensionsChange = this._onDidDimensionChange.event;\n        //\n        this._onDidChangeFocus = new Emitter({\n            replay: true,\n        });\n        this.onDidFocusChange = this._onDidChangeFocus.event;\n        //\n        this._onFocusEvent = new Emitter();\n        this.onFocusEvent = this._onFocusEvent.event;\n        //\n        this._onDidVisibilityChange = new Emitter({\n            replay: true,\n        });\n        this.onDidVisibilityChange = this._onDidVisibilityChange.event;\n        //\n        this._onVisibilityChange = new Emitter();\n        this.onVisibilityChange = this._onVisibilityChange.event;\n        //\n        this._onDidActiveChange = new Emitter({\n            replay: true,\n        });\n        this.onDidActiveChange = this._onDidActiveChange.event;\n        //\n        this._onActiveChange = new Emitter();\n        this.onActiveChange = this._onActiveChange.event;\n        //\n        this._onUpdateParameters = new Emitter();\n        this.onUpdateParameters = this._onUpdateParameters.event;\n        this.addDisposables(this.panelUpdatesDisposable, this._onDidDimensionChange, this._onDidChangeFocus, this._onDidVisibilityChange, this._onDidActiveChange, this._onFocusEvent, this._onActiveChange, this._onVisibilityChange, this._onUpdateParameters, this.onDidFocusChange((event) => {\n            this._isFocused = event.isFocused;\n        }), this.onDidActiveChange((event) => {\n            this._isActive = event.isActive;\n        }), this.onDidVisibilityChange((event) => {\n            this._isVisible = event.isVisible;\n        }), this.onDidDimensionsChange((event) => {\n            this._width = event.width;\n            this._height = event.height;\n        }));\n    }\n    initialize(panel) {\n        this.panelUpdatesDisposable.value = this._onUpdateParameters.event((parameters) => {\n            panel.update({\n                params: {\n                    params: parameters,\n                },\n            });\n        });\n    }\n    setVisible(isVisible) {\n        this._onVisibilityChange.fire({ isVisible });\n    }\n    setActive() {\n        this._onActiveChange.fire();\n    }\n    updateParameters(parameters) {\n        this._onUpdateParameters.fire(parameters);\n    }\n    dispose() {\n        super.dispose();\n    }\n}\n","import { Emitter } from '../events';\nimport { PanelApiImpl } from './panelApi';\nexport class GridviewPanelApiImpl extends PanelApiImpl {\n    constructor(id, panel) {\n        super(id);\n        this._onDidConstraintsChangeInternal = new Emitter();\n        this.onDidConstraintsChangeInternal = this._onDidConstraintsChangeInternal.event;\n        this._onDidConstraintsChange = new Emitter({\n            replay: true,\n        });\n        this.onDidConstraintsChange = this._onDidConstraintsChange.event;\n        this._onDidSizeChange = new Emitter();\n        this.onDidSizeChange = this._onDidSizeChange.event;\n        this.addDisposables(this._onDidConstraintsChangeInternal, this._onDidConstraintsChange, this._onDidSizeChange);\n        if (panel) {\n            this.initialize(panel);\n        }\n    }\n    setConstraints(value) {\n        this._onDidConstraintsChangeInternal.fire(value);\n    }\n    setSize(event) {\n        this._onDidSizeChange.fire(event);\n    }\n}\n","import { Emitter } from '../events';\nimport { GridviewPanelApiImpl } from './gridviewPanelApi';\nimport { MutableDisposable } from '../lifecycle';\nexport class DockviewPanelApiImpl extends GridviewPanelApiImpl {\n    get title() {\n        return this.panel.title;\n    }\n    get isGroupActive() {\n        var _a;\n        return !!((_a = this.group) === null || _a === void 0 ? void 0 : _a.isActive);\n    }\n    set group(value) {\n        const isOldGroupActive = this.isGroupActive;\n        this._group = value;\n        this._onDidGroupChange.fire();\n        if (this._group) {\n            this.disposable.value = this._group.api.onDidActiveChange(() => {\n                this._onDidActiveGroupChange.fire();\n            });\n            if (this.isGroupActive !== isOldGroupActive) {\n                this._onDidActiveGroupChange.fire();\n            }\n        }\n    }\n    get group() {\n        return this._group;\n    }\n    constructor(panel, group) {\n        super(panel.id);\n        this.panel = panel;\n        this._onDidTitleChange = new Emitter();\n        this.onDidTitleChange = this._onDidTitleChange.event;\n        this._onDidActiveGroupChange = new Emitter();\n        this.onDidActiveGroupChange = this._onDidActiveGroupChange.event;\n        this._onDidGroupChange = new Emitter();\n        this.onDidGroupChange = this._onDidGroupChange.event;\n        this.disposable = new MutableDisposable();\n        this.initialize(panel);\n        this._group = group;\n        this.addDisposables(this.disposable, this._onDidTitleChange, this._onDidGroupChange, this._onDidActiveGroupChange);\n    }\n    setTitle(title) {\n        this.panel.update({ params: { title } });\n    }\n    close() {\n        this.group.model.closePanel(this.panel);\n    }\n}\n","import { DockviewPanelApiImpl, } from '../api/dockviewPanelApi';\nimport { CompositeDisposable } from '../lifecycle';\nexport class DockviewPanel extends CompositeDisposable {\n    get params() {\n        return this._params;\n    }\n    get title() {\n        return this._title;\n    }\n    get group() {\n        return this._group;\n    }\n    get view() {\n        return this._view;\n    }\n    constructor(id, accessor, containerApi, group) {\n        super();\n        this.id = id;\n        this.containerApi = containerApi;\n        this._title = '';\n        this._group = group;\n        this.api = new DockviewPanelApiImpl(this, this._group);\n        this.addDisposables(this.api.onActiveChange(() => {\n            accessor.setActivePanel(this);\n        }), this.api.onDidSizeChange((event) => {\n            // forward the resize event to the group since if you want to resize a panel\n            // you are actually just resizing the panels parent which is the group\n            this.group.api.setSize(event);\n        }));\n    }\n    init(params) {\n        var _a;\n        this._params = params.params;\n        this._view = params.view;\n        if (typeof params.title === 'string') {\n            this.setTitle(params.title);\n        }\n        (_a = this.view) === null || _a === void 0 ? void 0 : _a.init(Object.assign(Object.assign({}, params), { api: this.api, containerApi: this.containerApi }));\n    }\n    focus() {\n        this.api._onFocusEvent.fire();\n    }\n    toJSON() {\n        return {\n            id: this.id,\n            view: this.view.toJSON(),\n            params: Object.keys(this._params || {}).length > 0\n                ? this._params\n                : undefined,\n            title: this.title,\n        };\n    }\n    setTitle(title) {\n        var _a, _b;\n        const didTitleChange = title !== ((_a = this._params) === null || _a === void 0 ? void 0 : _a.title);\n        if (didTitleChange) {\n            this._title = title;\n            (_b = this.view) === null || _b === void 0 ? void 0 : _b.update({\n                params: {\n                    params: this._params,\n                    title: this.title,\n                },\n            });\n            this.api._onDidTitleChange.fire({ title });\n        }\n    }\n    update(event) {\n        var _a;\n        const params = event.params;\n        this._params = Object.assign(Object.assign({}, (this._params || {})), event.params.params);\n        if (typeof params.title === 'string') {\n            if (params.title !== this.title) {\n                this._title = params.title;\n                this.api._onDidTitleChange.fire({ title: this.title });\n            }\n        }\n        (_a = this.view) === null || _a === void 0 ? void 0 : _a.update({\n            params: {\n                params: this._params,\n                title: this.title,\n            },\n        });\n    }\n    updateParentGroup(group, isGroupActive) {\n        var _a;\n        this._group = group;\n        this.api.group = group;\n        const isPanelVisible = this._group.model.isPanelActive(this);\n        this.api._onDidActiveChange.fire({\n            isActive: isGroupActive && isPanelVisible,\n        });\n        this.api._onDidVisibilityChange.fire({\n            isVisible: isPanelVisible,\n        });\n        (_a = this.view) === null || _a === void 0 ? void 0 : _a.updateParentGroup(this._group, this._group.model.isPanelActive(this));\n    }\n    layout(width, height) {\n        var _a;\n        // the obtain the correct dimensions of the content panel we must deduct the tab height\n        this.api._onDidDimensionChange.fire({\n            width,\n            height: height - (this.group.model.header.height || 0),\n        });\n        (_a = this.view) === null || _a === void 0 ? void 0 : _a.layout(width, height);\n    }\n    dispose() {\n        var _a;\n        this.api.dispose();\n        (_a = this.view) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","export class ActionContainer {\n    get element() {\n        return this._element;\n    }\n    constructor() {\n        this._element = document.createElement('div');\n        this._element.className = 'actions-bar';\n        this._list = document.createElement('ul');\n        this._list.className = 'actions-container';\n        this._element.appendChild(this._list);\n    }\n    add(element) {\n        const listItem = document.createElement('li');\n        listItem.className = 'action-item';\n        this._list.appendChild(element);\n    }\n}\n","const createSvgElementFromPath = (params) => {\n    const svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n    svg.setAttributeNS(null, 'height', params.height);\n    svg.setAttributeNS(null, 'width', params.width);\n    svg.setAttributeNS(null, 'viewBox', params.viewbox);\n    svg.setAttributeNS(null, 'aria-hidden', 'false');\n    svg.setAttributeNS(null, 'focusable', 'false');\n    svg.classList.add('dockview-svg');\n    const path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n    path.setAttributeNS(null, 'd', params.path);\n    svg.appendChild(path);\n    return svg;\n};\nexport const createCloseButton = () => createSvgElementFromPath({\n    width: '11',\n    height: '11',\n    viewbox: '0 0 28 28',\n    path: 'M2.1 27.3L0 25.2L11.55 13.65L0 2.1L2.1 0L13.65 11.55L25.2 0L27.3 2.1L15.75 13.65L27.3 25.2L25.2 27.3L13.65 15.75L2.1 27.3Z',\n});\nexport const createExpandMoreButton = () => createSvgElementFromPath({\n    width: '11',\n    height: '11',\n    viewbox: '0 0 24 15',\n    path: 'M12 14.15L0 2.15L2.15 0L12 9.9L21.85 0.0499992L24 2.2L12 14.15Z',\n});\nexport const createChevronRightButton = () => createSvgElementFromPath({\n    width: '11',\n    height: '11',\n    viewbox: '0 0 15 25',\n    path: 'M2.15 24.1L0 21.95L9.9 12.05L0 2.15L2.15 0L14.2 12.05L2.15 24.1Z',\n});\n","import { ActionContainer } from '../../../actionbar/actionsContainer';\nimport { addDisposableListener } from '../../../events';\nimport { toggleClass } from '../../../dom';\nimport { CompositeDisposable } from '../../../lifecycle';\nimport { createCloseButton } from '../../../svg';\nexport class Watermark extends CompositeDisposable {\n    get id() {\n        return 'watermark';\n    }\n    constructor() {\n        super();\n        this._element = document.createElement('div');\n        this._element.className = 'watermark';\n        const title = document.createElement('div');\n        title.className = 'watermark-title';\n        const emptySpace = document.createElement('span');\n        emptySpace.style.flexGrow = '1';\n        const content = document.createElement('div');\n        content.className = 'watermark-content';\n        this._element.appendChild(title);\n        this._element.appendChild(content);\n        const actions = new ActionContainer();\n        title.appendChild(emptySpace);\n        title.appendChild(actions.element);\n        const closeAnchor = document.createElement('div');\n        closeAnchor.className = 'close-action';\n        closeAnchor.appendChild(createCloseButton());\n        actions.add(closeAnchor);\n        this.addDisposables(addDisposableListener(closeAnchor, 'click', (ev) => {\n            var _a;\n            ev.preventDefault();\n            if (this.group) {\n                (_a = this.params) === null || _a === void 0 ? void 0 : _a.containerApi.removeGroup(this.group);\n            }\n        }));\n    }\n    update(_event) {\n        // noop\n    }\n    focus() {\n        // noop\n    }\n    toJSON() {\n        return {};\n    }\n    layout(_width, _height) {\n        // noop\n    }\n    init(params) {\n        this.params = params;\n        this.addDisposables(this.params.containerApi.onDidLayoutChange(() => {\n            this.render();\n        }));\n        this.render();\n    }\n    updateParentGroup(group, _visible) {\n        this.group = group;\n        this.render();\n    }\n    get element() {\n        return this._element;\n    }\n    render() {\n        const isOneGroup = !!(this.params && this.params.containerApi.size <= 1);\n        toggleClass(this.element, 'has-actions', isOneGroup);\n    }\n    dispose() {\n        super.dispose();\n    }\n}\n","export function createComponent(id, componentName, components = {}, frameworkComponents = {}, createFrameworkComponent, fallback) {\n    const Component = typeof componentName === 'string'\n        ? components[componentName]\n        : undefined;\n    const FrameworkComponent = typeof componentName === 'string'\n        ? frameworkComponents[componentName]\n        : undefined;\n    if (Component && FrameworkComponent) {\n        throw new Error(`Cannot create '${id}'. component '${componentName}' registered as both a component and frameworkComponent`);\n    }\n    if (FrameworkComponent) {\n        if (!createFrameworkComponent) {\n            throw new Error(`Cannot create '${id}' for framework component '${componentName}'. you must register a frameworkPanelWrapper to use framework components`);\n        }\n        return createFrameworkComponent.createComponent(id, componentName, FrameworkComponent);\n    }\n    if (!Component) {\n        if (fallback) {\n            return fallback();\n        }\n        throw new Error(`Cannot create '${id}', no component '${componentName}' provided`);\n    }\n    return new Component(id, componentName);\n}\n","import { CompositeDisposable } from '../../../lifecycle';\nimport { addDisposableListener } from '../../../events';\nimport { createCloseButton } from '../../../svg';\nexport const DEFAULT_TAB_IDENTIFIER = '__default__tab__';\nexport class DefaultTab extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    get id() {\n        return DEFAULT_TAB_IDENTIFIER;\n    }\n    constructor() {\n        super();\n        this._isPanelVisible = false;\n        this._isGroupActive = false;\n        //\n        this.params = {};\n        this._element = document.createElement('div');\n        this._element.className = 'default-tab';\n        //\n        this._content = document.createElement('div');\n        this._content.className = 'tab-content';\n        //\n        this._actionContainer = document.createElement('div');\n        this._actionContainer.className = 'action-container';\n        //\n        this._list = document.createElement('ul');\n        this._list.className = 'tab-list';\n        //\n        this.action = document.createElement('div');\n        this.action.className = 'tab-action';\n        this.action.appendChild(createCloseButton());\n        //\n        this._element.appendChild(this._content);\n        this._element.appendChild(this._actionContainer);\n        this._actionContainer.appendChild(this._list);\n        this._list.appendChild(this.action);\n        //\n        this.addDisposables(addDisposableListener(this._actionContainer, 'mousedown', (ev) => {\n            ev.preventDefault();\n        }));\n        this.render();\n    }\n    update(event) {\n        this.params = Object.assign(Object.assign({}, this.params), event.params);\n        this.render();\n    }\n    toJSON() {\n        return { id: this.id };\n    }\n    focus() {\n        //noop\n    }\n    init(params) {\n        this.params = params;\n        this._content.textContent =\n            typeof params.title === 'string' ? params.title : this.id;\n        addDisposableListener(this.action, 'click', (ev) => {\n            ev.preventDefault(); //\n            this.params.api.close();\n        });\n    }\n    updateParentGroup(group, isPanelVisible) {\n        const changed = this._isPanelVisible !== isPanelVisible ||\n            this._isGroupActive !== group.isActive;\n        this._isPanelVisible = isPanelVisible;\n        this._isGroupActive = group.isActive;\n        if (changed) {\n            this.render();\n        }\n    }\n    layout(_width, _height) {\n        // noop\n    }\n    render() {\n        if (this._content.textContent !== this.params.title) {\n            this._content.textContent =\n                typeof this.params.title === 'string'\n                    ? this.params.title\n                    : this.id;\n        }\n    }\n}\n","import { trackFocus } from '../dom';\nimport { CompositeDisposable } from '../lifecycle';\nexport class BasePanelView extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    get params() {\n        var _a;\n        return (_a = this._params) === null || _a === void 0 ? void 0 : _a.params;\n    }\n    constructor(id, component, api) {\n        super();\n        this.id = id;\n        this.component = component;\n        this.api = api;\n        this._height = 0;\n        this._width = 0;\n        this._element = document.createElement('div');\n        this._element.tabIndex = -1;\n        this._element.style.outline = 'none';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n        this._element.style.overflow = 'hidden';\n        const { onDidFocus, onDidBlur } = trackFocus(this._element);\n        this.addDisposables(this.api, onDidFocus(() => {\n            this.api._onDidChangeFocus.fire({ isFocused: true });\n        }), onDidBlur(() => {\n            this.api._onDidChangeFocus.fire({ isFocused: false });\n        }));\n    }\n    focus() {\n        this.api._onFocusEvent.fire();\n    }\n    layout(width, height) {\n        this._width = width;\n        this._height = height;\n        this.api._onDidDimensionChange.fire({ width, height });\n        if (this.part) {\n            if (this._params) {\n                this.part.update(this._params.params);\n            }\n        }\n    }\n    init(parameters) {\n        this._params = parameters;\n        this.part = this.getComponent();\n    }\n    update(event) {\n        var _a, _b;\n        this._params = Object.assign(Object.assign({}, this._params), { params: Object.assign(Object.assign({}, (_a = this._params) === null || _a === void 0 ? void 0 : _a.params), event.params) });\n        (_b = this.part) === null || _b === void 0 ? void 0 : _b.update({ params: this._params.params });\n    }\n    toJSON() {\n        var _a, _b;\n        const params = (_b = (_a = this._params) === null || _a === void 0 ? void 0 : _a.params) !== null && _b !== void 0 ? _b : {};\n        return {\n            id: this.id,\n            component: this.component,\n            params: Object.keys(params).length > 0 ? params : undefined,\n        };\n    }\n    dispose() {\n        var _a;\n        super.dispose();\n        this.api.dispose();\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import { BasePanelView, } from './basePanelView';\nimport { Emitter } from '../events';\nexport class GridviewPanel extends BasePanelView {\n    get priority() {\n        return this._priority;\n    }\n    get snap() {\n        return this._snap;\n    }\n    get minimumWidth() {\n        const width = typeof this._minimumWidth === 'function'\n            ? this._minimumWidth()\n            : this._minimumWidth;\n        if (width !== this._evaluatedMinimumWidth) {\n            this._evaluatedMinimumWidth = width;\n            this.updateConstraints();\n        }\n        return width;\n    }\n    get minimumHeight() {\n        const height = typeof this._minimumHeight === 'function'\n            ? this._minimumHeight()\n            : this._minimumHeight;\n        if (height !== this._evaluatedMinimumHeight) {\n            this._evaluatedMinimumHeight = height;\n            this.updateConstraints();\n        }\n        return height;\n    }\n    get maximumHeight() {\n        const height = typeof this._maximumHeight === 'function'\n            ? this._maximumHeight()\n            : this._maximumHeight;\n        if (height !== this._evaluatedMaximumHeight) {\n            this._evaluatedMaximumHeight = height;\n            this.updateConstraints();\n        }\n        return height;\n    }\n    get maximumWidth() {\n        const width = typeof this._maximumWidth === 'function'\n            ? this._maximumWidth()\n            : this._maximumWidth;\n        if (width !== this._evaluatedMaximumWidth) {\n            this._evaluatedMaximumWidth = width;\n            this.updateConstraints();\n        }\n        return width;\n    }\n    get isActive() {\n        return this.api.isActive;\n    }\n    constructor(id, component, api) {\n        super(id, component, api);\n        this._evaluatedMinimumWidth = 0;\n        this._evaluatedMaximumWidth = Number.MAX_SAFE_INTEGER;\n        this._evaluatedMinimumHeight = 0;\n        this._evaluatedMaximumHeight = Number.MAX_SAFE_INTEGER;\n        this._minimumWidth = 0;\n        this._minimumHeight = 0;\n        this._maximumWidth = Number.MAX_SAFE_INTEGER;\n        this._maximumHeight = Number.MAX_SAFE_INTEGER;\n        this._snap = false;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this.api.initialize(this); // TODO: required to by-pass 'super before this' requirement\n        this.addDisposables(this._onDidChange, this.api.onVisibilityChange((event) => {\n            const { isVisible } = event;\n            const { accessor } = this._params;\n            accessor.setVisible(this, isVisible);\n        }), this.api.onActiveChange(() => {\n            const { accessor } = this._params;\n            accessor.setActive(this);\n        }), this.api.onDidConstraintsChangeInternal((event) => {\n            if (typeof event.minimumWidth === 'number' ||\n                typeof event.minimumWidth === 'function') {\n                this._minimumWidth = event.minimumWidth;\n            }\n            if (typeof event.minimumHeight === 'number' ||\n                typeof event.minimumHeight === 'function') {\n                this._minimumHeight = event.minimumHeight;\n            }\n            if (typeof event.maximumWidth === 'number' ||\n                typeof event.maximumWidth === 'function') {\n                this._maximumWidth = event.maximumWidth;\n            }\n            if (typeof event.maximumHeight === 'number' ||\n                typeof event.maximumHeight === 'function') {\n                this._maximumHeight = event.maximumHeight;\n            }\n        }), this.api.onDidSizeChange((event) => {\n            this._onDidChange.fire({\n                height: event.height,\n                width: event.width,\n            });\n        }));\n    }\n    setVisible(isVisible) {\n        this.api._onDidVisibilityChange.fire({ isVisible });\n    }\n    setActive(isActive) {\n        this.api._onDidActiveChange.fire({ isActive });\n    }\n    init(parameters) {\n        if (parameters.maximumHeight) {\n            this._maximumHeight = parameters.maximumHeight;\n        }\n        if (parameters.minimumHeight) {\n            this._minimumHeight = parameters.minimumHeight;\n        }\n        if (parameters.maximumWidth) {\n            this._maximumWidth = parameters.maximumWidth;\n        }\n        if (parameters.minimumWidth) {\n            this._minimumWidth = parameters.minimumWidth;\n        }\n        this._priority = parameters.priority;\n        this._snap = !!parameters.snap;\n        super.init(parameters);\n        if (typeof parameters.isVisible === 'boolean') {\n            this.setVisible(parameters.isVisible);\n        }\n    }\n    updateConstraints() {\n        this.api._onDidConstraintsChange.fire({\n            minimumWidth: this._evaluatedMinimumWidth,\n            maximumWidth: this._evaluatedMaximumWidth,\n            minimumHeight: this._evaluatedMinimumHeight,\n            maximumHeight: this._evaluatedMaximumHeight,\n        });\n    }\n    toJSON() {\n        const state = super.toJSON();\n        const maximum = (value) => value === Number.MAX_SAFE_INTEGER ? undefined : value;\n        const minimum = (value) => (value <= 0 ? undefined : value);\n        return Object.assign(Object.assign({}, state), { minimumHeight: minimum(this.minimumHeight), maximumHeight: maximum(this.maximumHeight), minimumWidth: minimum(this.minimumWidth), maximumWidth: maximum(this.maximumWidth), snap: this.snap, priority: this.priority });\n    }\n}\n","import { GridviewPanelApiImpl, } from '../api/gridviewPanelApi';\nimport { Groupview } from './groupview';\nimport { GridviewPanel } from '../gridview/gridviewPanel';\nclass GroupviewApi extends GridviewPanelApiImpl {\n}\nexport class GroupPanel extends GridviewPanel {\n    get panels() {\n        return this._model.panels;\n    }\n    get activePanel() {\n        return this._model.activePanel;\n    }\n    get size() {\n        return this._model.size;\n    }\n    get model() {\n        return this._model;\n    }\n    get minimumHeight() {\n        return this._model.minimumHeight;\n    }\n    get maximumHeight() {\n        return this._model.maximumHeight;\n    }\n    get minimumWidth() {\n        return this._model.minimumWidth;\n    }\n    get maximumWidth() {\n        return this._model.maximumWidth;\n    }\n    get locked() {\n        return this._model.locked;\n    }\n    set locked(value) {\n        this._model.locked = value;\n    }\n    get header() {\n        return this._model.header;\n    }\n    constructor(accessor, id, options) {\n        super(id, 'groupview_default', new GroupviewApi(id));\n        this._model = new Groupview(this.element, accessor, id, options, this);\n    }\n    initialize() {\n        this._model.initialize();\n    }\n    setActive(isActive) {\n        super.setActive(isActive);\n        this.model.setActive(isActive);\n    }\n    layout(width, height) {\n        super.layout(width, height);\n        this.model.layout(width, height);\n    }\n    getComponent() {\n        return this._model;\n    }\n    toJSON() {\n        return this.model.toJSON();\n    }\n}\n","import { DefaultTab } from './components/tab/defaultTab';\nexport class DefaultGroupPanelView {\n    get content() {\n        return this._content;\n    }\n    get tab() {\n        return this._tab;\n    }\n    constructor(renderers) {\n        var _a;\n        this._content = renderers.content;\n        this._tab = (_a = renderers.tab) !== null && _a !== void 0 ? _a : new DefaultTab();\n    }\n    init(params) {\n        this.content.init(Object.assign(Object.assign({}, params), { tab: this.tab }));\n        this.tab.init(params);\n    }\n    updateParentGroup(group, isPanelVisible) {\n        var _a;\n        this._content.updateParentGroup(group, isPanelVisible);\n        (_a = this._tab) === null || _a === void 0 ? void 0 : _a.updateParentGroup(group, isPanelVisible);\n    }\n    layout(width, height) {\n        this.content.layout(width, height);\n    }\n    update(event) {\n        this.content.update(event);\n        this.tab.update(event);\n    }\n    toJSON() {\n        let tab = this.tab instanceof DefaultTab ? undefined : this.tab.toJSON();\n        if (tab && Object.keys(tab).length === 0) {\n            tab = undefined;\n        }\n        return {\n            content: this.content.toJSON(),\n            tab,\n        };\n    }\n    dispose() {\n        this.content.dispose();\n        this.tab.dispose();\n    }\n}\n","import { getRelativeLocation, getGridLocation, } from '../gridview/gridview';\nimport { directionToPosition, Droptarget } from '../dnd/droptarget';\nimport { tail, sequenceEquals } from '../array';\nimport { DockviewPanel } from './dockviewPanel';\nimport { CompositeDisposable } from '../lifecycle';\nimport { Event, Emitter } from '../events';\nimport { Watermark } from './components/watermark/watermark';\nimport { sequentialNumberGenerator } from '../math';\nimport { createComponent } from '../panel/componentFactory';\nimport { isGroupOptionsWithGroup, isGroupOptionsWithPanel, isPanelOptionsWithGroup, isPanelOptionsWithPanel, } from './options';\nimport { BaseGrid, toTarget, } from '../gridview/baseComponentGridview';\nimport { DockviewApi } from '../api/component.api';\nimport { Orientation, Sizing } from '../splitview/core/splitview';\nimport { DefaultTab } from './components/tab/defaultTab';\nimport { GroupPanel } from '../groupview/groupviewPanel';\nimport { DefaultGroupPanelView } from './defaultGroupPanelView';\nimport { getPanelData } from '../dnd/dataTransfer';\nimport { DockviewDropTargets } from '../groupview/dnd';\nexport class DockviewComponent extends BaseGrid {\n    get orientation() {\n        return this.gridview.orientation;\n    }\n    get totalPanels() {\n        return this.panels.length;\n    }\n    get panels() {\n        return this.groups.flatMap((group) => group.panels);\n    }\n    get deserializer() {\n        return this._deserializer;\n    }\n    set deserializer(value) {\n        this._deserializer = value;\n    }\n    get options() {\n        return this._options;\n    }\n    get activePanel() {\n        const activeGroup = this.activeGroup;\n        if (!activeGroup) {\n            return undefined;\n        }\n        return activeGroup.activePanel;\n    }\n    set tabHeight(height) {\n        this.options.tabHeight = height;\n        this._groups.forEach((value) => {\n            value.value.model.header.height = height;\n        });\n    }\n    get tabHeight() {\n        return this.options.tabHeight;\n    }\n    constructor(element, options) {\n        super(element, {\n            proportionalLayout: true,\n            orientation: options.orientation || Orientation.HORIZONTAL,\n            styles: options.styles,\n        });\n        this.nextGroupId = sequentialNumberGenerator();\n        this.watermark = null;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onDidRemovePanel = new Emitter();\n        this.onDidRemovePanel = this._onDidRemovePanel.event;\n        this._onDidAddPanel = new Emitter();\n        this.onDidAddPanel = this._onDidAddPanel.event;\n        this._onDidLayoutFromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutFromJSON.event;\n        this._onDidActivePanelChange = new Emitter();\n        this.onDidActivePanelChange = this._onDidActivePanelChange.event;\n        this.element.classList.add('dv-dockview');\n        this.addDisposables(this._onDidDrop, Event.any(this.onDidAddGroup, this.onDidRemoveGroup)(() => {\n            this.updateWatermark();\n        }), Event.any(this.onDidAddPanel, this.onDidRemovePanel, this.onDidActivePanelChange)(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }));\n        this._options = options;\n        if (!this.options.components) {\n            this.options.components = {};\n        }\n        if (!this.options.frameworkComponents) {\n            this.options.frameworkComponents = {};\n        }\n        if (!this.options.frameworkTabComponents) {\n            this.options.frameworkTabComponents = {};\n        }\n        if (!this.options.tabComponents) {\n            this.options.tabComponents = {};\n        }\n        if (!this.options.watermarkComponent &&\n            !this.options.watermarkFrameworkComponent) {\n            this.options.watermarkComponent = Watermark;\n        }\n        const dropTarget = new Droptarget(this.element, {\n            canDisplayOverlay: (event, position) => {\n                const data = getPanelData();\n                if (data) {\n                    if (data.viewId !== this.id) {\n                        return false;\n                    }\n                    return true;\n                }\n                if (this.options.showDndOverlay) {\n                    return this.options.showDndOverlay({\n                        nativeEvent: event,\n                        position: position,\n                        target: DockviewDropTargets.Edge,\n                        getData: getPanelData,\n                    });\n                }\n                return false;\n            },\n            acceptedTargetZones: ['top', 'bottom', 'left', 'right'],\n            overlayModel: {\n                activationSize: { type: 'pixels', value: 10 },\n                size: { type: 'pixels', value: 20 },\n            },\n        });\n        this.addDisposables(dropTarget, dropTarget.onDrop((event) => {\n            const data = getPanelData();\n            if (data) {\n                this.moveGroupOrPanel(this.orthogonalize(event.position), data.groupId, data.panelId || undefined, 'center');\n            }\n            else {\n                this._onDidDrop.fire(Object.assign(Object.assign({}, event), { api: this._api, group: null, getData: getPanelData }));\n            }\n        }));\n        this._api = new DockviewApi(this);\n        this.updateWatermark();\n    }\n    orthogonalize(position) {\n        switch (position) {\n            case 'top':\n            case 'bottom':\n                if (this.gridview.orientation === Orientation.HORIZONTAL) {\n                    // we need to add to a vertical splitview but the current root is a horizontal splitview.\n                    // insert a vertical splitview at the root level and add the existing view as a child\n                    this.gridview.insertOrthogonalSplitviewAtRoot();\n                }\n                break;\n            case 'left':\n            case 'right':\n                if (this.gridview.orientation === Orientation.VERTICAL) {\n                    // we need to add to a horizontal splitview but the current root is a vertical splitview.\n                    // insert a horiziontal splitview at the root level and add the existing view as a child\n                    this.gridview.insertOrthogonalSplitviewAtRoot();\n                }\n                break;\n            default:\n                break;\n        }\n        switch (position) {\n            case 'top':\n            case 'left':\n                return this.createGroupAtLocation([0]); // insert into first position\n            case 'bottom':\n            case 'right':\n                return this.createGroupAtLocation([this.gridview.length]); // insert into last position\n            default:\n                throw new Error(`unsupported position ${position}`);\n        }\n    }\n    updateOptions(options) {\n        const hasOrientationChanged = typeof options.orientation === 'string' &&\n            this.gridview.orientation !== options.orientation;\n        this._options = Object.assign(Object.assign({}, this.options), options);\n        if (hasOrientationChanged) {\n            this.gridview.orientation = options.orientation;\n        }\n        this.layout(this.gridview.width, this.gridview.height, true);\n    }\n    focus() {\n        var _a;\n        (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    getGroupPanel(id) {\n        return this.panels.find((panel) => panel.id === id);\n    }\n    setActivePanel(panel) {\n        this.doSetGroupActive(panel.group);\n        panel.group.model.openPanel(panel);\n    }\n    moveToNext(options = {}) {\n        var _a;\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        if (options.includePanel && options.group) {\n            if (options.group.activePanel !==\n                options.group.panels[options.group.panels.length - 1]) {\n                options.group.model.moveToNext({ suppressRoll: true });\n                return;\n            }\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.next(location)) === null || _a === void 0 ? void 0 : _a.view;\n        this.doSetGroupActive(next);\n    }\n    moveToPrevious(options = {}) {\n        var _a;\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        if (options.includePanel && options.group) {\n            if (options.group.activePanel !== options.group.panels[0]) {\n                options.group.model.moveToPrevious({ suppressRoll: true });\n                return;\n            }\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.previous(location)) === null || _a === void 0 ? void 0 : _a.view;\n        if (next) {\n            this.doSetGroupActive(next);\n        }\n    }\n    /**\n     * Serialize the current state of the layout\n     *\n     * @returns A JSON respresentation of the layout\n     */\n    toJSON() {\n        var _a;\n        const data = this.gridview.serialize();\n        const panels = this.panels.reduce((collection, panel) => {\n            collection[panel.id] = panel.toJSON();\n            return collection;\n        }, {});\n        return {\n            grid: data,\n            panels,\n            activeGroup: (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.id,\n            options: { tabHeight: this.tabHeight },\n        };\n    }\n    fromJSON(data) {\n        this.clear();\n        if (!this.deserializer) {\n            throw new Error('no deserializer provided');\n        }\n        const { grid, panels, options, activeGroup } = data;\n        if (typeof (options === null || options === void 0 ? void 0 : options.tabHeight) === 'number') {\n            this.tabHeight = options.tabHeight;\n        }\n        if (grid.root.type !== 'branch' || !Array.isArray(grid.root.data)) {\n            throw new Error('root must be of type branch');\n        }\n        this.gridview.deserialize(grid, {\n            fromJSON: (node) => {\n                const { id, locked, hideHeader, views, activeView } = node.data;\n                const group = this.createGroup({\n                    id,\n                    locked: !!locked,\n                    hideHeader: !!hideHeader,\n                });\n                this._onDidAddGroup.fire(group);\n                for (const child of views) {\n                    const panel = this.deserializer.fromJSON(panels[child], group);\n                    const isActive = typeof activeView === 'string' &&\n                        activeView === panel.id;\n                    group.model.openPanel(panel, {\n                        skipSetPanelActive: !isActive,\n                        skipSetGroupActive: true,\n                    });\n                }\n                if (!group.activePanel && group.panels.length > 0) {\n                    group.model.openPanel(group.panels[group.panels.length - 1], {\n                        skipSetGroupActive: true,\n                    });\n                }\n                return group;\n            },\n        });\n        if (typeof activeGroup === 'string') {\n            const panel = this.getPanel(activeGroup);\n            if (panel) {\n                this.doSetGroupActive(panel);\n            }\n        }\n        this.gridview.layout(this.width, this.height);\n        this._onDidLayoutFromJSON.fire();\n    }\n    clear() {\n        const groups = Array.from(this._groups.values()).map((_) => _.value);\n        const hasActiveGroup = !!this.activeGroup;\n        const hasActivePanel = !!this.activePanel;\n        for (const group of groups) {\n            // remove the group will automatically remove the panels\n            this.removeGroup(group, true);\n        }\n        if (hasActiveGroup) {\n            this.doSetGroupActive(undefined);\n        }\n        if (hasActivePanel) {\n            this._onDidActivePanelChange.fire(undefined);\n        }\n        this.gridview.clear();\n    }\n    closeAllGroups() {\n        for (const entry of this._groups.entries()) {\n            const [_, group] = entry;\n            group.value.model.closeAllPanels();\n        }\n    }\n    addPanel(options) {\n        var _a, _b;\n        if (this.panels.find((_) => _.id === options.id)) {\n            throw new Error(`panel with id ${options.id} already exists`);\n        }\n        let referenceGroup;\n        if (options.position) {\n            if (isPanelOptionsWithPanel(options.position)) {\n                const referencePanel = typeof options.position.referencePanel === 'string'\n                    ? this.getGroupPanel(options.position.referencePanel)\n                    : options.position.referencePanel;\n                if (!referencePanel) {\n                    throw new Error(`referencePanel ${options.position.referencePanel} does not exist`);\n                }\n                referenceGroup = this.findGroup(referencePanel);\n            }\n            else if (isPanelOptionsWithGroup(options.position)) {\n                referenceGroup =\n                    typeof options.position.referenceGroup === 'string'\n                        ? (_a = this._groups.get(options.position.referenceGroup)) === null || _a === void 0 ? void 0 : _a.value\n                        : options.position.referenceGroup;\n                if (!referenceGroup) {\n                    throw new Error(`referencePanel ${options.position.referenceGroup} does not exist`);\n                }\n            }\n            else {\n                const group = this.orthogonalize(directionToPosition(options.position.direction));\n                const panel = this.createPanel(options, group);\n                group.model.openPanel(panel);\n                return panel;\n            }\n        }\n        else {\n            referenceGroup = this.activeGroup;\n        }\n        let panel;\n        if (referenceGroup) {\n            const target = toTarget(((_b = options.position) === null || _b === void 0 ? void 0 : _b.direction) || 'within');\n            if (target === 'center') {\n                panel = this.createPanel(options, referenceGroup);\n                referenceGroup.model.openPanel(panel);\n            }\n            else {\n                const location = getGridLocation(referenceGroup.element);\n                const relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n                const group = this.createGroupAtLocation(relativeLocation);\n                panel = this.createPanel(options, group);\n                group.model.openPanel(panel);\n            }\n        }\n        else {\n            const group = this.createGroupAtLocation();\n            panel = this.createPanel(options, group);\n            group.model.openPanel(panel);\n        }\n        return panel;\n    }\n    removePanel(panel, options = {\n        removeEmptyGroup: true,\n        skipDispose: false,\n    }) {\n        const group = panel.group;\n        if (!group) {\n            throw new Error(`cannot remove panel ${panel.id}. it's missing a group.`);\n        }\n        group.model.removePanel(panel);\n        panel.dispose();\n        if (group.size === 0 && options.removeEmptyGroup) {\n            this.removeGroup(group);\n        }\n    }\n    createWatermarkComponent() {\n        var _a;\n        return createComponent('watermark-id', 'watermark-name', this.options.watermarkComponent\n            ? { 'watermark-name': this.options.watermarkComponent }\n            : {}, this.options.watermarkFrameworkComponent\n            ? { 'watermark-name': this.options.watermarkFrameworkComponent }\n            : {}, (_a = this.options.frameworkComponentFactory) === null || _a === void 0 ? void 0 : _a.watermark);\n    }\n    updateWatermark() {\n        if (this.groups.length === 0) {\n            if (!this.watermark) {\n                this.watermark = this.createWatermarkComponent();\n                this.watermark.init({\n                    containerApi: new DockviewApi(this),\n                    params: {},\n                    title: '',\n                    api: null,\n                });\n                const watermarkContainer = document.createElement('div');\n                watermarkContainer.className = 'dv-watermark-container';\n                watermarkContainer.appendChild(this.watermark.element);\n                this.element.appendChild(watermarkContainer);\n            }\n        }\n        else if (this.watermark) {\n            this.watermark.element.parentElement.remove();\n            this.watermark.dispose();\n            this.watermark = null;\n        }\n    }\n    addGroup(options) {\n        var _a;\n        const group = this.createGroup();\n        if (options) {\n            let referenceGroup;\n            if (isGroupOptionsWithPanel(options)) {\n                const referencePanel = typeof options.referencePanel === 'string'\n                    ? this.panels.find((panel) => panel.id === options.referencePanel)\n                    : options.referencePanel;\n                if (!referencePanel) {\n                    throw new Error(`reference panel ${options.referencePanel} does not exist`);\n                }\n                referenceGroup = this.findGroup(referencePanel);\n                if (!referenceGroup) {\n                    throw new Error(`reference group for reference panel ${options.referencePanel} does not exist`);\n                }\n            }\n            else if (isGroupOptionsWithGroup(options)) {\n                referenceGroup =\n                    typeof options.referenceGroup === 'string'\n                        ? (_a = this._groups.get(options.referenceGroup)) === null || _a === void 0 ? void 0 : _a.value\n                        : options.referenceGroup;\n                if (!referenceGroup) {\n                    throw new Error(`reference group ${options.referenceGroup} does not exist`);\n                }\n            }\n            else {\n                const group = this.orthogonalize(directionToPosition(options.direction));\n                return group;\n            }\n            const target = toTarget(options.direction || 'within');\n            const location = getGridLocation(referenceGroup.element);\n            const relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n            this.doAddGroup(group, relativeLocation);\n            return group;\n        }\n        else {\n            this.doAddGroup(group);\n            return group;\n        }\n    }\n    removeGroup(group, skipActive = false) {\n        const panels = [...group.panels]; // reassign since group panels will mutate\n        for (const panel of panels) {\n            this.removePanel(panel, {\n                removeEmptyGroup: false,\n                skipDispose: false,\n            });\n        }\n        super.doRemoveGroup(group, { skipActive });\n    }\n    moveGroupOrPanel(referenceGroup, groupId, itemId, target, index) {\n        var _a;\n        const sourceGroup = groupId\n            ? (_a = this._groups.get(groupId)) === null || _a === void 0 ? void 0 : _a.value\n            : undefined;\n        if (itemId === undefined) {\n            if (sourceGroup) {\n                this.moveGroup(sourceGroup, referenceGroup, target);\n            }\n            return;\n        }\n        if (!target || target === 'center') {\n            const groupItem = (sourceGroup === null || sourceGroup === void 0 ? void 0 : sourceGroup.model.removePanel(itemId)) ||\n                this.panels.find((panel) => panel.id === itemId);\n            if (!groupItem) {\n                throw new Error(`No panel with id ${itemId}`);\n            }\n            if ((sourceGroup === null || sourceGroup === void 0 ? void 0 : sourceGroup.model.size) === 0) {\n                this.doRemoveGroup(sourceGroup);\n            }\n            referenceGroup.model.openPanel(groupItem, { index });\n        }\n        else {\n            const referenceLocation = getGridLocation(referenceGroup.element);\n            const targetLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, target);\n            if (sourceGroup && sourceGroup.size < 2) {\n                const [targetParentLocation, to] = tail(targetLocation);\n                const sourceLocation = getGridLocation(sourceGroup.element);\n                const [sourceParentLocation, from] = tail(sourceLocation);\n                if (sequenceEquals(sourceParentLocation, targetParentLocation)) {\n                    // special case when 'swapping' two views within same grid location\n                    // if a group has one tab - we are essentially moving the 'group'\n                    // which is equivalent to swapping two views in this case\n                    this.gridview.moveView(sourceParentLocation, from, to);\n                }\n                else {\n                    // source group will become empty so delete the group\n                    const targetGroup = this.doRemoveGroup(sourceGroup, {\n                        skipActive: true,\n                        skipDispose: true,\n                    });\n                    // after deleting the group we need to re-evaulate the ref location\n                    const updatedReferenceLocation = getGridLocation(referenceGroup.element);\n                    const location = getRelativeLocation(this.gridview.orientation, updatedReferenceLocation, target);\n                    this.doAddGroup(targetGroup, location);\n                }\n            }\n            else {\n                const groupItem = (sourceGroup === null || sourceGroup === void 0 ? void 0 : sourceGroup.model.removePanel(itemId)) ||\n                    this.panels.find((panel) => panel.id === itemId);\n                if (!groupItem) {\n                    throw new Error(`No panel with id ${itemId}`);\n                }\n                const dropLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, target);\n                const group = this.createGroupAtLocation(dropLocation);\n                group.model.openPanel(groupItem);\n            }\n        }\n    }\n    moveGroup(sourceGroup, referenceGroup, target) {\n        if (sourceGroup) {\n            if (!target || target === 'center') {\n                const activePanel = sourceGroup.activePanel;\n                const panels = [...sourceGroup.panels].map((p) => sourceGroup.model.removePanel(p.id));\n                if ((sourceGroup === null || sourceGroup === void 0 ? void 0 : sourceGroup.model.size) === 0) {\n                    this.doRemoveGroup(sourceGroup);\n                }\n                for (const panel of panels) {\n                    referenceGroup.model.openPanel(panel, {\n                        skipSetPanelActive: panel !== activePanel,\n                    });\n                }\n            }\n            else {\n                this.gridview.removeView(getGridLocation(sourceGroup.element));\n                const referenceLocation = getGridLocation(referenceGroup.element);\n                const dropLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, target);\n                this.gridview.addView(sourceGroup, Sizing.Distribute, dropLocation);\n            }\n        }\n    }\n    doSetGroupActive(group, skipFocus) {\n        var _a, _b;\n        const isGroupAlreadyFocused = this._activeGroup === group;\n        super.doSetGroupActive(group, skipFocus);\n        if (!isGroupAlreadyFocused && ((_a = this._activeGroup) === null || _a === void 0 ? void 0 : _a.activePanel)) {\n            this._onDidActivePanelChange.fire((_b = this._activeGroup) === null || _b === void 0 ? void 0 : _b.activePanel);\n        }\n    }\n    createGroup(options) {\n        if (!options) {\n            options = { tabHeight: this.tabHeight };\n        }\n        if (typeof options.tabHeight !== 'number') {\n            options.tabHeight = this.tabHeight;\n        }\n        let id = options === null || options === void 0 ? void 0 : options.id;\n        if (id && this._groups.has(options.id)) {\n            console.warn(`Duplicate group id ${options === null || options === void 0 ? void 0 : options.id}. reassigning group id to avoid errors`);\n            id = undefined;\n        }\n        if (!id) {\n            id = this.nextGroupId.next();\n            while (this._groups.has(id)) {\n                id = this.nextGroupId.next();\n            }\n        }\n        const view = new GroupPanel(this, id, options);\n        view.init({ params: {}, accessor: null }); // required to initialized .part and allow for correct disposal of group\n        if (!this._groups.has(view.id)) {\n            const disposable = new CompositeDisposable(view.model.onMove((event) => {\n                const { groupId, itemId, target, index } = event;\n                this.moveGroupOrPanel(view, groupId, itemId, target, index);\n            }), view.model.onDidDrop((event) => {\n                this._onDidDrop.fire(Object.assign(Object.assign({}, event), { api: this._api, group: view }));\n            }), view.model.onDidAddPanel((event) => {\n                this._onDidAddPanel.fire(event.panel);\n            }), view.model.onDidRemovePanel((event) => {\n                this._onDidRemovePanel.fire(event.panel);\n            }), view.model.onDidActivePanelChange((event) => {\n                this._onDidActivePanelChange.fire(event.panel);\n            }));\n            this._groups.set(view.id, { value: view, disposable });\n        }\n        // TODO: must be called after the above listeners have been setup,\n        // not an ideal pattern\n        view.initialize();\n        if (typeof this.options.tabHeight === 'number') {\n            view.model.header.height = this.options.tabHeight;\n        }\n        return view;\n    }\n    createPanel(options, group) {\n        const view = new DefaultGroupPanelView({\n            content: this.createContentComponent(options.id, options.component),\n            tab: this.createTabComponent(options.id, options.tabComponent || this.options.defaultTabComponent),\n        });\n        const panel = new DockviewPanel(options.id, this, this._api, group);\n        panel.init({\n            view,\n            title: options.title || options.id,\n            params: (options === null || options === void 0 ? void 0 : options.params) || {},\n        });\n        return panel;\n    }\n    createContentComponent(id, componentName) {\n        var _a;\n        return createComponent(id, componentName, this.options.components || {}, this.options.frameworkComponents, (_a = this.options.frameworkComponentFactory) === null || _a === void 0 ? void 0 : _a.content);\n    }\n    createTabComponent(id, componentName) {\n        var _a;\n        return createComponent(id, componentName, this.options.tabComponents || {}, this.options.frameworkTabComponents, (_a = this.options.frameworkComponentFactory) === null || _a === void 0 ? void 0 : _a.tab, () => new DefaultTab());\n    }\n    createGroupAtLocation(location = [0]) {\n        const group = this.createGroup();\n        this.doAddGroup(group, location);\n        return group;\n    }\n    findGroup(panel) {\n        var _a;\n        return (_a = Array.from(this._groups.values()).find((group) => group.value.model.containsPanel(panel))) === null || _a === void 0 ? void 0 : _a.value;\n    }\n    dispose() {\n        super.dispose();\n        this._onDidActivePanelChange.dispose();\n        this._onDidAddPanel.dispose();\n        this._onDidRemovePanel.dispose();\n        this._onDidLayoutFromJSON.dispose();\n    }\n}\n","export function isPanelOptionsWithPanel(data) {\n    if (data.referencePanel) {\n        return true;\n    }\n    return false;\n}\nexport function isPanelOptionsWithGroup(data) {\n    if (data.referenceGroup) {\n        return true;\n    }\n    return false;\n}\nexport function isGroupOptionsWithPanel(data) {\n    if (data.referencePanel) {\n        return true;\n    }\n    return false;\n}\nexport function isGroupOptionsWithGroup(data) {\n    if (data.referenceGroup) {\n        return true;\n    }\n    return false;\n}\n","import { getRelativeLocation, getGridLocation, } from './gridview';\nimport { tail, sequenceEquals } from '../array';\nimport { CompositeDisposable } from '../lifecycle';\nimport { BaseGrid, toTarget, } from './baseComponentGridview';\nimport { createComponent } from '../panel/componentFactory';\nimport { Emitter } from '../events';\nexport class GridviewComponent extends BaseGrid {\n    get orientation() {\n        return this.gridview.orientation;\n    }\n    set orientation(value) {\n        this.gridview.orientation = value;\n    }\n    get options() {\n        return this._options;\n    }\n    get deserializer() {\n        return this._deserializer;\n    }\n    set deserializer(value) {\n        this._deserializer = value;\n    }\n    constructor(element, options) {\n        super(element, {\n            proportionalLayout: options.proportionalLayout,\n            orientation: options.orientation,\n            styles: options.styles,\n        });\n        this._onDidLayoutfromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutfromJSON.event;\n        this._options = options;\n        if (!this.options.components) {\n            this.options.components = {};\n        }\n        if (!this.options.frameworkComponents) {\n            this.options.frameworkComponents = {};\n        }\n    }\n    updateOptions(options) {\n        const hasOrientationChanged = typeof options.orientation === 'string' &&\n            this.gridview.orientation !== options.orientation;\n        this._options = Object.assign(Object.assign({}, this.options), options);\n        if (hasOrientationChanged) {\n            this.gridview.orientation = options.orientation;\n        }\n        this.layout(this.gridview.width, this.gridview.height, true);\n    }\n    removePanel(panel) {\n        this.removeGroup(panel);\n    }\n    /**\n     * Serialize the current state of the layout\n     *\n     * @returns A JSON respresentation of the layout\n     */\n    toJSON() {\n        var _a;\n        const data = this.gridview.serialize();\n        return {\n            grid: data,\n            activePanel: (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.id,\n        };\n    }\n    setVisible(panel, visible) {\n        this.gridview.setViewVisible(getGridLocation(panel.element), visible);\n    }\n    setActive(panel) {\n        this._groups.forEach((value, _key) => {\n            value.value.setActive(panel === value.value);\n        });\n    }\n    focus() {\n        var _a;\n        (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    fromJSON(serializedGridview) {\n        this.clear();\n        const { grid, activePanel } = serializedGridview;\n        const queue = [];\n        this.gridview.deserialize(grid, {\n            fromJSON: (node) => {\n                const { data } = node;\n                const view = createComponent(data.id, data.component, this.options.components || {}, this.options.frameworkComponents || {}, this.options.frameworkComponentFactory\n                    ? {\n                        createComponent: this.options.frameworkComponentFactory\n                            .createComponent,\n                    }\n                    : undefined);\n                queue.push(() => view.init({\n                    params: data.params,\n                    minimumWidth: data.minimumWidth,\n                    maximumWidth: data.maximumWidth,\n                    minimumHeight: data.minimumHeight,\n                    maximumHeight: data.maximumHeight,\n                    priority: data.priority,\n                    snap: !!data.snap,\n                    accessor: this,\n                    isVisible: node.visible,\n                }));\n                this._onDidAddGroup.fire(view);\n                this.registerPanel(view);\n                return view;\n            },\n        });\n        this.layout(this.width, this.height, true);\n        queue.forEach((f) => f());\n        if (typeof activePanel === 'string') {\n            const panel = this.getPanel(activePanel);\n            if (panel) {\n                this.doSetGroupActive(panel);\n            }\n        }\n        this._onDidLayoutfromJSON.fire();\n    }\n    clear() {\n        const hasActiveGroup = this.activeGroup;\n        const groups = Array.from(this._groups.values()); // reassign since group panels will mutate\n        for (const group of groups) {\n            group.disposable.dispose();\n            this.doRemoveGroup(group.value, { skipActive: true });\n        }\n        if (hasActiveGroup) {\n            this.doSetGroupActive(undefined);\n        }\n        this.gridview.clear();\n    }\n    movePanel(panel, options) {\n        var _a;\n        let relativeLocation;\n        const removedPanel = this.gridview.remove(panel);\n        const referenceGroup = (_a = this._groups.get(options.reference)) === null || _a === void 0 ? void 0 : _a.value;\n        if (!referenceGroup) {\n            throw new Error(`reference group ${options.reference} does not exist`);\n        }\n        const target = toTarget(options.direction);\n        if (target === 'center') {\n            throw new Error(`${target} not supported as an option`);\n        }\n        else {\n            const location = getGridLocation(referenceGroup.element);\n            relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n        }\n        this.doAddGroup(removedPanel, relativeLocation, options.size);\n    }\n    addPanel(options) {\n        var _a, _b;\n        let relativeLocation = options.location || [0];\n        if ((_a = options.position) === null || _a === void 0 ? void 0 : _a.referencePanel) {\n            const referenceGroup = (_b = this._groups.get(options.position.referencePanel)) === null || _b === void 0 ? void 0 : _b.value;\n            if (!referenceGroup) {\n                throw new Error(`reference group ${options.position.referencePanel} does not exist`);\n            }\n            const target = toTarget(options.position.direction);\n            if (target === 'center') {\n                throw new Error(`${target} not supported as an option`);\n            }\n            else {\n                const location = getGridLocation(referenceGroup.element);\n                relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n            }\n        }\n        const view = createComponent(options.id, options.component, this.options.components || {}, this.options.frameworkComponents || {}, this.options.frameworkComponentFactory\n            ? {\n                createComponent: this.options.frameworkComponentFactory\n                    .createComponent,\n            }\n            : undefined);\n        view.init({\n            params: options.params || {},\n            minimumWidth: options.minimumWidth,\n            maximumWidth: options.maximumWidth,\n            minimumHeight: options.minimumHeight,\n            maximumHeight: options.maximumHeight,\n            priority: options.priority,\n            snap: !!options.snap,\n            accessor: this,\n            isVisible: true,\n        });\n        this.registerPanel(view);\n        this.doAddGroup(view, relativeLocation, options.size);\n        return view;\n    }\n    registerPanel(panel) {\n        const disposable = new CompositeDisposable(panel.api.onDidFocusChange((event) => {\n            if (!event.isFocused) {\n                return;\n            }\n            this._groups.forEach((groupItem) => {\n                const group = groupItem.value;\n                if (group !== panel) {\n                    group.setActive(false);\n                }\n                else {\n                    group.setActive(true);\n                }\n            });\n        }));\n        this._groups.set(panel.id, {\n            value: panel,\n            disposable,\n        });\n    }\n    moveGroup(referenceGroup, groupId, target) {\n        const sourceGroup = this.getPanel(groupId);\n        if (!sourceGroup) {\n            throw new Error('invalid operation');\n        }\n        const referenceLocation = getGridLocation(referenceGroup.element);\n        const targetLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, target);\n        const [targetParentLocation, to] = tail(targetLocation);\n        const sourceLocation = getGridLocation(sourceGroup.element);\n        const [sourceParentLocation, from] = tail(sourceLocation);\n        if (sequenceEquals(sourceParentLocation, targetParentLocation)) {\n            // special case when 'swapping' two views within same grid location\n            // if a group has one tab - we are essentially moving the 'group'\n            // which is equivalent to swapping two views in this case\n            this.gridview.moveView(sourceParentLocation, from, to);\n            return;\n        }\n        // source group will become empty so delete the group\n        const targetGroup = this.doRemoveGroup(sourceGroup, {\n            skipActive: true,\n            skipDispose: true,\n        });\n        // after deleting the group we need to re-evaulate the ref location\n        const updatedReferenceLocation = getGridLocation(referenceGroup.element);\n        const location = getRelativeLocation(this.gridview.orientation, updatedReferenceLocation, target);\n        this.doAddGroup(targetGroup, location);\n    }\n    removeGroup(group) {\n        super.removeGroup(group);\n    }\n    dispose() {\n        super.dispose();\n        this._onDidLayoutfromJSON.dispose();\n    }\n}\n","import { CompositeDisposable, MutableDisposable, } from '../lifecycle';\nimport { Orientation, Sizing, Splitview, } from './core/splitview';\nimport { Emitter } from '../events';\nimport { createComponent } from '../panel/componentFactory';\n/**\n * A high-level implementation of splitview that works using 'panels'\n */\nexport class SplitviewComponent extends CompositeDisposable {\n    get panels() {\n        return this.splitview.getViews();\n    }\n    get options() {\n        return this._options;\n    }\n    get length() {\n        return this._panels.size;\n    }\n    get orientation() {\n        return this.splitview.orientation;\n    }\n    get splitview() {\n        return this._splitview;\n    }\n    set splitview(value) {\n        this._splitview = value;\n        this._disposable.value = new CompositeDisposable(this._splitview.onDidSashEnd(() => {\n            this._onDidLayoutChange.fire(undefined);\n        }), this._splitview.onDidAddView((e) => this._onDidAddView.fire(e)), this._splitview.onDidRemoveView((e) => this._onDidRemoveView.fire(e)));\n    }\n    get minimumSize() {\n        return this.splitview.minimumSize;\n    }\n    get maximumSize() {\n        return this.splitview.maximumSize;\n    }\n    get height() {\n        return this.splitview.orientation === Orientation.HORIZONTAL\n            ? this.splitview.orthogonalSize\n            : this.splitview.size;\n    }\n    get width() {\n        return this.splitview.orientation === Orientation.HORIZONTAL\n            ? this.splitview.size\n            : this.splitview.orthogonalSize;\n    }\n    constructor(element, options) {\n        super();\n        this.element = element;\n        this._disposable = new MutableDisposable();\n        this._panels = new Map();\n        this._onDidLayoutfromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutfromJSON.event;\n        this._onDidAddView = new Emitter();\n        this.onDidAddView = this._onDidAddView.event;\n        this._onDidRemoveView = new Emitter();\n        this.onDidRemoveView = this._onDidRemoveView.event;\n        this._onDidLayoutChange = new Emitter();\n        this.onDidLayoutChange = this._onDidLayoutChange.event;\n        this._options = options;\n        if (!options.components) {\n            options.components = {};\n        }\n        if (!options.frameworkComponents) {\n            options.frameworkComponents = {};\n        }\n        this.splitview = new Splitview(this.element, options);\n        this.addDisposables(this._disposable, this._onDidAddView, this._onDidLayoutfromJSON, this._onDidRemoveView, this._onDidLayoutChange);\n    }\n    updateOptions(options) {\n        const hasOrientationChanged = typeof options.orientation === 'string' &&\n            this.options.orientation !== options.orientation;\n        this._options = Object.assign(Object.assign({}, this.options), options);\n        if (hasOrientationChanged) {\n            this.splitview.orientation = options.orientation;\n        }\n        this.splitview.layout(this.splitview.size, this.splitview.orthogonalSize);\n    }\n    focus() {\n        var _a;\n        (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    movePanel(from, to) {\n        this.splitview.moveView(from, to);\n    }\n    setVisible(panel, visible) {\n        const index = this.panels.indexOf(panel);\n        this.splitview.setViewVisible(index, visible);\n    }\n    setActive(view, skipFocus) {\n        this._activePanel = view;\n        this.panels\n            .filter((v) => v !== view)\n            .forEach((v) => {\n            v.api._onDidActiveChange.fire({ isActive: false });\n            if (!skipFocus) {\n                v.focus();\n            }\n        });\n        view.api._onDidActiveChange.fire({ isActive: true });\n        if (!skipFocus) {\n            view.focus();\n        }\n    }\n    removePanel(panel, sizing) {\n        const disposable = this._panels.get(panel.id);\n        if (!disposable) {\n            throw new Error(`unknown splitview panel ${panel.id}`);\n        }\n        disposable.disposable.dispose();\n        disposable.value.dispose();\n        this._panels.delete(panel.id);\n        const index = this.panels.findIndex((_) => _ === panel);\n        this.splitview.removeView(index, sizing);\n        const panels = this.panels;\n        if (panels.length > 0) {\n            this.setActive(panels[panels.length - 1]);\n        }\n    }\n    getPanel(id) {\n        return this.panels.find((view) => view.id === id);\n    }\n    addPanel(options) {\n        if (this._panels.has(options.id)) {\n            throw new Error(`panel ${options.id} already exists`);\n        }\n        const view = createComponent(options.id, options.component, this.options.components || {}, this.options.frameworkComponents || {}, this.options.frameworkWrapper\n            ? {\n                createComponent: this.options.frameworkWrapper.createComponent,\n            }\n            : undefined);\n        view.orientation = this.splitview.orientation;\n        view.init({\n            params: options.params || {},\n            minimumSize: options.minimumSize,\n            maximumSize: options.maximumSize,\n            snap: options.snap,\n            priority: options.priority,\n            accessor: this,\n        });\n        const size = typeof options.size === 'number' ? options.size : Sizing.Distribute;\n        const index = typeof options.index === 'number' ? options.index : undefined;\n        this.splitview.addView(view, size, index);\n        this.doAddView(view);\n        this.setActive(view);\n        return view;\n    }\n    layout(width, height) {\n        const [size, orthogonalSize] = this.splitview.orientation === Orientation.HORIZONTAL\n            ? [width, height]\n            : [height, width];\n        this.splitview.layout(size, orthogonalSize);\n    }\n    doAddView(view) {\n        const disposable = view.api.onDidFocusChange((event) => {\n            if (!event.isFocused) {\n                return;\n            }\n            this.setActive(view, true);\n        });\n        this._panels.set(view.id, { disposable, value: view });\n    }\n    toJSON() {\n        var _a;\n        const views = this.splitview\n            .getViews()\n            .map((view, i) => {\n            const size = this.splitview.getViewSize(i);\n            return {\n                size,\n                data: view.toJSON(),\n                snap: !!view.snap,\n                priority: view.priority,\n            };\n        });\n        return {\n            views,\n            activeView: (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.id,\n            size: this.splitview.size,\n            orientation: this.splitview.orientation,\n        };\n    }\n    fromJSON(serializedSplitview) {\n        this.clear();\n        const { views, orientation, size, activeView } = serializedSplitview;\n        const queue = [];\n        this.splitview = new Splitview(this.element, {\n            orientation,\n            proportionalLayout: this.options.proportionalLayout,\n            descriptor: {\n                size,\n                views: views.map((view) => {\n                    const data = view.data;\n                    if (this._panels.has(data.id)) {\n                        throw new Error(`panel ${data.id} already exists`);\n                    }\n                    const panel = createComponent(data.id, data.component, this.options.components || {}, this.options.frameworkComponents || {}, this.options.frameworkWrapper\n                        ? {\n                            createComponent: this.options.frameworkWrapper\n                                .createComponent,\n                        }\n                        : undefined);\n                    queue.push(() => {\n                        panel.init({\n                            params: data.params || {},\n                            minimumSize: data.minimumSize,\n                            maximumSize: data.maximumSize,\n                            snap: view.snap,\n                            priority: view.priority,\n                            accessor: this,\n                        });\n                    });\n                    panel.orientation = orientation;\n                    this.doAddView(panel);\n                    setTimeout(() => {\n                        // the original onDidAddView events are missed since they are fired before we can subcribe to them\n                        this._onDidAddView.fire(panel);\n                    }, 0);\n                    return { size: view.size, view: panel };\n                }),\n            },\n        });\n        this.layout(this.width, this.height);\n        queue.forEach((f) => f());\n        if (typeof activeView === 'string') {\n            const panel = this.getPanel(activeView);\n            if (panel) {\n                this.setActive(panel);\n            }\n        }\n        this._onDidLayoutfromJSON.fire();\n    }\n    clear() {\n        for (const [_, value] of this._panels.entries()) {\n            value.disposable.dispose();\n            value.value.dispose();\n        }\n        this._panels.clear();\n        this.splitview.dispose();\n    }\n    dispose() {\n        for (const [_, value] of this._panels.entries()) {\n            value.disposable.dispose();\n            value.value.dispose();\n        }\n        this._panels.clear();\n        this.splitview.dispose();\n        super.dispose();\n    }\n}\n","import { Emitter } from '../events';\nimport { PanelApiImpl } from './panelApi';\nexport class SplitviewPanelApiImpl extends PanelApiImpl {\n    //\n    constructor(id) {\n        super(id);\n        this._onDidConstraintsChangeInternal = new Emitter();\n        this.onDidConstraintsChangeInternal = this._onDidConstraintsChangeInternal.event;\n        //\n        this._onDidConstraintsChange = new Emitter({\n            replay: true,\n        });\n        this.onDidConstraintsChange = this._onDidConstraintsChange.event;\n        //\n        this._onDidSizeChange = new Emitter();\n        this.onDidSizeChange = this._onDidSizeChange.event;\n        this.addDisposables(this._onDidConstraintsChangeInternal, this._onDidConstraintsChange, this._onDidSizeChange);\n    }\n    setConstraints(value) {\n        this._onDidConstraintsChangeInternal.fire(value);\n    }\n    setSize(event) {\n        this._onDidSizeChange.fire(event);\n    }\n}\n","import { Emitter } from '../events';\nimport { SplitviewPanelApiImpl } from './splitviewPanelApi';\nexport class PaneviewPanelApiImpl extends SplitviewPanelApiImpl {\n    set pane(pane) {\n        this._pane = pane;\n    }\n    constructor(id) {\n        super(id);\n        this._onDidExpansionChange = new Emitter({\n            replay: true,\n        });\n        this.onDidExpansionChange = this._onDidExpansionChange.event;\n        this._onMouseEnter = new Emitter({});\n        this.onMouseEnter = this._onMouseEnter.event;\n        this._onMouseLeave = new Emitter({});\n        this.onMouseLeave = this._onMouseLeave.event;\n        this.addDisposables(this._onDidExpansionChange, this._onMouseEnter, this._onMouseLeave);\n    }\n    setExpanded(isExpanded) {\n        var _a;\n        (_a = this._pane) === null || _a === void 0 ? void 0 : _a.setExpanded(isExpanded);\n    }\n    get isExpanded() {\n        var _a;\n        return !!((_a = this._pane) === null || _a === void 0 ? void 0 : _a.isExpanded());\n    }\n}\n","import { PaneviewPanelApiImpl } from '../api/paneviewPanelApi';\nimport { addClasses, removeClasses } from '../dom';\nimport { addDisposableListener, Emitter } from '../events';\nimport { BasePanelView, } from '../gridview/basePanelView';\nimport { Orientation } from '../splitview/core/splitview';\nexport class PaneviewPanel extends BasePanelView {\n    set orientation(value) {\n        this._orientation = value;\n    }\n    get orientation() {\n        return this._orientation;\n    }\n    get minimumSize() {\n        const headerSize = this.headerSize;\n        const expanded = this.isExpanded();\n        const minimumBodySize = expanded ? this._minimumBodySize : 0;\n        return headerSize + minimumBodySize;\n    }\n    get maximumSize() {\n        const headerSize = this.headerSize;\n        const expanded = this.isExpanded();\n        const maximumBodySize = expanded ? this._maximumBodySize : 0;\n        return headerSize + maximumBodySize;\n    }\n    get size() {\n        return this._size;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    set orthogonalSize(size) {\n        this._orthogonalSize = size;\n    }\n    get minimumBodySize() {\n        return this._minimumBodySize;\n    }\n    set minimumBodySize(value) {\n        this._minimumBodySize = typeof value === 'number' ? value : 0;\n    }\n    get maximumBodySize() {\n        return this._maximumBodySize;\n    }\n    set maximumBodySize(value) {\n        this._maximumBodySize =\n            typeof value === 'number' ? value : Number.POSITIVE_INFINITY;\n    }\n    get headerVisible() {\n        return this._headerVisible;\n    }\n    set headerVisible(value) {\n        this._headerVisible = value;\n        this.header.style.display = value ? '' : 'none';\n    }\n    constructor(id, component, headerComponent, orientation, isExpanded, isHeaderVisible) {\n        super(id, component, new PaneviewPanelApiImpl(id));\n        this.headerComponent = headerComponent;\n        this._onDidChangeExpansionState = new Emitter({ replay: true });\n        this.onDidChangeExpansionState = this._onDidChangeExpansionState.event;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this.headerSize = 22;\n        this._orthogonalSize = 0;\n        this._size = 0;\n        this._minimumBodySize = 100;\n        this._maximumBodySize = Number.POSITIVE_INFINITY;\n        this._isExpanded = false;\n        this.expandedSize = 0;\n        this.api.pane = this; // TODO cannot use 'this' before 'super'\n        this.api.initialize(this);\n        this._isExpanded = isExpanded;\n        this._headerVisible = isHeaderVisible;\n        this._onDidChangeExpansionState.fire(this.isExpanded()); // initialize value\n        this._orientation = orientation;\n        this.element.classList.add('pane');\n        this.addDisposables(this.api.onDidSizeChange((event) => {\n            this._onDidChange.fire({ size: event.size });\n        }), addDisposableListener(this.element, 'mouseenter', (ev) => {\n            this.api._onMouseEnter.fire(ev);\n        }), addDisposableListener(this.element, 'mouseleave', (ev) => {\n            this.api._onMouseLeave.fire(ev);\n        }));\n        this.addDisposables(this._onDidChangeExpansionState, this.onDidChangeExpansionState((isPanelExpanded) => {\n            this.api._onDidExpansionChange.fire({\n                isExpanded: isPanelExpanded,\n            });\n        }), this.api.onDidFocusChange((e) => {\n            if (!this.header) {\n                return;\n            }\n            if (e.isFocused) {\n                addClasses(this.header, 'focused');\n            }\n            else {\n                removeClasses(this.header, 'focused');\n            }\n        }));\n        this.renderOnce();\n    }\n    setVisible(isVisible) {\n        this.api._onDidVisibilityChange.fire({ isVisible });\n    }\n    setActive(isActive) {\n        this.api._onDidActiveChange.fire({ isActive });\n    }\n    isExpanded() {\n        return this._isExpanded;\n    }\n    setExpanded(expanded) {\n        if (this._isExpanded === expanded) {\n            return;\n        }\n        this._isExpanded = expanded;\n        if (expanded) {\n            if (this.animationTimer) {\n                clearTimeout(this.animationTimer);\n            }\n            if (this.body) {\n                this.element.appendChild(this.body);\n            }\n        }\n        else {\n            this.animationTimer = setTimeout(() => {\n                var _a;\n                (_a = this.body) === null || _a === void 0 ? void 0 : _a.remove();\n            }, 200);\n        }\n        this._onDidChange.fire(expanded ? { size: this.width } : {});\n        this._onDidChangeExpansionState.fire(expanded);\n    }\n    layout(size, orthogonalSize) {\n        this._size = size;\n        this._orthogonalSize = orthogonalSize;\n        const [width, height] = this.orientation === Orientation.HORIZONTAL\n            ? [size, orthogonalSize]\n            : [orthogonalSize, size];\n        if (this.isExpanded()) {\n            this.expandedSize = width;\n        }\n        super.layout(width, height);\n    }\n    init(parameters) {\n        var _a, _b;\n        super.init(parameters);\n        if (typeof parameters.minimumBodySize === 'number') {\n            this.minimumBodySize = parameters.minimumBodySize;\n        }\n        if (typeof parameters.maximumBodySize === 'number') {\n            this.maximumBodySize = parameters.maximumBodySize;\n        }\n        this.bodyPart = this.getBodyComponent();\n        this.headerPart = this.getHeaderComponent();\n        this.bodyPart.init(Object.assign(Object.assign({}, parameters), { api: this.api }));\n        this.headerPart.init(Object.assign(Object.assign({}, parameters), { api: this.api }));\n        (_a = this.body) === null || _a === void 0 ? void 0 : _a.append(this.bodyPart.element);\n        (_b = this.header) === null || _b === void 0 ? void 0 : _b.append(this.headerPart.element);\n        if (typeof parameters.isExpanded === 'boolean') {\n            this.setExpanded(parameters.isExpanded);\n        }\n    }\n    toJSON() {\n        const params = this._params;\n        return Object.assign(Object.assign({}, super.toJSON()), { headerComponent: this.headerComponent, title: params.title });\n    }\n    renderOnce() {\n        this.header = document.createElement('div');\n        this.header.tabIndex = 0;\n        this.header.className = 'pane-header';\n        this.header.style.height = `${this.headerSize}px`;\n        this.header.style.lineHeight = `${this.headerSize}px`;\n        this.header.style.minHeight = `${this.headerSize}px`;\n        this.header.style.maxHeight = `${this.headerSize}px`;\n        this.element.appendChild(this.header);\n        this.body = document.createElement('div');\n        this.body.className = 'pane-body';\n        this.element.appendChild(this.body);\n    }\n    // TODO slightly hacky by-pass of the component to create a body and header component\n    getComponent() {\n        return {\n            update: (params) => {\n                var _a, _b;\n                (_a = this.bodyPart) === null || _a === void 0 ? void 0 : _a.update({ params });\n                (_b = this.headerPart) === null || _b === void 0 ? void 0 : _b.update({ params });\n            },\n            dispose: () => {\n                var _a, _b;\n                (_a = this.bodyPart) === null || _a === void 0 ? void 0 : _a.dispose();\n                (_b = this.headerPart) === null || _b === void 0 ? void 0 : _b.dispose();\n            },\n        };\n    }\n}\n","import { DragHandler } from '../dnd/abstractDragHandler';\nimport { getPaneData, LocalSelectionTransfer, PaneTransfer, } from '../dnd/dataTransfer';\nimport { Droptarget } from '../dnd/droptarget';\nimport { Emitter } from '../events';\nimport { PaneviewPanel, } from './paneviewPanel';\nexport class DraggablePaneviewPanel extends PaneviewPanel {\n    constructor(accessor, id, component, headerComponent, orientation, isExpanded, disableDnd) {\n        super(id, component, headerComponent, orientation, isExpanded, true);\n        this.accessor = accessor;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        if (!disableDnd) {\n            this.initDragFeatures();\n        }\n    }\n    initDragFeatures() {\n        if (!this.header) {\n            return;\n        }\n        const id = this.id;\n        const accessorId = this.accessor.id;\n        this.header.draggable = true;\n        this.handler = new (class PaneDragHandler extends DragHandler {\n            getData() {\n                LocalSelectionTransfer.getInstance().setData([new PaneTransfer(accessorId, id)], PaneTransfer.prototype);\n                return {\n                    dispose: () => {\n                        LocalSelectionTransfer.getInstance().clearData(PaneTransfer.prototype);\n                    },\n                };\n            }\n        })(this.header);\n        this.target = new Droptarget(this.element, {\n            acceptedTargetZones: ['top', 'bottom'],\n            overlayModel: {\n                activationSize: { type: 'percentage', value: 50 },\n            },\n            canDisplayOverlay: (event) => {\n                const data = getPaneData();\n                if (data) {\n                    if (data.paneId !== this.id &&\n                        data.viewId === this.accessor.id) {\n                        return true;\n                    }\n                }\n                if (this.accessor.options.showDndOverlay) {\n                    return this.accessor.options.showDndOverlay({\n                        nativeEvent: event,\n                        getData: getPaneData,\n                        panel: this,\n                    });\n                }\n                return false;\n            },\n        });\n        this.addDisposables(this._onDidDrop, this.handler, this.target, this.target.onDrop((event) => {\n            this.onDrop(event);\n        }));\n    }\n    onDrop(event) {\n        const data = getPaneData();\n        if (!data || data.viewId !== this.accessor.id) {\n            // if there is no local drag event for this panel\n            // or if the drag event was creating by another Paneview instance\n            this._onDidDrop.fire(Object.assign(Object.assign({}, event), { panel: this, getData: getPaneData }));\n            return;\n        }\n        const containerApi = this._params\n            .containerApi;\n        const panelId = data.paneId;\n        const existingPanel = containerApi.getPanel(panelId);\n        if (!existingPanel) {\n            // if the panel doesn't exist\n            this._onDidDrop.fire(Object.assign(Object.assign({}, event), { panel: this, getData: getPaneData }));\n            return;\n        }\n        const allPanels = containerApi.panels;\n        const fromIndex = allPanels.indexOf(existingPanel);\n        let toIndex = containerApi.panels.indexOf(this);\n        if (event.position === 'left' || event.position === 'top') {\n            toIndex = Math.max(0, toIndex - 1);\n        }\n        if (event.position === 'right' || event.position === 'bottom') {\n            if (fromIndex > toIndex) {\n                toIndex++;\n            }\n            toIndex = Math.min(allPanels.length - 1, toIndex);\n        }\n        containerApi.movePanel(fromIndex, toIndex);\n    }\n}\n","import { addDisposableListener } from '../events';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nimport { toggleClass } from '../dom';\nimport { createChevronRightButton, createExpandMoreButton } from '../svg';\nexport class DefaultHeader extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor() {\n        super();\n        this._expandedIcon = createExpandMoreButton();\n        this._collapsedIcon = createChevronRightButton();\n        this.disposable = new MutableDisposable();\n        this.apiRef = { api: null };\n        this._element = document.createElement('div');\n        this.element.className = 'default-header';\n        this._content = document.createElement('span');\n        this._expander = document.createElement('div');\n        this._expander.className = 'dockview-pane-header-icon';\n        this.element.appendChild(this._expander);\n        this.element.appendChild(this._content);\n        this.addDisposables(addDisposableListener(this._element, 'click', () => {\n            var _a;\n            (_a = this.apiRef.api) === null || _a === void 0 ? void 0 : _a.setExpanded(!this.apiRef.api.isExpanded);\n        }));\n    }\n    init(params) {\n        this.apiRef.api = params.api;\n        this._content.textContent = params.title;\n        this.updateIcon();\n        this.disposable.value = params.api.onDidExpansionChange(() => {\n            this.updateIcon();\n        });\n    }\n    updateIcon() {\n        var _a;\n        const isExpanded = !!((_a = this.apiRef.api) === null || _a === void 0 ? void 0 : _a.isExpanded);\n        toggleClass(this._expander, 'collapsed', !isExpanded);\n        if (isExpanded) {\n            if (this._expander.contains(this._collapsedIcon)) {\n                this._collapsedIcon.remove();\n            }\n            if (!this._expander.contains(this._expandedIcon)) {\n                this._expander.appendChild(this._expandedIcon);\n            }\n        }\n        else {\n            if (this._expander.contains(this._expandedIcon)) {\n                this._expandedIcon.remove();\n            }\n            if (!this._expander.contains(this._collapsedIcon)) {\n                this._expander.appendChild(this._collapsedIcon);\n            }\n        }\n    }\n    update(_params) {\n        //\n    }\n    dispose() {\n        this.disposable.dispose();\n        super.dispose();\n    }\n}\n","import { PaneviewApi } from '../api/component.api';\nimport { createComponent } from '../panel/componentFactory';\nimport { Emitter } from '../events';\nimport { CompositeDisposable, MutableDisposable, } from '../lifecycle';\nimport { Orientation, Sizing, } from '../splitview/core/splitview';\nimport { Paneview } from './paneview';\nimport { DraggablePaneviewPanel, } from './draggablePaneviewPanel';\nimport { DefaultHeader } from './defaultPaneviewHeader';\nimport { sequentialNumberGenerator } from '../math';\nconst nextLayoutId = sequentialNumberGenerator();\nexport class PaneFramework extends DraggablePaneviewPanel {\n    constructor(options) {\n        super(options.accessor, options.id, options.component, options.headerComponent, options.orientation, options.isExpanded, options.disableDnd);\n        this.options = options;\n    }\n    getBodyComponent() {\n        return this.options.body;\n    }\n    getHeaderComponent() {\n        return this.options.header;\n    }\n}\nexport class PaneviewComponent extends CompositeDisposable {\n    get id() {\n        return this._id;\n    }\n    get panels() {\n        return this.paneview.getPanes();\n    }\n    set paneview(value) {\n        this._paneview = value;\n        this._disposable.value = new CompositeDisposable(this._paneview.onDidChange(() => {\n            this._onDidLayoutChange.fire(undefined);\n        }), this._paneview.onDidAddView((e) => this._onDidAddView.fire(e)), this._paneview.onDidRemoveView((e) => this._onDidRemoveView.fire(e)));\n    }\n    get paneview() {\n        return this._paneview;\n    }\n    get minimumSize() {\n        return this.paneview.minimumSize;\n    }\n    get maximumSize() {\n        return this.paneview.maximumSize;\n    }\n    get height() {\n        return this.paneview.orientation === Orientation.HORIZONTAL\n            ? this.paneview.orthogonalSize\n            : this.paneview.size;\n    }\n    get width() {\n        return this.paneview.orientation === Orientation.HORIZONTAL\n            ? this.paneview.size\n            : this.paneview.orthogonalSize;\n    }\n    get options() {\n        return this._options;\n    }\n    constructor(element, options) {\n        super();\n        this.element = element;\n        this._id = nextLayoutId.next();\n        this._disposable = new MutableDisposable();\n        this._viewDisposables = new Map();\n        this._onDidLayoutfromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutfromJSON.event;\n        this._onDidLayoutChange = new Emitter();\n        this.onDidLayoutChange = this._onDidLayoutChange.event;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onDidAddView = new Emitter();\n        this.onDidAddView = this._onDidAddView.event;\n        this._onDidRemoveView = new Emitter();\n        this.onDidRemoveView = this._onDidRemoveView.event;\n        this.addDisposables(this._onDidLayoutChange, this._onDidLayoutfromJSON, this._onDidDrop, this._onDidAddView, this._onDidRemoveView);\n        this._options = options;\n        if (!options.components) {\n            options.components = {};\n        }\n        if (!options.frameworkComponents) {\n            options.frameworkComponents = {};\n        }\n        this.paneview = new Paneview(this.element, {\n            // only allow paneview in the vertical orientation for now\n            orientation: Orientation.VERTICAL,\n        });\n        this.addDisposables(this._disposable);\n    }\n    focus() {\n        //\n    }\n    updateOptions(options) {\n        this._options = Object.assign(Object.assign({}, this.options), options);\n    }\n    addPanel(options) {\n        const body = createComponent(options.id, options.component, this.options.components || {}, this.options.frameworkComponents || {}, this.options.frameworkWrapper\n            ? {\n                createComponent: this.options.frameworkWrapper.body.createComponent,\n            }\n            : undefined);\n        let header;\n        if (options.headerComponent) {\n            header = createComponent(options.id, options.headerComponent, this.options.headerComponents || {}, this.options.headerframeworkComponents, this.options.frameworkWrapper\n                ? {\n                    createComponent: this.options.frameworkWrapper.header\n                        .createComponent,\n                }\n                : undefined);\n        }\n        else {\n            header = new DefaultHeader();\n        }\n        const view = new PaneFramework({\n            id: options.id,\n            component: options.component,\n            headerComponent: options.headerComponent,\n            header,\n            body,\n            orientation: Orientation.VERTICAL,\n            isExpanded: !!options.isExpanded,\n            disableDnd: !!this.options.disableDnd,\n            accessor: this,\n        });\n        this.doAddPanel(view);\n        const size = typeof options.size === 'number' ? options.size : Sizing.Distribute;\n        const index = typeof options.index === 'number' ? options.index : undefined;\n        view.init({\n            params: options.params || {},\n            minimumBodySize: options.minimumBodySize,\n            maximumBodySize: options.maximumBodySize,\n            isExpanded: options.isExpanded,\n            title: options.title,\n            containerApi: new PaneviewApi(this),\n        });\n        this.paneview.addPane(view, size, index);\n        view.orientation = this.paneview.orientation;\n        return view;\n    }\n    removePanel(panel) {\n        const views = this.panels;\n        const index = views.findIndex((_) => _ === panel);\n        this.paneview.removePane(index);\n        this.doRemovePanel(panel);\n    }\n    movePanel(from, to) {\n        this.paneview.moveView(from, to);\n    }\n    getPanel(id) {\n        return this.panels.find((view) => view.id === id);\n    }\n    layout(width, height) {\n        const [size, orthogonalSize] = this.paneview.orientation === Orientation.HORIZONTAL\n            ? [width, height]\n            : [height, width];\n        this.paneview.layout(size, orthogonalSize);\n    }\n    toJSON() {\n        const maximum = (value) => value === Number.MAX_SAFE_INTEGER ||\n            value === Number.POSITIVE_INFINITY\n            ? undefined\n            : value;\n        const minimum = (value) => (value <= 0 ? undefined : value);\n        const views = this.paneview\n            .getPanes()\n            .map((view, i) => {\n            const size = this.paneview.getViewSize(i);\n            return {\n                size,\n                data: view.toJSON(),\n                minimumSize: minimum(view.minimumBodySize),\n                maximumSize: maximum(view.maximumBodySize),\n                expanded: view.isExpanded(),\n            };\n        });\n        return {\n            views,\n            size: this.paneview.size,\n        };\n    }\n    fromJSON(serializedPaneview) {\n        this.clear();\n        const { views, size } = serializedPaneview;\n        const queue = [];\n        this.paneview = new Paneview(this.element, {\n            orientation: Orientation.VERTICAL,\n            descriptor: {\n                size,\n                views: views.map((view) => {\n                    const data = view.data;\n                    const body = createComponent(data.id, data.component, this.options.components || {}, this.options.frameworkComponents || {}, this.options.frameworkWrapper\n                        ? {\n                            createComponent: this.options.frameworkWrapper.body\n                                .createComponent,\n                        }\n                        : undefined);\n                    let header;\n                    if (data.headerComponent) {\n                        header = createComponent(data.id, data.headerComponent, this.options.headerComponents || {}, this.options.headerframeworkComponents || {}, this.options.frameworkWrapper\n                            ? {\n                                createComponent: this.options.frameworkWrapper.header\n                                    .createComponent,\n                            }\n                            : undefined);\n                    }\n                    else {\n                        header = new DefaultHeader();\n                    }\n                    const panel = new PaneFramework({\n                        id: data.id,\n                        component: data.component,\n                        headerComponent: data.headerComponent,\n                        header,\n                        body,\n                        orientation: Orientation.VERTICAL,\n                        isExpanded: !!view.expanded,\n                        disableDnd: !!this.options.disableDnd,\n                        accessor: this,\n                    });\n                    this.doAddPanel(panel);\n                    queue.push(() => {\n                        panel.init({\n                            params: data.params || {},\n                            minimumBodySize: view.minimumSize,\n                            maximumBodySize: view.maximumSize,\n                            title: data.title,\n                            isExpanded: !!view.expanded,\n                            containerApi: new PaneviewApi(this),\n                        });\n                        panel.orientation = this.paneview.orientation;\n                    });\n                    setTimeout(() => {\n                        // the original onDidAddView events are missed since they are fired before we can subcribe to them\n                        this._onDidAddView.fire(panel);\n                    }, 0);\n                    return { size: view.size, view: panel };\n                }),\n            },\n        });\n        this.layout(this.width, this.height);\n        queue.forEach((f) => f());\n        this._onDidLayoutfromJSON.fire();\n    }\n    clear() {\n        for (const [_, value] of this._viewDisposables.entries()) {\n            value.dispose();\n        }\n        this._viewDisposables.clear();\n        this.paneview.dispose();\n    }\n    doAddPanel(panel) {\n        const disposable = panel.onDidDrop((event) => {\n            this._onDidDrop.fire(event);\n        });\n        this._viewDisposables.set(panel.id, disposable);\n    }\n    doRemovePanel(panel) {\n        const disposable = this._viewDisposables.get(panel.id);\n        if (disposable) {\n            disposable.dispose();\n            this._viewDisposables.delete(panel.id);\n        }\n    }\n    dispose() {\n        super.dispose();\n        for (const [_, value] of this._viewDisposables.entries()) {\n            value.dispose();\n        }\n        this._viewDisposables.clear();\n        this.paneview.dispose();\n    }\n}\n","import { BasePanelView, } from '../gridview/basePanelView';\nimport { SplitviewPanelApiImpl } from '../api/splitviewPanelApi';\nimport { Orientation } from './core/splitview';\nimport { Emitter } from '../events';\nexport class SplitviewPanel extends BasePanelView {\n    get priority() {\n        return this._priority;\n    }\n    set orientation(value) {\n        this._orientation = value;\n    }\n    get orientation() {\n        return this._orientation;\n    }\n    get minimumSize() {\n        const size = typeof this._minimumSize === 'function'\n            ? this._minimumSize()\n            : this._minimumSize;\n        if (size !== this._evaluatedMinimumSize) {\n            this._evaluatedMinimumSize = size;\n            this.updateConstraints();\n        }\n        return size;\n    }\n    get maximumSize() {\n        const size = typeof this._maximumSize === 'function'\n            ? this._maximumSize()\n            : this._maximumSize;\n        if (size !== this._evaluatedMaximumSize) {\n            this._evaluatedMaximumSize = size;\n            this.updateConstraints();\n        }\n        return size;\n    }\n    get snap() {\n        return this._snap;\n    }\n    constructor(id, componentName) {\n        super(id, componentName, new SplitviewPanelApiImpl(id));\n        this._evaluatedMinimumSize = 0;\n        this._evaluatedMaximumSize = Number.POSITIVE_INFINITY;\n        this._minimumSize = 0;\n        this._maximumSize = Number.POSITIVE_INFINITY;\n        this._snap = false;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this.api.initialize(this);\n        this.addDisposables(this._onDidChange, this.api.onVisibilityChange((event) => {\n            const { isVisible } = event;\n            const { accessor } = this._params;\n            accessor.setVisible(this, isVisible);\n        }), this.api.onActiveChange(() => {\n            const { accessor } = this._params;\n            accessor.setActive(this);\n        }), this.api.onDidConstraintsChangeInternal((event) => {\n            if (typeof event.minimumSize === 'number' ||\n                typeof event.minimumSize === 'function') {\n                this._minimumSize = event.minimumSize;\n            }\n            if (typeof event.maximumSize === 'number' ||\n                typeof event.maximumSize === 'function') {\n                this._maximumSize = event.maximumSize;\n            }\n            this.updateConstraints();\n        }), this.api.onDidSizeChange((event) => {\n            this._onDidChange.fire({ size: event.size });\n        }));\n    }\n    setVisible(isVisible) {\n        this.api._onDidVisibilityChange.fire({ isVisible });\n    }\n    setActive(isActive) {\n        this.api._onDidActiveChange.fire({ isActive });\n    }\n    layout(size, orthogonalSize) {\n        const [width, height] = this.orientation === Orientation.HORIZONTAL\n            ? [size, orthogonalSize]\n            : [orthogonalSize, size];\n        super.layout(width, height);\n    }\n    init(parameters) {\n        super.init(parameters);\n        this._priority = parameters.priority;\n        if (parameters.minimumSize) {\n            this._minimumSize = parameters.minimumSize;\n        }\n        if (parameters.maximumSize) {\n            this._maximumSize = parameters.maximumSize;\n        }\n        if (parameters.snap) {\n            this._snap = parameters.snap;\n        }\n    }\n    toJSON() {\n        const maximum = (value) => value === Number.MAX_SAFE_INTEGER ||\n            value === Number.POSITIVE_INFINITY\n            ? undefined\n            : value;\n        const minimum = (value) => (value <= 0 ? undefined : value);\n        return Object.assign(Object.assign({}, super.toJSON()), { minimumSize: minimum(this.minimumSize), maximumSize: maximum(this.maximumSize) });\n    }\n    updateConstraints() {\n        this.api._onDidConstraintsChange.fire({\n            maximumSize: this._evaluatedMaximumSize,\n            minimumSize: this._evaluatedMinimumSize,\n        });\n    }\n}\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { sequentialNumberGenerator } from '../math';\n/**\n * This component is intended to interface between vanilla-js and React hence we need to be\n * creative in how we update props.\n * A ref of the component is exposed with an update method; which when called stores the props\n * as a ref within this component and forcefully triggers a re-render of the component using\n * the ref of props we just set on the renderered component as the props passed to the inner\n * component\n */\nconst ReactComponentBridge = (props, ref) => {\n    const [_, triggerRender] = React.useState();\n    const _props = React.useRef(props.componentProps);\n    React.useImperativeHandle(ref, () => ({\n        update: (componentProps) => {\n            _props.current = Object.assign(Object.assign({}, _props.current), componentProps);\n            /**\n             * setting a arbitrary piece of state within this component will\n             * trigger a re-render.\n             * we use this rather than updating through a prop since we can\n             * pass a ref into the vanilla-js world.\n             */\n            triggerRender(Date.now());\n        },\n    }), []);\n    return React.createElement(props.component, _props.current);\n};\nReactComponentBridge.displayName = 'DockviewReactJsBridge';\n/**\n * Since we are storing the React.Portal references in a rendered array they\n * require a key property like any other React element rendered in an array\n * to prevent excessive re-rendering\n */\nconst uniquePortalKeyGenerator = sequentialNumberGenerator();\nexport const ReactPartContext = React.createContext({});\nexport class ReactPart {\n    constructor(parent, portalStore, component, parameters, context) {\n        this.parent = parent;\n        this.portalStore = portalStore;\n        this.component = component;\n        this.parameters = parameters;\n        this.context = context;\n        this._initialProps = {};\n        this.disposed = false;\n        this.createPortal();\n    }\n    update(props) {\n        if (this.disposed) {\n            throw new Error('invalid operation: resource is already disposed');\n        }\n        if (!this.componentInstance) {\n            // if the component is yet to be mounted store the props\n            this._initialProps = Object.assign(Object.assign({}, this._initialProps), props);\n        }\n        else {\n            this.componentInstance.update(props);\n        }\n    }\n    createPortal() {\n        if (this.disposed) {\n            throw new Error('invalid operation: resource is already disposed');\n        }\n        if (typeof this.component !== 'function') {\n            /**\n             * we know this isn't a React.FunctionComponent so throw an error here.\n             * if we do not intercept this the React library will throw a very obsure error\n             * for the same reason, at least at this point we will emit a sensible stacktrace.\n             */\n            throw new Error('Invalid Operation. dockview only supports React Functional Components.');\n        }\n        const bridgeComponent = React.createElement(React.forwardRef(ReactComponentBridge), {\n            component: this\n                .component,\n            componentProps: this.parameters,\n            ref: (element) => {\n                this.componentInstance = element;\n                if (Object.keys(this._initialProps).length > 0) {\n                    this.componentInstance.update(this._initialProps);\n                    this._initialProps = {}; // don't keep a reference to the users object once no longer required\n                }\n            },\n        });\n        const node = this.context\n            ? React.createElement(ReactPartContext.Provider, { value: this.context }, bridgeComponent)\n            : bridgeComponent;\n        const portal = ReactDOM.createPortal(node, this.parent, uniquePortalKeyGenerator.next());\n        this.ref = {\n            portal,\n            disposable: this.portalStore.addPortal(portal),\n        };\n    }\n    dispose() {\n        var _a;\n        (_a = this.ref) === null || _a === void 0 ? void 0 : _a.disposable.dispose();\n        this.disposed = true;\n    }\n}\n/**\n * A React Hook that returns an array of portals to be rendered by the user of this hook\n * and a disposable function to add a portal. Calling dispose removes this portal from the\n * portal array\n */\nexport const usePortalsLifecycle = () => {\n    const [portals, setPortals] = React.useState([]);\n    React.useDebugValue(`Portal count: ${portals.length}`);\n    const addPortal = React.useCallback((portal) => {\n        setPortals((existingPortals) => [...existingPortals, portal]);\n        let disposed = false;\n        return {\n            dispose: () => {\n                if (disposed) {\n                    throw new Error('invalid operation: resource already disposed');\n                }\n                disposed = true;\n                setPortals((existingPortals) => existingPortals.filter((p) => p !== portal));\n            },\n        };\n    }, []);\n    return [portals, addPortal];\n};\n// it does the job...\nexport function isReactElement(element) {\n    return element === null || element === void 0 ? void 0 : element.type;\n}\n","import { ReactPart } from '../react';\nimport { Emitter } from '../../events';\nexport class ReactPanelContentPart {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._onDidFocus = new Emitter();\n        this.onDidFocus = this._onDidFocus.event;\n        this._onDidBlur = new Emitter();\n        this.onDidBlur = this._onDidBlur.event;\n        this._element = document.createElement('div');\n        this._element.className = 'dockview-react-part';\n    }\n    focus() {\n        // TODO\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            params: parameters.params,\n            api: parameters.api,\n            containerApi: parameters.containerApi,\n        });\n    }\n    toJSON() {\n        return {\n            id: this.id,\n        };\n    }\n    update(event) {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update(event.params);\n    }\n    updateParentGroup(group, _isPanelVisible) {\n        this._group = group;\n    }\n    layout(_width, _height) {\n        // noop\n    }\n    dispose() {\n        var _a;\n        this._onDidFocus.dispose();\n        this._onDidBlur.dispose();\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import { ReactPart } from '../react';\nimport { DEFAULT_TAB_IDENTIFIER } from '../../dockview/components/tab/defaultTab';\nexport class ReactPanelHeaderPart {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._element = document.createElement('div');\n        this._element.className = 'dockview-react-part';\n    }\n    focus() {\n        //noop\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            params: parameters.params,\n            api: parameters.api,\n            containerApi: parameters.containerApi,\n        });\n    }\n    update(event) {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update(event.params);\n    }\n    toJSON() {\n        if (this.id === DEFAULT_TAB_IDENTIFIER) {\n            return {};\n        }\n        return {\n            id: this.id,\n        };\n    }\n    layout(_width, _height) {\n        // noop - retrieval from api\n    }\n    updateParentGroup(_group, _isPanelVisible) {\n        // noop - retrieval from api\n    }\n    dispose() {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import { DockviewPanel } from '../dockview/dockviewPanel';\nimport { createComponent } from '../panel/componentFactory';\nimport { DockviewApi } from '../api/component.api';\nimport { DefaultTab } from '../dockview/components/tab/defaultTab';\nimport { DefaultGroupPanelView } from '../dockview/defaultGroupPanelView';\nexport class ReactPanelDeserialzier {\n    constructor(layout) {\n        this.layout = layout;\n    }\n    fromJSON(panelData, group) {\n        var _a, _b, _c, _d;\n        const panelId = panelData.id;\n        const params = panelData.params;\n        const title = panelData.title;\n        const viewData = panelData.view;\n        let tab;\n        if ((_a = viewData.tab) === null || _a === void 0 ? void 0 : _a.id) {\n            tab = createComponent(viewData.tab.id, viewData.tab.id, this.layout.options.tabComponents, this.layout.options.frameworkTabComponents, (_b = this.layout.options.frameworkComponentFactory) === null || _b === void 0 ? void 0 : _b.tab, () => new DefaultTab());\n        }\n        else if (this.layout.options.defaultTabComponent) {\n            tab = createComponent(this.layout.options.defaultTabComponent, this.layout.options.defaultTabComponent, this.layout.options.tabComponents, this.layout.options.frameworkTabComponents, (_c = this.layout.options.frameworkComponentFactory) === null || _c === void 0 ? void 0 : _c.tab, () => new DefaultTab());\n        }\n        else {\n            tab = new DefaultTab();\n        }\n        const view = new DefaultGroupPanelView({\n            content: createComponent(viewData.content.id, viewData.content.id, this.layout.options.components, this.layout.options.frameworkComponents, (_d = this.layout.options.frameworkComponentFactory) === null || _d === void 0 ? void 0 : _d.content),\n            tab,\n        });\n        const panel = new DockviewPanel(panelId, this.layout, new DockviewApi(this.layout), group);\n        panel.init({\n            view,\n            title,\n            params: params || {},\n        });\n        return panel;\n    }\n}\n","import { ReactPart } from '../react';\nexport class ReactWatermarkPart {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._groupRef = {\n            value: undefined,\n        };\n        this._element = document.createElement('div');\n        this._element.className = 'dockview-react-part';\n    }\n    init(parameters) {\n        this.parameters = parameters;\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            params: parameters.params,\n            api: parameters.api,\n            containerApi: parameters.containerApi,\n            close: () => {\n                if (this._groupRef.value) {\n                    parameters.containerApi.removeGroup(this._groupRef.value);\n                }\n            },\n        });\n    }\n    focus() {\n        // noop\n    }\n    update(params) {\n        var _a, _b;\n        if (this.parameters) {\n            this.parameters.params = params.params;\n        }\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update({ params: ((_b = this.parameters) === null || _b === void 0 ? void 0 : _b.params) || {} });\n    }\n    toJSON() {\n        return {\n            id: this.id,\n        };\n    }\n    layout(_width, _height) {\n        // noop - retrieval from api\n    }\n    updateParentGroup(group, _isPanelVisible) {\n        // noop - retrieval from api\n        this._groupRef.value = group;\n    }\n    dispose() {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import { ReactPart } from '../react';\nimport { CompositeDisposable, MutableDisposable, } from '../../lifecycle';\nexport class ReactGroupControlsRendererPart {\n    get element() {\n        return this._element;\n    }\n    get part() {\n        return this._part;\n    }\n    get group() {\n        return this._group;\n    }\n    constructor(component, reactPortalStore, _group) {\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._group = _group;\n        this.mutableDisposable = new MutableDisposable();\n        this._element = document.createElement('div');\n        this._element.className = 'dockview-react-part';\n    }\n    focus() {\n        // TODO\n    }\n    init(parameters) {\n        this.mutableDisposable.value = new CompositeDisposable(this._group.model.onDidAddPanel(() => {\n            this.updatePanels();\n        }), this._group.model.onDidRemovePanel(() => {\n            this.updatePanels();\n        }), this._group.model.onDidActivePanelChange(() => {\n            this.updateActivePanel();\n        }), parameters.api.onDidActiveChange(() => {\n            this.updateGroupActive();\n        }));\n        this._part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            api: parameters.api,\n            containerApi: parameters.containerApi,\n            panels: this._group.model.panels,\n            activePanel: this._group.model.activePanel,\n            isGroupActive: this._group.api.isActive,\n        });\n    }\n    update(event) {\n        var _a;\n        (_a = this._part) === null || _a === void 0 ? void 0 : _a.update(event.params);\n    }\n    dispose() {\n        var _a;\n        this.mutableDisposable.dispose();\n        (_a = this._part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n    updatePanels() {\n        this.update({ params: { panels: this._group.model.panels } });\n    }\n    updateActivePanel() {\n        this.update({\n            params: {\n                activePanel: this._group.model.activePanel,\n            },\n        });\n    }\n    updateGroupActive() {\n        this.update({\n            params: {\n                isGroupActive: this._group.api.isActive,\n            },\n        });\n    }\n}\n","import * as React from 'react';\nimport { DockviewComponent, } from '../../dockview/dockviewComponent';\nimport { ReactPanelContentPart } from './reactContentPart';\nimport { ReactPanelHeaderPart } from './reactHeaderPart';\nimport { ReactPanelDeserialzier } from '../deserializer';\nimport { usePortalsLifecycle } from '../react';\nimport { DockviewApi } from '../../api/component.api';\nimport { ReactWatermarkPart } from './reactWatermarkPart';\nimport { watchElementResize } from '../../dom';\nimport { ReactGroupControlsRendererPart, } from './groupControlsRenderer';\nimport { DEFAULT_TAB_IDENTIFIER } from '../../dockview/components/tab/defaultTab';\nfunction createGroupControlElement(component, store) {\n    return component\n        ? (groupPanel) => {\n            return new ReactGroupControlsRendererPart(component, store, groupPanel);\n        }\n        : undefined;\n}\nexport const DockviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const dockviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    React.useEffect(() => {\n        if (props.disableAutoResizing) {\n            return () => {\n                //\n            };\n        }\n        const watcher = watchElementResize(domRef.current, (entry) => {\n            var _a;\n            const { width, height } = entry.contentRect;\n            (_a = dockviewRef.current) === null || _a === void 0 ? void 0 : _a.layout(width, height);\n        });\n        return () => {\n            watcher.dispose();\n        };\n    }, [props.disableAutoResizing]);\n    React.useEffect(() => {\n        var _a;\n        const factory = {\n            content: {\n                createComponent: (_id, componentId, component) => {\n                    return new ReactPanelContentPart(componentId, component, {\n                        addPortal,\n                    });\n                },\n            },\n            tab: {\n                createComponent: (_id, componentId, component) => {\n                    return new ReactPanelHeaderPart(componentId, component, {\n                        addPortal,\n                    });\n                },\n            },\n            watermark: {\n                createComponent: (_id, componentId, component) => {\n                    return new ReactWatermarkPart(componentId, component, {\n                        addPortal,\n                    });\n                },\n            },\n        };\n        const element = document.createElement('div');\n        const dockview = new DockviewComponent(element, {\n            frameworkComponentFactory: factory,\n            frameworkComponents: props.components,\n            frameworkTabComponents: Object.assign(Object.assign({}, (props.tabComponents || {})), { [DEFAULT_TAB_IDENTIFIER]: props.defaultTabComponent }),\n            tabHeight: props.tabHeight,\n            watermarkFrameworkComponent: props.watermarkComponent,\n            defaultTabComponent: DEFAULT_TAB_IDENTIFIER,\n            styles: props.hideBorders\n                ? { separatorBorder: 'transparent' }\n                : undefined,\n            showDndOverlay: props.showDndOverlay,\n            createGroupControlElement: createGroupControlElement(props.groupControlComponent, { addPortal }),\n            singleTabMode: props.singleTabMode,\n        });\n        (_a = domRef.current) === null || _a === void 0 ? void 0 : _a.appendChild(dockview.element);\n        dockview.deserializer = new ReactPanelDeserialzier(dockview);\n        const { clientWidth, clientHeight } = domRef.current;\n        dockview.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api: new DockviewApi(dockview) });\n        }\n        dockviewRef.current = dockview;\n        return () => {\n            dockview.dispose();\n            element.remove();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const disposable = dockviewRef.current.onDidDrop((event) => {\n            if (props.onDidDrop) {\n                props.onDidDrop(event);\n            }\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.onDidDrop]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            frameworkComponents: props.components,\n        });\n    }, [props.components]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            watermarkFrameworkComponent: props.watermarkComponent,\n        });\n    }, [props.watermarkComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            showDndOverlay: props.showDndOverlay,\n        });\n    }, [props.showDndOverlay]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            frameworkTabComponents: props.tabComponents,\n        });\n    }, [props.tabComponents]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            defaultTabComponent: DEFAULT_TAB_IDENTIFIER,\n            frameworkTabComponents: Object.assign(Object.assign({}, (props.tabComponents || {})), { [DEFAULT_TAB_IDENTIFIER]: props.defaultTabComponent }),\n        });\n    }, [props.defaultTabComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createGroupControlElement: createGroupControlElement(props.groupControlComponent, { addPortal }),\n        });\n    }, [props.groupControlComponent]);\n    return (React.createElement(\"div\", { className: props.className, style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nDockviewReact.displayName = 'DockviewComponent';\n","import * as React from 'react';\nexport const CloseButton = () => (React.createElement(\"svg\", { height: \"11\", width: \"11\", viewBox: \"0 0 28 28\", \"aria-hidden\": 'false', focusable: false, className: \"dockview-svg\" },\n    React.createElement(\"path\", { d: \"M2.1 27.3L0 25.2L11.55 13.65L0 2.1L2.1 0L13.65 11.55L25.2 0L27.3 2.1L15.75 13.65L27.3 25.2L25.2 27.3L13.65 15.75L2.1 27.3Z\" })));\nexport const ExpandMore = () => {\n    return (React.createElement(\"svg\", { width: \"11\", height: \"11\", viewBox: \"0 0 24 15\", \"aria-hidden\": 'false', focusable: false, className: \"dockview-svg\" },\n        React.createElement(\"path\", { d: \"M12 14.15L0 2.15L2.15 0L12 9.9L21.85 0.0499992L24 2.2L12 14.15Z\" })));\n};\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from 'react';\nimport { CloseButton } from '../svg';\nexport const DockviewDefaultTab = (_a) => {\n    var { api, containerApi: _containerApi, params: _params } = _a, rest = __rest(_a, [\"api\", \"containerApi\", \"params\"]);\n    const onClose = React.useCallback((event) => {\n        event.stopPropagation();\n        api.close();\n    }, [api]);\n    const onClick = React.useCallback((event) => {\n        api.setActive();\n        if (rest.onClick) {\n            rest.onClick(event);\n        }\n    }, [api, rest.onClick]);\n    const iconClassname = React.useMemo(() => {\n        const cn = ['dockview-react-tab-action'];\n        return cn.join(',');\n    }, []);\n    return (React.createElement(\"div\", Object.assign({}, rest, { onClick: onClick, className: \"dockview-react-tab\" }),\n        React.createElement(\"span\", { className: \"dockview-react-tab-title\" }, api.title),\n        React.createElement(\"div\", { className: iconClassname, onClick: onClose },\n            React.createElement(CloseButton, null))));\n};\n","import { SplitviewApi } from '../../api/component.api';\nimport { SplitviewPanel } from '../../splitview/splitviewPanel';\nimport { ReactPart } from '../react';\nexport class ReactPanelView extends SplitviewPanel {\n    constructor(id, component, reactComponent, reactPortalStore) {\n        super(id, component);\n        this.reactComponent = reactComponent;\n        this.reactPortalStore = reactPortalStore;\n    }\n    getComponent() {\n        var _a;\n        return new ReactPart(this.element, this.reactPortalStore, this.reactComponent, {\n            params: ((_a = this._params) === null || _a === void 0 ? void 0 : _a.params) || {},\n            api: this.api,\n            containerApi: new SplitviewApi(this._params.accessor),\n        });\n    }\n}\n","import * as React from 'react';\nimport { SplitviewApi } from '../../api/component.api';\nimport { SplitviewComponent, } from '../../splitview/splitviewComponent';\nimport { Orientation } from '../../splitview/core/splitview';\nimport { usePortalsLifecycle } from '../react';\nimport { ReactPanelView } from './view';\nimport { watchElementResize } from '../../dom';\nexport const SplitviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const splitviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    React.useEffect(() => {\n        if (props.disableAutoResizing) {\n            return () => {\n                //\n            };\n        }\n        const watcher = watchElementResize(domRef.current, (entry) => {\n            var _a;\n            const { width, height } = entry.contentRect;\n            (_a = splitviewRef.current) === null || _a === void 0 ? void 0 : _a.layout(width, height);\n        });\n        return () => {\n            watcher.dispose();\n        };\n    }, [props.disableAutoResizing]);\n    React.useEffect(() => {\n        const splitview = new SplitviewComponent(domRef.current, {\n            orientation: props.orientation || Orientation.HORIZONTAL,\n            frameworkComponents: props.components,\n            frameworkWrapper: {\n                createComponent: (id, componentId, component) => {\n                    return new ReactPanelView(id, componentId, component, {\n                        addPortal,\n                    });\n                },\n            },\n            proportionalLayout: typeof props.proportionalLayout === 'boolean'\n                ? props.proportionalLayout\n                : true,\n            styles: props.hideBorders\n                ? { separatorBorder: 'transparent' }\n                : undefined,\n        });\n        const { clientWidth, clientHeight } = domRef.current;\n        splitview.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api: new SplitviewApi(splitview) });\n        }\n        splitviewRef.current = splitview;\n        return () => {\n            splitview.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!splitviewRef.current) {\n            return;\n        }\n        splitviewRef.current.updateOptions({\n            frameworkComponents: props.components,\n        });\n    }, [props.components]);\n    return (React.createElement(\"div\", { className: props.className, style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nSplitviewReact.displayName = 'SplitviewComponent';\n","import { GridviewApi } from '../../api/component.api';\nimport { GridviewPanelApiImpl } from '../../api/gridviewPanelApi';\nimport { GridviewPanel, } from '../../gridview/gridviewPanel';\nimport { ReactPart } from '../react';\nexport class ReactGridPanelView extends GridviewPanel {\n    constructor(id, component, reactComponent, reactPortalStore) {\n        super(id, component, new GridviewPanelApiImpl(id));\n        this.reactComponent = reactComponent;\n        this.reactPortalStore = reactPortalStore;\n    }\n    getComponent() {\n        var _a;\n        return new ReactPart(this.element, this.reactPortalStore, this.reactComponent, {\n            params: ((_a = this._params) === null || _a === void 0 ? void 0 : _a.params) || {},\n            api: this.api,\n            containerApi: new GridviewApi(this._params.accessor),\n        });\n    }\n}\n","import * as React from 'react';\nimport { GridviewComponent, } from '../../gridview/gridviewComponent';\nimport { Orientation } from '../../splitview/core/splitview';\nimport { ReactGridPanelView } from './view';\nimport { usePortalsLifecycle } from '../react';\nimport { GridviewApi } from '../../api/component.api';\nimport { watchElementResize } from '../../dom';\nexport const GridviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const gridviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    React.useEffect(() => {\n        if (props.disableAutoResizing) {\n            return () => {\n                //\n            };\n        }\n        const watcher = watchElementResize(domRef.current, (entry) => {\n            var _a;\n            const { width, height } = entry.contentRect;\n            (_a = gridviewRef.current) === null || _a === void 0 ? void 0 : _a.layout(width, height);\n        });\n        return () => {\n            watcher.dispose();\n        };\n    }, [props.disableAutoResizing]);\n    React.useEffect(() => {\n        var _a;\n        const element = document.createElement('div');\n        const gridview = new GridviewComponent(element, {\n            proportionalLayout: typeof props.proportionalLayout === 'boolean'\n                ? props.proportionalLayout\n                : true,\n            orientation: props.orientation || Orientation.HORIZONTAL,\n            frameworkComponents: props.components,\n            frameworkComponentFactory: {\n                createComponent: (id, componentId, component) => {\n                    return new ReactGridPanelView(id, componentId, component, {\n                        addPortal,\n                    });\n                },\n            },\n            styles: props.hideBorders\n                ? { separatorBorder: 'transparent' }\n                : undefined,\n        });\n        (_a = domRef.current) === null || _a === void 0 ? void 0 : _a.appendChild(gridview.element);\n        const { clientWidth, clientHeight } = domRef.current;\n        gridview.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api: new GridviewApi(gridview) });\n        }\n        gridviewRef.current = gridview;\n        return () => {\n            gridview.dispose();\n            element.remove();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!gridviewRef.current) {\n            return;\n        }\n        gridviewRef.current.updateOptions({\n            frameworkComponents: props.components,\n        });\n    }, [props.components]);\n    return (React.createElement(\"div\", { className: props.className, style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nGridviewReact.displayName = 'GridviewComponent';\n","import { ReactPart } from '../react';\nexport class PanePanelSection {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._element = document.createElement('div');\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            params: parameters.params,\n            api: parameters.api,\n            title: parameters.title,\n            containerApi: parameters.containerApi,\n        });\n    }\n    toJSON() {\n        return {\n            id: this.id,\n        };\n    }\n    update(params) {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update(params.params);\n    }\n    dispose() {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import * as React from 'react';\nimport { PaneviewComponent, } from '../../paneview/paneviewComponent';\nimport { usePortalsLifecycle } from '../react';\nimport { PaneviewApi } from '../../api/component.api';\nimport { PanePanelSection } from './view';\nimport { watchElementResize } from '../../dom';\nexport const PaneviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const paneviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    React.useEffect(() => {\n        if (props.disableAutoResizing) {\n            return () => {\n                //\n            };\n        }\n        const watcher = watchElementResize(domRef.current, (entry) => {\n            var _a;\n            const { width, height } = entry.contentRect;\n            (_a = paneviewRef.current) === null || _a === void 0 ? void 0 : _a.layout(width, height);\n        });\n        return () => {\n            watcher.dispose();\n        };\n    }, [props.disableAutoResizing]);\n    React.useEffect(() => {\n        const createComponent = (id, _componentId, component) => new PanePanelSection(id, component, {\n            addPortal,\n        });\n        const paneview = new PaneviewComponent(domRef.current, {\n            frameworkComponents: props.components,\n            components: {},\n            headerComponents: {},\n            disableDnd: props.disableDnd,\n            headerframeworkComponents: props.headerComponents,\n            frameworkWrapper: {\n                header: {\n                    createComponent,\n                },\n                body: {\n                    createComponent,\n                },\n            },\n            showDndOverlay: props.showDndOverlay,\n        });\n        const api = new PaneviewApi(paneview);\n        const { clientWidth, clientHeight } = domRef.current;\n        paneview.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api });\n        }\n        paneviewRef.current = paneview;\n        return () => {\n            paneview.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return;\n        }\n        paneviewRef.current.updateOptions({\n            frameworkComponents: props.components,\n        });\n    }, [props.components]);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return;\n        }\n        paneviewRef.current.updateOptions({\n            headerframeworkComponents: props.headerComponents,\n        });\n    }, [props.headerComponents]);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return () => {\n                //\n            };\n        }\n        const paneview = paneviewRef.current;\n        const disposable = paneview.onDidDrop((event) => {\n            if (props.onDidDrop) {\n                props.onDidDrop(Object.assign(Object.assign({}, event), { api: new PaneviewApi(paneview) }));\n            }\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.onDidDrop]);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return;\n        }\n        paneviewRef.current.updateOptions({\n            showDndOverlay: props.showDndOverlay,\n        });\n    }, [props.showDndOverlay]);\n    return (React.createElement(\"div\", { className: props.className, style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nPaneviewReact.displayName = 'PaneviewComponent';\n"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","sourceSymbolKeys","prototype","propertyIsEnumerable","call","MDXContext","useMDXComponents","components","contextComponents","allComponents","MDXProvider","props","Provider","children","TYPE_PROP_NAME","DEFAULTS","inlineCode","wrapper","_ref","MDXCreateElement","ref","propComponents","mdxType","originalType","parentName","etc","type","Component","concat","createElement","args","argsLength","createElementArgArray","Array","newProps","hasOwnProperty","displayName","TransferObject","constructor","PanelTransfer","viewId","groupId","panelId","super","this","PaneTransfer","paneId","LocalSelectionTransfer","static","INSTANCE","hasData","proto","clearData","undefined","data","getData","setData","getPanelData","panelTransfer","getInstance","getPaneData","paneTransfer","Event","Disposable","any","listener","disposables","map","child","dispose","d","Emitter","options","_listeners","_disposed","event","_event","_a","replay","_last","index","splice","fire","e","addDisposableWindowListener","element","addEventListener","removeEventListener","addDisposableListener","TickDelayedEvent","_onFired","onEvent","timer","clearTimeout","setTimeout","NONE","CompositeDisposable","addDisposables","arg","MutableDisposable","_disposable","disposable","watchElementResize","cb","observer","ResizeObserver","entires","firstEntry","observe","unobserve","disconnect","removeClasses","classes","classname","classList","contains","remove","addClasses","add","toggleClass","className","isToggled","hasClass","isAncestor","testChild","testAncestor","parentNode","getElementsByTagName","tag","slice","document","trackFocus","FocusTracker","_onDidFocus","onDidFocus","_onDidBlur","onDidBlur","hasFocus","activeElement","loosingFocus","onFocus","onBlur","window","_refreshStateHandler","HTMLElement","refreshState","clamp","min","max","Error","Math","sequentialNumberGenerator","next","toString","tail","arr","sequenceEquals","arr1","arr2","pushToStart","unshift","pushToEnd","range","from","to","result","ViewItem","size","_size","cachedVisibleSize","_cachedVisibleSize","visible","setVisible","viewMinimumSize","viewMaximumSize","container","toggle","view","minimumSize","maximumSize","priority","snap","enabled","style","pointerEvents","Orientation","SashState","LayoutPriority","Sizing","Distribute","Split","Invisible","Splitview","orthogonalSize","_orthogonalSize","views","proportions","_proportions","orientation","_orientation","tmp","HORIZONTAL","reduce","r","item","Number","POSITIVE_INFINITY","startSnappingEnabled","_startSnappingEnabled","updateSashEnablement","endSnappingEnabled","_endSnappingEnabled","sashes","contentSize","_onDidSashEnd","onDidSashEnd","_onDidAddView","onDidAddView","_onDidRemoveView","onDidRemoveView","resize","delta","sizes","lowPriorityIndexes","highPriorityIndexes","overloadMinDelta","overloadMaxDelta","snapBefore","snapAfter","x","NEGATIVE_INFINITY","upIndexes","downIndexes","upItems","upSizes","downItems","downSizes","minDeltaUp","_","maxDeltaUp","maxDeltaDown","minDeltaDown","minDelta","maxDelta","snapped","snapView","limitDelta","actualDelta","deltaUp","viewDelta","deltaDown","createContainer","proportionalLayout","viewContainer","createViewContainer","sashContainer","createSashContainer","appendChild","styles","descriptor","viewDescriptor","sizing","addView","saveProportions","separatorBorder","removeProperty","setProperty","isViewVisible","setViewVisible","viewItem","distributeEmptySpace","layoutViews","getViewSize","resizeView","indexes","Low","High","round","relayout","getViews","onDidChange","skipLayout","viewSize","newSize","removeChild","insertBefore","sash","onStart","iframes","iframe","start","clientX","clientY","sashIndex","array","fn","firstIndex","s","snapBeforeIndex","findFirstSnapIndex","snapAfterIndex","snappedViewItem","halfSize","floor","mousemove","mousemoveEvent","end","sashItem","distributeViewSizes","flexibleViewItems","flexibleSize","removeView","getViewCachedVisibleSize","moveView","layout","previousSize","lowPriorityIndex","emptyDelta","sum","offset","left","top","VERTICAL","width","height","previous","collapsesDown","expandsDown","reverseViews","reverse","collapsesUp","expandsUp","position","snappedBefore","snappedAfter","updateSash","MINIMUM","MAXIMUM","DISABLED","ENABLED","state","orientationClassname","Paneview","splitview","paneItems","skipAnimation","_onDidChange","getPanes","pane","onDidChangeExpansionState","setupAnimation","paneItem","addPane","removePane","skipDispose","animationTimer","LeafNode","minimumWidth","maximumWidth","minimumHeight","maximumHeight","minimumOrthogonalSize","maximumOrthogonalSize","BranchNode","c","Normal","priorities","some","p","childDescriptors","_childrenDisposable","childDescriptor","node","setupChildrenEvents","isChildVisible","setChildVisible","moveChild","_removeChild","_addChild","getChildSize","resizeChild","addChild","getChildCachedVisibleSize","findLeaf","candiateNode","last","flipNode","orthogonal","totalSize","childSize","getGridLocation","parentElement","test","el","firstElementChild","lastElementChild","nextElementSibling","indexInParent","getRelativeLocation","rootOrientation","location","direction","getLocationOrientation","directionOrientation","getDirectionOrientation","rest","_index","serializeBranchNode","box","isGridBranchNode","toJSON","Gridview","_root","serialize","root","getView","clear","deserialize","json","deserializer","_deserialize","_deserializeNode","isRoot","serializedChild","fromJSON","oldRoot","insertOrthogonalSplitviewAtRoot","childReference","progmaticSelect","getNode","_getViews","nodeCachedVisibleSize","path","n","l","parent","parentLocation","pathToParent","grandParent","parentIndex","__","newSiblingSize","newSiblingCachedVisibleSize","newParent","newSibling","sibling","isSiblingVisible","siblingSizing","SplitviewApi","component","panels","onDidLayoutFromJSON","onDidLayoutChange","updateOptions","removePanel","panel","focus","getPanel","id","addPanel","movePanel","PaneviewApi","onDidDrop","emitter","assign","api","GridviewApi","onDidAddPanel","onDidAddGroup","onDidRemovePanel","onDidRemoveGroup","onDidActivePanelChange","onDidActiveGroupChange","groups","force","DockviewApi","totalPanels","activePanel","activeGroup","getTabHeight","tabHeight","setTabHeight","getGroupPanel","addGroup","moveToNext","moveToPrevious","closeAllGroups","removeGroup","group","getGroup","DragAndDropObserver","callbacks","registerListeners","onDragEnter","preventDefault","onDragOver","onDragLeave","onDragEnd","onDrop","directionToPosition","positionToDirection","Droptarget","_state","_onDrop","acceptedTargetZonesSet","Set","acceptedTargetZones","clientWidth","clientHeight","rect","currentTarget","getBoundingClientRect","y","quadrant","calculateQuadrant","canDisplayOverlay","overlay","append","toggleClasses","setState","removeDropTarget","stopPropagation","nativeEvent","_b","_c","_d","isSmallX","isSmallY","isLeft","isRight","isTop","isBottom","rightClass","leftClass","topClass","bottomClass","overlayModel","translate","transform","overlayType","_e","_f","isPercentage","activationSize","maybeNumber","fallback","threshold","xp","yp","has","calculateQuadrantAsPercentage","calculateQuadrantAsPixels","ContentContainer","_element","tabIndex","show","display","hide","openPanel","content","_width","_height","closePanel","DockviewDropTargets","DragHandler","_onDragStart","onDragStart","configure","dataTransfer","effectAllowed","Tab","accessor","_onChanged","onChanged","_onDropped","draggable","defaultPrevented","droptarget","locked","model","setActive","isActive","setContent","part","GroupDragHandler","accessorId","getComputedStyle","bgColor","getPropertyValue","color","ghostElement","backgroundColor","padding","fontSize","lineHeight","borderRadius","textContent","body","setDragImage","addGhostImage","VoidContainer","doSetGroupActive","handler","voidDropTarget","Panel","TabsContainer","tabs","hidden","_hidden","setActionElement","actions","actionContainer","tab","selectedIndex","at","findIndex","singleTabMode","tabContainer","voidContainer","button","_isGroupActive","addTab","delete","tabToRemove","setActivePanel","isActivePanel","find","tabToAdd","alreadyFocused","isContentFocused","skipFocus","Groupview","_activePanel","_locked","_panels","isEmpty","MAX_SAFE_INTEGER","hasWatermark","watermark","header","tabsContainer","contentContainer","groupPanel","mostRecentlyUsed","_onMove","onMove","_onDidDrop","_onDidAddPanel","_onDidRemovePanel","_onDidActivePanelChange","dropTarget","hideHeader","handleDropEvent","initialize","doAddPanel","updateContainer","createGroupControlElement","_control","init","containerApi","activeView","normalizedIndex","suppressRoll","containsPanel","includes","_params","update","skipSetPanelActive","skipSetGroupActive","updateParentGroup","doSetActivePanel","groupItemOrId","panelToRemove","_removePanel","closeAllPanels","arrPanelCpy","doClose","isPanelActive","updateActions","isGroupActive","doRemovePanel","nextPanel","skipSetActive","hasExistingPanel","updateMru","createWatermarkComponent","params","title","showDndOverlay","itemId","nextLayoutId","toTarget","BaseGrid","_id","_groups","values","gridview","_activeGroup","Map","_onDidLayoutChange","_onDidRemoveGroup","_onDidAddGroup","_onDidActiveGroupChange","_bufferOnDidLayoutChange","isVisible","doAddGroup","doRemoveGroup","get","skipActive","forceResize","PanelApiImpl","isFocused","_isFocused","_isActive","_isVisible","panelUpdatesDisposable","_onDidDimensionChange","onDidDimensionsChange","_onDidChangeFocus","onDidFocusChange","_onFocusEvent","onFocusEvent","_onDidVisibilityChange","onDidVisibilityChange","_onVisibilityChange","onVisibilityChange","_onDidActiveChange","onDidActiveChange","_onActiveChange","onActiveChange","_onUpdateParameters","onUpdateParameters","parameters","updateParameters","GridviewPanelApiImpl","_onDidConstraintsChangeInternal","onDidConstraintsChangeInternal","_onDidConstraintsChange","onDidConstraintsChange","_onDidSizeChange","onDidSizeChange","setConstraints","setSize","DockviewPanelApiImpl","isOldGroupActive","_group","_onDidGroupChange","_onDidTitleChange","onDidTitleChange","onDidGroupChange","setTitle","close","DockviewPanel","_title","_view","isPanelVisible","ActionContainer","_list","createSvgElementFromPath","svg","createElementNS","setAttributeNS","viewbox","createCloseButton","Watermark","emptySpace","flexGrow","closeAnchor","ev","render","_visible","isOneGroup","createComponent","componentName","frameworkComponents","createFrameworkComponent","FrameworkComponent","DEFAULT_TAB_IDENTIFIER","DefaultTab","_isPanelVisible","_content","_actionContainer","action","changed","BasePanelView","outline","overflow","getComponent","GridviewPanel","_priority","_snap","_minimumWidth","_evaluatedMinimumWidth","updateConstraints","_minimumHeight","_evaluatedMinimumHeight","_maximumHeight","_evaluatedMaximumHeight","_maximumWidth","_evaluatedMaximumWidth","maximum","minimum","GroupviewApi","GroupPanel","_model","DefaultGroupPanelView","_tab","renderers","DockviewComponent","flatMap","_deserializer","_options","nextGroupId","_onDidLayoutFromJSON","updateWatermark","frameworkTabComponents","tabComponents","watermarkComponent","watermarkFrameworkComponent","Edge","moveGroupOrPanel","orthogonalize","_api","createGroupAtLocation","hasOrientationChanged","includePanel","grid","collection","isArray","createGroup","hasActiveGroup","hasActivePanel","entry","entries","referenceGroup","referencePanel","findGroup","isPanelOptionsWithGroup","createPanel","relativeLocation","removeEmptyGroup","frameworkComponentFactory","watermarkContainer","isGroupOptionsWithGroup","sourceGroup","referenceLocation","targetLocation","targetParentLocation","sourceLocation","sourceParentLocation","targetGroup","updatedReferenceLocation","groupItem","dropLocation","moveGroup","isGroupAlreadyFocused","console","warn","set","createContentComponent","createTabComponent","tabComponent","defaultTabComponent","GridviewComponent","_onDidLayoutfromJSON","_key","serializedGridview","queue","registerPanel","f","removedPanel","reference","SplitviewComponent","_splitview","v","frameworkWrapper","doAddView","serializedSplitview","SplitviewPanelApiImpl","PaneviewPanelApiImpl","_pane","_onDidExpansionChange","onDidExpansionChange","_onMouseEnter","onMouseEnter","_onMouseLeave","onMouseLeave","setExpanded","isExpanded","PaneviewPanel","headerSize","_minimumBodySize","_maximumBodySize","minimumBodySize","maximumBodySize","headerVisible","_headerVisible","headerComponent","isHeaderVisible","_onDidChangeExpansionState","_isExpanded","expandedSize","isPanelExpanded","renderOnce","expanded","bodyPart","getBodyComponent","headerPart","getHeaderComponent","minHeight","maxHeight","DraggablePaneviewPanel","disableDnd","initDragFeatures","existingPanel","allPanels","fromIndex","toIndex","DefaultHeader","_expandedIcon","_collapsedIcon","apiRef","_expander","updateIcon","PaneFramework","PaneviewComponent","paneview","_paneview","_viewDisposables","headerComponents","headerframeworkComponents","serializedPaneview","SplitviewPanel","_minimumSize","_evaluatedMinimumSize","_maximumSize","_evaluatedMaximumSize","ReactComponentBridge","triggerRender","React","_props","componentProps","current","Date","now","uniquePortalKeyGenerator","ReactPartContext","ReactPart","portalStore","context","_initialProps","disposed","createPortal","componentInstance","bridgeComponent","portal","ReactDOM","addPortal","usePortalsLifecycle","portals","setPortals","existingPortals","ReactPanelContentPart","reactPortalStore","ReactPanelHeaderPart","ReactPanelDeserialzier","panelData","viewData","ReactWatermarkPart","_groupRef","ReactGroupControlsRendererPart","_part","mutableDisposable","updatePanels","updateActivePanel","updateGroupActive","store","DockviewReact","domRef","dockviewRef","disableAutoResizing","watcher","contentRect","factory","componentId","dockview","hideBorders","groupControlComponent","onReady","CloseButton","viewBox","focusable","__rest","t","DockviewDefaultTab","_containerApi","onClose","onClick","iconClassname","join","ReactPanelView","reactComponent","SplitviewReact","splitviewRef","ReactGridPanelView","GridviewReact","gridviewRef","PanePanelSection","PaneviewReact","paneviewRef","_componentId"],"sourceRoot":""}