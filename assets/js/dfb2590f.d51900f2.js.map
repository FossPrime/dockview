{"version":3,"file":"assets/js/dfb2590f.d51900f2.js","mappings":"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","sources":["webpack://dockview-docs/./node_modules/@mdx-js/react/dist/esm.js","webpack://dockview-docs/./src/components/simpleSplitview.tsx","webpack://dockview-docs/./src/components/simpleSplitview2.tsx","webpack://dockview-docs/./docs/basics.mdx"],"sourcesContent":["import React from 'react';\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nvar isFunction = function isFunction(obj) {\n  return typeof obj === 'function';\n};\n\nvar MDXContext = /*#__PURE__*/React.createContext({});\nvar withMDXComponents = function withMDXComponents(Component) {\n  return function (props) {\n    var allComponents = useMDXComponents(props.components);\n    return /*#__PURE__*/React.createElement(Component, _extends({}, props, {\n      components: allComponents\n    }));\n  };\n};\nvar useMDXComponents = function useMDXComponents(components) {\n  var contextComponents = React.useContext(MDXContext);\n  var allComponents = contextComponents;\n\n  if (components) {\n    allComponents = isFunction(components) ? components(contextComponents) : _objectSpread2(_objectSpread2({}, contextComponents), components);\n  }\n\n  return allComponents;\n};\nvar MDXProvider = function MDXProvider(props) {\n  var allComponents = useMDXComponents(props.components);\n  return /*#__PURE__*/React.createElement(MDXContext.Provider, {\n    value: allComponents\n  }, props.children);\n};\n\nvar TYPE_PROP_NAME = 'mdxType';\nvar DEFAULTS = {\n  inlineCode: 'code',\n  wrapper: function wrapper(_ref) {\n    var children = _ref.children;\n    return /*#__PURE__*/React.createElement(React.Fragment, {}, children);\n  }\n};\nvar MDXCreateElement = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var propComponents = props.components,\n      mdxType = props.mdxType,\n      originalType = props.originalType,\n      parentName = props.parentName,\n      etc = _objectWithoutProperties(props, [\"components\", \"mdxType\", \"originalType\", \"parentName\"]);\n\n  var components = useMDXComponents(propComponents);\n  var type = mdxType;\n  var Component = components[\"\".concat(parentName, \".\").concat(type)] || components[type] || DEFAULTS[type] || originalType;\n\n  if (propComponents) {\n    return /*#__PURE__*/React.createElement(Component, _objectSpread2(_objectSpread2({\n      ref: ref\n    }, etc), {}, {\n      components: propComponents\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _objectSpread2({\n    ref: ref\n  }, etc));\n});\nMDXCreateElement.displayName = 'MDXCreateElement';\nfunction createElement (type, props) {\n  var args = arguments;\n  var mdxType = props && props.mdxType;\n\n  if (typeof type === 'string' || mdxType) {\n    var argsLength = args.length;\n    var createElementArgArray = new Array(argsLength);\n    createElementArgArray[0] = MDXCreateElement;\n    var newProps = {};\n\n    for (var key in props) {\n      if (hasOwnProperty.call(props, key)) {\n        newProps[key] = props[key];\n      }\n    }\n\n    newProps.originalType = type;\n    newProps[TYPE_PROP_NAME] = typeof type === 'string' ? type : mdxType;\n    createElementArgArray[1] = newProps;\n\n    for (var i = 2; i < argsLength; i++) {\n      createElementArgArray[i] = args[i];\n    }\n\n    return React.createElement.apply(null, createElementArgArray);\n  }\n\n  return React.createElement.apply(null, args);\n}\n\nexport { MDXContext, MDXProvider, createElement as mdx, useMDXComponents, withMDXComponents };\n","import {\n    ISplitviewPanelProps,\n    Orientation,\n    SplitviewReact,\n    SplitviewReadyEvent,\n} from 'dockview';\nimport * as React from 'react';\n\nconst components = {\n    default: (props: ISplitviewPanelProps<{ title: string }>) => {\n        return <div style={{ padding: '20px' }}>{props.params.title}</div>;\n    },\n};\n\nexport const SimpleSplitview = (props: { proportional?: boolean }) => {\n    const onReady = (event: SplitviewReadyEvent) => {\n        event.api.addPanel({\n            id: 'panel_1',\n            component: 'default',\n            params: {\n                title: 'Panel 1',\n            },\n            minimumSize: 100,\n        });\n\n        event.api.addPanel({\n            id: 'panel_2',\n            component: 'default',\n            params: {\n                title: 'Panel 2',\n            },\n            minimumSize: 100,\n        });\n\n        event.api.addPanel({\n            id: 'panel_3',\n            component: 'default',\n            params: {\n                title: 'Panel 3',\n            },\n            minimumSize: 100,\n        });\n    };\n\n    return (\n        <SplitviewReact\n            components={components}\n            proportionalLayout={props.proportional}\n            onReady={onReady}\n            orientation={Orientation.HORIZONTAL}\n            className=\"dockview-theme-dark\"\n        />\n    );\n};\n","import { SimpleSplitview } from './simpleSplitview';\nimport * as React from 'react';\n\nexport const SimpleSplitview2 = (props: { proportional?: boolean }) => {\n    const [value, setValue] = React.useState<number>(50);\n\n    const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setValue(Number(event.target.value));\n    };\n\n    return (\n        <div\n            style={{\n                display: 'flex',\n                flexDirection: 'column',\n                height: '100px',\n                margin: '10px 0px',\n            }}\n        >\n            <div\n                style={{\n                    height: '25px',\n                    display: 'flex',\n                    alignItems: 'center',\n                }}\n            >\n                <input\n                    type={'range'}\n                    min={20}\n                    max={100}\n                    defaultValue={50}\n                    value={value}\n                    onChange={onChange}\n                />\n                <span style={{ padding: '0px 8px' }}>\n                    Slide to resize the splitview container\n                </span>\n            </div>\n            <div\n                style={{\n                    flexGrow: 1,\n                    display: 'grid',\n                    gridTemplateColumns: `${value}fr ${100 - value}fr`,\n                }}\n            >\n                <div\n                    style={{\n                        backgroundColor: 'rgb(30,30,30)',\n                        color: 'white',\n                        flexGrow: 1,\n                        border: '1px solid grey',\n                    }}\n                >\n                    <SimpleSplitview proportional={props.proportional} />\n                </div>\n                <div></div>\n            </div>\n        </div>\n    );\n};\n","\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\n/* @jsxFrag mdx.Fragment */\n\nimport React from 'react';\nimport { mdx } from '@mdx-js/react';\n\n\nexport const frontMatter = {\n\tsidebar_position: 1\n};\nexport const contentTitle = 'Basics';\nexport const metadata = {\n  \"unversionedId\": \"basics\",\n  \"id\": \"basics\",\n  \"title\": \"Basics\",\n  \"description\": \"This section will take you through a number of concepts that can be applied to all dockview components.\",\n  \"source\": \"@site/docs/basics.mdx\",\n  \"sourceDirName\": \".\",\n  \"slug\": \"/basics\",\n  \"permalink\": \"/docs/basics\",\n  \"draft\": false,\n  \"editUrl\": \"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/basics.mdx\",\n  \"tags\": [],\n  \"version\": \"current\",\n  \"sidebarPosition\": 1,\n  \"frontMatter\": {\n    \"sidebar_position\": 1\n  },\n  \"sidebar\": \"tutorialSidebar\",\n  \"previous\": {\n    \"title\": \"Dockview\",\n    \"permalink\": \"/docs/\"\n  },\n  \"next\": {\n    \"title\": \"API\",\n    \"permalink\": \"/docs/category/api\"\n  }\n};\nexport const assets = {\n\n};\n\nimport { SimpleSplitview } from '../src/components/simpleSplitview';\nimport { SimpleSplitview2 } from '../src/components/simpleSplitview2';\nexport const toc = [{\n  value: 'Panels',\n  id: 'panels',\n  level: 2\n}, {\n  value: 'Adding a panel with parameters',\n  id: 'adding-a-panel-with-parameters',\n  level: 3\n}, {\n  value: 'API',\n  id: 'api',\n  level: 2\n}, {\n  value: 'Serialization',\n  id: 'serialization',\n  level: 3\n}, {\n  value: 'Auto resizing',\n  id: 'auto-resizing',\n  level: 2\n}, {\n  value: 'Events',\n  id: 'events',\n  level: 2\n}, {\n  value: 'Proportional layout',\n  id: 'proportional-layout',\n  level: 2\n}, {\n  value: 'Browser support',\n  id: 'browser-support',\n  level: 2\n}];\n\nconst layoutProps = {\n  toc\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"basics\"\n    }}>{`Basics`}</h1>\n    <p>{`This section will take you through a number of concepts that can be applied to all dockview components.`}</p>\n    <h2 {...{\n      \"id\": \"panels\"\n    }}>{`Panels`}</h2>\n    <p>{`The below examples use `}<inlineCode parentName=\"p\">{`ReactSplitview`}</inlineCode>{` but the logic holds for `}<inlineCode parentName=\"p\">{`ReactPaneview`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`ReactGridview`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`ReactDockview`}</inlineCode>{` using their respective implementations and interfaces.\nAll components require you to provide an `}<inlineCode parentName=\"p\">{`onReady`}</inlineCode>{` prop which you can use to build and control your component.`}</p>\n    <h3 {...{\n      \"id\": \"adding-a-panel-with-parameters\"\n    }}>{`Adding a panel with parameters`}</h3>\n    <p>{`You can pass parameters to a panel through the `}<inlineCode parentName=\"p\">{`params`}</inlineCode>{` object`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`const onReady = (event: SplitviewReadyEvent) => {\n    event.api.addPanel({\n        id: 'panel_1',\n        component: 'myComponent',\n        params: {\n            title: 'My Title',\n        },\n    });\n};\n`}</code></pre>\n    <p>{`and you can access those properties through the `}<inlineCode parentName=\"p\">{`props.params`}</inlineCode>{` object. The TypeScript interface accepts an optional generic type `}<inlineCode parentName=\"p\">{`T`}</inlineCode>{` that corresponds to the params objects type.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`const MyComponent = (props: ISplitviewPanelProps<{ title: string }>) => {\n    return <div>{\\`My first panel has the title: \\${props.params.title}\\`}</div>;\n};\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h2>\n    <p>{`There are two types of API you will interact with using `}<inlineCode parentName=\"p\">{`dockview`}</inlineCode>{`.`}</p>\n    <ul>\n      <li parentName=\"ul\">{`The `}<inlineCode parentName=\"li\">{`panel API`}</inlineCode>{` is accessible via `}<inlineCode parentName=\"li\">{`props.api`}</inlineCode>{` in user defined panels and via the `}<inlineCode parentName=\"li\">{`.api`}</inlineCode>{` variable found on panel instances. This API contains actions and variable related to the the individual panel.`}</li>\n      <li parentName=\"ul\">{`The `}<inlineCode parentName=\"li\">{`container API`}</inlineCode>{` is accessible via `}<inlineCode parentName=\"li\">{`event.api`}</inlineCode>{` in the `}<inlineCode parentName=\"li\">{`onReady`}</inlineCode>{` events and `}<inlineCode parentName=\"li\">{`props.containerApi`}</inlineCode>{` in user defined panels. This API contains actions and variable related to the component as a whole.`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`const MyComponent = (props: ISplitviewPanelProps<{ title: string }>) => {\n    React.useEffect(() => {\n        const disposable = props.api.onDidActiveChange((event) => {\n            console.log(\\`is panel active: \\${event.isActive}\\`);\n        });\n\n        return () => {\n            disposable.dispose(); // remember to dispose of any subscriptions\n        };\n    }, [props.api]);\n\n    const addAnotherPanel = React.useCallback(() => {\n        props.containerApi.addPanel({\n            id: 'another_id',\n            component: 'anotherComponent',\n        });\n    }, [props.containerApi]);\n\n    return (\n        <div>\n            <span>{\\`My first panel has the title: \\${props.params.title}\\`}</span>\n            <button onClick={addAnotherPanel}>Add Panel</button>\n        </div>\n    );\n};\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"serialization\"\n    }}>{`Serialization`}</h3>\n    <p>{`All components support `}<inlineCode parentName=\"p\">{`toJSON(): T`}</inlineCode>{` which returns a Typed object representation of the components state. This same Typed object can be used to deserialize a view using `}<inlineCode parentName=\"p\">{`fromJSON(object: T): void`}</inlineCode>{`.`}</p>\n    <h2 {...{\n      \"id\": \"auto-resizing\"\n    }}>{`Auto resizing`}</h2>\n    <p><inlineCode parentName=\"p\">{`SplitviewReact`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`GridviewReact`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`PaneviewReact`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`DockviewReact`}</inlineCode>{` will all automatically resize to fill the size of their parent element.\nInternally this is achieved using a `}<a parentName=\"p\" {...{\n        \"href\": \"https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserver\"\n      }}>{`ResizeObserver`}</a>{` which some users may need to polyfill.\nYou can disable this by settings the `}<inlineCode parentName=\"p\">{`disableAutoResizing`}</inlineCode>{` prop to be `}<inlineCode parentName=\"p\">{`true`}</inlineCode>{`.`}</p>\n    <p>{`You can manually resize a component using the API method `}<inlineCode parentName=\"p\">{`layout(width: number, height: number): void`}</inlineCode>{`.\nAn advanced case may use this in conjunction with `}<inlineCode parentName=\"p\">{`disableAutoResizing=true`}</inlineCode>{` to allow a parent component to have ultimate control over the dimensions of the component.`}</p>\n    <h2 {...{\n      \"id\": \"events\"\n    }}>{`Events`}</h2>\n    <p>{`Many API properties can be listened on using the `}<inlineCode parentName=\"p\">{`Event`}</inlineCode>{` pattern. For example `}<inlineCode parentName=\"p\">{`api.onDidFocusChange(() => {...})`}</inlineCode>{`.\nYou should dispose of any event listeners you create cleaning up any listeners you would have created.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`React.useEffect(() => {\n    const disposable = api.onDidFocusChange(() => {\n        // write some code\n    });\n\n    return () => {\n        disposable.dispose();\n    };\n}, []);\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"proportional-layout\"\n    }}>{`Proportional layout`}</h2>\n    <p>{`The `}<inlineCode parentName=\"p\">{`proportionalLayout`}</inlineCode>{` property indicates the expected behaviour of the component as it's container resizes, should all views resize equally or should just one view expand to fill the new space. `}<inlineCode parentName=\"p\">{`proportionalLayout`}</inlineCode>{` can be set as a property on `}<inlineCode parentName=\"p\">{`SplitviewReact`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`GridviewReact`}</inlineCode>{` components.\nAlthough not configurable on `}<inlineCode parentName=\"p\">{`DockviewReact`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`PaneviewReact`}</inlineCode>{` these both behave as if `}<inlineCode parentName=\"p\">{`proportionalLayout=true`}</inlineCode>{` was set for them.`}</p>\n    <SimpleSplitview2 proportional={false} mdxType=\"SimpleSplitview2\" />\n    <SimpleSplitview2 proportional={true} mdxType=\"SimpleSplitview2\" />\n    <h2 {...{\n      \"id\": \"browser-support\"\n    }}>{`Browser support`}</h2>\n    <p>{`dockview is intended to support all major browsers. Some users may require a polyfill for `}<a parentName=\"p\" {...{\n        \"href\": \"https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserver\"\n      }}>{`ResizeObserver`}</a>{`.`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","sourceSymbolKeys","prototype","propertyIsEnumerable","call","MDXContext","useMDXComponents","components","contextComponents","allComponents","MDXProvider","props","Provider","children","DEFAULTS","inlineCode","wrapper","_ref","MDXCreateElement","ref","propComponents","mdxType","originalType","parentName","etc","type","Component","concat","createElement","args","argsLength","createElementArgArray","Array","newProps","hasOwnProperty","displayName","default","style","padding","params","title","SimpleSplitview","proportionalLayout","proportional","onReady","event","api","addPanel","id","component","minimumSize","orientation","Orientation","className","SimpleSplitview2","React","setValue","display","flexDirection","height","margin","alignItems","min","max","defaultValue","onChange","Number","flexGrow","gridTemplateColumns","backgroundColor","color","border","frontMatter","sidebar_position","contentTitle","metadata","assets","toc","level","layoutProps","MDXContent","isMDXComponent"],"sourceRoot":""}