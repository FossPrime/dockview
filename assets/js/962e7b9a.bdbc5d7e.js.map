{"version":3,"file":"assets/js/962e7b9a.bdbc5d7e.js","mappings":"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","sources":["webpack://dockview-docs/./src/components/console/console.tsx","webpack://dockview-docs/./src/components/dockview/customHeaders.tsx","webpack://dockview-docs/./src/components/dockview/dnd.tsx","webpack://dockview-docs/./src/components/dockview/events.tsx","webpack://dockview-docs/./src/components/dockview/nested.tsx","webpack://dockview-docs/./src/components/dockview/rendering.tsx","webpack://dockview-docs/./src/components/dockview/resize.tsx","webpack://dockview-docs/./src/components/simpleDockview.tsx","webpack://dockview-docs/./versioned_docs/version-1.5.2/components/dockview.mdx"],"sourcesContent":["import * as React from 'react';\nimport './console.scss';\n\nconst formatTime = (now: Date) => {\n    const pad = (x: number) => (x < 10 ? `0${x}` : `${x}`);\n\n    return `${pad(now.getHours())}:${pad(now.getMinutes())}:${pad(\n        now.getSeconds()\n    )}.${now.getMilliseconds()}`;\n};\n\nexport interface Line {\n    timestamp: Date;\n    text: string;\n    css?: React.CSSProperties;\n}\n\nexport interface IConsoleProps {\n    lines: Line[];\n}\n\nexport const Console = (props: IConsoleProps) => {\n    const ref = React.useRef<HTMLDivElement>();\n\n    React.useLayoutEffect(() => {\n        if (!ref.current) {\n            return;\n        }\n\n        ref.current.scrollTop = Math.max(\n            0,\n            ref.current.scrollHeight - ref.current.clientHeight\n        );\n    }, [props.lines]);\n\n    return (\n        <div ref={ref} className=\"console-container\">\n            {props.lines.map((line, i) => {\n                return (\n                    <div key={i} className=\"console-line\">\n                        <span className=\"console-line-timestamp\">\n                            {formatTime(line.timestamp)}\n                        </span>\n                        <span className=\"console-line-text\" style={line.css}>\n                            {line.text}\n                        </span>\n                    </div>\n                );\n            })}\n        </div>\n    );\n};\n","import {\n    DockviewDefaultTab,\n    DockviewReact,\n    DockviewReadyEvent,\n    IDockviewPanelHeaderProps,\n    IDockviewPanelProps,\n} from 'dockview';\nimport * as React from 'react';\n\nconst components = {\n    default: (props: IDockviewPanelProps<{ title: string }>) => {\n        return <div style={{ padding: '20px' }}>{props.params.title}</div>;\n    },\n};\n\nconst MyCustomheader = (props: IDockviewPanelHeaderProps) => {\n    const onContextMenu = (event: React.MouseEvent) => {\n        event.preventDefault();\n        alert('context menu');\n    };\n    return <DockviewDefaultTab onContextMenu={onContextMenu} {...props} />;\n};\n\nconst headerComponents = {\n    default: (props: IDockviewPanelHeaderProps) => {\n        const onContextMenu = (event: React.MouseEvent) => {\n            event.preventDefault();\n            alert('context menu');\n        };\n        return <DockviewDefaultTab onContextMenu={onContextMenu} {...props} />;\n    },\n};\n\nexport const CustomHeadersDockview = () => {\n    const onReady = (event: DockviewReadyEvent) => {\n        const d = localStorage.getItem('test');\n\n        event.api.addPanel({\n            id: 'panel_1',\n            component: 'default',\n            title: 'Panel 1',\n        });\n        event.api.addPanel({\n            id: 'panel_2',\n            component: 'default',\n            title: 'Panel 2',\n        });\n        event.api.addPanel({\n            id: 'panel_3',\n            component: 'default',\n            title: 'Panel 3',\n        });\n        event.api.addPanel({\n            id: 'panel_4',\n            component: 'default',\n            title: 'Panel 4',\n            position: { referencePanel: 'panel_3', direction: 'right' },\n        });\n        event.api.addPanel({\n            id: 'panel_5',\n            component: 'default',\n            title: 'Panel 5',\n            position: { referencePanel: 'panel_4', direction: 'within' },\n        });\n        const panel6 = event.api.addPanel({\n            id: 'panel_6',\n            component: 'default',\n            title: 'Panel 6',\n            position: { referencePanel: 'panel_4', direction: 'below' },\n        });\n        panel6.group.locked = true;\n        panel6.group.header.hidden = true;\n        event.api.addPanel({\n            id: 'panel_7',\n            component: 'default',\n            title: 'Panel 7',\n            position: { referencePanel: 'panel_6', direction: 'right' },\n        });\n        event.api.addPanel({\n            id: 'panel_8',\n            component: 'default',\n\n            title: 'Panel 8',\n            position: { referencePanel: 'panel_7', direction: 'within' },\n        });\n\n        event.api.addGroup();\n    };\n\n    return (\n        <div\n            style={{\n                height: '500px',\n                margin: '40px 0px',\n                display: 'flex',\n                flexDirection: 'column',\n            }}\n        >\n            <DockviewReact\n                components={components}\n                defaultTabComponent={headerComponents.default}\n                onReady={onReady}\n                className=\"dockview-theme-abyss\"\n            />\n        </div>\n    );\n};\n","import {\n    DockviewDndOverlayEvent,\n    DockviewDropEvent,\n    DockviewReact,\n    DockviewReadyEvent,\n    IDockviewPanelProps,\n    positionToDirection,\n} from 'dockview';\nimport * as React from 'react';\n\nconst components = {\n    default: (props: IDockviewPanelProps<{ title: string }>) => {\n        return (\n            <div style={{ padding: '20px' }}>\n                <div>{props.params.title}</div>\n            </div>\n        );\n    },\n};\n\nexport const DndDockview = (props: { renderVisibleOnly: boolean }) => {\n    const onReady = (event: DockviewReadyEvent) => {\n        event.api.addPanel({\n            id: 'panel_1',\n            component: 'default',\n            params: {\n                title: 'Panel 1',\n            },\n        });\n\n        event.api.addPanel({\n            id: 'panel_2',\n            component: 'default',\n            params: {\n                title: 'Panel 2',\n            },\n        });\n\n        event.api.addPanel({\n            id: 'panel_3',\n            component: 'default',\n            params: {\n                title: 'Panel 3',\n            },\n        });\n\n        event.api.addPanel({\n            id: 'panel_4',\n            component: 'default',\n            params: {\n                title: 'Panel 4',\n            },\n            position: { referencePanel: 'panel_1', direction: 'right' },\n        });\n    };\n\n    const onDidDrop = (event: DockviewDropEvent) => {\n        event.api.addPanel({\n            id: 'test',\n            component: 'default',\n            position: {\n                direction: positionToDirection(event.position),\n                referenceGroup: event.group,\n            },\n        });\n    };\n\n    const showDndOverlay = (event: DockviewDndOverlayEvent) => {\n        return true;\n    };\n\n    return (\n        <>\n            <div\n                style={{\n                    backgroundColor: 'orange',\n                    padding: '0px 8px',\n                    borderRadius: '4px',\n                    width: '100px',\n                    cursor: 'pointer',\n                }}\n                draggable={true}\n            >\n                Drag me\n            </div>\n            <div\n                style={{\n                    height: '300px',\n                    backgroundColor: 'rgb(30,30,30)',\n                    color: 'white',\n                    margin: '20px 0px',\n                }}\n            >\n                <DockviewReact\n                    components={components}\n                    onReady={onReady}\n                    className=\"dockview-theme-abyss\"\n                    onDidDrop={onDidDrop}\n                    showDndOverlay={showDndOverlay}\n                />\n            </div>\n        </>\n    );\n};\n","import {\n    Orientation,\n    DockviewReact,\n    DockviewReadyEvent,\n    DockviewApi,\n    IDockviewPanelProps,\n} from 'dockview';\nimport * as React from 'react';\nimport { Console, Line } from '../console/console';\n\nconst components = {\n    default: (props: IDockviewPanelProps<{ title: string }>) => {\n        return <div style={{ padding: '20px' }}>{props.params.title}</div>;\n    },\n};\n\nexport const EventsDockview = () => {\n    const [lines, setLines] = React.useState<Line[]>([]);\n    const [checked, setChecked] = React.useState<boolean>(false);\n\n    const [api, setApi] = React.useState<DockviewApi | undefined>();\n\n    React.useEffect(() => {\n        if (!api) {\n            return () => {\n                //noop\n            };\n        }\n\n        const disposables = [\n            api.onDidAddPanel((panel) => {\n                setLines((lines) => [\n                    ...lines,\n                    {\n                        timestamp: new Date(),\n                        text: `onDidAddPanel: ${panel.id}`,\n                    },\n                ]);\n            }),\n            api.onDidRemovePanel((panel) => {\n                setLines((lines) => [\n                    ...lines,\n                    {\n                        timestamp: new Date(),\n                        text: `onDidRemovePanel: ${panel.id}`,\n                    },\n                ]);\n            }),\n            api.onDidActivePanelChange((panel) => {\n                setLines((lines) => [\n                    ...lines,\n                    {\n                        timestamp: new Date(),\n                        text: `onDidActivePanelChange: ${panel?.id}`,\n                    },\n                ]);\n            }),\n            api.onDidAddGroup((panel) => {\n                setLines((lines) => [\n                    ...lines,\n                    {\n                        timestamp: new Date(),\n                        text: `onDidAddGroup: ${panel.id}`,\n                    },\n                ]);\n            }),\n            api.onDidRemoveGroup((panel) => {\n                setLines((lines) => [\n                    ...lines,\n                    {\n                        timestamp: new Date(),\n                        text: `onDidRemoveGroup: ${panel.id}`,\n                    },\n                ]);\n            }),\n            api.onDidActiveGroupChange((panel) => {\n                setLines((lines) => [\n                    ...lines,\n                    {\n                        timestamp: new Date(),\n                        text: `onDidActiveGroupChange: ${panel?.id}`,\n                    },\n                ]);\n            }),\n            api.onDidLayoutChange((panel) => {\n                setLines((lines) => [\n                    ...lines,\n                    { timestamp: new Date(), text: `onDidLayoutChange` },\n                ]);\n            }),\n            api.onDidLayoutFromJSON((panel) => {\n                setLines((lines) => [\n                    ...lines,\n                    { timestamp: new Date(), text: `onDidLayoutFromJSON` },\n                ]);\n            }),\n        ];\n\n        return () => {\n            disposables.forEach((disposable) => disposable.dispose());\n        };\n    }, [api]);\n\n    React.useEffect(() => {\n        if (!api) {\n            return;\n        }\n\n        setLines((lines) => [\n            ...lines,\n            {\n                timestamp: new Date(),\n                text: `Rebuilding view fromJSON:${checked}`,\n                css: { color: 'yellow', backgroundColor: 'grey' },\n            },\n        ]);\n\n        if (checked) {\n            api.fromJSON({\n                grid: {\n                    root: {\n                        type: 'branch',\n                        data: [\n                            {\n                                type: 'leaf',\n                                data: {\n                                    views: ['panel_1', 'panel_2', 'panel_3'],\n                                    activeView: 'panel_3',\n                                    id: '77',\n                                },\n                                size: 262,\n                            },\n                            {\n                                type: 'branch',\n                                data: [\n                                    {\n                                        type: 'leaf',\n                                        data: {\n                                            views: ['panel_5'],\n                                            activeView: 'panel_5',\n                                            id: '79',\n                                        },\n                                        size: 100,\n                                    },\n                                    {\n                                        type: 'leaf',\n                                        data: {\n                                            views: ['panel_6', 'panel_8'],\n                                            activeView: 'panel_8',\n                                            id: '80',\n                                        },\n                                        size: 100,\n                                    },\n                                    {\n                                        type: 'leaf',\n                                        data: {\n                                            views: ['panel_7'],\n                                            activeView: 'panel_7',\n                                            id: '81',\n                                        },\n                                        size: 100,\n                                    },\n                                ],\n                                size: 262,\n                            },\n                            {\n                                type: 'leaf',\n                                data: {\n                                    views: ['panel_4'],\n                                    activeView: 'panel_4',\n                                    id: '78',\n                                },\n                                size: 263.75,\n                            },\n                        ],\n                        size: 300,\n                    },\n                    width: 787.75,\n                    height: 300,\n                    orientation: Orientation.HORIZONTAL,\n                },\n                panels: {\n                    panel_1: {\n                        id: 'panel_1',\n                        view: { content: { id: 'default' } },\n                        params: { title: 'Panel 1' },\n                        title: 'panel_1',\n                    },\n                    panel_2: {\n                        id: 'panel_2',\n                        view: { content: { id: 'default' } },\n                        params: { title: 'Panel 2' },\n                        title: 'panel_2',\n                    },\n                    panel_3: {\n                        id: 'panel_3',\n                        view: { content: { id: 'default' } },\n                        params: { title: 'Panel 3' },\n                        title: 'panel_3',\n                    },\n                    panel_4: {\n                        id: 'panel_4',\n                        view: { content: { id: 'default' } },\n                        params: { title: 'Panel 4' },\n                        title: 'panel_4',\n                    },\n                    panel_5: {\n                        id: 'panel_5',\n                        view: { content: { id: 'default' } },\n                        params: { title: 'Panel 5' },\n                        title: 'panel_5',\n                    },\n                    panel_6: {\n                        id: 'panel_6',\n                        view: { content: { id: 'default' } },\n                        params: { title: 'Panel 6' },\n                        title: 'panel_6',\n                    },\n                    panel_8: {\n                        id: 'panel_8',\n                        view: { content: { id: 'default' } },\n                        params: { title: 'Panel 8' },\n                        title: 'panel_8',\n                    },\n                    panel_7: {\n                        id: 'panel_7',\n                        view: { content: { id: 'default' } },\n                        params: { title: 'Panel 7' },\n                        title: 'panel_7',\n                    },\n                },\n                activeGroup: '80',\n                options: {},\n            });\n            return;\n        }\n\n        api.clear();\n\n        api.addPanel({\n            id: 'panel_1',\n            component: 'default',\n            params: {\n                title: 'Panel 1',\n            },\n        });\n\n        api.addPanel({\n            id: 'panel_2',\n            component: 'default',\n            params: {\n                title: 'Panel 2',\n            },\n        });\n\n        api.addPanel({\n            id: 'panel_3',\n            component: 'default',\n            params: {\n                title: 'Panel 3',\n            },\n        });\n\n        api.addPanel({\n            id: 'panel_4',\n            component: 'default',\n            params: {\n                title: 'Panel 4',\n            },\n            position: { referencePanel: 'panel_1', direction: 'right' },\n        });\n\n        api.addPanel({\n            id: 'panel_5',\n            component: 'default',\n            params: {\n                title: 'Panel 5',\n            },\n            position: { referencePanel: 'panel_3', direction: 'right' },\n        });\n\n        api.addPanel({\n            id: 'panel_6',\n            component: 'default',\n            params: {\n                title: 'Panel 6',\n            },\n            position: { referencePanel: 'panel_5', direction: 'below' },\n        });\n\n        api.addPanel({\n            id: 'panel_7',\n            component: 'default',\n            params: {\n                title: 'Panel 7',\n            },\n            position: { referencePanel: 'panel_6', direction: 'below' },\n        });\n\n        api.addPanel({\n            id: 'panel_8',\n            component: 'default',\n            params: {\n                title: 'Panel 8',\n            },\n            position: { referencePanel: 'panel_6', direction: 'within' },\n        });\n    }, [api, checked]);\n\n    const onReady = (event: DockviewReadyEvent) => {\n        setApi(event.api);\n    };\n\n    return (\n        <>\n            <label>\n                <input\n                    type=\"checkbox\"\n                    checked={checked}\n                    onChange={(e) => setChecked(e.target.checked)}\n                />\n                <span>{'fromJSON'}</span>\n            </label>\n            <div\n                style={{\n                    height: '300px',\n                    backgroundColor: 'rgb(30,30,30)',\n                    color: 'white',\n                    margin: '20px 0px',\n                }}\n            >\n                <DockviewReact\n                    components={components}\n                    onReady={onReady}\n                    className=\"dockview-theme-abyss\"\n                />\n            </div>\n\n            <Console lines={lines} />\n        </>\n    );\n};\n","import {\n    DockviewDndOverlayEvent,\n    DockviewDropEvent,\n    DockviewReact,\n    DockviewReadyEvent,\n    IDockviewPanelProps,\n} from 'dockview';\nimport * as React from 'react';\nimport './nested.scss';\n\nconst InnerDockview = () => {\n    const onReady = (event: DockviewReadyEvent) => {\n        event.api.addPanel({\n            id: 'panel_1',\n            component: 'default',\n        });\n\n        event.api.addPanel({\n            id: 'panel_2',\n            component: 'default',\n        });\n\n        event.api.addPanel({\n            id: 'panel_3',\n            component: 'default',\n        });\n    };\n\n    return (\n        <DockviewReact\n            onReady={onReady}\n            components={components}\n            className=\"dockview-theme-abyss nested-dockview\"\n        />\n    );\n};\n\nconst components = {\n    default: (props: IDockviewPanelProps<{ title: string }>) => {\n        return (\n            <div\n                style={{\n                    height: '100%',\n                    padding: '20px',\n                    background: 'var(--dv-group-view-background-color)',\n                }}\n            >\n                {props.params.title}\n            </div>\n        );\n    },\n    innerDockview: InnerDockview,\n};\n\nexport const NestedDockview = () => {\n    const onReady = (event: DockviewReadyEvent) => {\n        event.api.addPanel({\n            id: 'panel_1',\n            component: 'default',\n        });\n\n        event.api.addPanel({\n            id: 'panel_2',\n            component: 'default',\n        });\n\n        event.api.addPanel({\n            id: 'panel_3',\n            component: 'innerDockview',\n            position: { referencePanel: 'panel_2', direction: 'right' },\n        });\n    };\n\n    const showDndOverlay = (event: DockviewDndOverlayEvent) => {\n        // console.log(event.getData());\n\n        return false;\n    };\n\n    const onDidDrop = (event: DockviewDropEvent) => {\n        // event.getData();\n    };\n\n    return (\n        <div\n            style={{\n                height: '500px',\n                display: 'flex',\n                flexDirection: 'column',\n            }}\n        >\n            <DockviewReact\n                onReady={onReady}\n                components={components}\n                className=\"dockview-theme-abyss\"\n                showDndOverlay={showDndOverlay}\n                onDidDrop={onDidDrop}\n            />\n        </div>\n    );\n};\n","import {\n    DockviewReact,\n    DockviewReadyEvent,\n    IDockviewPanelProps,\n} from 'dockview';\nimport * as React from 'react';\n\nimport { atom, useRecoilState, useRecoilValue } from 'recoil';\n\nconst renderVisibleComponentsOnlyAtom = atom<boolean>({\n    key: 'renderVisibleComponentsOnlyAtom',\n    default: false,\n});\n\nfunction RenderWhenVisible(\n    component: React.FunctionComponent<IDockviewPanelProps>\n) {\n    const HigherOrderComponent = (props: IDockviewPanelProps) => {\n        const [visible, setVisible] = React.useState<boolean>(\n            props.api.isVisible\n        );\n\n        const render = useRecoilValue(renderVisibleComponentsOnlyAtom);\n\n        React.useEffect(() => {\n            const disposable = props.api.onDidVisibilityChange((event) =>\n                setVisible(event.isVisible)\n            );\n\n            return () => {\n                disposable.dispose();\n            };\n        }, [props.api]);\n\n        if (!visible && render) {\n            return null;\n        }\n\n        return React.createElement(component, props);\n    };\n    return HigherOrderComponent;\n}\n\nconst formatLine = (line: string) => {\n    const now = new Date();\n\n    const pad = (x: number) => (x < 10 ? `0${x}` : `${x}`);\n\n    const time = `${pad(now.getHours())}:${pad(now.getMinutes())}:${pad(\n        now.getSeconds()\n    )}`;\n\n    return `[${time}] ${line}`;\n};\n\nconst components = {\n    default: RenderWhenVisible(\n        (props: IDockviewPanelProps<{ title: string }>) => {\n            const [lines, setLines] = React.useState<string[]>([\n                formatLine('Component created'),\n            ]);\n\n            React.useEffect(() => {\n                setLines((lines) => [\n                    ...lines,\n                    formatLine('Running task for 5 seconds'),\n                ]);\n                const timeout = setTimeout(() => {\n                    setLines((lines) => [\n                        ...lines,\n                        formatLine('Task completed'),\n                    ]);\n                }, 5000);\n\n                return () => {\n                    clearTimeout(timeout);\n                };\n            }, []);\n\n            return (\n                <div style={{ padding: '20px' }}>\n                    <div>{props.params.title}</div>\n                    {lines.map((line, i) => (\n                        <div key={i}>{line}</div>\n                    ))}\n                </div>\n            );\n        }\n    ),\n};\n\nexport const RenderingDockview = (props: { renderVisibleOnly: boolean }) => {\n    const [render, setRender] = useRecoilState(renderVisibleComponentsOnlyAtom);\n\n    React.useEffect(\n        () => setRender(props.renderVisibleOnly),\n        [props.renderVisibleOnly]\n    );\n\n    const onReady = (event: DockviewReadyEvent) => {\n        event.api.addPanel({\n            id: 'panel_1',\n            component: 'default',\n            params: {\n                title: 'Panel 1',\n            },\n        });\n\n        event.api.addPanel({\n            id: 'panel_2',\n            component: 'default',\n            params: {\n                title: 'Panel 2',\n            },\n        });\n\n        event.api.addPanel({\n            id: 'panel_3',\n            component: 'default',\n            params: {\n                title: 'Panel 3',\n            },\n        });\n\n        event.api.addPanel({\n            id: 'panel_4',\n            component: 'default',\n            params: {\n                title: 'Panel 4',\n            },\n            position: { referencePanel: 'panel_1', direction: 'right' },\n        });\n    };\n\n    return (\n        <DockviewReact\n            components={components}\n            onReady={onReady}\n            className=\"dockview-theme-abyss\"\n        />\n    );\n};\n\nexport const Checkbox = () => {\n    const [render, setRender] = useRecoilState(renderVisibleComponentsOnlyAtom);\n\n    return (\n        <label>\n            Render only when visible\n            <input\n                type=\"checkbox\"\n                checked={render}\n                onChange={(e) => setRender(e.target.checked)}\n            />\n        </label>\n    );\n};\n","import {\n    DockviewReact,\n    DockviewReadyEvent,\n    IDockviewPanelProps,\n} from 'dockview';\nimport * as React from 'react';\nimport './resize.scss';\n\nconst Default = (props: IDockviewPanelProps) => {\n    const [width, setWidth] = React.useState<number>(100);\n    const [height, setHeight] = React.useState<number>(100);\n\n    return (\n        <div className=\"resize-panel\">\n            <div style={{ height: '25px' }}>{props.api.title}</div>\n            <div className=\"resize-control\">\n                <span>Width:</span>\n                <input\n                    value={width}\n                    onChange={(e) => setWidth(Number(e.target.value))}\n                    type=\"number\"\n                    min={50}\n                    step={1}\n                />\n                <button\n                    style={{ width: '100px' }}\n                    onClick={() => {\n                        props.api.group.api.setSize({\n                            width,\n                        });\n                    }}\n                >\n                    Resize Group\n                </button>\n                <button\n                    style={{ width: '100px' }}\n                    onClick={() => {\n                        props.api.setSize({\n                            width,\n                        });\n                    }}\n                >\n                    Resize panel\n                </button>\n            </div>\n            <div className=\"resize-control\">\n                <span>Height:</span>\n                <input\n                    value={height}\n                    onChange={(e) => setHeight(Number(e.target.value))}\n                    type=\"number\"\n                    min={50}\n                    step={1}\n                />\n                <button\n                    style={{ width: '100px' }}\n                    onClick={() => {\n                        props.api.group.api.setSize({\n                            height,\n                        });\n                    }}\n                >\n                    Resize Group\n                </button>\n                <button\n                    style={{ width: '100px' }}\n                    onClick={() => {\n                        props.api.setSize({\n                            height,\n                        });\n                    }}\n                >\n                    Resize Panel\n                </button>\n            </div>\n        </div>\n    );\n};\n\nconst components = {\n    default: Default,\n};\n\nexport const ResizeDockview = () => {\n    const onReady = (event: DockviewReadyEvent) => {\n        event.api.addPanel({\n            id: 'panel_1',\n            component: 'default',\n        });\n\n        event.api.addPanel({\n            id: 'panel_2',\n            component: 'default',\n            position: {\n                direction: 'right',\n                referencePanel: 'panel_1',\n            },\n        });\n\n        event.api.addPanel({\n            id: 'panel_3',\n            component: 'default',\n            position: {\n                direction: 'below',\n                referencePanel: 'panel_1',\n            },\n        });\n        event.api.addPanel({\n            id: 'panel_4',\n            component: 'default',\n        });\n        event.api.addPanel({\n            id: 'panel_5',\n            component: 'default',\n        });\n    };\n\n    return (\n        <div\n            style={{\n                height: '500px',\n                display: 'flex',\n                flexDirection: 'column',\n            }}\n        >\n            <DockviewReact\n                className=\"dockview-theme-dark\"\n                onReady={onReady}\n                components={components}\n            />\n        </div>\n    );\n};\n","import {\n    DockviewReact,\n    DockviewReadyEvent,\n    IDockviewPanelProps,\n    PanelApi,\n} from 'dockview';\nimport * as React from 'react';\n\nconst components = {\n    default: (props: IDockviewPanelProps<{ title: string }>) => {\n        return <div style={{ padding: '20px' }}>{props.params.title}</div>;\n    },\n};\n\nconst RenderWhenVisible = <T,>(\n    props: T & {\n        children: React.FunctionComponent<T>;\n        api: Pick<PanelApi, 'isVisible' | 'onDidVisibilityChange'>;\n    }\n) => {\n    const [visible, setVisible] = React.useState<boolean>(props.api.isVisible);\n\n    React.useEffect(() => {\n        const disposable = props.api.onDidVisibilityChange((event) =>\n            setVisible(event.isVisible)\n        );\n\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.api]);\n\n    if (!visible) {\n        return null;\n    }\n\n    return React.createElement(props.children, props);\n};\n\nexport const SimpleDockview = () => {\n    const onReady = (event: DockviewReadyEvent) => {\n        const panel = event.api.addPanel({\n            id: 'panel_1',\n            component: 'default',\n            params: {\n                title: 'Panel 1',\n            },\n        });\n\n        panel.group.locked = true;\n        panel.group.header.hidden = true;\n\n        event.api.addPanel({\n            id: 'panel_2',\n            component: 'default',\n            params: {\n                title: 'Panel 2',\n            },\n        });\n\n        event.api.addPanel({\n            id: 'panel_3',\n            component: 'default',\n            params: {\n                title: 'Panel 3',\n            },\n        });\n\n        event.api.addPanel({\n            id: 'panel_4',\n            component: 'default',\n            params: {\n                title: 'Panel 4',\n            },\n            position: { referencePanel: 'panel_1', direction: 'right' },\n        });\n\n        const panel5 = event.api.addPanel({\n            id: 'panel_5',\n            component: 'default',\n            params: {\n                title: 'Panel 5',\n            },\n            position: { referencePanel: 'panel_3', direction: 'right' },\n        });\n\n        // panel5.group!.model.header.hidden = true;\n        // panel5.group!.model.locked = true;\n\n        event.api.addPanel({\n            id: 'panel_6',\n            component: 'default',\n            params: {\n                title: 'Panel 6',\n            },\n            position: { referencePanel: 'panel_5', direction: 'below' },\n        });\n\n        event.api.addPanel({\n            id: 'panel_7',\n            component: 'default',\n            params: {\n                title: 'Panel 7',\n            },\n            position: { referencePanel: 'panel_6', direction: 'right' },\n        });\n    };\n\n    return (\n        <DockviewReact\n            components={components}\n            onReady={onReady}\n            className=\"dockview-theme-abyss\"\n        />\n    );\n};\n","\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\n/* @jsxFrag React.Fragment */\n\nimport React from 'react';\nimport { mdx } from '@mdx-js/react';\n\n\nexport const frontMatter = {\n\tdescription: 'Dockview Documentation'\n};\nexport const contentTitle = 'Dockview';\nexport const metadata = {\n  \"unversionedId\": \"components/dockview\",\n  \"id\": \"version-1.5.2/components/dockview\",\n  \"title\": \"Dockview\",\n  \"description\": \"Dockview Documentation\",\n  \"source\": \"@site/versioned_docs/version-1.5.2/components/dockview.mdx\",\n  \"sourceDirName\": \"components\",\n  \"slug\": \"/components/dockview\",\n  \"permalink\": \"/docs/1.5.2/components/dockview\",\n  \"draft\": false,\n  \"editUrl\": \"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/versioned_docs/version-1.5.2/components/dockview.mdx\",\n  \"tags\": [],\n  \"version\": \"1.5.2\",\n  \"frontMatter\": {\n    \"description\": \"Dockview Documentation\"\n  },\n  \"sidebar\": \"tutorialSidebar\",\n  \"previous\": {\n    \"title\": \"Components\",\n    \"permalink\": \"/docs/1.5.2/category/components\"\n  },\n  \"next\": {\n    \"title\": \"Gridview\",\n    \"permalink\": \"/docs/1.5.2/components/gridview\"\n  }\n};\nexport const assets = {\n\n};\n\nimport { SimpleDockview } from '@site/src/components/simpleDockview';\nimport {\n    RenderingDockview,\n    Checkbox,\n} from '@site/src/components/dockview/rendering';\nimport { DndDockview } from '@site/src/components/dockview/dnd';\nimport { EventsDockview } from '@site/src/components/dockview/events';\nimport { ContextMenuDockview } from '@site/src/components/dockview/contextMenu';\nimport { NestedDockview } from '@site/src/components/dockview/nested';\nimport { CustomHeadersDockview } from '@site/src/components/dockview/customHeaders';\nimport { ResizeDockview } from '@site/src/components/dockview/resize';\nimport Link from '@docusaurus/Link';\nexport const toc = [{\n  value: 'Introduction',\n  id: 'introduction',\n  level: 2\n}, {\n  value: 'DockviewReact Component',\n  id: 'dockviewreact-component',\n  level: 2\n}, {\n  value: 'Dockview API',\n  id: 'dockview-api',\n  level: 2\n}, {\n  value: 'Dockview Panel API',\n  id: 'dockview-panel-api',\n  level: 2\n}, {\n  value: 'Advanced Features',\n  id: 'advanced-features',\n  level: 2\n}, {\n  value: 'Resizing via API',\n  id: 'resizing-via-api',\n  level: 3\n}, {\n  value: 'Locked group',\n  id: 'locked-group',\n  level: 3\n}, {\n  value: 'Group header',\n  id: 'group-header',\n  level: 3\n}, {\n  value: 'Custom Tab Headers',\n  id: 'custom-tab-headers',\n  level: 3\n}, {\n  value: 'Rendering',\n  id: 'rendering',\n  level: 3\n}, {\n  value: 'Drag And Drop',\n  id: 'drag-and-drop',\n  level: 3\n}, {\n  value: 'Events',\n  id: 'events',\n  level: 3\n}, {\n  value: 'Nested Dockviews',\n  id: 'nested-dockviews',\n  level: 3\n}, {\n  value: 'Group Controls Panel',\n  id: 'group-controls-panel',\n  level: 3\n}];\n\nconst layoutProps = {\n  toc\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"dockview\"\n    }}>{`Dockview`}</h1>\n    <h2 {...{\n      \"id\": \"introduction\"\n    }}>{`Introduction`}</h2>\n    <p>{`Dockview is an abstraction built on top of `}<a parentName=\"p\" {...{\n        \"href\": \"./gridview\"\n      }}>{`Gridviews`}</a>{` where each view is a container of many tabbed panels.`}</p>\n    <div style={{\n      height: '300px',\n      backgroundColor: 'rgb(30,30,30)',\n      color: 'white',\n      margin: '20px 0px'\n    }}>\n    <SimpleDockview mdxType=\"SimpleDockview\" />\n    </div>\n    <p>{`You can access the panels associated group through the `}<inlineCode parentName=\"p\">{`panel.group`}</inlineCode>{` variable.\nThe group will always be defined and will change if a panel is moved into another group.`}</p>\n    <h2 {...{\n      \"id\": \"dockviewreact-component\"\n    }}>{`DockviewReact Component`}</h2>\n    <p>{`You can create a Dockview through the use of the `}<inlineCode parentName=\"p\">{`ReactDockview`}</inlineCode>{` component.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`import { ReactDockview } from 'dockview';\n`}</code></pre>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Property`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Optional`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Default`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`onReady`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`(event: SplitviewReadyEvent) => void`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`No`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`components`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`object`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`No`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`tabComponents`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`object`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Yes`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`watermarkComponent`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`object`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Yes`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`hideBorders`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`boolean`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Yes`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`false`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`className`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Yes`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`''`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`disableAutoResizing`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`boolean`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Yes`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`false`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`See `}<Link to=\"../basics/#auto-resizing\" mdxType=\"Link\">{`Auto Resizing`}</Link></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`onDidDrop`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Event`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Yes`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`false`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`showDndOverlay`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Event`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Yes`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`false`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n      </tbody>\n    </table>\n    <h2 {...{\n      \"id\": \"dockview-api\"\n    }}>{`Dockview API`}</h2>\n    <p>{`The Dockview API is exposed both at the `}<inlineCode parentName=\"p\">{`onReady`}</inlineCode>{` event and on each panel through `}<inlineCode parentName=\"p\">{`props.containerApi`}</inlineCode>{`.\nThrough this API you can control general features of the component and access all added panels.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\",\n        \"metastring\": \"title=\\\"Dockview API via Panel component\\\"\",\n        \"title\": \"\\\"Dockview\",\n        \"API\": true,\n        \"via\": true,\n        \"Panel\": true,\n        \"component\\\"\": true\n      }}>{`const MyComponent = (props: IDockviewPanelProps<{ title: string }>) => {\n    // props.containerApi...\n\n    return <div>{\\`My first panel has the title: \\${props.params.title}\\`}</div>;\n};\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\",\n        \"metastring\": \"title=\\\"Dockview API via the onReady callback\\\"\",\n        \"title\": \"\\\"Dockview\",\n        \"API\": true,\n        \"via\": true,\n        \"the\": true,\n        \"onReady\": true,\n        \"callback\\\"\": true\n      }}>{`const onReady = (event: DockviewReadyEvent) => {\n    // event.api...\n};\n`}</code></pre>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Property`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`height`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`number`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Component pixel height`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`width`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`number`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Component pixel width`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`minimumHeight`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`number`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`maximumHeight`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`number`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`maximumWidth`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`number`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`maximumWidth`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`number`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`length`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`number`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Number of panels`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`size`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`number`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Number of Groups`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`panels`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`IDockviewPanel[]`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`groups`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`GroupPanel[]`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`activePanel`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`IDockviewPanel \\\\| undefined`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`activeGroup`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`IDockviewPanel \\\\| undefined`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`onDidLayoutChange`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`Event<void>`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`onDidLayoutFromJSON`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`Event<void>`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`onDidAddGroup`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`Event<GroupPanel>`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`onDidRemoveGroup`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`Event<GroupPanel>`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`onDidActiveGroupChange`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`Event<GroupPanel \\\\| undefined>`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`onDidAddPanel`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`Event<IDockviewPanel>`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`onDidRemovePanel`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`Event<IDockviewPanel>`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`onDidActivePanelChange`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`Event<IDockviewPanel \\\\| undefined>`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`onDidDrop`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`Event<DockviewDropEvent`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`addPanel`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`addPanel(options: AddPanelOptions): IDockviewPanel`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`getPanel`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`(id: string) \\\\| IDockviewPanel \\\\| undefined`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`addEmptyGroup`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`(options? AddGroupOptions): void`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`closeAllGroups`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`(): void`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`removeGroup`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`(group: GroupPanel): void`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`getGroup`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`(id: string): GroupPanel \\\\| undefined`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`getTabHeight`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`(): number \\\\| undefined`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`setTabHeight`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`(hegiht: number \\\\| undefined): void`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`updateOptions`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`(options:SplitviewComponentUpdateOptions): void`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`focus`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`(): void`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`layout`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`(width: number, height:number): void`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><Link to=\"../basics/#auto-resizing\" mdxType=\"Link\">{`Auto Resizing`}</Link></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`fromJSON`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`(data: SerializedDockview): void`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><Link to=\"../basics/#serialization\" mdxType=\"Link\">{`Serialization`}</Link></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`toJSON`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`(): SerializedDockview`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><Link to=\"../basics/#serialization\" mdxType=\"Link\">{`Serialization`}</Link></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`clear`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`(): void`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Clears the current layout`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h2 {...{\n      \"id\": \"dockview-panel-api\"\n    }}>{`Dockview Panel API`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`const MyComponent = (props: IDockviewPanelProps<{ title: string }>) => {\n    // props.api...\n\n    return <div>{\\`My first panel has the title: \\${props.params.title}\\`}</div>;\n};\n`}</code></pre>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Property`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`id`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`string`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Panel id`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`isFocused`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`boolean`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Is panel focsed`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`isActive`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`boolean`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Is panel active`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`width`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`number`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Panel width`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`height`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`number`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Panel height`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`onDidDimensionsChange`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`Event<PanelDimensionChangeEvent>`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`onDidFocusChange`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`Event<FocusEvent>`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`onDidVisibilityChange`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`Event<VisibilityEvent>`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`onDidActiveChange`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`Event<ActiveEvent>`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`setActive`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`(): void`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`onDidConstraintsChange`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`onDidConstraintsChange: Event<PanelConstraintChangeEvent>`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`setConstraints`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`(value: PanelConstraintChangeEvent2): void;`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`setSize`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`(event: SizeEvent): void`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`group`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`\\`GroupPanel`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`undefined\\``}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`isGroupActive`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`boolean`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`title`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`string`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`suppressClosable`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`boolean`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`close`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`(): void`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`setTitle`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`(title: string): void`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n      </tbody>\n    </table>\n    <h2 {...{\n      \"id\": \"advanced-features\"\n    }}>{`Advanced Features`}</h2>\n    <h3 {...{\n      \"id\": \"resizing-via-api\"\n    }}>{`Resizing via API`}</h3>\n    <p>{`Each Dockview is comprised of a number of groups, each of which have a number of panels.\nLogically most people would want to resize a panel but practically this really translates to resizing the group to which the panel belongs.`}</p>\n    <p>{`From the api you can access the panels group object (`}<inlineCode parentName=\"p\">{`props.group`}</inlineCode>{`) which exposes it's own api object (`}<inlineCode parentName=\"p\">{`props.groups.api`}</inlineCode>{`).\nThis api is largly similar to the `}<Link to=\"./gridview/#gridview-panel-api\" mdxType=\"Link\">{`Gridview API`}</Link>{`.`}</p>\n    <p>{`To resize an individual panel you could create a snippet similar to below.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`const onResizePanel = () => {\n    props.api.group.api.setSize({\n        height: 100,\n    });\n};\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`const onResizePanel = () => {\n    props.api.group.api.setSize({\n        width: 100,\n    });\n};\n`}</code></pre>\n    <p>{`Here is a working example of resizing panels via these API methods.`}</p>\n    <ResizeDockview mdxType=\"ResizeDockview\" />\n    <h3 {...{\n      \"id\": \"locked-group\"\n    }}>{`Locked group`}</h3>\n    <p>{`Locking a group will disable all drop events for this group ensuring a user can not add additional panels to the group.\nYou can still add groups to a locked panel programatically using the API.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`panel.group.locked = true;\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"group-header\"\n    }}>{`Group header`}</h3>\n    <p>{`You may wish to hide the header section of a group. This can achieved through setting the `}<inlineCode parentName=\"p\">{`hidden`}</inlineCode>{` variable on `}<inlineCode parentName=\"p\">{`panel.group.header`}</inlineCode>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`panel.group.header.hidden = true;\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"custom-tab-headers\"\n    }}>{`Custom Tab Headers`}</h3>\n    <p>{`You can provide custom renderers for your tab headers.\nA default implementation of `}<inlineCode parentName=\"p\">{`DockviewDefaultTab`}</inlineCode>{` is provided should you only wish to attach minor\nchanges and events that do not alter the default behaviour, for example to add a custom context menu event\nhandler.`}</p>\n    <p>{`You are also free to define a custom renderer entirely from scratch and not make use of the `}<inlineCode parentName=\"p\">{`DockviewDefaultTab`}</inlineCode>{` component.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\",\n        \"metastring\": \"title=\\\"Attaching a custom context menu event handlers to a custom header\\\"\",\n        \"title\": \"\\\"Attaching\",\n        \"a\": true,\n        \"custom\": true,\n        \"context\": true,\n        \"menu\": true,\n        \"event\": true,\n        \"handlers\": true,\n        \"to\": true,\n        \"header\\\"\": true\n      }}>{`import { IDockviewPanelHeaderProps, DockviewDefaultTab } from 'dockview';\n\nconst MyCustomheader = (props: IDockviewPanelHeaderProps) => {\n    const onContextMenu = (event: React.MouseEvent) => {\n        event.preventDefault();\n        alert('context menu');\n    };\n    return <DockviewDefaultTab onContextMenu={onContextMenu} {...props} />;\n};\n`}</code></pre>\n    <p>{`To use a custom renderer you can must register a collection of tab components`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`const tabComponents = {\n    myCustomHeader: MyCustomHeader,\n};\n\nreturn <DockviewReact tabComponents={tabComponents}  ... />;\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`api.addPanel({\n    id: 'panel_1',\n    component: 'default',\n    tabComponent: 'myCustomHeader', // <--\n    title: 'Panel 1',\n});\n`}</code></pre>\n    <p>{`You can also override the default tab renderer which will be used when no `}<inlineCode parentName=\"p\">{`tabComponent`}</inlineCode>{` is provided to the `}<inlineCode parentName=\"p\">{`addPanel`}</inlineCode>{` function.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`<DockviewReact defaultTabComponent={MyCustomHeader}  ... />;\n`}</code></pre>\n    <p>{`As a simple example the below attachs a custom event handler for the context menu on all tabs as a default tab renderer`}</p>\n    <CustomHeadersDockview mdxType=\"CustomHeadersDockview\" />\n    <h3 {...{\n      \"id\": \"rendering\"\n    }}>{`Rendering`}</h3>\n    <p>{`Although `}<inlineCode parentName=\"p\">{`DockviewReact`}</inlineCode>{` will only add those tabs that are visible to the DOM all associated React Components for each tab including those that\nare not initially visible will be created.\nThis will mean that any hooks in those components will run and if you running expensive operations in the tabs you may end up doing a lot of initial\nwork for what are hidden tabs.`}</p>\n    <p>{`This is the default behaviour to ensure the greatest flexibility for the user but you can create a Higher-Order component wrapping your components that\nwill ensure the component is only created if the tab is visible as below:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`import { PanelApi } from 'dockview';\nimport * as React from 'react';\n\nfunction RenderWhenVisible<\n    T extends { api: Pick<PanelApi, 'isVisible' | 'onDidVisibilityChange'> }\n>(component: React.FunctionComponent<T>) {\n    const HigherOrderComponent = (props: T) => {\n        const [visible, setVisible] = React.useState<boolean>(\n            props.api.isVisible\n        );\n\n        React.useEffect(() => {\n            const disposable = props.api.onDidVisibilityChange((event) =>\n                setVisible(event.isVisible)\n            );\n\n            return () => {\n                disposable.dispose();\n            };\n        }, [props.api]);\n\n        if (!visible) {\n            return null;\n        }\n\n        return React.createElement(component, props);\n    };\n    return HigherOrderComponent;\n}\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`const component = RenderWhenVisible(MyComponent);\n`}</code></pre>\n    <p>{`Through toggling the checkbox you can see that when you only render those panels which are visible the underling React component is destroyed when it becomes hidden and re-created when it becomes visible.`}</p>\n    <Checkbox mdxType=\"Checkbox\" />\n    <div style={{\n      height: '300px',\n      backgroundColor: 'rgb(30,30,30)',\n      color: 'white',\n      margin: '20px 0px'\n    }}>\n    <RenderingDockview renderVisibleOnly={false} mdxType=\"RenderingDockview\" />\n    </div>\n    <h3 {...{\n      \"id\": \"drag-and-drop\"\n    }}>{`Drag And Drop`}</h3>\n    <p>{`The component exposes some method to help determine whether external drag events should be interacted with or not.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`/**\n * called when an ondrop event which does not originate from the dockview libray and\n * passes the showDndOverlay condition occurs\n **/\nconst onDidDrop = (event: DockviewDropEvent) => {\n    const { group } = event;\n\n    event.api.addPanel({\n        id: 'test',\n        component: 'default',\n        position: {\n            referencePanel: group.activePanel.id,\n            direction: 'within',\n        },\n    });\n};\n\n/**\n * called for drag over events which do not originate from the dockview library\n * allowing the developer to decide where the overlay should be shown for a\n * particular drag event\n **/\nconst showDndOverlay = (event: DockviewDndOverlayEvent) => {\n    return true;\n};\n\nreturn (\n    <DockviewReact\n        components={components}\n        onReady={onReady}\n        className=\"dockview-theme-abyss\"\n        onDidDrop={onDidDrop}\n        showDndOverlay={showDndOverlay}\n    />\n);\n`}</code></pre>\n    <DndDockview mdxType=\"DndDockview\" />\n    <h3 {...{\n      \"id\": \"events\"\n    }}>{`Events`}</h3>\n    <EventsDockview mdxType=\"EventsDockview\" />\n    <h3 {...{\n      \"id\": \"nested-dockviews\"\n    }}>{`Nested Dockviews`}</h3>\n    <p>{`You can safely create multiple dockview instances within one page and nest dockviews within other dockviews.\nIf you wish to interact with the drop event from one dockview instance in another dockview instance you can implement the `}<inlineCode parentName=\"p\">{`showDndOverlay`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`onDidDrop`}</inlineCode>{` props on `}<inlineCode parentName=\"p\">{`DockviewReact`}</inlineCode>{`.`}</p>\n    <NestedDockview mdxType=\"NestedDockview\" />\n    <h3 {...{\n      \"id\": \"group-controls-panel\"\n    }}>{`Group Controls Panel`}</h3>\n    <p><inlineCode parentName=\"p\">{`DockviewReact`}</inlineCode>{` accepts a prop `}<inlineCode parentName=\"p\">{`groupControlComponent`}</inlineCode>{` which expects a React component whos props are `}<inlineCode parentName=\"p\">{`IDockviewGroupControlProps`}</inlineCode>{`.\nThis control will be rendered inside the header bar on the right hand side for each group of tabs.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`const Component: React.FunctionComponent<IDockviewGroupControlProps> = () => {\n    return <div>{'...'}</div>;\n};\n\nreturn <DockviewReact {...props} groupControlComponent={Component} />;\n`}</code></pre>\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n"],"names":["Console","props","ref","React","current","scrollTop","Math","max","scrollHeight","clientHeight","lines","className","map","line","i","key","now","pad","x","getHours","getMinutes","getSeconds","getMilliseconds","formatTime","timestamp","style","css","text","components","default","padding","params","title","headerComponents","DockviewDefaultTab","_extends","onContextMenu","event","preventDefault","alert","CustomHeadersDockview","height","margin","display","flexDirection","DockviewReact","defaultTabComponent","onReady","localStorage","getItem","api","addPanel","id","component","position","referencePanel","direction","panel6","group","locked","header","hidden","addGroup","DndDockview","backgroundColor","borderRadius","width","cursor","draggable","color","onDidDrop","positionToDirection","referenceGroup","showDndOverlay","EventsDockview","setLines","checked","setChecked","setApi","disposables","onDidAddPanel","panel","Date","onDidRemovePanel","onDidActivePanelChange","onDidAddGroup","onDidRemoveGroup","onDidActiveGroupChange","onDidLayoutChange","onDidLayoutFromJSON","forEach","disposable","dispose","fromJSON","grid","root","type","data","views","activeView","size","orientation","Orientation","panels","panel_1","view","content","panel_2","panel_3","panel_4","panel_5","panel_6","panel_8","panel_7","activeGroup","options","clear","onChange","e","target","background","innerDockview","InnerDockview","NestedDockview","renderVisibleComponentsOnlyAtom","atom","formatLine","timeout","setTimeout","clearTimeout","visible","setVisible","isVisible","render","useRecoilValue","onDidVisibilityChange","RenderingDockview","setRender","useRecoilState","renderVisibleOnly","Checkbox","setWidth","setHeight","value","Number","min","step","onClick","setSize","ResizeDockview","SimpleDockview","frontMatter","description","contentTitle","metadata","assets","toc","level","layoutProps","MDXLayout","MDXContent","_ref","mdx","mdxType","parentName","Link","to","isMDXComponent"],"sourceRoot":""}