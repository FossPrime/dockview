{"version":3,"file":"assets/js/e3ad1f13.85687252.js","mappings":"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","sources":["webpack://dockview-docs/../../../src/dnd/dnd.ts","webpack://dockview-docs/../../../src/dnd/droptarget.ts","webpack://dockview-docs/../../src/dom.ts","webpack://dockview-docs/../../src/events.ts","webpack://dockview-docs/../../src/lifecycle.ts","webpack://dockview-docs/../../src/math.ts","webpack://dockview-docs/../../src/types.ts","webpack://dockview-docs/./src/components/console/console.tsx","webpack://dockview-docs/./src/components/dockview/customHeaders.tsx","webpack://dockview-docs/./src/components/dockview/dnd.tsx","webpack://dockview-docs/./src/components/dockview/events.tsx","webpack://dockview-docs/./src/components/dockview/nested.tsx","webpack://dockview-docs/./src/components/dockview/rendering.tsx","webpack://dockview-docs/./src/components/dockview/resize.tsx","webpack://dockview-docs/./src/components/simpleDockview.tsx","webpack://dockview-docs/./src/components/dockview/groupControl.tsx","webpack://dockview-docs/./src/components/dockview/native.tsx","webpack://dockview-docs/./docs/components/dockview.mdx"],"sourcesContent":[null,null,null,null,null,null,null,"import * as React from 'react';\nimport './console.scss';\n\nconst formatTime = (now: Date) => {\n    const pad = (x: number) => (x < 10 ? `0${x}` : `${x}`);\n\n    return `${pad(now.getHours())}:${pad(now.getMinutes())}:${pad(\n        now.getSeconds()\n    )}.${now.getMilliseconds()}`;\n};\n\nexport interface Line {\n    timestamp: Date;\n    text: string;\n    css?: React.CSSProperties;\n}\n\nexport interface IConsoleProps {\n    lines: Line[];\n}\n\nexport const Console = (props: IConsoleProps) => {\n    const ref = React.useRef<HTMLDivElement>();\n\n    React.useLayoutEffect(() => {\n        if (!ref.current) {\n            return;\n        }\n\n        ref.current.scrollTop = Math.max(\n            0,\n            ref.current.scrollHeight - ref.current.clientHeight\n        );\n    }, [props.lines]);\n\n    return (\n        <div ref={ref} className=\"console-container\">\n            {props.lines.map((line, i) => {\n                return (\n                    <div key={i} className=\"console-line\">\n                        <span className=\"console-line-timestamp\">\n                            {formatTime(line.timestamp)}\n                        </span>\n                        <span className=\"console-line-text\" style={line.css}>\n                            {line.text}\n                        </span>\n                    </div>\n                );\n            })}\n        </div>\n    );\n};\n","import {\n    DockviewDefaultTab,\n    DockviewReact,\n    DockviewReadyEvent,\n    IDockviewPanelHeaderProps,\n    IDockviewPanelProps,\n} from 'dockview';\nimport * as React from 'react';\n\nconst components = {\n    default: (props: IDockviewPanelProps<{ title: string }>) => {\n        return <div style={{ padding: '20px' }}>{props.params.title}</div>;\n    },\n};\n\nconst MyCustomheader = (props: IDockviewPanelHeaderProps) => {\n    const onContextMenu = (event: React.MouseEvent) => {\n        event.preventDefault();\n        alert('context menu');\n    };\n    return <DockviewDefaultTab onContextMenu={onContextMenu} {...props} />;\n};\n\nconst headerComponents = {\n    default: (props: IDockviewPanelHeaderProps) => {\n        const onContextMenu = (event: React.MouseEvent) => {\n            event.preventDefault();\n            alert('context menu');\n        };\n        return <DockviewDefaultTab onContextMenu={onContextMenu} {...props} />;\n    },\n};\n\nexport const CustomHeadersDockview = () => {\n    const onReady = (event: DockviewReadyEvent) => {\n        const d = localStorage.getItem('test');\n\n        event.api.addPanel({\n            id: 'panel_1',\n            component: 'default',\n            title: 'Panel 1',\n        });\n        event.api.addPanel({\n            id: 'panel_2',\n            component: 'default',\n            title: 'Panel 2',\n        });\n        event.api.addPanel({\n            id: 'panel_3',\n            component: 'default',\n            title: 'Panel 3',\n        });\n        event.api.addPanel({\n            id: 'panel_4',\n            component: 'default',\n            title: 'Panel 4',\n            position: { referencePanel: 'panel_3', direction: 'right' },\n        });\n        event.api.addPanel({\n            id: 'panel_5',\n            component: 'default',\n            title: 'Panel 5',\n            position: { referencePanel: 'panel_4', direction: 'within' },\n        });\n        const panel6 = event.api.addPanel({\n            id: 'panel_6',\n            component: 'default',\n            title: 'Panel 6',\n            position: { referencePanel: 'panel_4', direction: 'below' },\n        });\n        panel6.group.locked = true;\n        panel6.group.header.hidden = true;\n        event.api.addPanel({\n            id: 'panel_7',\n            component: 'default',\n            title: 'Panel 7',\n            position: { referencePanel: 'panel_6', direction: 'right' },\n        });\n        event.api.addPanel({\n            id: 'panel_8',\n            component: 'default',\n\n            title: 'Panel 8',\n            position: { referencePanel: 'panel_7', direction: 'within' },\n        });\n\n        event.api.addGroup();\n    };\n\n    return (\n        <div\n            style={{\n                height: '500px',\n                margin: '40px 0px',\n                display: 'flex',\n                flexDirection: 'column',\n            }}\n        >\n            <DockviewReact\n                components={components}\n                defaultTabComponent={headerComponents.default}\n                onReady={onReady}\n                className=\"dockview-theme-abyss\"\n            />\n        </div>\n    );\n};\n","import {\n    DockviewDndOverlayEvent,\n    DockviewDropEvent,\n    DockviewReact,\n    DockviewReadyEvent,\n    IDockviewPanelProps,\n    positionToDirection,\n} from 'dockview';\nimport * as React from 'react';\n\nconst components = {\n    default: (props: IDockviewPanelProps<{ title: string }>) => {\n        return (\n            <div style={{ padding: '20px' }}>\n                <div>{props.params.title}</div>\n            </div>\n        );\n    },\n};\n\nexport const DndDockview = (props: { renderVisibleOnly: boolean }) => {\n    const onReady = (event: DockviewReadyEvent) => {\n        event.api.addPanel({\n            id: 'panel_1',\n            component: 'default',\n            params: {\n                title: 'Panel 1',\n            },\n        });\n\n        event.api.addPanel({\n            id: 'panel_2',\n            component: 'default',\n            params: {\n                title: 'Panel 2',\n            },\n        });\n\n        event.api.addPanel({\n            id: 'panel_3',\n            component: 'default',\n            params: {\n                title: 'Panel 3',\n            },\n        });\n\n        event.api.addPanel({\n            id: 'panel_4',\n            component: 'default',\n            params: {\n                title: 'Panel 4',\n            },\n            position: { referencePanel: 'panel_1', direction: 'right' },\n        });\n    };\n\n    const onDidDrop = (event: DockviewDropEvent) => {\n        event.api.addPanel({\n            id: 'test',\n            component: 'default',\n            position: {\n                direction: positionToDirection(event.position),\n                referenceGroup: event.group,\n            },\n        });\n    };\n\n    const showDndOverlay = (event: DockviewDndOverlayEvent) => {\n        return true;\n    };\n\n    return (\n        <>\n            <div\n                style={{\n                    backgroundColor: 'orange',\n                    padding: '0px 8px',\n                    borderRadius: '4px',\n                    width: '100px',\n                    cursor: 'pointer',\n                }}\n                draggable={true}\n            >\n                Drag me\n            </div>\n            <div\n                style={{\n                    height: '300px',\n                    backgroundColor: 'rgb(30,30,30)',\n                    color: 'white',\n                    margin: '20px 0px',\n                }}\n            >\n                <DockviewReact\n                    components={components}\n                    onReady={onReady}\n                    className=\"dockview-theme-abyss\"\n                    onDidDrop={onDidDrop}\n                    showDndOverlay={showDndOverlay}\n                />\n            </div>\n        </>\n    );\n};\n","import {\n    Orientation,\n    DockviewReact,\n    DockviewReadyEvent,\n    DockviewApi,\n    IDockviewPanelProps,\n} from 'dockview';\nimport * as React from 'react';\nimport { Console, Line } from '../console/console';\n\nconst components = {\n    default: (props: IDockviewPanelProps<{ title: string }>) => {\n        return <div style={{ padding: '20px' }}>{props.params.title}</div>;\n    },\n};\n\nexport const EventsDockview = () => {\n    const [lines, setLines] = React.useState<Line[]>([]);\n    const [checked, setChecked] = React.useState<boolean>(false);\n\n    const [api, setApi] = React.useState<DockviewApi | undefined>();\n\n    React.useEffect(() => {\n        if (!api) {\n            return () => {\n                //noop\n            };\n        }\n\n        const disposables = [\n            api.onDidAddPanel((panel) => {\n                setLines((lines) => [\n                    ...lines,\n                    {\n                        timestamp: new Date(),\n                        text: `onDidAddPanel: ${panel.id}`,\n                    },\n                ]);\n            }),\n            api.onDidRemovePanel((panel) => {\n                setLines((lines) => [\n                    ...lines,\n                    {\n                        timestamp: new Date(),\n                        text: `onDidRemovePanel: ${panel.id}`,\n                    },\n                ]);\n            }),\n            api.onDidActivePanelChange((panel) => {\n                setLines((lines) => [\n                    ...lines,\n                    {\n                        timestamp: new Date(),\n                        text: `onDidActivePanelChange: ${panel?.id}`,\n                    },\n                ]);\n            }),\n            api.onDidAddGroup((panel) => {\n                setLines((lines) => [\n                    ...lines,\n                    {\n                        timestamp: new Date(),\n                        text: `onDidAddGroup: ${panel.id}`,\n                    },\n                ]);\n            }),\n            api.onDidRemoveGroup((panel) => {\n                setLines((lines) => [\n                    ...lines,\n                    {\n                        timestamp: new Date(),\n                        text: `onDidRemoveGroup: ${panel.id}`,\n                    },\n                ]);\n            }),\n            api.onDidActiveGroupChange((panel) => {\n                setLines((lines) => [\n                    ...lines,\n                    {\n                        timestamp: new Date(),\n                        text: `onDidActiveGroupChange: ${panel?.id}`,\n                    },\n                ]);\n            }),\n            api.onDidLayoutChange((panel) => {\n                setLines((lines) => [\n                    ...lines,\n                    { timestamp: new Date(), text: `onDidLayoutChange` },\n                ]);\n            }),\n            api.onDidLayoutFromJSON((panel) => {\n                setLines((lines) => [\n                    ...lines,\n                    { timestamp: new Date(), text: `onDidLayoutFromJSON` },\n                ]);\n            }),\n        ];\n\n        return () => {\n            disposables.forEach((disposable) => disposable.dispose());\n        };\n    }, [api]);\n\n    React.useEffect(() => {\n        if (!api) {\n            return;\n        }\n\n        setLines((lines) => [\n            ...lines,\n            {\n                timestamp: new Date(),\n                text: `Rebuilding view fromJSON:${checked}`,\n                css: { color: 'yellow', backgroundColor: 'grey' },\n            },\n        ]);\n\n        if (checked) {\n            api.fromJSON({\n                grid: {\n                    root: {\n                        type: 'branch',\n                        data: [\n                            {\n                                type: 'leaf',\n                                data: {\n                                    views: ['panel_1', 'panel_2', 'panel_3'],\n                                    activeView: 'panel_3',\n                                    id: '77',\n                                },\n                                size: 262,\n                            },\n                            {\n                                type: 'branch',\n                                data: [\n                                    {\n                                        type: 'leaf',\n                                        data: {\n                                            views: ['panel_5'],\n                                            activeView: 'panel_5',\n                                            id: '79',\n                                        },\n                                        size: 100,\n                                    },\n                                    {\n                                        type: 'leaf',\n                                        data: {\n                                            views: ['panel_6', 'panel_8'],\n                                            activeView: 'panel_8',\n                                            id: '80',\n                                        },\n                                        size: 100,\n                                    },\n                                    {\n                                        type: 'leaf',\n                                        data: {\n                                            views: ['panel_7'],\n                                            activeView: 'panel_7',\n                                            id: '81',\n                                        },\n                                        size: 100,\n                                    },\n                                ],\n                                size: 262,\n                            },\n                            {\n                                type: 'leaf',\n                                data: {\n                                    views: ['panel_4'],\n                                    activeView: 'panel_4',\n                                    id: '78',\n                                },\n                                size: 263.75,\n                            },\n                        ],\n                        size: 300,\n                    },\n                    width: 787.75,\n                    height: 300,\n                    orientation: Orientation.HORIZONTAL,\n                },\n                panels: {\n                    panel_1: {\n                        id: 'panel_1',\n                        view: { content: { id: 'default' } },\n                        params: { title: 'Panel 1' },\n                        title: 'panel_1',\n                    },\n                    panel_2: {\n                        id: 'panel_2',\n                        view: { content: { id: 'default' } },\n                        params: { title: 'Panel 2' },\n                        title: 'panel_2',\n                    },\n                    panel_3: {\n                        id: 'panel_3',\n                        view: { content: { id: 'default' } },\n                        params: { title: 'Panel 3' },\n                        title: 'panel_3',\n                    },\n                    panel_4: {\n                        id: 'panel_4',\n                        view: { content: { id: 'default' } },\n                        params: { title: 'Panel 4' },\n                        title: 'panel_4',\n                    },\n                    panel_5: {\n                        id: 'panel_5',\n                        view: { content: { id: 'default' } },\n                        params: { title: 'Panel 5' },\n                        title: 'panel_5',\n                    },\n                    panel_6: {\n                        id: 'panel_6',\n                        view: { content: { id: 'default' } },\n                        params: { title: 'Panel 6' },\n                        title: 'panel_6',\n                    },\n                    panel_8: {\n                        id: 'panel_8',\n                        view: { content: { id: 'default' } },\n                        params: { title: 'Panel 8' },\n                        title: 'panel_8',\n                    },\n                    panel_7: {\n                        id: 'panel_7',\n                        view: { content: { id: 'default' } },\n                        params: { title: 'Panel 7' },\n                        title: 'panel_7',\n                    },\n                },\n                activeGroup: '80',\n                options: {},\n            });\n            return;\n        }\n\n        api.clear();\n\n        api.addPanel({\n            id: 'panel_1',\n            component: 'default',\n            params: {\n                title: 'Panel 1',\n            },\n        });\n\n        api.addPanel({\n            id: 'panel_2',\n            component: 'default',\n            params: {\n                title: 'Panel 2',\n            },\n        });\n\n        api.addPanel({\n            id: 'panel_3',\n            component: 'default',\n            params: {\n                title: 'Panel 3',\n            },\n        });\n\n        api.addPanel({\n            id: 'panel_4',\n            component: 'default',\n            params: {\n                title: 'Panel 4',\n            },\n            position: { referencePanel: 'panel_1', direction: 'right' },\n        });\n\n        api.addPanel({\n            id: 'panel_5',\n            component: 'default',\n            params: {\n                title: 'Panel 5',\n            },\n            position: { referencePanel: 'panel_3', direction: 'right' },\n        });\n\n        api.addPanel({\n            id: 'panel_6',\n            component: 'default',\n            params: {\n                title: 'Panel 6',\n            },\n            position: { referencePanel: 'panel_5', direction: 'below' },\n        });\n\n        api.addPanel({\n            id: 'panel_7',\n            component: 'default',\n            params: {\n                title: 'Panel 7',\n            },\n            position: { referencePanel: 'panel_6', direction: 'below' },\n        });\n\n        api.addPanel({\n            id: 'panel_8',\n            component: 'default',\n            params: {\n                title: 'Panel 8',\n            },\n            position: { referencePanel: 'panel_6', direction: 'within' },\n        });\n    }, [api, checked]);\n\n    const onReady = (event: DockviewReadyEvent) => {\n        setApi(event.api);\n    };\n\n    return (\n        <>\n            <label>\n                <input\n                    type=\"checkbox\"\n                    checked={checked}\n                    onChange={(e) => setChecked(e.target.checked)}\n                />\n                <span>{'fromJSON'}</span>\n            </label>\n            <div\n                style={{\n                    height: '300px',\n                    backgroundColor: 'rgb(30,30,30)',\n                    color: 'white',\n                    margin: '20px 0px',\n                }}\n            >\n                <DockviewReact\n                    components={components}\n                    onReady={onReady}\n                    className=\"dockview-theme-abyss\"\n                />\n            </div>\n\n            <Console lines={lines} />\n        </>\n    );\n};\n","import {\n    DockviewDndOverlayEvent,\n    DockviewDropEvent,\n    DockviewReact,\n    DockviewReadyEvent,\n    IDockviewPanelProps,\n} from 'dockview';\nimport * as React from 'react';\nimport './nested.scss';\n\nconst InnerDockview = () => {\n    const onReady = (event: DockviewReadyEvent) => {\n        event.api.addPanel({\n            id: 'panel_1',\n            component: 'default',\n        });\n\n        event.api.addPanel({\n            id: 'panel_2',\n            component: 'default',\n        });\n\n        event.api.addPanel({\n            id: 'panel_3',\n            component: 'default',\n        });\n    };\n\n    return (\n        <DockviewReact\n            onReady={onReady}\n            components={components}\n            className=\"dockview-theme-abyss nested-dockview\"\n        />\n    );\n};\n\nconst components = {\n    default: (props: IDockviewPanelProps<{ title: string }>) => {\n        return (\n            <div\n                style={{\n                    height: '100%',\n                    padding: '20px',\n                    background: 'var(--dv-group-view-background-color)',\n                }}\n            >\n                {props.params.title}\n            </div>\n        );\n    },\n    innerDockview: InnerDockview,\n};\n\nexport const NestedDockview = () => {\n    const onReady = (event: DockviewReadyEvent) => {\n        event.api.addPanel({\n            id: 'panel_1',\n            component: 'default',\n        });\n\n        event.api.addPanel({\n            id: 'panel_2',\n            component: 'default',\n        });\n\n        event.api.addPanel({\n            id: 'panel_3',\n            component: 'innerDockview',\n            position: { referencePanel: 'panel_2', direction: 'right' },\n        });\n    };\n\n    const showDndOverlay = (event: DockviewDndOverlayEvent) => {\n        // console.log(event.getData());\n\n        return false;\n    };\n\n    const onDidDrop = (event: DockviewDropEvent) => {\n        // event.getData();\n    };\n\n    return (\n        <div\n            style={{\n                height: '500px',\n                display: 'flex',\n                flexDirection: 'column',\n            }}\n        >\n            <DockviewReact\n                onReady={onReady}\n                components={components}\n                className=\"dockview-theme-abyss\"\n                showDndOverlay={showDndOverlay}\n                onDidDrop={onDidDrop}\n            />\n        </div>\n    );\n};\n","import {\n    DockviewReact,\n    DockviewReadyEvent,\n    IDockviewPanelProps,\n    PanelApi,\n} from 'dockview';\nimport * as React from 'react';\n\nimport { atom, useRecoilState, useRecoilValue } from 'recoil';\n\nconst renderVisibleComponentsOnlyAtom = atom<boolean>({\n    key: 'renderVisibleComponentsOnlyAtom',\n    default: false,\n});\n\nfunction RenderWhenVisible(\n    component: React.FunctionComponent<IDockviewPanelProps>\n) {\n    const HigherOrderComponent = (props: IDockviewPanelProps) => {\n        const [visible, setVisible] = React.useState<boolean>(\n            props.api.isVisible\n        );\n\n        const render = useRecoilValue(renderVisibleComponentsOnlyAtom);\n\n        React.useEffect(() => {\n            const disposable = props.api.onDidVisibilityChange((event) =>\n                setVisible(event.isVisible)\n            );\n\n            return () => {\n                disposable.dispose();\n            };\n        }, [props.api]);\n\n        if (!visible && render) {\n            return null;\n        }\n\n        return React.createElement(component, props);\n    };\n    return HigherOrderComponent;\n}\n\nconst formatLine = (line: string) => {\n    const now = new Date();\n\n    const pad = (x: number) => (x < 10 ? `0${x}` : `${x}`);\n\n    const time = `${pad(now.getHours())}:${pad(now.getMinutes())}:${pad(\n        now.getSeconds()\n    )}`;\n\n    return `[${time}] ${line}`;\n};\n\nconst components = {\n    default: RenderWhenVisible(\n        (props: IDockviewPanelProps<{ title: string }>) => {\n            const [lines, setLines] = React.useState<string[]>([\n                formatLine('Component created'),\n            ]);\n\n            React.useEffect(() => {\n                setLines((lines) => [\n                    ...lines,\n                    formatLine('Running task for 5 seconds'),\n                ]);\n                const timeout = setTimeout(() => {\n                    setLines((lines) => [\n                        ...lines,\n                        formatLine('Task completed'),\n                    ]);\n                }, 5000);\n\n                return () => {\n                    clearTimeout(timeout);\n                };\n            }, []);\n\n            return (\n                <div style={{ padding: '20px' }}>\n                    <div>{props.params.title}</div>\n                    {lines.map((line, i) => (\n                        <div key={i}>{line}</div>\n                    ))}\n                </div>\n            );\n        }\n    ),\n};\n\nexport const RenderingDockview = (props: { renderVisibleOnly: boolean }) => {\n    const [render, setRender] = useRecoilState(renderVisibleComponentsOnlyAtom);\n\n    React.useEffect(\n        () => setRender(props.renderVisibleOnly),\n        [props.renderVisibleOnly]\n    );\n\n    const onReady = (event: DockviewReadyEvent) => {\n        event.api.addPanel({\n            id: 'panel_1',\n            component: 'default',\n            params: {\n                title: 'Panel 1',\n            },\n        });\n\n        event.api.addPanel({\n            id: 'panel_2',\n            component: 'default',\n            params: {\n                title: 'Panel 2',\n            },\n        });\n\n        event.api.addPanel({\n            id: 'panel_3',\n            component: 'default',\n            params: {\n                title: 'Panel 3',\n            },\n        });\n\n        event.api.addPanel({\n            id: 'panel_4',\n            component: 'default',\n            params: {\n                title: 'Panel 4',\n            },\n            position: { referencePanel: 'panel_1', direction: 'right' },\n        });\n    };\n\n    return (\n        <DockviewReact\n            components={components}\n            onReady={onReady}\n            className=\"dockview-theme-abyss\"\n        />\n    );\n};\n\nexport const Checkbox = () => {\n    const [render, setRender] = useRecoilState(renderVisibleComponentsOnlyAtom);\n\n    return (\n        <label>\n            Render only when visible\n            <input\n                type=\"checkbox\"\n                checked={render}\n                onChange={(e) => setRender(e.target.checked)}\n            />\n        </label>\n    );\n};\n","import {\n    DockviewReact,\n    DockviewReadyEvent,\n    IDockviewPanelProps,\n} from 'dockview';\nimport * as React from 'react';\nimport './resize.scss';\n\nconst Default = (props: IDockviewPanelProps) => {\n    const [width, setWidth] = React.useState<number>(100);\n    const [height, setHeight] = React.useState<number>(100);\n\n    return (\n        <div className=\"resize-panel\">\n            <div style={{ height: '25px' }}>{props.api.title}</div>\n            <div className=\"resize-control\">\n                <span>Width:</span>\n                <input\n                    value={width}\n                    onChange={(e) => setWidth(Number(e.target.value))}\n                    type=\"number\"\n                    min={50}\n                    step={1}\n                />\n                <button\n                    style={{ width: '100px' }}\n                    onClick={() => {\n                        props.api.group.api.setSize({\n                            width,\n                        });\n                    }}\n                >\n                    Resize Group\n                </button>\n                <button\n                    style={{ width: '100px' }}\n                    onClick={() => {\n                        props.api.setSize({\n                            width,\n                        });\n                    }}\n                >\n                    Resize panel\n                </button>\n            </div>\n            <div className=\"resize-control\">\n                <span>Height:</span>\n                <input\n                    value={height}\n                    onChange={(e) => setHeight(Number(e.target.value))}\n                    type=\"number\"\n                    min={50}\n                    step={1}\n                />\n                <button\n                    style={{ width: '100px' }}\n                    onClick={() => {\n                        props.api.group.api.setSize({\n                            height,\n                        });\n                    }}\n                >\n                    Resize Group\n                </button>\n                <button\n                    style={{ width: '100px' }}\n                    onClick={() => {\n                        props.api.setSize({\n                            height,\n                        });\n                    }}\n                >\n                    Resize Panel\n                </button>\n            </div>\n        </div>\n    );\n};\n\nconst components = {\n    default: Default,\n};\n\nexport const ResizeDockview = () => {\n    const onReady = (event: DockviewReadyEvent) => {\n        event.api.addPanel({\n            id: 'panel_1',\n            component: 'default',\n        });\n\n        event.api.addPanel({\n            id: 'panel_2',\n            component: 'default',\n            position: {\n                direction: 'right',\n                referencePanel: 'panel_1',\n            },\n        });\n\n        event.api.addPanel({\n            id: 'panel_3',\n            component: 'default',\n            position: {\n                direction: 'below',\n                referencePanel: 'panel_1',\n            },\n        });\n        event.api.addPanel({\n            id: 'panel_4',\n            component: 'default',\n        });\n        event.api.addPanel({\n            id: 'panel_5',\n            component: 'default',\n        });\n    };\n\n    return (\n        <div\n            style={{\n                height: '500px',\n                display: 'flex',\n                flexDirection: 'column',\n            }}\n        >\n            <DockviewReact\n                className=\"dockview-theme-dark\"\n                onReady={onReady}\n                components={components}\n            />\n        </div>\n    );\n};\n","import {\n    DockviewReact,\n    DockviewReadyEvent,\n    IDockviewPanelProps,\n    PanelApi,\n} from 'dockview';\nimport * as React from 'react';\n\nconst components = {\n    default: (props: IDockviewPanelProps<{ title: string }>) => {\n        return <div style={{ padding: '20px' }}>{props.params.title}</div>;\n    },\n};\n\nconst RenderWhenVisible = <T,>(\n    props: T & {\n        children: React.FunctionComponent<T>;\n        api: Pick<PanelApi, 'isVisible' | 'onDidVisibilityChange'>;\n    }\n) => {\n    const [visible, setVisible] = React.useState<boolean>(props.api.isVisible);\n\n    React.useEffect(() => {\n        const disposable = props.api.onDidVisibilityChange((event) =>\n            setVisible(event.isVisible)\n        );\n\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.api]);\n\n    if (!visible) {\n        return null;\n    }\n\n    return React.createElement(props.children, props);\n};\n\nexport const SimpleDockview = () => {\n    const onReady = (event: DockviewReadyEvent) => {\n        const panel = event.api.addPanel({\n            id: 'panel_1',\n            component: 'default',\n            params: {\n                title: 'Panel 1',\n            },\n        });\n\n        panel.group.locked = true;\n        panel.group.header.hidden = true;\n\n        event.api.addPanel({\n            id: 'panel_2',\n            component: 'default',\n            params: {\n                title: 'Panel 2',\n            },\n        });\n\n        event.api.addPanel({\n            id: 'panel_3',\n            component: 'default',\n            params: {\n                title: 'Panel 3',\n            },\n        });\n\n        event.api.addPanel({\n            id: 'panel_4',\n            component: 'default',\n            params: {\n                title: 'Panel 4',\n            },\n            position: { referencePanel: 'panel_1', direction: 'right' },\n        });\n\n        const panel5 = event.api.addPanel({\n            id: 'panel_5',\n            component: 'default',\n            params: {\n                title: 'Panel 5',\n            },\n            position: { referencePanel: 'panel_3', direction: 'right' },\n        });\n\n        // panel5.group!.model.header.hidden = true;\n        // panel5.group!.model.locked = true;\n\n        event.api.addPanel({\n            id: 'panel_6',\n            component: 'default',\n            params: {\n                title: 'Panel 6',\n            },\n            position: { referencePanel: 'panel_5', direction: 'below' },\n        });\n\n        event.api.addPanel({\n            id: 'panel_7',\n            component: 'default',\n            params: {\n                title: 'Panel 7',\n            },\n            position: { referencePanel: 'panel_6', direction: 'right' },\n        });\n    };\n\n    return (\n        <DockviewReact\n            components={components}\n            onReady={onReady}\n            className=\"dockview-theme-abyss\"\n        />\n    );\n};\n","import {} from '@site/../dockview/dist/cjs/dnd/droptarget';\nimport {\n    DockviewReact,\n    DockviewReadyEvent,\n    IDockviewGroupControlProps,\n    IDockviewPanelProps,\n} from 'dockview';\nimport * as React from 'react';\nimport './groupControl.scss';\n\nconst components = {\n    default: (props: IDockviewPanelProps<{ title: string; x?: number }>) => {\n        return (\n            <div\n                style={{\n                    display: 'flex',\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    color: 'white',\n                    height: '100%',\n                }}\n            >\n                <span>{`${props.params.title}`}</span>\n                {props.params.x && <span>{`  ${props.params.x}`}</span>}\n            </div>\n        );\n    },\n};\n\nconst GroupControlComponent = (props: IDockviewGroupControlProps) => {\n    const isGroupActive = props.isGroupActive;\n    const activePanel = props.activePanel;\n\n    return (\n        <div className=\"dockview-groupcontrol-demo\">\n            <span\n                className=\"dockview-groupcontrol-demo-group-active\"\n                style={{\n                    background: isGroupActive ? 'green' : 'red',\n                }}\n            >\n                {isGroupActive ? 'Group Active' : 'Group Inactive'}\n            </span>\n            <span className=\"dockview-groupcontrol-demo-active-panel\">{`activePanel: ${\n                activePanel?.id || 'null'\n            }`}</span>\n        </div>\n    );\n};\n\nexport const DockviewGroupControl = () => {\n    const onReady = (event: DockviewReadyEvent) => {\n        const panel1 = event.api.addPanel({\n            id: 'panel_1',\n            component: 'default',\n            tabComponent: 'default',\n            params: {\n                title: 'Window 1',\n            },\n        });\n\n        const panel2 = event.api.addPanel({\n            id: 'panel_2',\n            component: 'default',\n            tabComponent: 'default',\n            params: {\n                title: 'Window 2',\n            },\n            position: {\n                direction: 'right',\n            },\n        });\n\n        const panel3 = event.api.addPanel({\n            id: 'panel_3',\n            component: 'default',\n            tabComponent: 'default',\n            params: {\n                title: 'Window 3',\n            },\n            position: {\n                direction: 'below',\n            },\n        });\n    };\n\n    return (\n        <div\n            style={{\n                height: '500px',\n                display: 'flex',\n                flexDirection: 'column',\n            }}\n        >\n            <DockviewReact\n                onReady={onReady}\n                components={components}\n                groupControlComponent={GroupControlComponent}\n                className=\"dockview-theme-abyss\"\n            />\n        </div>\n    );\n};\n","import {\n    CanDisplayOverlay,\n    Droptarget,\n    DropTargetDirections,\n} from '@site/../dockview/dist/cjs/dnd/droptarget';\nimport {\n    DockviewDndOverlayEvent,\n    DockviewDropEvent,\n    DockviewReact,\n    DockviewReadyEvent,\n    GridviewReact,\n    GridviewReadyEvent,\n    IDockviewPanelProps,\n    IGridviewPanelProps,\n    Position,\n    Direction,\n    IDockviewPanelHeaderProps,\n} from 'dockview';\nimport * as React from 'react';\nimport './native.scss';\n\nclass CustomDndTraget {\n    private data: any;\n\n    static SINGLETON = new CustomDndTraget();\n\n    setData<T>(t: T): void {\n        this.data = t;\n    }\n\n    getData<T>(): T {\n        return this.data;\n    }\n\n    clearData(): void {\n        this.data = null;\n    }\n}\n\ntype CustomDescriptor = {\n    type: 'CUSTOM';\n    id: string;\n};\n\nfunction isCustomDescriptor(obj: any): obj is CustomDescriptor {\n    return (\n        typeof obj === 'object' && (obj as CustomDescriptor).type === 'CUSTOM'\n    );\n}\n\nfunction convertPositionToDirection(position: Position): Direction {\n    switch (position) {\n        case Position.Left:\n            return 'left';\n\n        case Position.Right:\n            return 'right';\n\n        case Position.Bottom:\n            return 'below';\n\n        case Position.Top:\n            return 'above';\n\n        case Position.Center:\n            return 'within';\n    }\n}\n\nconst components = {\n    default: (props: IDockviewPanelProps<{ title: string; x?: number }>) => {\n        return (\n            <div\n                style={{\n                    display: 'flex',\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    color: 'white',\n                    height: '100%',\n                }}\n            >\n                <span>{`${props.params.title}`}</span>\n                {props.params.x && <span>{`  ${props.params.x}`}</span>}\n            </div>\n        );\n    },\n    isolatedApp: (\n        props: IDockviewPanelProps<{ title: string; x?: number }>\n    ) => {\n        const onReady = (event: DockviewReadyEvent) => {\n            const panel1 = event.api.addPanel({\n                id: 'panel_1',\n                component: 'default',\n                params: {\n                    title: 'Tab 1',\n                },\n            });\n            const panel2 = event.api.addPanel({\n                id: 'panel_2',\n                component: 'default',\n                params: {\n                    title: 'Tab 2',\n                },\n            });\n            const panel3 = event.api.addPanel({\n                id: 'panel_3',\n                component: 'default',\n                params: {\n                    title: 'Tab 3',\n                },\n            });\n        };\n        return (\n            <DockviewReact\n                onReady={onReady}\n                components={components}\n                tabComponents={tabComponents}\n                className=\"dockview-theme-abyss\"\n            />\n        );\n    },\n};\n\nconst tabComponents = {\n    default: (props: IDockviewPanelHeaderProps<{ title: string }>) => {\n        return (\n            <div className=\"my-custom-tab\">\n                <span>{props.params.title}</span>\n                <span style={{ flexGrow: 1 }} />\n\n                <span className=\"my-custom-tab-icon material-symbols-outlined\">\n                    chrome_minimize\n                </span>\n                <span className=\"my-custom-tab-icon material-symbols-outlined\">\n                    chrome_maximize\n                </span>\n                <span className=\"my-custom-tab-icon material-symbols-outlined\">\n                    close\n                </span>\n            </div>\n        );\n    },\n};\n\nexport const DockviewNative = () => {\n    const onReady = (event: DockviewReadyEvent) => {\n        const panel1 = event.api.addPanel({\n            id: 'panel_1',\n            component: 'default',\n            tabComponent: 'default',\n            params: {\n                title: 'Window 1',\n            },\n        });\n        panel1.group.locked = true;\n\n        const panel2 = event.api.addPanel({\n            id: 'panel_2',\n            component: 'default',\n            tabComponent: 'default',\n            params: {\n                title: 'Window 2',\n            },\n            position: {\n                direction: 'right',\n            },\n        });\n        panel2.group.locked = true;\n\n        const panel3 = event.api.addPanel({\n            id: 'panel_3',\n            component: 'default',\n            tabComponent: 'default',\n            params: {\n                title: 'Window 3',\n            },\n            position: {\n                direction: 'below',\n            },\n        });\n        panel3.group.locked = true;\n    };\n\n    return (\n        <div\n            style={{\n                height: '500px',\n                display: 'flex',\n                flexDirection: 'column',\n            }}\n        >\n            <DockviewReact\n                onReady={onReady}\n                components={components}\n                tabComponents={tabComponents}\n                className=\"dockview-theme-abyss\"\n                singleTabMode=\"fullwidth\"\n            />\n        </div>\n    );\n};\n\nexport const DockviewNative2 = () => {\n    const onReady = (event: DockviewReadyEvent) => {\n        const panel1 = event.api.addPanel({\n            id: 'panel_1',\n            component: 'isolatedApp',\n            tabComponent: 'default',\n            params: {\n                title: 'Window 1',\n            },\n        });\n        panel1.group.locked = true;\n\n        const panel2 = event.api.addPanel({\n            id: 'panel_2',\n            component: 'isolatedApp',\n            tabComponent: 'default',\n            params: {\n                title: 'Window 2',\n            },\n            position: {\n                direction: 'right',\n            },\n        });\n        panel2.group.locked = true;\n\n        const panel3 = event.api.addPanel({\n            id: 'panel_3',\n            component: 'isolatedApp',\n            tabComponent: 'default',\n            params: {\n                title: 'Window 3',\n            },\n            position: {\n                direction: 'below',\n            },\n        });\n        panel3.group.locked = true;\n    };\n\n    return (\n        <div\n            style={{\n                height: '500px',\n                display: 'flex',\n                flexDirection: 'column',\n            }}\n        >\n            <DockviewReact\n                onReady={onReady}\n                components={components}\n                tabComponents={tabComponents}\n                className=\"dockview-theme-abyss\"\n                singleTabMode=\"fullwidth\"\n            />\n        </div>\n    );\n};\n","\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\n/* @jsxFrag React.Fragment */\n\nimport React from 'react';\nimport { mdx } from '@mdx-js/react';\n\n\nexport const frontMatter = {\n\tdescription: 'Dockview Documentation'\n};\nexport const contentTitle = 'Dockview';\nexport const metadata = {\n  \"unversionedId\": \"components/dockview\",\n  \"id\": \"components/dockview\",\n  \"title\": \"Dockview\",\n  \"description\": \"Dockview Documentation\",\n  \"source\": \"@site/docs/components/dockview.mdx\",\n  \"sourceDirName\": \"components\",\n  \"slug\": \"/components/dockview\",\n  \"permalink\": \"/docs/next/components/dockview\",\n  \"draft\": false,\n  \"editUrl\": \"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/components/dockview.mdx\",\n  \"tags\": [],\n  \"version\": \"current\",\n  \"frontMatter\": {\n    \"description\": \"Dockview Documentation\"\n  },\n  \"sidebar\": \"tutorialSidebar\",\n  \"previous\": {\n    \"title\": \"Components\",\n    \"permalink\": \"/docs/next/category/components\"\n  },\n  \"next\": {\n    \"title\": \"Gridview\",\n    \"permalink\": \"/docs/next/components/gridview\"\n  }\n};\nexport const assets = {\n\n};\n\nimport { SimpleDockview } from '@site/src/components/simpleDockview';\nimport {\n    RenderingDockview,\n    Checkbox,\n} from '@site/src/components/dockview/rendering';\nimport { DndDockview } from '@site/src/components/dockview/dnd';\nimport { EventsDockview } from '@site/src/components/dockview/events';\nimport { ContextMenuDockview } from '@site/src/components/dockview/contextMenu';\nimport { NestedDockview } from '@site/src/components/dockview/nested';\nimport { CustomHeadersDockview } from '@site/src/components/dockview/customHeaders';\nimport { ResizeDockview } from '@site/src/components/dockview/resize';\nimport { DockviewGroupControl } from '@site/src/components/dockview/groupControl';\nimport {\n    DockviewNative,\n    DockviewNative2,\n} from '@site/src/components/dockview/native';\nimport Link from '@docusaurus/Link';\nimport useBaseUrl from '@docusaurus/useBaseUrl';\nexport const toc = [{\n  value: 'Introduction',\n  id: 'introduction',\n  level: 2\n}, {\n  value: 'DockviewReact Component',\n  id: 'dockviewreact-component',\n  level: 2\n}, {\n  value: 'Dockview API',\n  id: 'dockview-api',\n  level: 2\n}, {\n  value: 'Dockview Panel API',\n  id: 'dockview-panel-api',\n  level: 2\n}, {\n  value: 'Essential Features',\n  id: 'essential-features',\n  level: 2\n}, {\n  value: 'Add Panel',\n  id: 'add-panel',\n  level: 3\n}, {\n  value: 'Advanced Features',\n  id: 'advanced-features',\n  level: 2\n}, {\n  value: 'Resizing via API',\n  id: 'resizing-via-api',\n  level: 3\n}, {\n  value: 'Locked group',\n  id: 'locked-group',\n  level: 3\n}, {\n  value: 'Group header',\n  id: 'group-header',\n  level: 3\n}, {\n  value: 'Custom Tab Headers',\n  id: 'custom-tab-headers',\n  level: 3\n}, {\n  value: 'Panel Rendering',\n  id: 'panel-rendering',\n  level: 3\n}, {\n  value: 'Drag And Drop',\n  id: 'drag-and-drop',\n  level: 3\n}, {\n  value: 'Built-in behaviours',\n  id: 'built-in-behaviours',\n  level: 4\n}, {\n  value: 'Extended behaviours',\n  id: 'extended-behaviours',\n  level: 4\n}, {\n  value: 'Events',\n  id: 'events',\n  level: 3\n}, {\n  value: 'Nested Dockviews',\n  id: 'nested-dockviews',\n  level: 3\n}, {\n  value: 'Group Controls Panel',\n  id: 'group-controls-panel',\n  level: 3\n}, {\n  value: 'Full width tabs',\n  id: 'full-width-tabs',\n  level: 3\n}, {\n  value: 'Example',\n  id: 'example',\n  level: 3\n}];\n\nconst layoutProps = {\n  toc\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"dockview\"\n    }}>{`Dockview`}</h1>\n    <h2 {...{\n      \"id\": \"introduction\"\n    }}>{`Introduction`}</h2>\n    <p>{`Dockview is an abstraction built on top of `}<a parentName=\"p\" {...{\n        \"href\": \"./gridview\"\n      }}>{`Gridviews`}</a>{` where each view is a container of many tabbed panels.`}</p>\n    <div style={{\n      height: '300px',\n      backgroundColor: 'rgb(30,30,30)',\n      color: 'white',\n      margin: '20px 0px'\n    }}>\n    <SimpleDockview mdxType=\"SimpleDockview\" />\n    </div>\n    <p>{`You can access the panels associated group through the `}<inlineCode parentName=\"p\">{`panel.group`}</inlineCode>{` variable.\nThe group will always be defined and will change if a panel is moved into another group.`}</p>\n    <h2 {...{\n      \"id\": \"dockviewreact-component\"\n    }}>{`DockviewReact Component`}</h2>\n    <p>{`You can create a Dockview through the use of the `}<inlineCode parentName=\"p\">{`ReactDockview`}</inlineCode>{` component.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`import { ReactDockview } from 'dockview';\n`}</code></pre>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Property`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Optional`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Default`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`onReady`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`(event: SplitviewReadyEvent) => void`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`No`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`components`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`object`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`No`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`tabComponents`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`object`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Yes`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`watermarkComponent`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`object`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Yes`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`hideBorders`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`boolean`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Yes`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`false`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`className`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Yes`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`''`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`disableAutoResizing`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`boolean`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Yes`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`false`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`See `}<Link to=\"../basics/#auto-resizing\" mdxType=\"Link\">{`Auto Resizing`}</Link></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`onDidDrop`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Event`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Yes`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`false`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`showDndOverlay`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Event`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Yes`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`false`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`defaultTabComponent`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`object`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Yes`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`groupControlComponent`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`object`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Yes`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`tabHeight`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`number`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Yes`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`singleTabMode`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`'fullwidth' `}{`|`}{` 'default'`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Yes`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`'default'`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n      </tbody>\n    </table>\n    <h2 {...{\n      \"id\": \"dockview-api\"\n    }}>{`Dockview API`}</h2>\n    <p>{`The Dockview API is exposed both at the `}<inlineCode parentName=\"p\">{`onReady`}</inlineCode>{` event and on each panel through `}<inlineCode parentName=\"p\">{`props.containerApi`}</inlineCode>{`.\nThrough this API you can control general features of the component and access all added panels.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\",\n        \"metastring\": \"title=\\\"Dockview API via Panel component\\\"\",\n        \"title\": \"\\\"Dockview\",\n        \"API\": true,\n        \"via\": true,\n        \"Panel\": true,\n        \"component\\\"\": true\n      }}>{`const MyComponent = (props: IDockviewPanelProps<{ title: string }>) => {\n    // props.containerApi...\n\n    return <div>{\\`My first panel has the title: \\${props.params.title}\\`}</div>;\n};\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\",\n        \"metastring\": \"title=\\\"Dockview API via the onReady callback\\\"\",\n        \"title\": \"\\\"Dockview\",\n        \"API\": true,\n        \"via\": true,\n        \"the\": true,\n        \"onReady\": true,\n        \"callback\\\"\": true\n      }}>{`const onReady = (event: DockviewReadyEvent) => {\n    // event.api...\n};\n`}</code></pre>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Property`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`height`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`number`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Component pixel height`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`width`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`number`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Component pixel width`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`minimumHeight`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`number`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`maximumHeight`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`number`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`maximumWidth`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`number`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`maximumWidth`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`number`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`length`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`number`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Number of panels`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`size`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`number`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Number of Groups`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`panels`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`IDockviewPanel[]`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`groups`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`GroupPanel[]`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`activePanel`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`IDockviewPanel \\\\| undefined`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`activeGroup`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`IDockviewPanel \\\\| undefined`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`onDidLayoutChange`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`Event<void>`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`onDidLayoutFromJSON`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`Event<void>`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`onDidAddGroup`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`Event<GroupPanel>`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`onDidRemoveGroup`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`Event<GroupPanel>`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`onDidActiveGroupChange`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`Event<GroupPanel \\\\| undefined>`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`onDidAddPanel`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`Event<IDockviewPanel>`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`onDidRemovePanel`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`Event<IDockviewPanel>`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`onDidActivePanelChange`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`Event<IDockviewPanel \\\\| undefined>`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`onDidDrop`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`Event<DockviewDropEvent`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`addPanel`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`addPanel(options: AddPanelOptions): IDockviewPanel`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`getPanel`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`(id: string) \\\\| IDockviewPanel \\\\| undefined`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`addGroup`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`(options? AddGroupOptions): void`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`closeAllGroups`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`(): void`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`removeGroup`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`(group: GroupPanel): void`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`getGroup`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`(id: string): GroupPanel \\\\| undefined`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`getTabHeight`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`(): number \\\\| undefined`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`setTabHeight`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`(height: number \\\\| undefined): void`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`updateOptions`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`(options:SplitviewComponentUpdateOptions): void`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`focus`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`(): void`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`layout`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`(width: number, height:number): void`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><Link to=\"../basics/#auto-resizing\" mdxType=\"Link\">{`Auto Resizing`}</Link></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`fromJSON`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`(data: SerializedDockview): void`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><Link to=\"../basics/#serialization\" mdxType=\"Link\">{`Serialization`}</Link></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`toJSON`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`(): SerializedDockview`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><Link to=\"../basics/#serialization\" mdxType=\"Link\">{`Serialization`}</Link></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`clear`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`(): void`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Clears the current layout`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h2 {...{\n      \"id\": \"dockview-panel-api\"\n    }}>{`Dockview Panel API`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`const MyComponent = (props: IDockviewPanelProps<{ title: string }>) => {\n    // props.api...\n\n    return <div>{\\`My first panel has the title: \\${props.params.title}\\`}</div>;\n};\n`}</code></pre>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Property`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`id`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`string`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Panel id`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`isFocused`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`boolean`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Is panel focused`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`isActive`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`boolean`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Is panel active`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`width`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`number`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Panel width`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`height`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`number`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Panel height`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`onDidDimensionsChange`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`Event<PanelDimensionChangeEvent>`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`onDidFocusChange`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`Event<FocusEvent>`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`onDidVisibilityChange`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`Event<VisibilityEvent>`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`onDidActiveChange`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`Event<ActiveEvent>`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`setActive`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`(): void`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`onDidConstraintsChange`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`onDidConstraintsChange: Event<PanelConstraintChangeEvent>`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`setConstraints`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`(value: PanelConstraintChangeEvent2): void;`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`setSize`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`(event: SizeEvent): void`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`group`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`\\`GroupPanel`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`undefined\\``}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`isGroupActive`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`boolean`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`title`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`string`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`suppressClosable`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`boolean`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`close`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`(): void`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`setTitle`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`(title: string): void`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n      </tbody>\n    </table>\n    <h2 {...{\n      \"id\": \"essential-features\"\n    }}>{`Essential Features`}</h2>\n    <h3 {...{\n      \"id\": \"add-panel\"\n    }}>{`Add Panel`}</h3>\n    <p>{`Using the dockview API you can access the `}<inlineCode parentName=\"p\">{`addPanel`}</inlineCode>{` method which returns an instance of the created panel.\nThe minimum method signature is:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`const panel = api.addPanel({\n    id: 'my_unique_panel_id',\n    component: 'my_component',\n});\n`}</code></pre>\n    <p>{`where `}<inlineCode parentName=\"p\">{`id`}</inlineCode>{` is the unique id of the panel and `}<inlineCode parentName=\"p\">{`component`}</inlineCode>{` is the implenentation which\nwill be used to render the panel. You will have registered this using the `}<inlineCode parentName=\"p\">{`components`}</inlineCode>{` prop of the `}<inlineCode parentName=\"p\">{`DockviewReactComponent`}</inlineCode>{` component.`}</p>\n    <p>{`You can optionally provide a `}<inlineCode parentName=\"p\">{`tabComponent`}</inlineCode>{` parameters to the `}<inlineCode parentName=\"p\">{`addPanel`}</inlineCode>{` method which will render the tab using a custom renderer.\nYou will have registered this using the `}<inlineCode parentName=\"p\">{`tabComponents`}</inlineCode>{` prop of the `}<inlineCode parentName=\"p\">{`DockviewReactComponent`}</inlineCode>{` component.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`const panel = api.addPanel({\n    id: 'my_unique_panel_id',\n    component: 'my_component',\n    tabComponent: 'my_tab_component',\n});\n`}</code></pre>\n    <p>{`You can pass properties to the panel using the `}<inlineCode parentName=\"p\">{`params`}</inlineCode>{` key.\nYou can update these properties through the panels `}<inlineCode parentName=\"p\">{`api`}</inlineCode>{` object and its `}<inlineCode parentName=\"p\">{`updateParameters`}</inlineCode>{` method.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`const panel = api.addPanel({\n    id: 'my_unique_panel_id',\n    component: 'my_component',\n    params: {\n        myCustomKey: 'my_custom_value',\n    },\n});\n\npanel.api.updateParameters({\n    myCustomKey: 'my_custom_value',\n    myOtherCustomKey: 'my_other_custom_key',\n});\n`}</code></pre>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Note `}<inlineCode parentName=\"p\">{`updateParameters`}</inlineCode>{` does not accept partial parameter updates, you should call it with the entire set of parameters\nyou want the panel to receive.`}</p>\n    </blockquote>\n    <p>{`Finally `}<inlineCode parentName=\"p\">{`addPanel`}</inlineCode>{` accepts a `}<inlineCode parentName=\"p\">{`position`}</inlineCode>{` object which tells dockview where to place the panel.`}</p>\n    <ul>\n      <li parentName=\"ul\">{`This object optionally accepts either a `}<inlineCode parentName=\"li\">{`referencePanel`}</inlineCode>{` or `}<inlineCode parentName=\"li\">{`referenceGroup`}</inlineCode>{` which can be the associated id as a string\nor the panel/group object reference.`}</li>\n      <li parentName=\"ul\">{`This object accepts a `}<inlineCode parentName=\"li\">{`direction`}</inlineCode>{` property which dictates where,\nrelative to the provided reference the new panel will be placed.`}</li>\n    </ul>\n    <blockquote>\n      <p parentName=\"blockquote\">{`If neither a `}<inlineCode parentName=\"p\">{`referencePanel`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`referenceGroup`}</inlineCode>{` then the provided `}<inlineCode parentName=\"p\">{`direction`}</inlineCode>{` will be treated as absolute.`}</p>\n    </blockquote>\n    <blockquote>\n      <p parentName=\"blockquote\">{`If no `}<inlineCode parentName=\"p\">{`direction`}</inlineCode>{` is provided the library will place the new panel in a pre-determined position.`}</p>\n    </blockquote>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`const panel = api.addPanel({\n    id: 'panel_1',\n    component: 'default',\n});\n\nconst panel2 = api.addPanel({\n    id: 'panel_2',\n    component: 'default',\n    position: {\n        referencePanel: panel1,\n        direction: 'right',\n    },\n});\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"advanced-features\"\n    }}>{`Advanced Features`}</h2>\n    <h3 {...{\n      \"id\": \"resizing-via-api\"\n    }}>{`Resizing via API`}</h3>\n    <p>{`Each Dockview contains of a number of groups and each group has a number of panels.\nLogically a user may want to resize a panel, but this translates to resizing the group which contains that panel.`}</p>\n    <p>{`You can set the size of a panel using `}<inlineCode parentName=\"p\">{`props.api.setSize(...)`}</inlineCode>{`.\nYou can also set the size of the group associated with the panel using `}<inlineCode parentName=\"p\">{`props.api.group.api.setSize(...)`}</inlineCode>{` although this isn't recommended\ndue to the clunky syntax.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`// it's mandatory to provide either a height or a width, providing both is optional\nprops.api.setSize({\n    height: 100,\n    width: 200,\n});\n\n// you could also resize the panels group, although not recommended it achieved the same result\nprops.api.group.api.setSize({\n    height: 100,\n    width: 200,\n});\n`}</code></pre>\n    <p>{`You can see an example invoking both approaches below.`}</p>\n    <ResizeDockview mdxType=\"ResizeDockview\" />\n    <h3 {...{\n      \"id\": \"locked-group\"\n    }}>{`Locked group`}</h3>\n    <p>{`Locking a group will disable all drop events for this group ensuring no additional panels can be added to the group through drop events.\nYou can still add groups to a locked panel programatically using the API though.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`panel.group.locked = true;\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"group-header\"\n    }}>{`Group header`}</h3>\n    <p>{`You may wish to hide the header section of a group. This can achieved through the `}<inlineCode parentName=\"p\">{`hidden`}</inlineCode>{` variable on `}<inlineCode parentName=\"p\">{`panel.group.header`}</inlineCode>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`panel.group.header.hidden = true;\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"custom-tab-headers\"\n    }}>{`Custom Tab Headers`}</h3>\n    <p>{`You can provide custom renderers for your tab headers for maximum customization.\nA default implementation of `}<inlineCode parentName=\"p\">{`DockviewDefaultTab`}</inlineCode>{` is provided should you only wish to attach minor\nchanges and events that do not alter the default behaviour, for example to add a custom context menu event\nhandler.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\",\n        \"metastring\": \"title=\\\"Attaching a custom context menu event handlers to a custom header\\\"\",\n        \"title\": \"\\\"Attaching\",\n        \"a\": true,\n        \"custom\": true,\n        \"context\": true,\n        \"menu\": true,\n        \"event\": true,\n        \"handlers\": true,\n        \"to\": true,\n        \"header\\\"\": true\n      }}>{`import { IDockviewPanelHeaderProps, DockviewDefaultTab } from 'dockview';\n\nconst MyCustomheader = (props: IDockviewPanelHeaderProps) => {\n    const onContextMenu = (event: React.MouseEvent) => {\n        event.preventDefault();\n        alert('context menu');\n    };\n    return <DockviewDefaultTab onContextMenu={onContextMenu} {...props} />;\n};\n`}</code></pre>\n    <p>{`You are also free to define a custom renderer entirely from scratch and not make use of the `}<inlineCode parentName=\"p\">{`DockviewDefaultTab`}</inlineCode>{` component.\nTo use a custom renderer you can must register a collection of tab components.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`const tabComponents = {\n    myCustomHeader: MyCustomHeader,\n};\n\nreturn <DockviewReact tabComponents={tabComponents}  ... />;\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`api.addPanel({\n    id: 'panel_1',\n    component: 'default',\n    tabComponent: 'myCustomHeader', // <-- your registered renderers\n    title: 'Panel 1',\n});\n`}</code></pre>\n    <p>{`You can also override the default tab renderer which will be used when no `}<inlineCode parentName=\"p\">{`tabComponent`}</inlineCode>{` is provided to the `}<inlineCode parentName=\"p\">{`addPanel`}</inlineCode>{` function.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`<DockviewReact defaultTabComponent={MyCustomHeader}  ... />;\n`}</code></pre>\n    <p>{`As a simple example the below attachs a custom event handler for the context menu on all tabs as a default tab renderer`}</p>\n    <p>{`The below example uses a custom tab renderer to reigster a popover when the user right clicked on a tab.\nThis still makes use of the `}<inlineCode parentName=\"p\">{`DockviewDefaultTab`}</inlineCode>{` since it's only a minor change.`}</p>\n    <CustomHeadersDockview mdxType=\"CustomHeadersDockview\" />\n    <h3 {...{\n      \"id\": \"panel-rendering\"\n    }}>{`Panel Rendering`}</h3>\n    <p>{`By default `}<inlineCode parentName=\"p\">{`DockviewReact`}</inlineCode>{` only adds to the DOM those panels that are visible,\nif a panel is not the active tab and not shown the contents of the hidden panel will be removed from the DOM.`}</p>\n    <p>{`However the React Components associated with each panel are only created once and will always exist for as long as the panel exists, hidden or not.`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`For example this means that any hooks in those components will run whether the panel is visible or not which may lead to excessive background work depending\non the panels implementation.`}</p>\n    </blockquote>\n    <p>{`This is the default behaviour to ensure the greatest flexibility for the user but through the panels `}<inlineCode parentName=\"p\">{`props.api`}</inlineCode>{` you can listen to the visiblity state of the panel\nand write additional logic to optimize your application.`}</p>\n    <p>{`For example if you wanted to unmount the React Components when the panel is not visible you could create a Higher-Order-Component that listens to the panels\nvisiblity state and only renders the panel when visible.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\",\n        \"metastring\": \"title=\\\"Only rendering the React Component when the panel is visible, otherwise rendering a null React Component\\\"\",\n        \"title\": \"\\\"Only\",\n        \"rendering\": true,\n        \"the\": true,\n        \"React\": true,\n        \"Component\": true,\n        \"when\": true,\n        \"panel\": true,\n        \"is\": true,\n        \"visible,\": true,\n        \"otherwise\": true,\n        \"a\": true,\n        \"null\": true,\n        \"Component\\\"\": true\n      }}>{`import { IDockviewPanelProps } from 'dockview';\nimport * as React from 'react';\n\nfunction RenderWhenVisible(\n    component: React.FunctionComponent<IDockviewPanelProps>\n) {\n    const HigherOrderComponent = (props: IDockviewPanelProps) => {\n        const [visible, setVisible] = React.useState<boolean>(\n            props.api.isVisible\n        );\n\n        React.useEffect(() => {\n            const disposable = props.api.onDidVisibilityChange((event) =>\n                setVisible(event.isVisible)\n            );\n\n            return () => {\n                disposable.dispose();\n            };\n        }, [props.api]);\n\n        if (!visible) {\n            return null;\n        }\n\n        return React.createElement(component, props);\n    };\n    return HigherOrderComponent;\n}\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`const components = { default: RenderWhenVisible(MyComponent) };\n`}</code></pre>\n    <p>{`Toggling the checkbox you can see that when you only render those panels which are visible the underling React component is destroyed when it becomes hidden and re-created when it becomes visible.`}</p>\n    <Checkbox mdxType=\"Checkbox\" />\n    <div style={{\n      height: '300px',\n      backgroundColor: 'rgb(30,30,30)',\n      color: 'white',\n      margin: '20px 0px'\n    }}>\n    <RenderingDockview renderVisibleOnly={false} mdxType=\"RenderingDockview\" />\n    </div>\n    <h3 {...{\n      \"id\": \"drag-and-drop\"\n    }}>{`Drag And Drop`}</h3>\n    <h4 {...{\n      \"id\": \"built-in-behaviours\"\n    }}>{`Built-in behaviours`}</h4>\n    <p>{`Dockview supports a wide variety of built-in Drag and Drop possibilities.\nBelow are some examples of the operations you can perform.`}</p>\n    <img style={{\n      width: '60%'\n    }} src={useBaseUrl('/img/add_to_tab.svg')} />\n    <blockquote>\n      <p parentName=\"blockquote\">{`Drag a tab onto another tab to place it inbetween existing tabs.`}</p>\n    </blockquote>\n    <img style={{\n      width: '60%'\n    }} src={useBaseUrl('/img/add_to_empty_space.svg')} />\n    <blockquote>\n      <p parentName=\"blockquote\">{`Drag a tab to the right of the last tab to place it after the existing tabs.`}</p>\n    </blockquote>\n    <img style={{\n      width: '60%'\n    }} src={useBaseUrl('/img/add_to_group.svg')} />\n    <blockquote>\n      <p parentName=\"blockquote\">{`Drag a group onto an existing group to merge the two groups.`}</p>\n    </blockquote>\n    <div style={{\n      display: 'flex',\n      justifyContent: 'space-around'\n    }}>\n    <img style={{\n        width: '40%'\n      }} src={useBaseUrl('/img/drop_positions.svg')} />\n    <img style={{\n        width: '40%'\n      }} src={useBaseUrl('/img/magnet_drop_positions.svg')} />\n    </div>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Drag into the left/right/top/bottom target zone of a panel to create a new group in the selected direction.`}</p>\n    </blockquote>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Drag into the center of a panel to add to that group.`}</p>\n    </blockquote>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Drag to the edge of the dockview component to create a new group on the selected edge.`}</p>\n    </blockquote>\n    <h4 {...{\n      \"id\": \"extended-behaviours\"\n    }}>{`Extended behaviours`}</h4>\n    <p>{`For interaction with the Drag events directly the component exposes some method to help determine whether external drag events should be interacted with or not.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`/**\n * called when an ondrop event which does not originate from the dockview libray and\n * passes the showDndOverlay condition occurs\n **/\nconst onDidDrop = (event: DockviewDropEvent) => {\n    const { group } = event;\n\n    event.api.addPanel({\n        id: 'test',\n        component: 'default',\n        position: {\n            referencePanel: group.activePanel.id,\n            direction: 'within',\n        },\n    });\n};\n\n/**\n * called for drag over events which do not originate from the dockview library\n * allowing the developer to decide where the overlay should be shown for a\n * particular drag event\n **/\nconst showDndOverlay = (event: DockviewDndOverlayEvent) => {\n    return true;\n};\n\nreturn (\n    <DockviewReact\n        components={components}\n        onReady={onReady}\n        className=\"dockview-theme-abyss\"\n        onDidDrop={onDidDrop}\n        showDndOverlay={showDndOverlay}\n    />\n);\n`}</code></pre>\n    <DndDockview mdxType=\"DndDockview\" />\n    <h3 {...{\n      \"id\": \"events\"\n    }}>{`Events`}</h3>\n    <EventsDockview mdxType=\"EventsDockview\" />\n    <h3 {...{\n      \"id\": \"nested-dockviews\"\n    }}>{`Nested Dockviews`}</h3>\n    <p>{`You can safely create multiple dockview instances within one page and nest dockviews within other dockviews.\nIf you wish to interact with the drop event from one dockview instance in another dockview instance you can implement the `}<inlineCode parentName=\"p\">{`showDndOverlay`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`onDidDrop`}</inlineCode>{` props on `}<inlineCode parentName=\"p\">{`DockviewReact`}</inlineCode>{`.`}</p>\n    <NestedDockview mdxType=\"NestedDockview\" />\n    <h3 {...{\n      \"id\": \"group-controls-panel\"\n    }}>{`Group Controls Panel`}</h3>\n    <p><inlineCode parentName=\"p\">{`DockviewReact`}</inlineCode>{` accepts a prop `}<inlineCode parentName=\"p\">{`groupControlComponent`}</inlineCode>{` which expects a React component whos props are `}<inlineCode parentName=\"p\">{`IDockviewGroupControlProps`}</inlineCode>{`.\nThis control will be rendered inside the header bar on the right hand side for each group of tabs.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`const Component: React.FunctionComponent<IDockviewGroupControlProps> = () => {\n    return <div>{'...'}</div>;\n};\n\nreturn <DockviewReact {...props} groupControlComponent={Component} />;\n`}</code></pre>\n    <p>{`As a simple example the below uses the `}<inlineCode parentName=\"p\">{`groupControlComponent`}</inlineCode>{` to render a small control that indicates whether the group\nis active and which panel is active in that group.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`const GroupControlComponent = (props: IDockviewGroupControlProps) => {\n    const isGroupActive = props.isGroupActive;\n    const activePanel = props.activePanel;\n\n    return (\n        <div className=\"dockview-groupcontrol-demo\">\n            <span\n                className=\"dockview-groupcontrol-demo-group-active\"\n                style={{\n                    background: isGroupActive ? 'green' : 'red',\n                }}\n            >\n                {isGroupActive ? 'Group Active' : 'Group Inactive'}\n            </span>\n            <span className=\"dockview-groupcontrol-demo-active-panel\">{\\`activePanel: \\${\n                activePanel?.id || 'null'\n            }\\`}</span>\n        </div>\n    );\n};\n`}</code></pre>\n    <DockviewGroupControl mdxType=\"DockviewGroupControl\" />\n    <h3 {...{\n      \"id\": \"full-width-tabs\"\n    }}>{`Full width tabs`}</h3>\n    <p><inlineCode parentName=\"p\">{`DockviewReactComponent`}</inlineCode>{` accepts the prop `}<inlineCode parentName=\"p\">{`singleTabMode`}</inlineCode>{`. If set `}<inlineCode parentName=\"p\">{`singleTabMode=fullwidth`}</inlineCode>{` then when there is only one tab in a group this tab will expand\nto the entire width of the group. For example:`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`This can be conmbined with `}<Link to=\"./dockview/#locked-group\" mdxType=\"Link\">{`Locked Groups`}</Link>{` to create an application that feels more like a Window Manager\nrather than a collection of groups and tabs.`}</p>\n    </blockquote>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`<DockviewReactComponent singleTabMode=\"fullwidth\" {...otherProps} />\n`}</code></pre>\n    <DockviewNative mdxType=\"DockviewNative\" />\n    <h3 {...{\n      \"id\": \"example\"\n    }}>{`Example`}</h3>\n    <p>{`hello`}</p>\n    <DockviewNative2 mdxType=\"DockviewNative2\" />\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n"],"names":["element","callbacks","_super","_this","registerListeners","__extends","DragAndDropObserver","addDisposables","e","target","onDragEnter","preventDefault","onDragOver","onDragLeave","onDragEnd","onDrop","lifecycle_1","exports","direction","Error","position","options","events_1","_onDrop","event","acceptedTargetZonesSet","Set","acceptedTargetZones","dnd_1","width","clientWidth","height","clientHeight","rect","currentTarget","getBoundingClientRect","x","clientX","left","y","clientY","top","quadrant","calculateQuadrant","canDisplayOverlay","document","createElement","className","overlay","_state","appendChild","classList","add","append","length","toggleClasses","setState","removeDropTarget","stopPropagation","state","fire","nativeEvent","Object","Droptarget","isSmallX","isSmallY","isLeft","isRight","isTop","isBottom","rightClass","leftClass","topClass","bottomClass","size","overlayModel","type","value","transform","translate","scale","style","overlayType","maybeNumber","fallback","isPercentage","undefined","activationSize","calculateQuadrantAsPercentage","calculateQuadrantAsPixels","removeChild","remove","threshold","xp","yp","has","cb","observer","ResizeObserver","entires","firstEntry","observe","dispose","unobserve","disconnect","_i","classes","classname","contains","isAncestor","testChild","testAncestor","parentNode","isToggled","hasClass","tag","Array","prototype","slice","call","getElementsByTagName","FocusTracker","_onDidFocus","_onDidBlur","hasFocus","activeElement","loosingFocus","onFocus","onBlur","window","setTimeout","_refreshStateHandler","HTMLElement","Event","children","listener","disposables","map","child","forEach","d","Emitter","_event","replay","_last","_listeners","push","index","indexOf","splice","_disposed","addEventListener","removeEventListener","_onFired","TickDelayedEvent","timer","clearTimeout","Disposable","args","CompositeDisposable","arg","NONE","MutableDisposable","disposable","_disposable","min","max","Math","next","toString","Console","props","ref","React","current","scrollTop","scrollHeight","lines","line","i","key","now","pad","getHours","getMinutes","getSeconds","getMilliseconds","formatTime","timestamp","css","text","components","default","padding","params","title","headerComponents","onContextMenu","alert","CustomHeadersDockview","margin","display","flexDirection","defaultTabComponent","onReady","localStorage","getItem","api","addPanel","id","component","referencePanel","panel6","group","locked","header","hidden","addGroup","DndDockview","backgroundColor","borderRadius","cursor","draggable","color","onDidDrop","positionToDirection","referenceGroup","showDndOverlay","EventsDockview","setLines","checked","setChecked","setApi","onDidAddPanel","panel","Date","onDidRemovePanel","onDidActivePanelChange","onDidAddGroup","onDidRemoveGroup","onDidActiveGroupChange","onDidLayoutChange","onDidLayoutFromJSON","fromJSON","grid","root","data","views","activeView","orientation","Orientation","panels","panel_1","view","content","panel_2","panel_3","panel_4","panel_5","panel_6","panel_8","panel_7","activeGroup","clear","onChange","background","innerDockview","NestedDockview","renderVisibleComponentsOnlyAtom","atom","formatLine","timeout","visible","setVisible","isVisible","render","useRecoilValue","onDidVisibilityChange","RenderingDockview","setRender","useRecoilState","renderVisibleOnly","Checkbox","setWidth","setHeight","Number","step","onClick","setSize","ResizeDockview","SimpleDockview","justifyContent","alignItems","GroupControlComponent","isGroupActive","activePanel","DockviewGroupControl","tabComponent","groupControlComponent","CustomDndTraget","setData","t","this","getData","clearData","SINGLETON","isolatedApp","tabComponents","flexGrow","DockviewNative","singleTabMode","DockviewNative2","frontMatter","description","contentTitle","metadata","assets","toc","level","layoutProps","MDXLayout","MDXContent","mdxType","parentName","Link","to","src","useBaseUrl","isMDXComponent"],"sourceRoot":""}