{"version":3,"file":"assets/js/bfcdc23a.c397ce6a.js","mappings":"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","sources":["webpack://dockview-docs/../../node_modules/@mdx-js/react/dist/esm.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/dataTransfer.js","webpack://dockview-docs/../dockview-core/dist/esm/events.js","webpack://dockview-docs/../dockview-core/dist/esm/lifecycle.js","webpack://dockview-docs/../dockview-core/dist/esm/dom.js","webpack://dockview-docs/../dockview-core/dist/esm/array.js","webpack://dockview-docs/../dockview-core/dist/esm/math.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/viewItem.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/splitview.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/paneview.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/leafNode.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/branchNode.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/gridview.js","webpack://dockview-docs/../dockview-core/dist/esm/api/component.api.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/dnd.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/droptarget.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/panel/content.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/types.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/abstractDragHandler.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/tab/tab.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/groupDragHandler.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/ghost.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/titlebar/voidContainer.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/titlebar/tabsContainer.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewGroupPanelModel.js","webpack://dockview-docs/../dockview-core/dist/esm/resizable.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/baseComponentGridview.js","webpack://dockview-docs/../dockview-core/dist/esm/api/panelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/api/splitviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/api/paneviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/basePanelView.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/paneviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/draggablePaneviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/api/gridviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/gridviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewGroupPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/api/dockviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/svg.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/tab/defaultTab.js","webpack://dockview-docs/../dockview-core/dist/esm/panel/componentFactory.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewPanelModel.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/deserializer.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/watermark/watermark.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/options.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/gridviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/splitviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/defaultPaneviewHeader.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/paneviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/splitviewPanel.js","webpack://dockview-docs/../dockview/dist/esm/react.js","webpack://dockview-docs/../dockview/dist/esm/dockview/reactContentPart.js","webpack://dockview-docs/../dockview/dist/esm/dockview/reactHeaderPart.js","webpack://dockview-docs/../dockview/dist/esm/dockview/reactWatermarkPart.js","webpack://dockview-docs/../dockview/dist/esm/dockview/groupControlsRenderer.js","webpack://dockview-docs/../dockview/dist/esm/dockview/dockview.js","webpack://dockview-docs/../dockview/dist/esm/svg.js","webpack://dockview-docs/../dockview/dist/esm/dockview/defaultTab.js","webpack://dockview-docs/../dockview/dist/esm/splitview/view.js","webpack://dockview-docs/../dockview/dist/esm/splitview/splitview.js","webpack://dockview-docs/../dockview/dist/esm/gridview/view.js","webpack://dockview-docs/../dockview/dist/esm/gridview/gridview.js","webpack://dockview-docs/../dockview/dist/esm/paneview/view.js","webpack://dockview-docs/../dockview/dist/esm/paneview/paneview.js","webpack://dockview-docs/./src/components/gridview/events.tsx","webpack://dockview-docs/./src/components/simpleGridview.tsx","webpack://dockview-docs/./src/components/ui/console/console.tsx","webpack://dockview-docs/./versioned_docs/version-1.7.0/components/gridview.mdx"],"sourcesContent":["import React from 'react';\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nvar isFunction = function isFunction(obj) {\n  return typeof obj === 'function';\n};\n\nvar MDXContext = /*#__PURE__*/React.createContext({});\nvar withMDXComponents = function withMDXComponents(Component) {\n  return function (props) {\n    var allComponents = useMDXComponents(props.components);\n    return /*#__PURE__*/React.createElement(Component, _extends({}, props, {\n      components: allComponents\n    }));\n  };\n};\nvar useMDXComponents = function useMDXComponents(components) {\n  var contextComponents = React.useContext(MDXContext);\n  var allComponents = contextComponents;\n\n  if (components) {\n    allComponents = isFunction(components) ? components(contextComponents) : _objectSpread2(_objectSpread2({}, contextComponents), components);\n  }\n\n  return allComponents;\n};\nvar MDXProvider = function MDXProvider(props) {\n  var allComponents = useMDXComponents(props.components);\n  return /*#__PURE__*/React.createElement(MDXContext.Provider, {\n    value: allComponents\n  }, props.children);\n};\n\nvar TYPE_PROP_NAME = 'mdxType';\nvar DEFAULTS = {\n  inlineCode: 'code',\n  wrapper: function wrapper(_ref) {\n    var children = _ref.children;\n    return /*#__PURE__*/React.createElement(React.Fragment, {}, children);\n  }\n};\nvar MDXCreateElement = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var propComponents = props.components,\n      mdxType = props.mdxType,\n      originalType = props.originalType,\n      parentName = props.parentName,\n      etc = _objectWithoutProperties(props, [\"components\", \"mdxType\", \"originalType\", \"parentName\"]);\n\n  var components = useMDXComponents(propComponents);\n  var type = mdxType;\n  var Component = components[\"\".concat(parentName, \".\").concat(type)] || components[type] || DEFAULTS[type] || originalType;\n\n  if (propComponents) {\n    return /*#__PURE__*/React.createElement(Component, _objectSpread2(_objectSpread2({\n      ref: ref\n    }, etc), {}, {\n      components: propComponents\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _objectSpread2({\n    ref: ref\n  }, etc));\n});\nMDXCreateElement.displayName = 'MDXCreateElement';\nfunction createElement (type, props) {\n  var args = arguments;\n  var mdxType = props && props.mdxType;\n\n  if (typeof type === 'string' || mdxType) {\n    var argsLength = args.length;\n    var createElementArgArray = new Array(argsLength);\n    createElementArgArray[0] = MDXCreateElement;\n    var newProps = {};\n\n    for (var key in props) {\n      if (hasOwnProperty.call(props, key)) {\n        newProps[key] = props[key];\n      }\n    }\n\n    newProps.originalType = type;\n    newProps[TYPE_PROP_NAME] = typeof type === 'string' ? type : mdxType;\n    createElementArgArray[1] = newProps;\n\n    for (var i = 2; i < argsLength; i++) {\n      createElementArgArray[i] = args[i];\n    }\n\n    return React.createElement.apply(null, createElementArgArray);\n  }\n\n  return React.createElement.apply(null, args);\n}\n\nexport { MDXContext, MDXProvider, createElement as mdx, useMDXComponents, withMDXComponents };\n","class TransferObject {\n    constructor() {\n        //\n    }\n}\nexport class PanelTransfer extends TransferObject {\n    constructor(viewId, groupId, panelId) {\n        super();\n        this.viewId = viewId;\n        this.groupId = groupId;\n        this.panelId = panelId;\n    }\n}\nexport class PaneTransfer extends TransferObject {\n    constructor(viewId, paneId) {\n        super();\n        this.viewId = viewId;\n        this.paneId = paneId;\n    }\n}\n/**\n * A singleton to store transfer data during drag & drop operations that are only valid within the application.\n */\nexport class LocalSelectionTransfer {\n    constructor() {\n        // protect against external instantiation\n    }\n    static getInstance() {\n        return LocalSelectionTransfer.INSTANCE;\n    }\n    hasData(proto) {\n        return proto && proto === this.proto;\n    }\n    clearData(proto) {\n        if (this.hasData(proto)) {\n            this.proto = undefined;\n            this.data = undefined;\n        }\n    }\n    getData(proto) {\n        if (this.hasData(proto)) {\n            return this.data;\n        }\n        return undefined;\n    }\n    setData(data, proto) {\n        if (proto) {\n            this.data = data;\n            this.proto = proto;\n        }\n    }\n}\nLocalSelectionTransfer.INSTANCE = new LocalSelectionTransfer();\nexport function getPanelData() {\n    const panelTransfer = LocalSelectionTransfer.getInstance();\n    const isPanelEvent = panelTransfer.hasData(PanelTransfer.prototype);\n    if (!isPanelEvent) {\n        return undefined;\n    }\n    return panelTransfer.getData(PanelTransfer.prototype)[0];\n}\nexport function getPaneData() {\n    const paneTransfer = LocalSelectionTransfer.getInstance();\n    const isPanelEvent = paneTransfer.hasData(PaneTransfer.prototype);\n    if (!isPanelEvent) {\n        return undefined;\n    }\n    return paneTransfer.getData(PaneTransfer.prototype)[0];\n}\n","export var Event;\n(function (Event) {\n    Event.any = (...children) => {\n        return (listener) => {\n            const disposables = children.map((child) => child(listener));\n            return {\n                dispose: () => {\n                    disposables.forEach((d) => {\n                        d.dispose();\n                    });\n                },\n            };\n        };\n    };\n})(Event || (Event = {}));\n// dumb event emitter with better typings than nodes event emitter\n// https://github.com/microsoft/vscode/blob/master/src/vs/base/common/event.ts\nexport class Emitter {\n    constructor(options) {\n        this.options = options;\n        this._listeners = [];\n        this._disposed = false;\n    }\n    get event() {\n        if (!this._event) {\n            this._event = (listener) => {\n                var _a;\n                if (((_a = this.options) === null || _a === void 0 ? void 0 : _a.replay) && this._last !== undefined) {\n                    listener(this._last);\n                }\n                this._listeners.push(listener);\n                return {\n                    dispose: () => {\n                        const index = this._listeners.indexOf(listener);\n                        if (index > -1) {\n                            this._listeners.splice(index, 1);\n                        }\n                    },\n                };\n            };\n        }\n        return this._event;\n    }\n    fire(e) {\n        this._last = e;\n        for (const listener of this._listeners) {\n            listener(e);\n        }\n    }\n    dispose() {\n        this._listeners = [];\n        this._disposed = true;\n    }\n}\nexport function addDisposableWindowListener(element, type, listener, options) {\n    element.addEventListener(type, listener, options);\n    return {\n        dispose: () => {\n            element.removeEventListener(type, listener);\n        },\n    };\n}\nexport function addDisposableListener(element, type, listener, options) {\n    element.addEventListener(type, listener, options);\n    return {\n        dispose: () => {\n            element.removeEventListener(type, listener);\n        },\n    };\n}\nexport class TickDelayedEvent {\n    constructor() {\n        this._onFired = new Emitter();\n        this.onEvent = this._onFired.event;\n    }\n    fire() {\n        if (this.timer) {\n            clearTimeout(this.timer);\n        }\n        this.timer = setTimeout(() => {\n            this._onFired.fire();\n            clearTimeout(this.timer);\n        });\n    }\n    dispose() {\n        this._onFired.dispose();\n    }\n}\n","export var Disposable;\n(function (Disposable) {\n    Disposable.NONE = {\n        dispose: () => {\n            // noop\n        },\n    };\n})(Disposable || (Disposable = {}));\nexport class CompositeDisposable {\n    get isDisposed() {\n        return this._isDisposed;\n    }\n    static from(...args) {\n        return new CompositeDisposable(...args);\n    }\n    constructor(...args) {\n        this._isDisposed = false;\n        this.disposables = args;\n    }\n    addDisposables(...args) {\n        args.forEach((arg) => this.disposables.push(arg));\n    }\n    dispose() {\n        this.disposables.forEach((arg) => arg.dispose());\n        this._isDisposed = true;\n    }\n}\nexport class MutableDisposable {\n    constructor() {\n        this._disposable = Disposable.NONE;\n    }\n    set value(disposable) {\n        if (this._disposable) {\n            this._disposable.dispose();\n        }\n        this._disposable = disposable;\n    }\n    dispose() {\n        if (this._disposable) {\n            this._disposable.dispose();\n            this._disposable = Disposable.NONE;\n        }\n    }\n}\n","import { Emitter, addDisposableListener, addDisposableWindowListener, } from './events';\nimport { CompositeDisposable } from './lifecycle';\nexport function watchElementResize(element, cb) {\n    const observer = new ResizeObserver((entires) => {\n        /**\n         * Fast browser window resize produces Error: ResizeObserver loop limit exceeded.\n         * The error isn't visible in browser console, doesn't affect functionality, but degrades performance.\n         * See https://stackoverflow.com/questions/49384120/resizeobserver-loop-limit-exceeded/58701523#58701523\n         */\n        requestAnimationFrame(() => {\n            const firstEntry = entires[0];\n            cb(firstEntry);\n        });\n    });\n    observer.observe(element);\n    return {\n        dispose: () => {\n            observer.unobserve(element);\n            observer.disconnect();\n        },\n    };\n}\nexport const removeClasses = (element, ...classes) => {\n    for (const classname of classes) {\n        if (element.classList.contains(classname)) {\n            element.classList.remove(classname);\n        }\n    }\n};\nexport const addClasses = (element, ...classes) => {\n    for (const classname of classes) {\n        if (!element.classList.contains(classname)) {\n            element.classList.add(classname);\n        }\n    }\n};\nexport const toggleClass = (element, className, isToggled) => {\n    const hasClass = element.classList.contains(className);\n    if (isToggled && !hasClass) {\n        element.classList.add(className);\n    }\n    if (!isToggled && hasClass) {\n        element.classList.remove(className);\n    }\n};\nexport function isAncestor(testChild, testAncestor) {\n    while (testChild) {\n        if (testChild === testAncestor) {\n            return true;\n        }\n        testChild = testChild.parentNode;\n    }\n    return false;\n}\nexport function getElementsByTagName(tag) {\n    return Array.prototype.slice.call(document.getElementsByTagName(tag), 0);\n}\nexport function trackFocus(element) {\n    return new FocusTracker(element);\n}\n/**\n * Track focus on an element. Ensure tabIndex is set when an HTMLElement is not focusable by default\n */\nclass FocusTracker extends CompositeDisposable {\n    constructor(element) {\n        super();\n        this._onDidFocus = new Emitter();\n        this.onDidFocus = this._onDidFocus.event;\n        this._onDidBlur = new Emitter();\n        this.onDidBlur = this._onDidBlur.event;\n        let hasFocus = isAncestor(document.activeElement, element);\n        let loosingFocus = false;\n        const onFocus = () => {\n            loosingFocus = false;\n            if (!hasFocus) {\n                hasFocus = true;\n                this._onDidFocus.fire();\n            }\n        };\n        const onBlur = () => {\n            if (hasFocus) {\n                loosingFocus = true;\n                window.setTimeout(() => {\n                    if (loosingFocus) {\n                        loosingFocus = false;\n                        hasFocus = false;\n                        this._onDidBlur.fire();\n                    }\n                }, 0);\n            }\n        };\n        this._refreshStateHandler = () => {\n            const currentNodeHasFocus = isAncestor(document.activeElement, element);\n            if (currentNodeHasFocus !== hasFocus) {\n                if (hasFocus) {\n                    onBlur();\n                }\n                else {\n                    onFocus();\n                }\n            }\n        };\n        if (element instanceof HTMLElement) {\n            this.addDisposables(addDisposableListener(element, 'focus', onFocus, true));\n            this.addDisposables(addDisposableListener(element, 'blur', onBlur, true));\n        }\n        else {\n            this.addDisposables(addDisposableWindowListener(element, 'focus', onFocus, true));\n            this.addDisposables(addDisposableWindowListener(element, 'blur', onBlur, true));\n        }\n    }\n    refreshState() {\n        this._refreshStateHandler();\n    }\n    dispose() {\n        super.dispose();\n        this._onDidBlur.dispose();\n        this._onDidFocus.dispose();\n    }\n}\n","export function tail(arr) {\n    if (arr.length === 0) {\n        throw new Error('Invalid tail call');\n    }\n    return [arr.slice(0, arr.length - 1), arr[arr.length - 1]];\n}\nexport function last(arr) {\n    return arr.length > 0 ? arr[arr.length - 1] : undefined;\n}\nexport function sequenceEquals(arr1, arr2) {\n    if (arr1.length !== arr2.length) {\n        return false;\n    }\n    for (let i = 0; i < arr1.length; i++) {\n        if (arr1[i] !== arr2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Pushes an element to the start of the array, if found.\n */\nexport function pushToStart(arr, value) {\n    const index = arr.indexOf(value);\n    if (index > -1) {\n        arr.splice(index, 1);\n        arr.unshift(value);\n    }\n}\n/**\n * Pushes an element to the end of the array, if found.\n */\nexport function pushToEnd(arr, value) {\n    const index = arr.indexOf(value);\n    if (index > -1) {\n        arr.splice(index, 1);\n        arr.push(value);\n    }\n}\nexport function firstIndex(array, fn) {\n    for (let i = 0; i < array.length; i++) {\n        const element = array[i];\n        if (fn(element)) {\n            return i;\n        }\n    }\n    return -1;\n}\n","export const clamp = (value, min, max) => {\n    if (min > max) {\n        throw new Error(`${min} > ${max} is an invalid condition`);\n    }\n    return Math.min(max, Math.max(value, min));\n};\nexport const sequentialNumberGenerator = () => {\n    let value = 1;\n    return { next: () => (value++).toString() };\n};\nexport const range = (from, to) => {\n    const result = [];\n    if (typeof to !== 'number') {\n        to = from;\n        from = 0;\n    }\n    if (from <= to) {\n        for (let i = from; i < to; i++) {\n            result.push(i);\n        }\n    }\n    else {\n        for (let i = from; i > to; i--) {\n            result.push(i);\n        }\n    }\n    return result;\n};\n","import { clamp } from '../math';\nexport class ViewItem {\n    set size(size) {\n        this._size = size;\n    }\n    get size() {\n        return this._size;\n    }\n    get cachedVisibleSize() {\n        return this._cachedVisibleSize;\n    }\n    get visible() {\n        return typeof this._cachedVisibleSize === 'undefined';\n    }\n    get minimumSize() {\n        return this.visible ? this.view.minimumSize : 0;\n    }\n    get viewMinimumSize() {\n        return this.view.minimumSize;\n    }\n    get maximumSize() {\n        return this.visible ? this.view.maximumSize : 0;\n    }\n    get viewMaximumSize() {\n        return this.view.maximumSize;\n    }\n    get priority() {\n        return this.view.priority;\n    }\n    get snap() {\n        return !!this.view.snap;\n    }\n    set enabled(enabled) {\n        this.container.style.pointerEvents = enabled ? '' : 'none';\n    }\n    constructor(container, view, size, disposable) {\n        this.container = container;\n        this.view = view;\n        this.disposable = disposable;\n        this._cachedVisibleSize = undefined;\n        if (typeof size === 'number') {\n            this._size = size;\n            this._cachedVisibleSize = undefined;\n            container.classList.add('visible');\n        }\n        else {\n            this._size = 0;\n            this._cachedVisibleSize = size.cachedVisibleSize;\n        }\n    }\n    setVisible(visible, size) {\n        var _a;\n        if (visible === this.visible) {\n            return;\n        }\n        if (visible) {\n            this.size = clamp((_a = this._cachedVisibleSize) !== null && _a !== void 0 ? _a : 0, this.viewMinimumSize, this.viewMaximumSize);\n            this._cachedVisibleSize = undefined;\n        }\n        else {\n            this._cachedVisibleSize =\n                typeof size === 'number' ? size : this.size;\n            this.size = 0;\n        }\n        this.container.classList.toggle('visible', visible);\n        if (this.view.setVisible) {\n            this.view.setVisible(visible);\n        }\n    }\n    dispose() {\n        this.disposable.dispose();\n        return this.view;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/splitview\n *--------------------------------------------------------------------------------------------*/\nimport { removeClasses, addClasses, toggleClass, getElementsByTagName, } from '../dom';\nimport { Emitter } from '../events';\nimport { pushToStart, pushToEnd, firstIndex } from '../array';\nimport { range, clamp } from '../math';\nimport { ViewItem } from './viewItem';\nexport var Orientation;\n(function (Orientation) {\n    Orientation[\"HORIZONTAL\"] = \"HORIZONTAL\";\n    Orientation[\"VERTICAL\"] = \"VERTICAL\";\n})(Orientation || (Orientation = {}));\nexport var SashState;\n(function (SashState) {\n    SashState[SashState[\"MAXIMUM\"] = 0] = \"MAXIMUM\";\n    SashState[SashState[\"MINIMUM\"] = 1] = \"MINIMUM\";\n    SashState[SashState[\"DISABLED\"] = 2] = \"DISABLED\";\n    SashState[SashState[\"ENABLED\"] = 3] = \"ENABLED\";\n})(SashState || (SashState = {}));\nexport var LayoutPriority;\n(function (LayoutPriority) {\n    LayoutPriority[\"Low\"] = \"low\";\n    LayoutPriority[\"High\"] = \"high\";\n    LayoutPriority[\"Normal\"] = \"normal\";\n})(LayoutPriority || (LayoutPriority = {}));\nexport var Sizing;\n(function (Sizing) {\n    Sizing.Distribute = { type: 'distribute' };\n    function Split(index) {\n        return { type: 'split', index };\n    }\n    Sizing.Split = Split;\n    function Invisible(cachedVisibleSize) {\n        return { type: 'invisible', cachedVisibleSize };\n    }\n    Sizing.Invisible = Invisible;\n})(Sizing || (Sizing = {}));\nexport class Splitview {\n    get size() {\n        return this._size;\n    }\n    set size(value) {\n        this._size = value;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    set orthogonalSize(value) {\n        this._orthogonalSize = value;\n    }\n    get length() {\n        return this.views.length;\n    }\n    get proportions() {\n        return this._proportions ? [...this._proportions] : undefined;\n    }\n    get orientation() {\n        return this._orientation;\n    }\n    set orientation(value) {\n        this._orientation = value;\n        const tmp = this.size;\n        this.size = this.orthogonalSize;\n        this.orthogonalSize = tmp;\n        removeClasses(this.element, 'horizontal', 'vertical');\n        this.element.classList.add(this.orientation == Orientation.HORIZONTAL\n            ? 'horizontal'\n            : 'vertical');\n    }\n    get minimumSize() {\n        return this.views.reduce((r, item) => r + item.minimumSize, 0);\n    }\n    get maximumSize() {\n        return this.length === 0\n            ? Number.POSITIVE_INFINITY\n            : this.views.reduce((r, item) => r + item.maximumSize, 0);\n    }\n    get startSnappingEnabled() {\n        return this._startSnappingEnabled;\n    }\n    set startSnappingEnabled(startSnappingEnabled) {\n        if (this._startSnappingEnabled === startSnappingEnabled) {\n            return;\n        }\n        this._startSnappingEnabled = startSnappingEnabled;\n        this.updateSashEnablement();\n    }\n    get endSnappingEnabled() {\n        return this._endSnappingEnabled;\n    }\n    set endSnappingEnabled(endSnappingEnabled) {\n        if (this._endSnappingEnabled === endSnappingEnabled) {\n            return;\n        }\n        this._endSnappingEnabled = endSnappingEnabled;\n        this.updateSashEnablement();\n    }\n    constructor(container, options) {\n        this.container = container;\n        this.views = [];\n        this.sashes = [];\n        this._size = 0;\n        this._orthogonalSize = 0;\n        this.contentSize = 0;\n        this._proportions = undefined;\n        this._startSnappingEnabled = true;\n        this._endSnappingEnabled = true;\n        this._onDidSashEnd = new Emitter();\n        this.onDidSashEnd = this._onDidSashEnd.event;\n        this._onDidAddView = new Emitter();\n        this.onDidAddView = this._onDidAddView.event;\n        this._onDidRemoveView = new Emitter();\n        this.onDidRemoveView = this._onDidRemoveView.event;\n        this.resize = (index, delta, sizes = this.views.map((x) => x.size), lowPriorityIndexes, highPriorityIndexes, overloadMinDelta = Number.NEGATIVE_INFINITY, overloadMaxDelta = Number.POSITIVE_INFINITY, snapBefore, snapAfter) => {\n            if (index < 0 || index > this.views.length) {\n                return 0;\n            }\n            const upIndexes = range(index, -1);\n            const downIndexes = range(index + 1, this.views.length);\n            //\n            if (highPriorityIndexes) {\n                for (const i of highPriorityIndexes) {\n                    pushToStart(upIndexes, i);\n                    pushToStart(downIndexes, i);\n                }\n            }\n            if (lowPriorityIndexes) {\n                for (const i of lowPriorityIndexes) {\n                    pushToEnd(upIndexes, i);\n                    pushToEnd(downIndexes, i);\n                }\n            }\n            //\n            const upItems = upIndexes.map((i) => this.views[i]);\n            const upSizes = upIndexes.map((i) => sizes[i]);\n            //\n            const downItems = downIndexes.map((i) => this.views[i]);\n            const downSizes = downIndexes.map((i) => sizes[i]);\n            //\n            const minDeltaUp = upIndexes.reduce((_, i) => _ + this.views[i].minimumSize - sizes[i], 0);\n            const maxDeltaUp = upIndexes.reduce((_, i) => _ + this.views[i].maximumSize - sizes[i], 0);\n            //\n            const maxDeltaDown = downIndexes.length === 0\n                ? Number.POSITIVE_INFINITY\n                : downIndexes.reduce((_, i) => _ + sizes[i] - this.views[i].minimumSize, 0);\n            const minDeltaDown = downIndexes.length === 0\n                ? Number.NEGATIVE_INFINITY\n                : downIndexes.reduce((_, i) => _ + sizes[i] - this.views[i].maximumSize, 0);\n            //\n            const minDelta = Math.max(minDeltaUp, minDeltaDown);\n            const maxDelta = Math.min(maxDeltaDown, maxDeltaUp);\n            //\n            let snapped = false;\n            if (snapBefore) {\n                const snapView = this.views[snapBefore.index];\n                const visible = delta >= snapBefore.limitDelta;\n                snapped = visible !== snapView.visible;\n                snapView.setVisible(visible, snapBefore.size);\n            }\n            if (!snapped && snapAfter) {\n                const snapView = this.views[snapAfter.index];\n                const visible = delta < snapAfter.limitDelta;\n                snapped = visible !== snapView.visible;\n                snapView.setVisible(visible, snapAfter.size);\n            }\n            if (snapped) {\n                return this.resize(index, delta, sizes, lowPriorityIndexes, highPriorityIndexes, overloadMinDelta, overloadMaxDelta);\n            }\n            //\n            const tentativeDelta = clamp(delta, minDelta, maxDelta);\n            let actualDelta = 0;\n            //\n            let deltaUp = tentativeDelta;\n            for (let i = 0; i < upItems.length; i++) {\n                const item = upItems[i];\n                const size = clamp(upSizes[i] + deltaUp, item.minimumSize, item.maximumSize);\n                const viewDelta = size - upSizes[i];\n                actualDelta += viewDelta;\n                deltaUp -= viewDelta;\n                item.size = size;\n            }\n            //\n            let deltaDown = actualDelta;\n            for (let i = 0; i < downItems.length; i++) {\n                const item = downItems[i];\n                const size = clamp(downSizes[i] - deltaDown, item.minimumSize, item.maximumSize);\n                const viewDelta = size - downSizes[i];\n                deltaDown += viewDelta;\n                item.size = size;\n            }\n            //\n            return delta;\n        };\n        this._orientation = options.orientation;\n        this.element = this.createContainer();\n        this.proportionalLayout =\n            options.proportionalLayout === undefined\n                ? true\n                : !!options.proportionalLayout;\n        this.viewContainer = this.createViewContainer();\n        this.sashContainer = this.createSashContainer();\n        this.element.appendChild(this.sashContainer);\n        this.element.appendChild(this.viewContainer);\n        this.container.appendChild(this.element);\n        this.style(options.styles);\n        // We have an existing set of view, add them now\n        if (options.descriptor) {\n            this._size = options.descriptor.size;\n            options.descriptor.views.forEach((viewDescriptor, index) => {\n                const sizing = viewDescriptor.visible === undefined ||\n                    viewDescriptor.visible\n                    ? viewDescriptor.size\n                    : {\n                        type: 'invisible',\n                        cachedVisibleSize: viewDescriptor.size,\n                    };\n                const view = viewDescriptor.view;\n                this.addView(view, sizing, index, true\n                // true skip layout\n                );\n            });\n            // Initialize content size and proportions for first layout\n            this.contentSize = this.views.reduce((r, i) => r + i.size, 0);\n            this.saveProportions();\n        }\n    }\n    style(styles) {\n        if ((styles === null || styles === void 0 ? void 0 : styles.separatorBorder) === 'transparent') {\n            removeClasses(this.element, 'separator-border');\n            this.element.style.removeProperty('--dv-separator-border');\n        }\n        else {\n            addClasses(this.element, 'separator-border');\n            if (styles === null || styles === void 0 ? void 0 : styles.separatorBorder) {\n                this.element.style.setProperty('--dv-separator-border', styles.separatorBorder);\n            }\n        }\n    }\n    isViewVisible(index) {\n        if (index < 0 || index >= this.views.length) {\n            throw new Error('Index out of bounds');\n        }\n        const viewItem = this.views[index];\n        return viewItem.visible;\n    }\n    setViewVisible(index, visible) {\n        if (index < 0 || index >= this.views.length) {\n            throw new Error('Index out of bounds');\n        }\n        toggleClass(this.container, 'visible', visible);\n        const viewItem = this.views[index];\n        toggleClass(this.container, 'visible', visible);\n        viewItem.setVisible(visible, viewItem.size);\n        this.distributeEmptySpace(index);\n        this.layoutViews();\n        this.saveProportions();\n    }\n    getViewSize(index) {\n        if (index < 0 || index >= this.views.length) {\n            return -1;\n        }\n        return this.views[index].size;\n    }\n    resizeView(index, size) {\n        if (index < 0 || index >= this.views.length) {\n            return;\n        }\n        const indexes = range(this.views.length).filter((i) => i !== index);\n        const lowPriorityIndexes = [\n            ...indexes.filter((i) => this.views[i].priority === LayoutPriority.Low),\n            index,\n        ];\n        const highPriorityIndexes = indexes.filter((i) => this.views[i].priority === LayoutPriority.High);\n        const item = this.views[index];\n        size = Math.round(size);\n        size = clamp(size, item.minimumSize, Math.min(item.maximumSize, this._size));\n        item.size = size;\n        this.relayout(lowPriorityIndexes, highPriorityIndexes);\n    }\n    getViews() {\n        return this.views.map((x) => x.view);\n    }\n    onDidChange(item, size) {\n        const index = this.views.indexOf(item);\n        if (index < 0 || index >= this.views.length) {\n            return;\n        }\n        size = typeof size === 'number' ? size : item.size;\n        size = clamp(size, item.minimumSize, item.maximumSize);\n        item.size = size;\n        this.relayout([index]);\n    }\n    addView(view, size = { type: 'distribute' }, index = this.views.length, skipLayout) {\n        const container = document.createElement('div');\n        container.className = 'view';\n        container.appendChild(view.element);\n        let viewSize;\n        if (typeof size === 'number') {\n            viewSize = size;\n        }\n        else if (size.type === 'split') {\n            viewSize = this.getViewSize(size.index) / 2;\n        }\n        else if (size.type === 'invisible') {\n            viewSize = { cachedVisibleSize: size.cachedVisibleSize };\n        }\n        else {\n            viewSize = view.minimumSize;\n        }\n        const disposable = view.onDidChange((newSize) => this.onDidChange(viewItem, newSize.size));\n        const dispose = () => {\n            disposable === null || disposable === void 0 ? void 0 : disposable.dispose();\n            this.viewContainer.removeChild(container);\n        };\n        const viewItem = new ViewItem(container, view, viewSize, { dispose });\n        if (index === this.views.length) {\n            this.viewContainer.appendChild(container);\n        }\n        else {\n            this.viewContainer.insertBefore(container, this.viewContainer.children.item(index));\n        }\n        this.views.splice(index, 0, viewItem);\n        if (this.views.length > 1) {\n            //add sash\n            const sash = document.createElement('div');\n            sash.className = 'sash';\n            const onStart = (event) => {\n                for (const item of this.views) {\n                    item.enabled = false;\n                }\n                const iframes = [\n                    ...getElementsByTagName('iframe'),\n                    ...getElementsByTagName('webview'),\n                ];\n                for (const iframe of iframes) {\n                    iframe.style.pointerEvents = 'none';\n                }\n                const start = this._orientation === Orientation.HORIZONTAL\n                    ? event.clientX\n                    : event.clientY;\n                const sashIndex = firstIndex(this.sashes, (s) => s.container === sash);\n                //\n                const sizes = this.views.map((x) => x.size);\n                //\n                let snapBefore;\n                let snapAfter;\n                const upIndexes = range(sashIndex, -1);\n                const downIndexes = range(sashIndex + 1, this.views.length);\n                const minDeltaUp = upIndexes.reduce((r, i) => r + (this.views[i].minimumSize - sizes[i]), 0);\n                const maxDeltaUp = upIndexes.reduce((r, i) => r + (this.views[i].viewMaximumSize - sizes[i]), 0);\n                const maxDeltaDown = downIndexes.length === 0\n                    ? Number.POSITIVE_INFINITY\n                    : downIndexes.reduce((r, i) => r + (sizes[i] - this.views[i].minimumSize), 0);\n                const minDeltaDown = downIndexes.length === 0\n                    ? Number.NEGATIVE_INFINITY\n                    : downIndexes.reduce((r, i) => r +\n                        (sizes[i] - this.views[i].viewMaximumSize), 0);\n                const minDelta = Math.max(minDeltaUp, minDeltaDown);\n                const maxDelta = Math.min(maxDeltaDown, maxDeltaUp);\n                const snapBeforeIndex = this.findFirstSnapIndex(upIndexes);\n                const snapAfterIndex = this.findFirstSnapIndex(downIndexes);\n                if (typeof snapBeforeIndex === 'number') {\n                    const snappedViewItem = this.views[snapBeforeIndex];\n                    const halfSize = Math.floor(snappedViewItem.viewMinimumSize / 2);\n                    snapBefore = {\n                        index: snapBeforeIndex,\n                        limitDelta: snappedViewItem.visible\n                            ? minDelta - halfSize\n                            : minDelta + halfSize,\n                        size: snappedViewItem.size,\n                    };\n                }\n                if (typeof snapAfterIndex === 'number') {\n                    const snappedViewItem = this.views[snapAfterIndex];\n                    const halfSize = Math.floor(snappedViewItem.viewMinimumSize / 2);\n                    snapAfter = {\n                        index: snapAfterIndex,\n                        limitDelta: snappedViewItem.visible\n                            ? maxDelta + halfSize\n                            : maxDelta - halfSize,\n                        size: snappedViewItem.size,\n                    };\n                }\n                //\n                const mousemove = (mousemoveEvent) => {\n                    const current = this._orientation === Orientation.HORIZONTAL\n                        ? mousemoveEvent.clientX\n                        : mousemoveEvent.clientY;\n                    const delta = current - start;\n                    this.resize(sashIndex, delta, sizes, undefined, undefined, minDelta, maxDelta, snapBefore, snapAfter);\n                    this.distributeEmptySpace();\n                    this.layoutViews();\n                };\n                const end = () => {\n                    for (const item of this.views) {\n                        item.enabled = true;\n                    }\n                    for (const iframe of iframes) {\n                        iframe.style.pointerEvents = 'auto';\n                    }\n                    this.saveProportions();\n                    document.removeEventListener('mousemove', mousemove);\n                    document.removeEventListener('mouseup', end);\n                    document.removeEventListener('mouseend', end);\n                    this._onDidSashEnd.fire(undefined);\n                };\n                document.addEventListener('mousemove', mousemove);\n                document.addEventListener('mouseup', end);\n                document.addEventListener('mouseend', end);\n            };\n            sash.addEventListener('mousedown', onStart);\n            const sashItem = {\n                container: sash,\n                disposable: () => {\n                    sash.removeEventListener('mousedown', onStart);\n                    this.sashContainer.removeChild(sash);\n                },\n            };\n            this.sashContainer.appendChild(sash);\n            this.sashes.push(sashItem);\n        }\n        if (!skipLayout) {\n            this.relayout([index]);\n        }\n        if (!skipLayout &&\n            typeof size !== 'number' &&\n            size.type === 'distribute') {\n            this.distributeViewSizes();\n        }\n        this._onDidAddView.fire(view);\n    }\n    distributeViewSizes() {\n        const flexibleViewItems = [];\n        let flexibleSize = 0;\n        for (const item of this.views) {\n            if (item.maximumSize - item.minimumSize > 0) {\n                flexibleViewItems.push(item);\n                flexibleSize += item.size;\n            }\n        }\n        const size = Math.floor(flexibleSize / flexibleViewItems.length);\n        for (const item of flexibleViewItems) {\n            item.size = clamp(size, item.minimumSize, item.maximumSize);\n        }\n        const indexes = range(this.views.length);\n        const lowPriorityIndexes = indexes.filter((i) => this.views[i].priority === LayoutPriority.Low);\n        const highPriorityIndexes = indexes.filter((i) => this.views[i].priority === LayoutPriority.High);\n        this.relayout(lowPriorityIndexes, highPriorityIndexes);\n    }\n    removeView(index, sizing, skipLayout = false) {\n        // Remove view\n        const viewItem = this.views.splice(index, 1)[0];\n        viewItem.dispose();\n        // Remove sash\n        if (this.views.length >= 1) {\n            const sashIndex = Math.max(index - 1, 0);\n            const sashItem = this.sashes.splice(sashIndex, 1)[0];\n            sashItem.disposable();\n        }\n        if (!skipLayout) {\n            this.relayout();\n        }\n        if (sizing && sizing.type === 'distribute') {\n            this.distributeViewSizes();\n        }\n        this._onDidRemoveView.fire(viewItem.view);\n        return viewItem.view;\n    }\n    getViewCachedVisibleSize(index) {\n        if (index < 0 || index >= this.views.length) {\n            throw new Error('Index out of bounds');\n        }\n        const viewItem = this.views[index];\n        return viewItem.cachedVisibleSize;\n    }\n    moveView(from, to) {\n        const cachedVisibleSize = this.getViewCachedVisibleSize(from);\n        const sizing = typeof cachedVisibleSize === 'undefined'\n            ? this.getViewSize(from)\n            : Sizing.Invisible(cachedVisibleSize);\n        const view = this.removeView(from, undefined, true);\n        this.addView(view, sizing, to);\n    }\n    layout(size, orthogonalSize) {\n        const previousSize = Math.max(this.size, this.contentSize);\n        this.size = size;\n        this.orthogonalSize = orthogonalSize;\n        if (!this.proportions) {\n            const indexes = range(this.views.length);\n            const lowPriorityIndexes = indexes.filter((i) => this.views[i].priority === LayoutPriority.Low);\n            const highPriorityIndexes = indexes.filter((i) => this.views[i].priority === LayoutPriority.High);\n            this.resize(this.views.length - 1, size - previousSize, undefined, lowPriorityIndexes, highPriorityIndexes);\n        }\n        else {\n            for (let i = 0; i < this.views.length; i++) {\n                const item = this.views[i];\n                item.size = clamp(Math.round(this.proportions[i] * size), item.minimumSize, item.maximumSize);\n            }\n        }\n        this.distributeEmptySpace();\n        this.layoutViews();\n    }\n    relayout(lowPriorityIndexes, highPriorityIndexes) {\n        const contentSize = this.views.reduce((r, i) => r + i.size, 0);\n        this.resize(this.views.length - 1, this._size - contentSize, undefined, lowPriorityIndexes, highPriorityIndexes);\n        this.distributeEmptySpace();\n        this.layoutViews();\n        this.saveProportions();\n    }\n    distributeEmptySpace(lowPriorityIndex) {\n        const contentSize = this.views.reduce((r, i) => r + i.size, 0);\n        let emptyDelta = this.size - contentSize;\n        const indexes = range(this.views.length - 1, -1);\n        const lowPriorityIndexes = indexes.filter((i) => this.views[i].priority === LayoutPriority.Low);\n        const highPriorityIndexes = indexes.filter((i) => this.views[i].priority === LayoutPriority.High);\n        for (const index of highPriorityIndexes) {\n            pushToStart(indexes, index);\n        }\n        for (const index of lowPriorityIndexes) {\n            pushToEnd(indexes, index);\n        }\n        if (typeof lowPriorityIndex === 'number') {\n            pushToEnd(indexes, lowPriorityIndex);\n        }\n        for (let i = 0; emptyDelta !== 0 && i < indexes.length; i++) {\n            const item = this.views[indexes[i]];\n            const size = clamp(item.size + emptyDelta, item.minimumSize, item.maximumSize);\n            const viewDelta = size - item.size;\n            emptyDelta -= viewDelta;\n            item.size = size;\n        }\n    }\n    saveProportions() {\n        if (this.proportionalLayout && this.contentSize > 0) {\n            this._proportions = this.views.map((i) => i.size / this.contentSize);\n        }\n    }\n    layoutViews() {\n        this.contentSize = this.views.reduce((r, i) => r + i.size, 0);\n        let sum = 0;\n        const x = [];\n        this.updateSashEnablement();\n        for (let i = 0; i < this.views.length - 1; i++) {\n            sum += this.views[i].size;\n            x.push(sum);\n            const offset = Math.min(Math.max(0, sum - 2), this.size - 4);\n            if (this._orientation === Orientation.HORIZONTAL) {\n                this.sashes[i].container.style.left = `${offset}px`;\n                this.sashes[i].container.style.top = `0px`;\n            }\n            if (this._orientation === Orientation.VERTICAL) {\n                this.sashes[i].container.style.left = `0px`;\n                this.sashes[i].container.style.top = `${offset}px`;\n            }\n        }\n        this.views.forEach((view, i) => {\n            if (this._orientation === Orientation.HORIZONTAL) {\n                view.container.style.width = `${view.size}px`;\n                view.container.style.left = i == 0 ? '0px' : `${x[i - 1]}px`;\n                view.container.style.top = '';\n                view.container.style.height = '';\n            }\n            if (this._orientation === Orientation.VERTICAL) {\n                view.container.style.height = `${view.size}px`;\n                view.container.style.top = i == 0 ? '0px' : `${x[i - 1]}px`;\n                view.container.style.width = '';\n                view.container.style.left = '';\n            }\n            view.view.layout(view.size, this._orthogonalSize);\n        });\n    }\n    findFirstSnapIndex(indexes) {\n        // visible views first\n        for (const index of indexes) {\n            const viewItem = this.views[index];\n            if (!viewItem.visible) {\n                continue;\n            }\n            if (viewItem.snap) {\n                return index;\n            }\n        }\n        // then, hidden views\n        for (const index of indexes) {\n            const viewItem = this.views[index];\n            if (viewItem.visible &&\n                viewItem.maximumSize - viewItem.minimumSize > 0) {\n                return undefined;\n            }\n            if (!viewItem.visible && viewItem.snap) {\n                return index;\n            }\n        }\n        return undefined;\n    }\n    updateSashEnablement() {\n        let previous = false;\n        const collapsesDown = this.views.map((i) => (previous = i.size - i.minimumSize > 0 || previous));\n        previous = false;\n        const expandsDown = this.views.map((i) => (previous = i.maximumSize - i.size > 0 || previous));\n        const reverseViews = [...this.views].reverse();\n        previous = false;\n        const collapsesUp = reverseViews\n            .map((i) => (previous = i.size - i.minimumSize > 0 || previous))\n            .reverse();\n        previous = false;\n        const expandsUp = reverseViews\n            .map((i) => (previous = i.maximumSize - i.size > 0 || previous))\n            .reverse();\n        let position = 0;\n        for (let index = 0; index < this.sashes.length; index++) {\n            const sash = this.sashes[index];\n            const viewItem = this.views[index];\n            position += viewItem.size;\n            const min = !(collapsesDown[index] && expandsUp[index + 1]);\n            const max = !(expandsDown[index] && collapsesUp[index + 1]);\n            if (min && max) {\n                const upIndexes = range(index, -1);\n                const downIndexes = range(index + 1, this.views.length);\n                const snapBeforeIndex = this.findFirstSnapIndex(upIndexes);\n                const snapAfterIndex = this.findFirstSnapIndex(downIndexes);\n                const snappedBefore = typeof snapBeforeIndex === 'number' &&\n                    !this.views[snapBeforeIndex].visible;\n                const snappedAfter = typeof snapAfterIndex === 'number' &&\n                    !this.views[snapAfterIndex].visible;\n                if (snappedBefore &&\n                    collapsesUp[index] &&\n                    (position > 0 || this.startSnappingEnabled)) {\n                    this.updateSash(sash, SashState.MINIMUM);\n                }\n                else if (snappedAfter &&\n                    collapsesDown[index] &&\n                    (position < this.contentSize || this.endSnappingEnabled)) {\n                    this.updateSash(sash, SashState.MAXIMUM);\n                }\n                else {\n                    this.updateSash(sash, SashState.DISABLED);\n                }\n            }\n            else if (min && !max) {\n                this.updateSash(sash, SashState.MINIMUM);\n            }\n            else if (!min && max) {\n                this.updateSash(sash, SashState.MAXIMUM);\n            }\n            else {\n                this.updateSash(sash, SashState.ENABLED);\n            }\n        }\n    }\n    updateSash(sash, state) {\n        toggleClass(sash.container, 'disabled', state === SashState.DISABLED);\n        toggleClass(sash.container, 'enabled', state === SashState.ENABLED);\n        toggleClass(sash.container, 'maximum', state === SashState.MAXIMUM);\n        toggleClass(sash.container, 'minimum', state === SashState.MINIMUM);\n    }\n    createViewContainer() {\n        const element = document.createElement('div');\n        element.className = 'view-container';\n        return element;\n    }\n    createSashContainer() {\n        const element = document.createElement('div');\n        element.className = 'sash-container';\n        return element;\n    }\n    createContainer() {\n        const element = document.createElement('div');\n        const orientationClassname = this._orientation === Orientation.HORIZONTAL\n            ? 'horizontal'\n            : 'vertical';\n        element.className = `split-view-container ${orientationClassname}`;\n        return element;\n    }\n    dispose() {\n        this._onDidSashEnd.dispose();\n        this._onDidAddView.dispose();\n        this._onDidRemoveView.dispose();\n        for (let i = 0; i < this.element.children.length; i++) {\n            if (this.element.children.item(i) === this.element) {\n                this.element.removeChild(this.element);\n                break;\n            }\n        }\n        this.element.remove();\n    }\n}\n","import { Splitview, Orientation, } from '../splitview/splitview';\nimport { CompositeDisposable } from '../lifecycle';\nimport { Emitter } from '../events';\nimport { addClasses, removeClasses } from '../dom';\nexport class Paneview extends CompositeDisposable {\n    get onDidAddView() {\n        return this.splitview.onDidAddView;\n    }\n    get onDidRemoveView() {\n        return this.splitview.onDidRemoveView;\n    }\n    get minimumSize() {\n        return this.splitview.minimumSize;\n    }\n    get maximumSize() {\n        return this.splitview.maximumSize;\n    }\n    get orientation() {\n        return this.splitview.orientation;\n    }\n    get size() {\n        return this.splitview.size;\n    }\n    get orthogonalSize() {\n        return this.splitview.orthogonalSize;\n    }\n    constructor(container, options) {\n        var _a;\n        super();\n        this.paneItems = [];\n        this.skipAnimation = false;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._orientation = (_a = options.orientation) !== null && _a !== void 0 ? _a : Orientation.VERTICAL;\n        this.element = document.createElement('div');\n        this.element.className = 'pane-container';\n        container.appendChild(this.element);\n        this.splitview = new Splitview(this.element, {\n            orientation: this._orientation,\n            proportionalLayout: false,\n            descriptor: options.descriptor,\n        });\n        // if we've added views from the descriptor we need to\n        // add the panes to our Pane array and setup animation\n        this.getPanes().forEach((pane) => {\n            const disposable = new CompositeDisposable(pane.onDidChangeExpansionState(() => {\n                this.setupAnimation();\n                this._onDidChange.fire(undefined);\n            }));\n            const paneItem = {\n                pane,\n                disposable: {\n                    dispose: () => {\n                        disposable.dispose();\n                    },\n                },\n            };\n            this.paneItems.push(paneItem);\n            pane.orthogonalSize = this.splitview.orthogonalSize;\n        });\n        this.addDisposables(this._onDidChange, this.splitview.onDidSashEnd(() => {\n            this._onDidChange.fire(undefined);\n        }), this.splitview.onDidAddView(() => {\n            this._onDidChange.fire();\n        }), this.splitview.onDidRemoveView(() => {\n            this._onDidChange.fire();\n        }));\n    }\n    addPane(pane, size, index = this.splitview.length, skipLayout = false) {\n        const disposable = pane.onDidChangeExpansionState(() => {\n            this.setupAnimation();\n            this._onDidChange.fire(undefined);\n        });\n        const paneItem = {\n            pane,\n            disposable: {\n                dispose: () => {\n                    disposable.dispose();\n                },\n            },\n        };\n        this.paneItems.splice(index, 0, paneItem);\n        pane.orthogonalSize = this.splitview.orthogonalSize;\n        this.splitview.addView(pane, size, index, skipLayout);\n    }\n    getViewSize(index) {\n        return this.splitview.getViewSize(index);\n    }\n    getPanes() {\n        return this.splitview.getViews();\n    }\n    removePane(index, options = { skipDispose: false }) {\n        const paneItem = this.paneItems.splice(index, 1)[0];\n        this.splitview.removeView(index);\n        if (!options.skipDispose) {\n            paneItem.disposable.dispose();\n            paneItem.pane.dispose();\n        }\n        return paneItem;\n    }\n    moveView(from, to) {\n        if (from === to) {\n            return;\n        }\n        const view = this.removePane(from, { skipDispose: true });\n        this.skipAnimation = true;\n        try {\n            this.addPane(view.pane, view.pane.size, to, false);\n        }\n        finally {\n            this.skipAnimation = false;\n        }\n    }\n    layout(size, orthogonalSize) {\n        this.splitview.layout(size, orthogonalSize);\n    }\n    setupAnimation() {\n        if (this.skipAnimation) {\n            return;\n        }\n        if (this.animationTimer) {\n            clearTimeout(this.animationTimer);\n            this.animationTimer = undefined;\n        }\n        addClasses(this.element, 'animated');\n        this.animationTimer = setTimeout(() => {\n            this.animationTimer = undefined;\n            removeClasses(this.element, 'animated');\n        }, 200);\n    }\n    dispose() {\n        super.dispose();\n        if (this.animationTimer) {\n            clearTimeout(this.animationTimer);\n            this.animationTimer = undefined;\n        }\n        this.paneItems.forEach((paneItem) => {\n            paneItem.disposable.dispose();\n            paneItem.pane.dispose();\n        });\n        this.paneItems = [];\n        this.splitview.dispose();\n        this.element.remove();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/grid\n *--------------------------------------------------------------------------------------------*/\nimport { Orientation } from '../splitview/splitview';\nimport { Emitter } from '../events';\nexport class LeafNode {\n    get minimumWidth() {\n        return this.view.minimumWidth;\n    }\n    get maximumWidth() {\n        return this.view.maximumWidth;\n    }\n    get minimumHeight() {\n        return this.view.minimumHeight;\n    }\n    get maximumHeight() {\n        return this.view.maximumHeight;\n    }\n    get priority() {\n        return this.view.priority;\n    }\n    get snap() {\n        return this.view.snap;\n    }\n    get minimumSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumHeight\n            : this.minimumWidth;\n    }\n    get maximumSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumHeight\n            : this.maximumWidth;\n    }\n    get minimumOrthogonalSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumWidth\n            : this.minimumHeight;\n    }\n    get maximumOrthogonalSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumWidth\n            : this.maximumHeight;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    get size() {\n        return this._size;\n    }\n    get element() {\n        return this.view.element;\n    }\n    get width() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.orthogonalSize\n            : this.size;\n    }\n    get height() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.size\n            : this.orthogonalSize;\n    }\n    constructor(view, orientation, orthogonalSize, size = 0) {\n        this.view = view;\n        this.orientation = orientation;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._orthogonalSize = orthogonalSize;\n        this._size = size;\n        this._disposable = this.view.onDidChange((event) => {\n            if (event) {\n                this._onDidChange.fire({\n                    size: this.orientation === Orientation.VERTICAL\n                        ? event.width\n                        : event.height,\n                    orthogonalSize: this.orientation === Orientation.VERTICAL\n                        ? event.height\n                        : event.width,\n                });\n            }\n            else {\n                this._onDidChange.fire({});\n            }\n        });\n    }\n    setVisible(visible) {\n        if (this.view.setVisible) {\n            this.view.setVisible(visible);\n            this._onDidChange.fire({});\n        }\n    }\n    layout(size, orthogonalSize) {\n        this._size = size;\n        this._orthogonalSize = orthogonalSize;\n        this.view.layout(this.width, this.height);\n    }\n    dispose() {\n        this._onDidChange.dispose();\n        this._disposable.dispose();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/grid\n *--------------------------------------------------------------------------------------------*/\nimport { Splitview, Orientation, LayoutPriority, } from '../splitview/splitview';\nimport { Emitter, Event } from '../events';\nimport { LeafNode } from './leafNode';\nimport { CompositeDisposable, Disposable } from '../lifecycle';\nexport class BranchNode extends CompositeDisposable {\n    get width() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.size\n            : this.orthogonalSize;\n    }\n    get height() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.orthogonalSize\n            : this.size;\n    }\n    get minimumSize() {\n        return this.children.length === 0\n            ? 0\n            : Math.max(...this.children.map((c) => c.minimumOrthogonalSize));\n    }\n    get maximumSize() {\n        return Math.min(...this.children.map((c) => c.maximumOrthogonalSize));\n    }\n    get minimumOrthogonalSize() {\n        return this.splitview.minimumSize;\n    }\n    get maximumOrthogonalSize() {\n        return this.splitview.maximumSize;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    get size() {\n        return this._size;\n    }\n    get minimumWidth() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumOrthogonalSize\n            : this.minimumSize;\n    }\n    get minimumHeight() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumSize\n            : this.minimumOrthogonalSize;\n    }\n    get maximumWidth() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumOrthogonalSize\n            : this.maximumSize;\n    }\n    get maximumHeight() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumSize\n            : this.maximumOrthogonalSize;\n    }\n    get priority() {\n        if (this.children.length === 0) {\n            return LayoutPriority.Normal;\n        }\n        const priorities = this.children.map((c) => typeof c.priority === 'undefined'\n            ? LayoutPriority.Normal\n            : c.priority);\n        if (priorities.some((p) => p === LayoutPriority.High)) {\n            return LayoutPriority.High;\n        }\n        else if (priorities.some((p) => p === LayoutPriority.Low)) {\n            return LayoutPriority.Low;\n        }\n        return LayoutPriority.Normal;\n    }\n    constructor(orientation, proportionalLayout, styles, size, orthogonalSize, childDescriptors) {\n        super();\n        this.orientation = orientation;\n        this.proportionalLayout = proportionalLayout;\n        this.styles = styles;\n        this._childrenDisposable = Disposable.NONE;\n        this.children = [];\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._orthogonalSize = orthogonalSize;\n        this._size = size;\n        this.element = document.createElement('div');\n        this.element.className = 'branch-node';\n        if (!childDescriptors) {\n            this.splitview = new Splitview(this.element, {\n                orientation: this.orientation,\n                proportionalLayout,\n                styles,\n            });\n            this.splitview.layout(this.size, this.orthogonalSize);\n        }\n        else {\n            const descriptor = {\n                views: childDescriptors.map((childDescriptor) => {\n                    return {\n                        view: childDescriptor.node,\n                        size: childDescriptor.node.size,\n                        visible: childDescriptor.node instanceof LeafNode &&\n                            childDescriptor.visible !== undefined\n                            ? childDescriptor.visible\n                            : true,\n                    };\n                }),\n                size: this.size,\n            };\n            this.children = childDescriptors.map((c) => c.node);\n            this.splitview = new Splitview(this.element, {\n                orientation: this.orientation,\n                descriptor,\n                proportionalLayout,\n            });\n        }\n        this.addDisposables(this._onDidChange, this.splitview.onDidSashEnd(() => {\n            this._onDidChange.fire({});\n        }));\n        this.setupChildrenEvents();\n    }\n    setVisible(visible) {\n        for (const child of this.children) {\n            child.setVisible(visible);\n        }\n    }\n    isChildVisible(index) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        return this.splitview.isViewVisible(index);\n    }\n    setChildVisible(index, visible) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        if (this.splitview.isViewVisible(index) === visible) {\n            return;\n        }\n        this.splitview.setViewVisible(index, visible);\n    }\n    moveChild(from, to) {\n        if (from === to) {\n            return;\n        }\n        if (from < 0 || from >= this.children.length) {\n            throw new Error('Invalid from index');\n        }\n        if (from < to) {\n            to--;\n        }\n        this.splitview.moveView(from, to);\n        const child = this._removeChild(from);\n        this._addChild(child, to);\n    }\n    getChildSize(index) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        return this.splitview.getViewSize(index);\n    }\n    resizeChild(index, size) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        this.splitview.resizeView(index, size);\n    }\n    layout(size, orthogonalSize) {\n        this._size = orthogonalSize;\n        this._orthogonalSize = size;\n        this.splitview.layout(this.size, this.orthogonalSize);\n    }\n    addChild(node, size, index, skipLayout) {\n        if (index < 0 || index > this.children.length) {\n            throw new Error('Invalid index');\n        }\n        this.splitview.addView(node, size, index, skipLayout);\n        this._addChild(node, index);\n    }\n    getChildCachedVisibleSize(index) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        return this.splitview.getViewCachedVisibleSize(index);\n    }\n    removeChild(index, sizing) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        this.splitview.removeView(index, sizing);\n        this._removeChild(index);\n    }\n    _addChild(node, index) {\n        this.children.splice(index, 0, node);\n        this.setupChildrenEvents();\n    }\n    _removeChild(index) {\n        const [child] = this.children.splice(index, 1);\n        this.setupChildrenEvents();\n        return child;\n    }\n    setupChildrenEvents() {\n        this._childrenDisposable.dispose();\n        this._childrenDisposable = Event.any(...this.children.map((c) => c.onDidChange))((e) => {\n            /**\n             * indicate a change has occured to allows any re-rendering but don't bubble\n             * event because that was specific to this branch\n             */\n            this._onDidChange.fire({ size: e.orthogonalSize });\n        });\n    }\n    dispose() {\n        super.dispose();\n        this._childrenDisposable.dispose();\n        this.children.forEach((child) => child.dispose());\n        this.splitview.dispose();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/grid\n *--------------------------------------------------------------------------------------------*/\nimport { Orientation, Sizing, } from '../splitview/splitview';\nimport { tail } from '../array';\nimport { LeafNode } from './leafNode';\nimport { BranchNode } from './branchNode';\nimport { Emitter } from '../events';\nimport { MutableDisposable } from '../lifecycle';\nfunction findLeaf(candiateNode, last) {\n    if (candiateNode instanceof LeafNode) {\n        return candiateNode;\n    }\n    if (candiateNode instanceof BranchNode) {\n        return findLeaf(candiateNode.children[last ? candiateNode.children.length - 1 : 0], last);\n    }\n    throw new Error('invalid node');\n}\nfunction flipNode(node, size, orthogonalSize) {\n    if (node instanceof BranchNode) {\n        const result = new BranchNode(orthogonal(node.orientation), node.proportionalLayout, node.styles, size, orthogonalSize);\n        let totalSize = 0;\n        for (let i = node.children.length - 1; i >= 0; i--) {\n            const child = node.children[i];\n            const childSize = child instanceof BranchNode ? child.orthogonalSize : child.size;\n            let newSize = node.size === 0\n                ? 0\n                : Math.round((size * childSize) / node.size);\n            totalSize += newSize;\n            // The last view to add should adjust to rounding errors\n            if (i === 0) {\n                newSize += size - totalSize;\n            }\n            result.addChild(flipNode(child, orthogonalSize, newSize), newSize, 0, true);\n        }\n        return result;\n    }\n    else {\n        return new LeafNode(node.view, orthogonal(node.orientation), orthogonalSize);\n    }\n}\nexport function indexInParent(element) {\n    const parentElement = element.parentElement;\n    if (!parentElement) {\n        throw new Error('Invalid grid element');\n    }\n    let el = parentElement.firstElementChild;\n    let index = 0;\n    while (el !== element && el !== parentElement.lastElementChild && el) {\n        el = el.nextElementSibling;\n        index++;\n    }\n    return index;\n}\n/**\n * Find the grid location of a specific DOM element by traversing the parent\n * chain and finding each child index on the way.\n *\n * This will break as soon as DOM structures of the Splitview or Gridview change.\n */\nexport function getGridLocation(element) {\n    const parentElement = element.parentElement;\n    if (!parentElement) {\n        throw new Error('Invalid grid element');\n    }\n    if (/\\bgrid-view\\b/.test(parentElement.className)) {\n        return [];\n    }\n    const index = indexInParent(parentElement);\n    const ancestor = parentElement.parentElement.parentElement.parentElement;\n    return [...getGridLocation(ancestor), index];\n}\nexport function getRelativeLocation(rootOrientation, location, direction) {\n    const orientation = getLocationOrientation(rootOrientation, location);\n    const directionOrientation = getDirectionOrientation(direction);\n    if (orientation === directionOrientation) {\n        const [rest, _index] = tail(location);\n        let index = _index;\n        if (direction === 'right' || direction === 'bottom') {\n            index += 1;\n        }\n        return [...rest, index];\n    }\n    else {\n        const index = direction === 'right' || direction === 'bottom' ? 1 : 0;\n        return [...location, index];\n    }\n}\nexport function getDirectionOrientation(direction) {\n    return direction === 'top' || direction === 'bottom'\n        ? Orientation.VERTICAL\n        : Orientation.HORIZONTAL;\n}\nexport function getLocationOrientation(rootOrientation, location) {\n    return location.length % 2 === 0\n        ? orthogonal(rootOrientation)\n        : rootOrientation;\n}\nexport const orthogonal = (orientation) => orientation === Orientation.HORIZONTAL\n    ? Orientation.VERTICAL\n    : Orientation.HORIZONTAL;\nexport function isGridBranchNode(node) {\n    return !!node.children;\n}\nconst serializeBranchNode = (node, orientation) => {\n    const size = orientation === Orientation.VERTICAL ? node.box.width : node.box.height;\n    if (!isGridBranchNode(node)) {\n        if (typeof node.cachedVisibleSize === 'number') {\n            return {\n                type: 'leaf',\n                data: node.view.toJSON(),\n                size: node.cachedVisibleSize,\n                visible: false,\n            };\n        }\n        return { type: 'leaf', data: node.view.toJSON(), size };\n    }\n    return {\n        type: 'branch',\n        data: node.children.map((c) => serializeBranchNode(c, orthogonal(orientation))),\n        size,\n    };\n};\nexport class Gridview {\n    get length() {\n        return this._root ? this._root.children.length : 0;\n    }\n    get orientation() {\n        return this.root.orientation;\n    }\n    set orientation(orientation) {\n        if (this.root.orientation === orientation) {\n            return;\n        }\n        const { size, orthogonalSize } = this.root;\n        this.root = flipNode(this.root, orthogonalSize, size);\n        this.root.layout(size, orthogonalSize);\n    }\n    get width() {\n        return this.root.width;\n    }\n    get height() {\n        return this.root.height;\n    }\n    get minimumWidth() {\n        return this.root.minimumWidth;\n    }\n    get minimumHeight() {\n        return this.root.minimumHeight;\n    }\n    get maximumWidth() {\n        return this.root.maximumHeight;\n    }\n    get maximumHeight() {\n        return this.root.maximumHeight;\n    }\n    serialize() {\n        const root = serializeBranchNode(this.getView(), this.orientation);\n        return {\n            root,\n            width: this.width,\n            height: this.height,\n            orientation: this.orientation,\n        };\n    }\n    dispose() {\n        this.disposable.dispose();\n        this._onDidChange.dispose();\n        this.root.dispose();\n        this.element.remove();\n    }\n    clear() {\n        const orientation = this.root.orientation;\n        this.root = new BranchNode(orientation, this.proportionalLayout, this.styles, this.root.size, this.root.orthogonalSize);\n    }\n    deserialize(json, deserializer) {\n        const orientation = json.orientation;\n        const height = orientation === Orientation.VERTICAL ? json.height : json.width;\n        this._deserialize(json.root, orientation, deserializer, height);\n    }\n    _deserialize(root, orientation, deserializer, orthogonalSize) {\n        this.root = this._deserializeNode(root, orientation, deserializer, orthogonalSize, true);\n    }\n    _deserializeNode(node, orientation, deserializer, orthogonalSize, isRoot = false) {\n        let result;\n        if (node.type === 'branch') {\n            const serializedChildren = node.data;\n            const children = serializedChildren.map((serializedChild) => {\n                return {\n                    node: this._deserializeNode(serializedChild, orthogonal(orientation), deserializer, node.size),\n                    visible: serializedChild.visible,\n                };\n            });\n            // HORIZONTAL => height=orthogonalsize width=size\n            // VERTICAL => height=size width=orthogonalsize\n            result = new BranchNode(orientation, this.proportionalLayout, this.styles, isRoot ? orthogonalSize : node.size, isRoot ? node.size : orthogonalSize, children);\n        }\n        else {\n            result = new LeafNode(deserializer.fromJSON(node), orientation, orthogonalSize, node.size);\n        }\n        return result;\n    }\n    get root() {\n        return this._root;\n    }\n    set root(root) {\n        const oldRoot = this._root;\n        if (oldRoot) {\n            oldRoot.dispose();\n            this.element.removeChild(oldRoot.element);\n        }\n        this._root = root;\n        this.element.appendChild(this._root.element);\n        this.disposable.value = this._root.onDidChange((e) => {\n            this._onDidChange.fire(e);\n        });\n    }\n    /**\n     * If the root is orientated as a VERTICAL node then nest the existing root within a new HORIZIONTAL root node\n     * If the root is orientated as a HORIZONTAL node then nest the existing root within a new VERITCAL root node\n     */\n    insertOrthogonalSplitviewAtRoot() {\n        if (!this._root) {\n            return;\n        }\n        const oldRoot = this.root;\n        oldRoot.element.remove();\n        this._root = new BranchNode(orthogonal(oldRoot.orientation), this.proportionalLayout, this.styles, this.root.orthogonalSize, this.root.size);\n        if (oldRoot.children.length === 1) {\n            // can remove one level of redundant branching if there is only a single child\n            const childReference = oldRoot.children[0];\n            oldRoot.removeChild(0); // remove to prevent disposal when disposing of unwanted root\n            oldRoot.dispose();\n            this._root.addChild(childReference, Sizing.Distribute, 0);\n        }\n        else {\n            this._root.addChild(oldRoot, Sizing.Distribute, 0);\n        }\n        this.element.appendChild(this._root.element);\n        this.disposable.value = this._root.onDidChange((e) => {\n            this._onDidChange.fire(e);\n        });\n    }\n    next(location) {\n        return this.progmaticSelect(location);\n    }\n    previous(location) {\n        return this.progmaticSelect(location, true);\n    }\n    getView(location) {\n        const node = location ? this.getNode(location)[1] : this.root;\n        return this._getViews(node, this.orientation);\n    }\n    _getViews(node, orientation, cachedVisibleSize) {\n        const box = { height: node.height, width: node.width };\n        if (node instanceof LeafNode) {\n            return { box, view: node.view, cachedVisibleSize };\n        }\n        const children = [];\n        for (let i = 0; i < node.children.length; i++) {\n            const child = node.children[i];\n            const nodeCachedVisibleSize = node.getChildCachedVisibleSize(i);\n            children.push(this._getViews(child, orthogonal(orientation), nodeCachedVisibleSize));\n        }\n        return { box, children };\n    }\n    progmaticSelect(location, reverse = false) {\n        const [path, node] = this.getNode(location);\n        if (!(node instanceof LeafNode)) {\n            throw new Error('invalid location');\n        }\n        for (let i = path.length - 1; i > -1; i--) {\n            const n = path[i];\n            const l = location[i] || 0;\n            const canProgressInCurrentLevel = reverse\n                ? l - 1 > -1\n                : l + 1 < n.children.length;\n            if (canProgressInCurrentLevel) {\n                return findLeaf(n.children[reverse ? l - 1 : l + 1], reverse);\n            }\n        }\n        return findLeaf(this.root, reverse);\n    }\n    constructor(proportionalLayout, styles, orientation) {\n        this.proportionalLayout = proportionalLayout;\n        this.styles = styles;\n        this.disposable = new MutableDisposable();\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this.element = document.createElement('div');\n        this.element.className = 'grid-view';\n        this.root = new BranchNode(orientation, proportionalLayout, styles, 0, 0);\n    }\n    isViewVisible(location) {\n        const [rest, index] = tail(location);\n        const [, parent] = this.getNode(rest);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid from location');\n        }\n        return parent.isChildVisible(index);\n    }\n    setViewVisible(location, visible) {\n        const [rest, index] = tail(location);\n        const [, parent] = this.getNode(rest);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid from location');\n        }\n        parent.setChildVisible(index, visible);\n    }\n    moveView(parentLocation, from, to) {\n        const [, parent] = this.getNode(parentLocation);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid location');\n        }\n        parent.moveChild(from, to);\n    }\n    addView(view, size, location) {\n        const [rest, index] = tail(location);\n        const [pathToParent, parent] = this.getNode(rest);\n        if (parent instanceof BranchNode) {\n            const node = new LeafNode(view, orthogonal(parent.orientation), parent.orthogonalSize);\n            parent.addChild(node, size, index);\n        }\n        else {\n            const [grandParent, ..._] = [...pathToParent].reverse();\n            const [parentIndex, ...__] = [...rest].reverse();\n            let newSiblingSize = 0;\n            const newSiblingCachedVisibleSize = grandParent.getChildCachedVisibleSize(parentIndex);\n            if (typeof newSiblingCachedVisibleSize === 'number') {\n                newSiblingSize = Sizing.Invisible(newSiblingCachedVisibleSize);\n            }\n            grandParent.removeChild(parentIndex);\n            const newParent = new BranchNode(parent.orientation, this.proportionalLayout, this.styles, parent.size, parent.orthogonalSize);\n            grandParent.addChild(newParent, parent.size, parentIndex);\n            const newSibling = new LeafNode(parent.view, grandParent.orientation, parent.size);\n            newParent.addChild(newSibling, newSiblingSize, 0);\n            if (typeof size !== 'number' && size.type === 'split') {\n                size = { type: 'split', index: 0 };\n            }\n            const node = new LeafNode(view, grandParent.orientation, parent.size);\n            newParent.addChild(node, size, index);\n        }\n    }\n    remove(view, sizing) {\n        const location = getGridLocation(view.element);\n        return this.removeView(location, sizing);\n    }\n    removeView(location, sizing) {\n        const [rest, index] = tail(location);\n        const [pathToParent, parent] = this.getNode(rest);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid location');\n        }\n        const node = parent.children[index];\n        if (!(node instanceof LeafNode)) {\n            throw new Error('Invalid location');\n        }\n        parent.removeChild(index, sizing);\n        if (parent.children.length === 0) {\n            return node.view;\n        }\n        if (parent.children.length > 1) {\n            return node.view;\n        }\n        const sibling = parent.children[0];\n        if (pathToParent.length === 0) {\n            // parent is root\n            if (sibling instanceof LeafNode) {\n                return node.view;\n            }\n            // we must promote sibling to be the new root\n            parent.removeChild(0, sizing);\n            this.root = sibling;\n            return node.view;\n        }\n        const [grandParent, ..._] = [...pathToParent].reverse();\n        const [parentIndex, ...__] = [...rest].reverse();\n        const isSiblingVisible = parent.isChildVisible(0);\n        parent.removeChild(0, sizing);\n        const sizes = grandParent.children.map((_size, i) => grandParent.getChildSize(i));\n        grandParent.removeChild(parentIndex, sizing);\n        if (sibling instanceof BranchNode) {\n            sizes.splice(parentIndex, 1, ...sibling.children.map((c) => c.size));\n            for (let i = 0; i < sibling.children.length; i++) {\n                const child = sibling.children[i];\n                grandParent.addChild(child, child.size, parentIndex + i);\n            }\n        }\n        else {\n            const newSibling = new LeafNode(sibling.view, orthogonal(sibling.orientation), sibling.size);\n            const siblingSizing = isSiblingVisible\n                ? sibling.orthogonalSize\n                : Sizing.Invisible(sibling.orthogonalSize);\n            grandParent.addChild(newSibling, siblingSizing, parentIndex);\n        }\n        for (let i = 0; i < sizes.length; i++) {\n            grandParent.resizeChild(i, sizes[i]);\n        }\n        return node.view;\n    }\n    layout(width, height) {\n        const [size, orthogonalSize] = this.root.orientation === Orientation.HORIZONTAL\n            ? [height, width]\n            : [width, height];\n        this.root.layout(size, orthogonalSize);\n    }\n    getNode(location, node = this.root, path = []) {\n        if (location.length === 0) {\n            return [path, node];\n        }\n        if (!(node instanceof BranchNode)) {\n            throw new Error('Invalid location');\n        }\n        const [index, ...rest] = location;\n        if (index < 0 || index >= node.children.length) {\n            throw new Error('Invalid location');\n        }\n        const child = node.children[index];\n        path.push(node);\n        return this.getNode(rest, child, path);\n    }\n}\n","import { Emitter } from '../events';\nexport class SplitviewApi {\n    get minimumSize() {\n        return this.component.minimumSize;\n    }\n    get maximumSize() {\n        return this.component.maximumSize;\n    }\n    get height() {\n        return this.component.height;\n    }\n    get width() {\n        return this.component.width;\n    }\n    get length() {\n        return this.component.length;\n    }\n    get orientation() {\n        return this.component.orientation;\n    }\n    get panels() {\n        return this.component.panels;\n    }\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    get onDidAddView() {\n        return this.component.onDidAddView;\n    }\n    get onDidRemoveView() {\n        return this.component.onDidRemoveView;\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    updateOptions(options) {\n        this.component.updateOptions(options);\n    }\n    removePanel(panel, sizing) {\n        this.component.removePanel(panel, sizing);\n    }\n    focus() {\n        this.component.focus();\n    }\n    getPanel(id) {\n        return this.component.getPanel(id);\n    }\n    layout(width, height) {\n        return this.component.layout(width, height);\n    }\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    movePanel(from, to) {\n        this.component.movePanel(from, to);\n    }\n    fromJSON(data) {\n        this.component.fromJSON(data);\n    }\n    toJSON() {\n        return this.component.toJSON();\n    }\n    clear() {\n        this.component.clear();\n    }\n}\nexport class PaneviewApi {\n    get minimumSize() {\n        return this.component.minimumSize;\n    }\n    get maximumSize() {\n        return this.component.maximumSize;\n    }\n    get height() {\n        return this.component.height;\n    }\n    get width() {\n        return this.component.width;\n    }\n    get panels() {\n        return this.component.panels;\n    }\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    get onDidAddView() {\n        return this.component.onDidAddView;\n    }\n    get onDidRemoveView() {\n        return this.component.onDidRemoveView;\n    }\n    get onDidDrop() {\n        const emitter = new Emitter();\n        const disposable = this.component.onDidDrop((e) => {\n            emitter.fire(Object.assign(Object.assign({}, e), { api: this }));\n        });\n        emitter.dispose = () => {\n            disposable.dispose();\n            emitter.dispose();\n        };\n        return emitter.event;\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    removePanel(panel) {\n        this.component.removePanel(panel);\n    }\n    getPanel(id) {\n        return this.component.getPanel(id);\n    }\n    movePanel(from, to) {\n        this.component.movePanel(from, to);\n    }\n    focus() {\n        this.component.focus();\n    }\n    layout(width, height) {\n        this.component.layout(width, height);\n    }\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    fromJSON(data) {\n        this.component.fromJSON(data);\n    }\n    toJSON() {\n        return this.component.toJSON();\n    }\n    clear() {\n        this.component.clear();\n    }\n}\nexport class GridviewApi {\n    get minimumHeight() {\n        return this.component.minimumHeight;\n    }\n    get maximumHeight() {\n        return this.component.maximumHeight;\n    }\n    get minimumWidth() {\n        return this.component.minimumWidth;\n    }\n    get maximumWidth() {\n        return this.component.maximumWidth;\n    }\n    get width() {\n        return this.component.width;\n    }\n    get height() {\n        return this.component.height;\n    }\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    get onDidAddPanel() {\n        return this.component.onDidAddGroup;\n    }\n    get onDidRemovePanel() {\n        return this.component.onDidRemoveGroup;\n    }\n    get onDidActivePanelChange() {\n        return this.component.onDidActiveGroupChange;\n    }\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    get panels() {\n        return this.component.groups;\n    }\n    get orientation() {\n        return this.component.orientation;\n    }\n    set orientation(value) {\n        this.component.updateOptions({ orientation: value });\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    focus() {\n        this.component.focus();\n    }\n    layout(width, height, force = false) {\n        this.component.layout(width, height, force);\n    }\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    removePanel(panel, sizing) {\n        this.component.removePanel(panel, sizing);\n    }\n    movePanel(panel, options) {\n        this.component.movePanel(panel, options);\n    }\n    getPanel(id) {\n        return this.component.getPanel(id);\n    }\n    fromJSON(data) {\n        return this.component.fromJSON(data);\n    }\n    toJSON() {\n        return this.component.toJSON();\n    }\n    clear() {\n        this.component.clear();\n    }\n}\nexport class DockviewApi {\n    get id() {\n        return this.component.id;\n    }\n    get width() {\n        return this.component.width;\n    }\n    get height() {\n        return this.component.height;\n    }\n    get minimumHeight() {\n        return this.component.minimumHeight;\n    }\n    get maximumHeight() {\n        return this.component.maximumHeight;\n    }\n    get minimumWidth() {\n        return this.component.minimumWidth;\n    }\n    get maximumWidth() {\n        return this.component.maximumWidth;\n    }\n    get size() {\n        return this.component.size;\n    }\n    get totalPanels() {\n        return this.component.totalPanels;\n    }\n    get onDidActiveGroupChange() {\n        return this.component.onDidActiveGroupChange;\n    }\n    get onDidAddGroup() {\n        return this.component.onDidAddGroup;\n    }\n    get onDidRemoveGroup() {\n        return this.component.onDidRemoveGroup;\n    }\n    get onDidActivePanelChange() {\n        return this.component.onDidActivePanelChange;\n    }\n    get onDidAddPanel() {\n        return this.component.onDidAddPanel;\n    }\n    get onDidRemovePanel() {\n        return this.component.onDidRemovePanel;\n    }\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    get onDidDrop() {\n        return this.component.onDidDrop;\n    }\n    get panels() {\n        return this.component.panels;\n    }\n    get groups() {\n        return this.component.groups;\n    }\n    get activePanel() {\n        return this.component.activePanel;\n    }\n    get activeGroup() {\n        return this.component.activeGroup;\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    getTabHeight() {\n        return this.component.tabHeight;\n    }\n    setTabHeight(height) {\n        this.component.tabHeight = height;\n    }\n    focus() {\n        this.component.focus();\n    }\n    getPanel(id) {\n        return this.component.getGroupPanel(id);\n    }\n    layout(width, height, force = false) {\n        this.component.layout(width, height, force);\n    }\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    addGroup(options) {\n        return this.component.addGroup(options);\n    }\n    moveToNext(options) {\n        this.component.moveToNext(options);\n    }\n    moveToPrevious(options) {\n        this.component.moveToPrevious(options);\n    }\n    closeAllGroups() {\n        return this.component.closeAllGroups();\n    }\n    removeGroup(group) {\n        this.component.removeGroup(group);\n    }\n    getGroup(id) {\n        return this.component.getPanel(id);\n    }\n    fromJSON(data) {\n        this.component.fromJSON(data);\n    }\n    toJSON() {\n        return this.component.toJSON();\n    }\n    clear() {\n        this.component.clear();\n    }\n}\n","import { addDisposableListener } from '../events';\nimport { CompositeDisposable } from '../lifecycle';\nexport class DragAndDropObserver extends CompositeDisposable {\n    constructor(element, callbacks) {\n        super();\n        this.element = element;\n        this.callbacks = callbacks;\n        this.target = null;\n        this.registerListeners();\n    }\n    registerListeners() {\n        this.addDisposables(addDisposableListener(this.element, 'dragenter', (e) => {\n            this.target = e.target;\n            this.callbacks.onDragEnter(e);\n        }, true));\n        this.addDisposables(addDisposableListener(this.element, 'dragover', (e) => {\n            e.preventDefault(); // needed so that the drop event fires (https://stackoverflow.com/questions/21339924/drop-event-not-firing-in-chrome)\n            if (this.callbacks.onDragOver) {\n                this.callbacks.onDragOver(e);\n            }\n        }, true));\n        this.addDisposables(addDisposableListener(this.element, 'dragleave', (e) => {\n            if (this.target === e.target) {\n                this.target = null;\n                this.callbacks.onDragLeave(e);\n            }\n        }));\n        this.addDisposables(addDisposableListener(this.element, 'dragend', (e) => {\n            this.target = null;\n            this.callbacks.onDragEnd(e);\n        }));\n        this.addDisposables(addDisposableListener(this.element, 'drop', (e) => {\n            this.callbacks.onDrop(e);\n        }));\n    }\n}\n","import { toggleClass } from '../dom';\nimport { Emitter } from '../events';\nimport { CompositeDisposable } from '../lifecycle';\nimport { DragAndDropObserver } from './dnd';\nimport { clamp } from '../math';\nfunction numberOrFallback(maybeNumber, fallback) {\n    return typeof maybeNumber === 'number' ? maybeNumber : fallback;\n}\nexport function directionToPosition(direction) {\n    switch (direction) {\n        case 'above':\n            return 'top';\n        case 'below':\n            return 'bottom';\n        case 'left':\n            return 'left';\n        case 'right':\n            return 'right';\n        case 'within':\n            return 'center';\n        default:\n            throw new Error(`invalid direction '${direction}'`);\n    }\n}\nexport function positionToDirection(position) {\n    switch (position) {\n        case 'top':\n            return 'above';\n        case 'bottom':\n            return 'below';\n        case 'left':\n            return 'left';\n        case 'right':\n            return 'right';\n        case 'center':\n            return 'within';\n        default:\n            throw new Error(`invalid position '${position}'`);\n    }\n}\nexport class Droptarget extends CompositeDisposable {\n    get state() {\n        return this._state;\n    }\n    constructor(element, options) {\n        super();\n        this.element = element;\n        this.options = options;\n        this._onDrop = new Emitter();\n        this.onDrop = this._onDrop.event;\n        // use a set to take advantage of #<set>.has\n        const acceptedTargetZonesSet = new Set(this.options.acceptedTargetZones);\n        this.addDisposables(this._onDrop, new DragAndDropObserver(this.element, {\n            onDragEnter: () => undefined,\n            onDragOver: (e) => {\n                const width = this.element.clientWidth;\n                const height = this.element.clientHeight;\n                if (width === 0 || height === 0) {\n                    return; // avoid div!0\n                }\n                const rect = e.currentTarget.getBoundingClientRect();\n                const x = e.clientX - rect.left;\n                const y = e.clientY - rect.top;\n                const quadrant = this.calculateQuadrant(acceptedTargetZonesSet, x, y, width, height);\n                if (quadrant === null) {\n                    // no drop target should be displayed\n                    this.removeDropTarget();\n                    return;\n                }\n                if (typeof this.options.canDisplayOverlay === 'boolean') {\n                    if (!this.options.canDisplayOverlay) {\n                        return;\n                    }\n                }\n                else if (!this.options.canDisplayOverlay(e, quadrant)) {\n                    return;\n                }\n                if (!this.targetElement) {\n                    this.targetElement = document.createElement('div');\n                    this.targetElement.className = 'drop-target-dropzone';\n                    this.overlayElement = document.createElement('div');\n                    this.overlayElement.className = 'drop-target-selection';\n                    this._state = 'center';\n                    this.targetElement.appendChild(this.overlayElement);\n                    this.element.classList.add('drop-target');\n                    this.element.append(this.targetElement);\n                }\n                if (this.options.acceptedTargetZones.length === 0) {\n                    return;\n                }\n                if (!this.targetElement || !this.overlayElement) {\n                    return;\n                }\n                this.toggleClasses(quadrant, width, height);\n                this.setState(quadrant);\n            },\n            onDragLeave: () => {\n                this.removeDropTarget();\n            },\n            onDragEnd: () => {\n                this.removeDropTarget();\n            },\n            onDrop: (e) => {\n                e.preventDefault();\n                const state = this._state;\n                this.removeDropTarget();\n                if (state) {\n                    // only stop the propagation of the event if we are dealing with it\n                    // which is only when the target has state\n                    e.stopPropagation();\n                    this._onDrop.fire({ position: state, nativeEvent: e });\n                }\n            },\n        }));\n    }\n    dispose() {\n        this.removeDropTarget();\n    }\n    toggleClasses(quadrant, width, height) {\n        var _a, _b, _c, _d;\n        if (!this.overlayElement) {\n            return;\n        }\n        const isSmallX = width < 100;\n        const isSmallY = height < 100;\n        const isLeft = quadrant === 'left';\n        const isRight = quadrant === 'right';\n        const isTop = quadrant === 'top';\n        const isBottom = quadrant === 'bottom';\n        const rightClass = !isSmallX && isRight;\n        const leftClass = !isSmallX && isLeft;\n        const topClass = !isSmallY && isTop;\n        const bottomClass = !isSmallY && isBottom;\n        let size = 0.5;\n        if (((_b = (_a = this.options.overlayModel) === null || _a === void 0 ? void 0 : _a.size) === null || _b === void 0 ? void 0 : _b.type) === 'percentage') {\n            size = clamp(this.options.overlayModel.size.value, 0, 100) / 100;\n        }\n        if (((_d = (_c = this.options.overlayModel) === null || _c === void 0 ? void 0 : _c.size) === null || _d === void 0 ? void 0 : _d.type) === 'pixels') {\n            if (rightClass || leftClass) {\n                size =\n                    clamp(0, this.options.overlayModel.size.value, width) /\n                        width;\n            }\n            if (topClass || bottomClass) {\n                size =\n                    clamp(0, this.options.overlayModel.size.value, height) /\n                        height;\n            }\n        }\n        const translate = (1 - size) / 2;\n        const scale = size;\n        let transform;\n        if (rightClass) {\n            transform = `translateX(${100 * translate}%) scaleX(${scale})`;\n        }\n        else if (leftClass) {\n            transform = `translateX(-${100 * translate}%) scaleX(${scale})`;\n        }\n        else if (topClass) {\n            transform = `translateY(-${100 * translate}%) scaleY(${scale})`;\n        }\n        else if (bottomClass) {\n            transform = `translateY(${100 * translate}%) scaleY(${scale})`;\n        }\n        else {\n            transform = '';\n        }\n        this.overlayElement.style.transform = transform;\n        toggleClass(this.overlayElement, 'small-right', isSmallX && isRight);\n        toggleClass(this.overlayElement, 'small-left', isSmallX && isLeft);\n        toggleClass(this.overlayElement, 'small-top', isSmallY && isTop);\n        toggleClass(this.overlayElement, 'small-bottom', isSmallY && isBottom);\n    }\n    setState(quadrant) {\n        switch (quadrant) {\n            case 'top':\n                this._state = 'top';\n                break;\n            case 'left':\n                this._state = 'left';\n                break;\n            case 'bottom':\n                this._state = 'bottom';\n                break;\n            case 'right':\n                this._state = 'right';\n                break;\n            case 'center':\n                this._state = 'center';\n                break;\n        }\n    }\n    calculateQuadrant(overlayType, x, y, width, height) {\n        var _a, _b, _c, _d, _e, _f;\n        const isPercentage = ((_a = this.options.overlayModel) === null || _a === void 0 ? void 0 : _a.activationSize) === undefined ||\n            ((_c = (_b = this.options.overlayModel) === null || _b === void 0 ? void 0 : _b.activationSize) === null || _c === void 0 ? void 0 : _c.type) === 'percentage';\n        const value = numberOrFallback((_f = (_e = (_d = this.options) === null || _d === void 0 ? void 0 : _d.overlayModel) === null || _e === void 0 ? void 0 : _e.activationSize) === null || _f === void 0 ? void 0 : _f.value, 20);\n        if (isPercentage) {\n            return calculateQuadrantAsPercentage(overlayType, x, y, width, height, value);\n        }\n        return calculateQuadrantAsPixels(overlayType, x, y, width, height, value);\n    }\n    removeDropTarget() {\n        if (this.targetElement) {\n            this._state = undefined;\n            this.element.removeChild(this.targetElement);\n            this.targetElement = undefined;\n            this.overlayElement = undefined;\n            this.element.classList.remove('drop-target');\n        }\n    }\n}\nexport function calculateQuadrantAsPercentage(overlayType, x, y, width, height, threshold) {\n    const xp = (100 * x) / width;\n    const yp = (100 * y) / height;\n    if (overlayType.has('left') && xp < threshold) {\n        return 'left';\n    }\n    if (overlayType.has('right') && xp > 100 - threshold) {\n        return 'right';\n    }\n    if (overlayType.has('top') && yp < threshold) {\n        return 'top';\n    }\n    if (overlayType.has('bottom') && yp > 100 - threshold) {\n        return 'bottom';\n    }\n    if (!overlayType.has('center')) {\n        return null;\n    }\n    return 'center';\n}\nexport function calculateQuadrantAsPixels(overlayType, x, y, width, height, threshold) {\n    if (overlayType.has('left') && x < threshold) {\n        return 'left';\n    }\n    if (overlayType.has('right') && x > width - threshold) {\n        return 'right';\n    }\n    if (overlayType.has('top') && y < threshold) {\n        return 'top';\n    }\n    if (overlayType.has('bottom') && y > height - threshold) {\n        return 'bottom';\n    }\n    if (!overlayType.has('center')) {\n        return null;\n    }\n    return 'center';\n}\n","import { CompositeDisposable, MutableDisposable, } from '../../../lifecycle';\nimport { Emitter } from '../../../events';\nimport { trackFocus } from '../../../dom';\nexport class ContentContainer extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor() {\n        super();\n        this.disposable = new MutableDisposable();\n        this._onDidFocus = new Emitter();\n        this.onDidFocus = this._onDidFocus.event;\n        this._onDidBlur = new Emitter();\n        this.onDidBlur = this._onDidBlur.event;\n        this._element = document.createElement('div');\n        this._element.className = 'content-container';\n        this._element.tabIndex = -1;\n        this.addDisposables(this._onDidFocus, this._onDidBlur);\n        // for hosted containers\n        // 1) register a drop target on the host\n        // 2) register window dragStart events to disable pointer events\n        // 3) register dragEnd events\n        // 4) register mouseMove events (if no buttons are present we take this as a dragEnd event)\n    }\n    show() {\n        this.element.style.display = '';\n    }\n    hide() {\n        this.element.style.display = 'none';\n    }\n    openPanel(panel) {\n        var _a;\n        if (this.panel === panel) {\n            return;\n        }\n        if (this.panel) {\n            if ((_a = this.panel.view) === null || _a === void 0 ? void 0 : _a.content) {\n                this._element.removeChild(this.panel.view.content.element);\n            }\n            this.panel = undefined;\n        }\n        this.panel = panel;\n        const disposable = new CompositeDisposable();\n        if (this.panel.view) {\n            const _onDidFocus = this.panel.view.content.onDidFocus;\n            const _onDidBlur = this.panel.view.content.onDidBlur;\n            const { onDidFocus, onDidBlur } = trackFocus(this._element);\n            disposable.addDisposables(onDidFocus(() => this._onDidFocus.fire()), onDidBlur(() => this._onDidBlur.fire()));\n            if (_onDidFocus) {\n                disposable.addDisposables(_onDidFocus(() => this._onDidFocus.fire()));\n            }\n            if (_onDidBlur) {\n                disposable.addDisposables(_onDidBlur(() => this._onDidBlur.fire()));\n            }\n            this._element.appendChild(this.panel.view.content.element);\n        }\n        this.disposable.value = disposable;\n    }\n    layout(_width, _height) {\n        // noop\n    }\n    closePanel() {\n        var _a, _b, _c;\n        if ((_c = (_b = (_a = this.panel) === null || _a === void 0 ? void 0 : _a.view) === null || _b === void 0 ? void 0 : _b.content) === null || _c === void 0 ? void 0 : _c.element) {\n            this._element.removeChild(this.panel.view.content.element);\n            this.panel = undefined;\n        }\n    }\n    dispose() {\n        this.disposable.dispose();\n        super.dispose();\n    }\n}\n","export var DockviewDropTargets;\n(function (DockviewDropTargets) {\n    DockviewDropTargets[DockviewDropTargets[\"Tab\"] = 0] = \"Tab\";\n    DockviewDropTargets[DockviewDropTargets[\"Panel\"] = 1] = \"Panel\";\n    DockviewDropTargets[DockviewDropTargets[\"TabContainer\"] = 2] = \"TabContainer\";\n    DockviewDropTargets[DockviewDropTargets[\"Edge\"] = 3] = \"Edge\";\n})(DockviewDropTargets || (DockviewDropTargets = {}));\n","import { getElementsByTagName } from '../dom';\nimport { addDisposableListener, Emitter } from '../events';\nimport { CompositeDisposable, MutableDisposable, } from '../lifecycle';\nexport class DragHandler extends CompositeDisposable {\n    constructor(el) {\n        super();\n        this.el = el;\n        this.disposable = new MutableDisposable();\n        this._onDragStart = new Emitter();\n        this.onDragStart = this._onDragStart.event;\n        this.iframes = [];\n        this.configure();\n    }\n    configure() {\n        this.addDisposables(this._onDragStart, addDisposableListener(this.el, 'dragstart', (event) => {\n            this.iframes = [\n                ...getElementsByTagName('iframe'),\n                ...getElementsByTagName('webview'),\n            ];\n            for (const iframe of this.iframes) {\n                iframe.style.pointerEvents = 'none';\n            }\n            this.el.classList.add('dv-dragged');\n            setTimeout(() => this.el.classList.remove('dv-dragged'), 0);\n            this.disposable.value = this.getData(event.dataTransfer);\n            if (event.dataTransfer) {\n                event.dataTransfer.effectAllowed = 'move';\n                /**\n                 * Although this is not used by dockview many third party dnd libraries will check\n                 * dataTransfer.types to determine valid drag events.\n                 *\n                 * For example: in react-dnd if dataTransfer.types is not set then the dragStart event will be cancelled\n                 * through .preventDefault(). Since this is applied globally to all drag events this would break dockviews\n                 * dnd logic. You can see the code at\n                 * https://github.com/react-dnd/react-dnd/blob/main/packages/backend-html5/src/HTML5BackendImpl.ts#L542\n                 */\n                event.dataTransfer.setData('text/plain', '__dockview_internal_drag_event__');\n            }\n        }), addDisposableListener(this.el, 'dragend', () => {\n            for (const iframe of this.iframes) {\n                iframe.style.pointerEvents = 'auto';\n            }\n            this.iframes = [];\n            this.disposable.dispose();\n        }));\n    }\n}\n","import { addDisposableListener, Emitter } from '../../../events';\nimport { CompositeDisposable } from '../../../lifecycle';\nimport { getPanelData, LocalSelectionTransfer, PanelTransfer, } from '../../../dnd/dataTransfer';\nimport { toggleClass } from '../../../dom';\nimport { DockviewDropTargets } from '../../types';\nimport { Droptarget } from '../../../dnd/droptarget';\nimport { DragHandler } from '../../../dnd/abstractDragHandler';\nexport class Tab extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor(panelId, accessor, group) {\n        super();\n        this.panelId = panelId;\n        this.accessor = accessor;\n        this.group = group;\n        this._onChanged = new Emitter();\n        this.onChanged = this._onChanged.event;\n        this._onDropped = new Emitter();\n        this.onDrop = this._onDropped.event;\n        this.addDisposables(this._onChanged, this._onDropped);\n        this._element = document.createElement('div');\n        this._element.className = 'tab';\n        this._element.tabIndex = 0;\n        this._element.draggable = true;\n        toggleClass(this.element, 'inactive-tab', true);\n        this.addDisposables(new (class Handler extends DragHandler {\n            constructor() {\n                super(...arguments);\n                this.panelTransfer = LocalSelectionTransfer.getInstance();\n            }\n            getData() {\n                this.panelTransfer.setData([new PanelTransfer(accessor.id, group.id, panelId)], PanelTransfer.prototype);\n                return {\n                    dispose: () => {\n                        this.panelTransfer.clearData(PanelTransfer.prototype);\n                    },\n                };\n            }\n            dispose() {\n                //\n            }\n        })(this._element));\n        this.addDisposables(addDisposableListener(this._element, 'mousedown', (event) => {\n            if (event.defaultPrevented) {\n                return;\n            }\n            /**\n             * TODO: alternative to stopPropagation\n             *\n             * I need to stop the event propagation here since otherwise it'll be intercepted by event handlers\n             * on the tabs-container. I cannot use event.preventDefault() since I need the on DragStart event to occur\n             */\n            event.stopPropagation();\n            this._onChanged.fire(event);\n        }));\n        this.droptarget = new Droptarget(this._element, {\n            acceptedTargetZones: ['center'],\n            canDisplayOverlay: (event, position) => {\n                if (this.group.locked) {\n                    return false;\n                }\n                const data = getPanelData();\n                if (data && this.accessor.id === data.viewId) {\n                    if (data.panelId === null &&\n                        data.groupId === this.group.id) {\n                        // don't allow group move to drop on self\n                        return false;\n                    }\n                    return this.panelId !== data.panelId;\n                }\n                return this.group.model.canDisplayOverlay(event, position, DockviewDropTargets.Tab);\n            },\n        });\n        this.addDisposables(this.droptarget.onDrop((event) => {\n            this._onDropped.fire(event);\n        }));\n    }\n    setActive(isActive) {\n        toggleClass(this.element, 'active-tab', isActive);\n        toggleClass(this.element, 'inactive-tab', !isActive);\n    }\n    setContent(part) {\n        if (this.content) {\n            this._element.removeChild(this.content.element);\n        }\n        this.content = part;\n        this._element.appendChild(this.content.element);\n    }\n    dispose() {\n        super.dispose();\n        this.droptarget.dispose();\n    }\n}\n","import { DragHandler } from './abstractDragHandler';\nimport { LocalSelectionTransfer, PanelTransfer } from './dataTransfer';\nimport { addGhostImage } from './ghost';\nexport class GroupDragHandler extends DragHandler {\n    constructor(element, accessorId, group) {\n        super(element);\n        this.accessorId = accessorId;\n        this.group = group;\n        this.panelTransfer = LocalSelectionTransfer.getInstance();\n    }\n    getData(dataTransfer) {\n        this.panelTransfer.setData([new PanelTransfer(this.accessorId, this.group.id, null)], PanelTransfer.prototype);\n        const style = window.getComputedStyle(this.el);\n        const bgColor = style.getPropertyValue('--dv-activegroup-visiblepanel-tab-background-color');\n        const color = style.getPropertyValue('--dv-activegroup-visiblepanel-tab-color');\n        if (dataTransfer) {\n            const ghostElement = document.createElement('div');\n            ghostElement.style.backgroundColor = bgColor;\n            ghostElement.style.color = color;\n            ghostElement.style.padding = '2px 8px';\n            ghostElement.style.height = '24px';\n            ghostElement.style.fontSize = '11px';\n            ghostElement.style.lineHeight = '20px';\n            ghostElement.style.borderRadius = '12px';\n            ghostElement.style.position = 'absolute';\n            ghostElement.textContent = `Multiple Panels (${this.group.size})`;\n            addGhostImage(dataTransfer, ghostElement);\n        }\n        return {\n            dispose: () => {\n                this.panelTransfer.clearData(PanelTransfer.prototype);\n            },\n        };\n    }\n    dispose() {\n        //\n    }\n}\n","import { addClasses, removeClasses } from '../dom';\nexport function addGhostImage(dataTransfer, ghostElement) {\n    // class dockview provides to force ghost image to be drawn on a different layer and prevent weird rendering issues\n    addClasses(ghostElement, 'dv-dragged');\n    document.body.appendChild(ghostElement);\n    dataTransfer.setDragImage(ghostElement, 0, 0);\n    setTimeout(() => {\n        removeClasses(ghostElement, 'dv-dragged');\n        ghostElement.remove();\n    }, 0);\n}\n","import { last } from '../../../array';\nimport { getPanelData } from '../../../dnd/dataTransfer';\nimport { Droptarget } from '../../../dnd/droptarget';\nimport { GroupDragHandler } from '../../../dnd/groupDragHandler';\nimport { addDisposableListener, Emitter } from '../../../events';\nimport { CompositeDisposable } from '../../../lifecycle';\nimport { DockviewDropTargets } from '../../types';\nexport class VoidContainer extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor(accessor, group) {\n        super();\n        this.accessor = accessor;\n        this.group = group;\n        this._onDrop = new Emitter();\n        this.onDrop = this._onDrop.event;\n        this._element = document.createElement('div');\n        this._element.className = 'void-container';\n        this._element.tabIndex = 0;\n        this._element.draggable = true;\n        this.addDisposables(this._onDrop, addDisposableListener(this._element, 'click', () => {\n            this.accessor.doSetGroupActive(this.group);\n        }));\n        const handler = new GroupDragHandler(this._element, accessor.id, group);\n        this.voidDropTarget = new Droptarget(this._element, {\n            acceptedTargetZones: ['center'],\n            canDisplayOverlay: (event, position) => {\n                var _a;\n                const data = getPanelData();\n                if (data && this.accessor.id === data.viewId) {\n                    if (data.panelId === null &&\n                        data.groupId === this.group.id) {\n                        // don't allow group move to drop on self\n                        return false;\n                    }\n                    // don't show the overlay if the tab being dragged is the last panel of this group\n                    return ((_a = last(this.group.panels)) === null || _a === void 0 ? void 0 : _a.id) !== data.panelId;\n                }\n                return group.model.canDisplayOverlay(event, position, DockviewDropTargets.Panel);\n            },\n        });\n        this.addDisposables(handler, this.voidDropTarget.onDrop((event) => {\n            this._onDrop.fire(event);\n        }), this.voidDropTarget);\n    }\n}\n","import { CompositeDisposable, } from '../../../lifecycle';\nimport { addDisposableListener, Emitter } from '../../../events';\nimport { Tab } from '../tab/tab';\nimport { VoidContainer } from './voidContainer';\nimport { toggleClass } from '../../../dom';\nexport class TabsContainer extends CompositeDisposable {\n    get panels() {\n        return this.tabs.map((_) => _.value.panelId);\n    }\n    get size() {\n        return this.tabs.length;\n    }\n    get height() {\n        return this._height;\n    }\n    set height(value) {\n        this._height = value;\n        if (typeof value !== 'number') {\n            this.element.style.removeProperty('--dv-tabs-and-actions-container-height');\n        }\n        else {\n            this.element.style.setProperty('--dv-tabs-and-actions-container-height', `${value}px`);\n        }\n    }\n    get hidden() {\n        return this._hidden;\n    }\n    set hidden(value) {\n        this._hidden = value;\n        this.element.style.display = value ? 'none' : '';\n    }\n    show() {\n        if (!this.hidden) {\n            this.element.style.display = '';\n        }\n    }\n    hide() {\n        this._element.style.display = 'none';\n    }\n    setActionElement(element) {\n        if (this.actions === element) {\n            return;\n        }\n        if (this.actions) {\n            this.actions.remove();\n            this.actions = undefined;\n        }\n        if (element) {\n            this.actionContainer.appendChild(element);\n            this.actions = element;\n        }\n    }\n    get element() {\n        return this._element;\n    }\n    isActive(tab) {\n        return (this.selectedIndex > -1 &&\n            this.tabs[this.selectedIndex].value === tab);\n    }\n    indexOf(id) {\n        return this.tabs.findIndex((tab) => tab.value.panelId === id);\n    }\n    constructor(accessor, group) {\n        super();\n        this.accessor = accessor;\n        this.group = group;\n        this.tabs = [];\n        this.selectedIndex = -1;\n        this._hidden = false;\n        this._onDrop = new Emitter();\n        this.onDrop = this._onDrop.event;\n        this.addDisposables(this._onDrop);\n        this._element = document.createElement('div');\n        this._element.className = 'tabs-and-actions-container';\n        this.height = accessor.options.tabHeight;\n        toggleClass(this._element, 'dv-full-width-single-tab', this.accessor.options.singleTabMode === 'fullwidth');\n        this.addDisposables(this.accessor.onDidAddPanel((e) => {\n            if (e.api.group === this.group) {\n                toggleClass(this._element, 'dv-single-tab', this.size === 1);\n            }\n        }), this.accessor.onDidRemovePanel((e) => {\n            if (e.api.group === this.group) {\n                toggleClass(this._element, 'dv-single-tab', this.size === 1);\n            }\n        }));\n        this.actionContainer = document.createElement('div');\n        this.actionContainer.className = 'action-container';\n        this.tabContainer = document.createElement('div');\n        this.tabContainer.className = 'tabs-container';\n        this.voidContainer = new VoidContainer(this.accessor, this.group);\n        this._element.appendChild(this.tabContainer);\n        this._element.appendChild(this.voidContainer.element);\n        this._element.appendChild(this.actionContainer);\n        this.addDisposables(this.voidContainer, this.voidContainer.onDrop((event) => {\n            this._onDrop.fire({\n                event: event.nativeEvent,\n                index: this.tabs.length,\n            });\n        }), addDisposableListener(this.tabContainer, 'mousedown', (event) => {\n            if (event.defaultPrevented) {\n                return;\n            }\n            const isLeftClick = event.button === 0;\n            if (isLeftClick) {\n                this.accessor.doSetGroupActive(this.group);\n            }\n        }));\n    }\n    setActive(_isGroupActive) {\n        // noop\n    }\n    addTab(tab, index = this.tabs.length) {\n        if (index < 0 || index > this.tabs.length) {\n            throw new Error('invalid location');\n        }\n        this.tabContainer.insertBefore(tab.value.element, this.tabContainer.children[index]);\n        this.tabs = [\n            ...this.tabs.slice(0, index),\n            tab,\n            ...this.tabs.slice(index),\n        ];\n        if (this.selectedIndex < 0) {\n            this.selectedIndex = index;\n        }\n    }\n    delete(id) {\n        const index = this.tabs.findIndex((tab) => tab.value.panelId === id);\n        const tabToRemove = this.tabs.splice(index, 1)[0];\n        const { value, disposable } = tabToRemove;\n        disposable.dispose();\n        value.element.remove();\n    }\n    setActivePanel(panel) {\n        this.tabs.forEach((tab) => {\n            const isActivePanel = panel.id === tab.value.panelId;\n            tab.value.setActive(isActivePanel);\n        });\n    }\n    openPanel(panel, index = this.tabs.length) {\n        var _a;\n        if (this.tabs.find((tab) => tab.value.panelId === panel.id)) {\n            return;\n        }\n        const tabToAdd = new Tab(panel.id, this.accessor, this.group);\n        if (!((_a = panel.view) === null || _a === void 0 ? void 0 : _a.tab)) {\n            throw new Error('invalid header component');\n        }\n        tabToAdd.setContent(panel.view.tab);\n        const disposable = CompositeDisposable.from(tabToAdd.onChanged((event) => {\n            var _a;\n            const alreadyFocused = panel.id === ((_a = this.group.model.activePanel) === null || _a === void 0 ? void 0 : _a.id) &&\n                this.group.model.isContentFocused;\n            const isLeftClick = event.button === 0;\n            if (!isLeftClick || event.defaultPrevented) {\n                return;\n            }\n            this.group.model.openPanel(panel, {\n                skipFocus: alreadyFocused,\n            });\n        }), tabToAdd.onDrop((event) => {\n            this._onDrop.fire({\n                event: event.nativeEvent,\n                index: this.tabs.findIndex((x) => x.value === tabToAdd),\n            });\n        }));\n        const value = { value: tabToAdd, disposable };\n        this.addTab(value, index);\n    }\n    closePanel(panel) {\n        this.delete(panel.id);\n    }\n    dispose() {\n        super.dispose();\n        this.tabs.forEach((tab) => {\n            tab.disposable.dispose();\n        });\n        this.tabs = [];\n    }\n}\n","import { DockviewApi } from '../api/component.api';\nimport { getPanelData } from '../dnd/dataTransfer';\nimport { Droptarget } from '../dnd/droptarget';\nimport { isAncestor, toggleClass } from '../dom';\nimport { addDisposableListener, Emitter } from '../events';\nimport { CompositeDisposable } from '../lifecycle';\nimport { ContentContainer, } from './components/panel/content';\nimport { TabsContainer, } from './components/titlebar/tabsContainer';\nimport { DockviewDropTargets } from './types';\nexport class DockviewGroupPanelModel extends CompositeDisposable {\n    get element() {\n        throw new Error('not supported');\n    }\n    get activePanel() {\n        return this._activePanel;\n    }\n    get locked() {\n        return this._locked;\n    }\n    set locked(value) {\n        this._locked = value;\n        toggleClass(this.container, 'locked-groupview', value);\n    }\n    get isActive() {\n        return this._isGroupActive;\n    }\n    get panels() {\n        return this._panels;\n    }\n    get size() {\n        return this._panels.length;\n    }\n    get isEmpty() {\n        return this._panels.length === 0;\n    }\n    get hasWatermark() {\n        return !!(this.watermark && this.container.contains(this.watermark.element));\n    }\n    get header() {\n        return this.tabsContainer;\n    }\n    get isContentFocused() {\n        if (!document.activeElement) {\n            return false;\n        }\n        return isAncestor(document.activeElement, this.contentContainer.element);\n    }\n    constructor(container, accessor, id, options, groupPanel) {\n        super();\n        this.container = container;\n        this.accessor = accessor;\n        this.id = id;\n        this.options = options;\n        this.groupPanel = groupPanel;\n        this._isGroupActive = false;\n        this._locked = false;\n        this.mostRecentlyUsed = [];\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._width = 0;\n        this._height = 0;\n        this._panels = [];\n        this._onMove = new Emitter();\n        this.onMove = this._onMove.event;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onDidAddPanel = new Emitter();\n        this.onDidAddPanel = this._onDidAddPanel.event;\n        this._onDidRemovePanel = new Emitter();\n        this.onDidRemovePanel = this._onDidRemovePanel.event;\n        this._onDidActivePanelChange = new Emitter();\n        this.onDidActivePanelChange = this._onDidActivePanelChange.event;\n        this.container.classList.add('groupview');\n        this.tabsContainer = new TabsContainer(this.accessor, this.groupPanel);\n        this.contentContainer = new ContentContainer();\n        this.dropTarget = new Droptarget(this.contentContainer.element, {\n            acceptedTargetZones: ['top', 'bottom', 'left', 'right', 'center'],\n            canDisplayOverlay: (event, position) => {\n                if (this.locked && position === 'center') {\n                    return false;\n                }\n                const data = getPanelData();\n                if (data && data.viewId === this.accessor.id) {\n                    if (data.groupId === this.id) {\n                        if (position === 'center') {\n                            // don't allow to drop on self for center position\n                            return false;\n                        }\n                        if (data.panelId === null) {\n                            // don't allow group move to drop anywhere on self\n                            return false;\n                        }\n                    }\n                    const groupHasOnePanelAndIsActiveDragElement = this._panels.length === 1 && data.groupId === this.id;\n                    return !groupHasOnePanelAndIsActiveDragElement;\n                }\n                return this.canDisplayOverlay(event, position, DockviewDropTargets.Panel);\n            },\n        });\n        container.append(this.tabsContainer.element, this.contentContainer.element);\n        this.header.hidden = !!options.hideHeader;\n        this.locked = !!options.locked;\n        this.addDisposables(this._onMove, this._onDidChange, this._onDidDrop, this._onDidAddPanel, this._onDidRemovePanel, this._onDidActivePanelChange, this.tabsContainer.onDrop((event) => {\n            this.handleDropEvent(event.event, 'center', event.index);\n        }), this.contentContainer.onDidFocus(() => {\n            this.accessor.doSetGroupActive(this.groupPanel, true);\n        }), this.contentContainer.onDidBlur(() => {\n            // noop\n        }), this.dropTarget.onDrop((event) => {\n            this.handleDropEvent(event.nativeEvent, event.position);\n        }));\n    }\n    initialize() {\n        var _a, _b;\n        if ((_a = this.options) === null || _a === void 0 ? void 0 : _a.panels) {\n            this.options.panels.forEach((panel) => {\n                this.doAddPanel(panel);\n            });\n        }\n        if ((_b = this.options) === null || _b === void 0 ? void 0 : _b.activePanel) {\n            this.openPanel(this.options.activePanel);\n        }\n        // must be run after the constructor otherwise this.parent may not be\n        // correctly initialized\n        this.setActive(this.isActive, true, true);\n        this.updateContainer();\n        if (this.accessor.options.createGroupControlElement) {\n            this._control = this.accessor.options.createGroupControlElement(this.groupPanel);\n            this.addDisposables(this._control);\n            this._control.init({\n                containerApi: new DockviewApi(this.accessor),\n                api: this.groupPanel.api,\n            });\n            this.tabsContainer.setActionElement(this._control.element);\n        }\n    }\n    indexOf(panel) {\n        return this.tabsContainer.indexOf(panel.id);\n    }\n    toJSON() {\n        var _a;\n        const result = {\n            views: this.tabsContainer.panels,\n            activeView: (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.id,\n            id: this.id,\n        };\n        if (this.locked) {\n            result.locked = true;\n        }\n        if (this.header.hidden) {\n            result.hideHeader = true;\n        }\n        return result;\n    }\n    moveToNext(options) {\n        if (!options) {\n            options = {};\n        }\n        if (!options.panel) {\n            options.panel = this.activePanel;\n        }\n        const index = options.panel ? this.panels.indexOf(options.panel) : -1;\n        let normalizedIndex;\n        if (index < this.panels.length - 1) {\n            normalizedIndex = index + 1;\n        }\n        else if (!options.suppressRoll) {\n            normalizedIndex = 0;\n        }\n        else {\n            return;\n        }\n        this.openPanel(this.panels[normalizedIndex]);\n    }\n    moveToPrevious(options) {\n        if (!options) {\n            options = {};\n        }\n        if (!options.panel) {\n            options.panel = this.activePanel;\n        }\n        if (!options.panel) {\n            return;\n        }\n        const index = this.panels.indexOf(options.panel);\n        let normalizedIndex;\n        if (index > 0) {\n            normalizedIndex = index - 1;\n        }\n        else if (!options.suppressRoll) {\n            normalizedIndex = this.panels.length - 1;\n        }\n        else {\n            return;\n        }\n        this.openPanel(this.panels[normalizedIndex]);\n    }\n    containsPanel(panel) {\n        return this.panels.includes(panel);\n    }\n    init(_params) {\n        //noop\n    }\n    update(_params) {\n        //noop\n    }\n    focus() {\n        var _a, _b;\n        (_b = (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.focus) === null || _b === void 0 ? void 0 : _b.call(_a);\n    }\n    openPanel(panel, options = {}) {\n        if (typeof options.index !== 'number' ||\n            options.index > this.panels.length) {\n            options.index = this.panels.length;\n        }\n        const skipSetPanelActive = !!options.skipSetPanelActive;\n        const skipSetGroupActive = !!options.skipSetGroupActive;\n        // ensure the group is updated before we fire any events\n        panel.updateParentGroup(this.groupPanel, true);\n        if (this._activePanel === panel) {\n            if (!skipSetGroupActive) {\n                this.accessor.doSetGroupActive(this.groupPanel);\n            }\n            return;\n        }\n        this.doAddPanel(panel, options.index, skipSetPanelActive);\n        if (!skipSetPanelActive) {\n            this.doSetActivePanel(panel);\n        }\n        if (!skipSetGroupActive) {\n            this.accessor.doSetGroupActive(this.groupPanel, !!options.skipFocus);\n        }\n        this.updateContainer();\n    }\n    removePanel(groupItemOrId) {\n        const id = typeof groupItemOrId === 'string'\n            ? groupItemOrId\n            : groupItemOrId.id;\n        const panelToRemove = this._panels.find((panel) => panel.id === id);\n        if (!panelToRemove) {\n            throw new Error('invalid operation');\n        }\n        return this._removePanel(panelToRemove);\n    }\n    closeAllPanels() {\n        if (this.panels.length > 0) {\n            // take a copy since we will be edting the array as we iterate through\n            const arrPanelCpy = [...this.panels];\n            for (const panel of arrPanelCpy) {\n                this.doClose(panel);\n            }\n        }\n        else {\n            this.accessor.removeGroup(this.groupPanel);\n        }\n    }\n    closePanel(panel) {\n        this.doClose(panel);\n    }\n    doClose(panel) {\n        this.accessor.removePanel(panel);\n    }\n    isPanelActive(panel) {\n        return this._activePanel === panel;\n    }\n    updateActions(element) {\n        this.tabsContainer.setActionElement(element);\n    }\n    setActive(isGroupActive, skipFocus = false, force = false) {\n        var _a, _b, _c, _d;\n        if (!force && this.isActive === isGroupActive) {\n            if (!skipFocus) {\n                (_b = (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.focus) === null || _b === void 0 ? void 0 : _b.call(_a);\n            }\n            return;\n        }\n        this._isGroupActive = isGroupActive;\n        toggleClass(this.container, 'active-group', isGroupActive);\n        toggleClass(this.container, 'inactive-group', !isGroupActive);\n        this.tabsContainer.setActive(this.isActive);\n        if (!this._activePanel && this.panels.length > 0) {\n            this.doSetActivePanel(this.panels[0]);\n        }\n        this.updateContainer();\n        if (isGroupActive) {\n            if (!skipFocus) {\n                (_d = (_c = this._activePanel) === null || _c === void 0 ? void 0 : _c.focus) === null || _d === void 0 ? void 0 : _d.call(_c);\n            }\n        }\n    }\n    layout(width, height) {\n        var _a;\n        this._width = width;\n        this._height = height;\n        this.contentContainer.layout(this._width, this._height);\n        if ((_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.layout) {\n            this._activePanel.layout(this._width, this._height);\n        }\n    }\n    _removePanel(panel) {\n        const isActivePanel = this._activePanel === panel;\n        this.doRemovePanel(panel);\n        if (isActivePanel && this.panels.length > 0) {\n            const nextPanel = this.mostRecentlyUsed[0];\n            this.openPanel(nextPanel);\n        }\n        if (this._activePanel && this.panels.length === 0) {\n            this.doSetActivePanel(undefined);\n        }\n        this.updateContainer();\n        return panel;\n    }\n    doRemovePanel(panel) {\n        const index = this.panels.indexOf(panel);\n        if (this._activePanel === panel) {\n            this.contentContainer.closePanel();\n        }\n        this.tabsContainer.delete(panel.id);\n        this._panels.splice(index, 1);\n        if (this.mostRecentlyUsed.includes(panel)) {\n            this.mostRecentlyUsed.splice(this.mostRecentlyUsed.indexOf(panel), 1);\n        }\n        this._onDidRemovePanel.fire({ panel });\n    }\n    doAddPanel(panel, index = this.panels.length, skipSetActive = false) {\n        const existingPanel = this._panels.indexOf(panel);\n        const hasExistingPanel = existingPanel > -1;\n        this.tabsContainer.openPanel(panel, index);\n        if (!skipSetActive) {\n            this.contentContainer.openPanel(panel);\n        }\n        this.tabsContainer.show();\n        this.contentContainer.show();\n        if (hasExistingPanel) {\n            // TODO - need to ensure ordering hasn't changed and if it has need to re-order this.panels\n            return;\n        }\n        this.updateMru(panel);\n        this.panels.splice(index, 0, panel);\n        this._onDidAddPanel.fire({ panel });\n    }\n    doSetActivePanel(panel) {\n        this._activePanel = panel;\n        if (panel) {\n            this.tabsContainer.setActivePanel(panel);\n            panel.layout(this._width, this._height);\n            this.updateMru(panel);\n            this._onDidActivePanelChange.fire({ panel });\n        }\n    }\n    updateMru(panel) {\n        if (this.mostRecentlyUsed.includes(panel)) {\n            this.mostRecentlyUsed.splice(this.mostRecentlyUsed.indexOf(panel), 1);\n        }\n        this.mostRecentlyUsed = [panel, ...this.mostRecentlyUsed];\n    }\n    updateContainer() {\n        var _a, _b;\n        toggleClass(this.container, 'empty', this.isEmpty);\n        this.panels.forEach((panel) => panel.updateParentGroup(this.groupPanel, this.isActive));\n        if (this.isEmpty && !this.watermark) {\n            const watermark = this.accessor.createWatermarkComponent();\n            watermark.init({\n                containerApi: new DockviewApi(this.accessor),\n                group: this.groupPanel,\n            });\n            this.watermark = watermark;\n            addDisposableListener(this.watermark.element, 'click', () => {\n                if (!this.isActive) {\n                    this.accessor.doSetGroupActive(this.groupPanel);\n                }\n            });\n            this.tabsContainer.hide();\n            this.contentContainer.element.appendChild(this.watermark.element);\n            this.watermark.updateParentGroup(this.groupPanel, true);\n        }\n        if (!this.isEmpty && this.watermark) {\n            this.watermark.element.remove();\n            (_b = (_a = this.watermark).dispose) === null || _b === void 0 ? void 0 : _b.call(_a);\n            this.watermark = undefined;\n            this.tabsContainer.show();\n        }\n    }\n    canDisplayOverlay(event, position, target) {\n        // custom overlay handler\n        if (this.accessor.options.showDndOverlay) {\n            return this.accessor.options.showDndOverlay({\n                nativeEvent: event,\n                target,\n                group: this.accessor.getPanel(this.id),\n                position,\n                getData: getPanelData,\n            });\n        }\n        return false;\n    }\n    handleDropEvent(event, position, index) {\n        const data = getPanelData();\n        if (data && data.viewId === this.accessor.id) {\n            if (data.panelId === null) {\n                // this is a group move dnd event\n                const { groupId } = data;\n                this._onMove.fire({\n                    target: position,\n                    groupId: groupId,\n                    index,\n                });\n                return;\n            }\n            const fromSameGroup = this.tabsContainer.indexOf(data.panelId) !== -1;\n            if (fromSameGroup && this.tabsContainer.size === 1) {\n                return;\n            }\n            const { groupId, panelId } = data;\n            const isSameGroup = this.id === groupId;\n            if (isSameGroup && !position) {\n                const oldIndex = this.tabsContainer.indexOf(panelId);\n                if (oldIndex === index) {\n                    return;\n                }\n            }\n            this._onMove.fire({\n                target: position,\n                groupId: data.groupId,\n                itemId: data.panelId,\n                index,\n            });\n        }\n        else {\n            this._onDidDrop.fire({\n                nativeEvent: event,\n                position,\n                index,\n                getData: () => getPanelData(),\n            });\n        }\n    }\n    dispose() {\n        var _a, _b;\n        super.dispose();\n        (_b = (_a = this.watermark) === null || _a === void 0 ? void 0 : _a.dispose) === null || _b === void 0 ? void 0 : _b.call(_a);\n        for (const panel of this.panels) {\n            panel.dispose();\n        }\n        this.dropTarget.dispose();\n        this.tabsContainer.dispose();\n        this.contentContainer.dispose();\n    }\n}\n","import { watchElementResize } from './dom';\nimport { CompositeDisposable } from './lifecycle';\nexport class Resizable extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor(parentElement) {\n        super();\n        if (parentElement) {\n            this._element = parentElement;\n        }\n        else {\n            this._element = document.createElement('div');\n            this._element.style.height = '100%';\n            this._element.style.width = '100%';\n            this._element.className = 'dv-resizable-container';\n        }\n        this.addDisposables(watchElementResize(this._element, (entry) => {\n            if (this.isDisposed) {\n                /**\n                 * resize is delayed through requestAnimationFrame so there is a small chance\n                 * the component has already been disposed of\n                 */\n                return;\n            }\n            const { width, height } = entry.contentRect;\n            this.layout(width, height);\n        }));\n    }\n}\n","import { Emitter, Event, TickDelayedEvent } from '../events';\nimport { getGridLocation, Gridview } from './gridview';\nimport { sequentialNumberGenerator } from '../math';\nimport { Sizing } from '../splitview/splitview';\nimport { Resizable } from '../resizable';\nconst nextLayoutId = sequentialNumberGenerator();\nexport function toTarget(direction) {\n    switch (direction) {\n        case 'left':\n            return 'left';\n        case 'right':\n            return 'right';\n        case 'above':\n            return 'top';\n        case 'below':\n            return 'bottom';\n        case 'within':\n        default:\n            return 'center';\n    }\n}\nexport class BaseGrid extends Resizable {\n    get id() {\n        return this._id;\n    }\n    get size() {\n        return this._groups.size;\n    }\n    get groups() {\n        return Array.from(this._groups.values()).map((_) => _.value);\n    }\n    get width() {\n        return this.gridview.width;\n    }\n    get height() {\n        return this.gridview.height;\n    }\n    get minimumHeight() {\n        return this.gridview.minimumHeight;\n    }\n    get maximumHeight() {\n        return this.gridview.maximumHeight;\n    }\n    get minimumWidth() {\n        return this.gridview.minimumWidth;\n    }\n    get maximumWidth() {\n        return this.gridview.maximumWidth;\n    }\n    get activeGroup() {\n        return this._activeGroup;\n    }\n    constructor(options) {\n        super(options.parentElement);\n        this._id = nextLayoutId.next();\n        this._groups = new Map();\n        this._onDidLayoutChange = new Emitter();\n        this.onDidLayoutChange = this._onDidLayoutChange.event;\n        this._onDidRemoveGroup = new Emitter();\n        this.onDidRemoveGroup = this._onDidRemoveGroup.event;\n        this._onDidAddGroup = new Emitter();\n        this.onDidAddGroup = this._onDidAddGroup.event;\n        this._onDidActiveGroupChange = new Emitter();\n        this.onDidActiveGroupChange = this._onDidActiveGroupChange.event;\n        this._bufferOnDidLayoutChange = new TickDelayedEvent();\n        this.gridview = new Gridview(!!options.proportionalLayout, options.styles, options.orientation);\n        this.element.appendChild(this.gridview.element);\n        this.layout(0, 0, true); // set some elements height/widths\n        this.addDisposables(this.gridview.onDidChange(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }));\n        this.addDisposables(Event.any(this.onDidAddGroup, this.onDidRemoveGroup, this.onDidActiveGroupChange)(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), this._bufferOnDidLayoutChange.onEvent(() => {\n            this._onDidLayoutChange.fire();\n        }), this._bufferOnDidLayoutChange);\n    }\n    setVisible(panel, visible) {\n        this.gridview.setViewVisible(getGridLocation(panel.element), visible);\n        this._onDidLayoutChange.fire();\n    }\n    isVisible(panel) {\n        return this.gridview.isViewVisible(getGridLocation(panel.element));\n    }\n    doAddGroup(group, location = [0], size) {\n        this.gridview.addView(group, size !== null && size !== void 0 ? size : Sizing.Distribute, location);\n        this._onDidAddGroup.fire(group);\n        this.doSetGroupActive(group);\n    }\n    doRemoveGroup(group, options) {\n        if (!this._groups.has(group.id)) {\n            throw new Error('invalid operation');\n        }\n        const item = this._groups.get(group.id);\n        const view = this.gridview.remove(group, Sizing.Distribute);\n        if (item && !(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n            item.disposable.dispose();\n            item.value.dispose();\n            this._groups.delete(group.id);\n        }\n        this._onDidRemoveGroup.fire(group);\n        if (!(options === null || options === void 0 ? void 0 : options.skipActive) && this._activeGroup === group) {\n            const groups = Array.from(this._groups.values());\n            this.doSetGroupActive(groups.length > 0 ? groups[0].value : undefined);\n        }\n        return view;\n    }\n    getPanel(id) {\n        var _a;\n        return (_a = this._groups.get(id)) === null || _a === void 0 ? void 0 : _a.value;\n    }\n    doSetGroupActive(group, skipFocus) {\n        var _a, _b, _c;\n        if (this._activeGroup === group) {\n            return;\n        }\n        if (this._activeGroup) {\n            this._activeGroup.setActive(false);\n            if (!skipFocus) {\n                (_b = (_a = this._activeGroup).focus) === null || _b === void 0 ? void 0 : _b.call(_a);\n            }\n        }\n        if (group) {\n            group.setActive(true);\n            if (!skipFocus) {\n                (_c = group.focus) === null || _c === void 0 ? void 0 : _c.call(group);\n            }\n        }\n        this._activeGroup = group;\n        this._onDidActiveGroupChange.fire(group);\n    }\n    removeGroup(group) {\n        this.doRemoveGroup(group);\n    }\n    moveToNext(options) {\n        var _a;\n        if (!options) {\n            options = {};\n        }\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.next(location)) === null || _a === void 0 ? void 0 : _a.view;\n        this.doSetGroupActive(next);\n    }\n    moveToPrevious(options) {\n        var _a;\n        if (!options) {\n            options = {};\n        }\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.previous(location)) === null || _a === void 0 ? void 0 : _a.view;\n        this.doSetGroupActive(next);\n    }\n    layout(width, height, forceResize) {\n        const different = forceResize || width !== this.width || height !== this.height;\n        if (!different) {\n            return;\n        }\n        this.gridview.element.style.height = `${height}px`;\n        this.gridview.element.style.width = `${width}px`;\n        this.gridview.layout(width, height);\n    }\n    dispose() {\n        super.dispose();\n        this._onDidActiveGroupChange.dispose();\n        this._onDidAddGroup.dispose();\n        this._onDidRemoveGroup.dispose();\n        this._onDidLayoutChange.dispose();\n        for (const group of this.groups) {\n            group.dispose();\n        }\n        this.gridview.dispose();\n    }\n}\n","import { Emitter } from '../events';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\n/**\n * A core api implementation that should be used across all panel-like objects\n */\nexport class PanelApiImpl extends CompositeDisposable {\n    //\n    get isFocused() {\n        return this._isFocused;\n    }\n    get isActive() {\n        return this._isActive;\n    }\n    get isVisible() {\n        return this._isVisible;\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    constructor(id) {\n        super();\n        this.id = id;\n        this._isFocused = false;\n        this._isActive = false;\n        this._isVisible = true;\n        this._width = 0;\n        this._height = 0;\n        this.panelUpdatesDisposable = new MutableDisposable();\n        this._onDidDimensionChange = new Emitter({\n            replay: true,\n        });\n        this.onDidDimensionsChange = this._onDidDimensionChange.event;\n        //\n        this._onDidChangeFocus = new Emitter({\n            replay: true,\n        });\n        this.onDidFocusChange = this._onDidChangeFocus.event;\n        //\n        this._onFocusEvent = new Emitter();\n        this.onFocusEvent = this._onFocusEvent.event;\n        //\n        this._onDidVisibilityChange = new Emitter({\n            replay: true,\n        });\n        this.onDidVisibilityChange = this._onDidVisibilityChange.event;\n        //\n        this._onVisibilityChange = new Emitter();\n        this.onVisibilityChange = this._onVisibilityChange.event;\n        //\n        this._onDidActiveChange = new Emitter({\n            replay: true,\n        });\n        this.onDidActiveChange = this._onDidActiveChange.event;\n        //\n        this._onActiveChange = new Emitter();\n        this.onActiveChange = this._onActiveChange.event;\n        //\n        this._onUpdateParameters = new Emitter();\n        this.onUpdateParameters = this._onUpdateParameters.event;\n        this.addDisposables(this.panelUpdatesDisposable, this._onDidDimensionChange, this._onDidChangeFocus, this._onDidVisibilityChange, this._onDidActiveChange, this._onFocusEvent, this._onActiveChange, this._onVisibilityChange, this._onUpdateParameters, this.onDidFocusChange((event) => {\n            this._isFocused = event.isFocused;\n        }), this.onDidActiveChange((event) => {\n            this._isActive = event.isActive;\n        }), this.onDidVisibilityChange((event) => {\n            this._isVisible = event.isVisible;\n        }), this.onDidDimensionsChange((event) => {\n            this._width = event.width;\n            this._height = event.height;\n        }));\n    }\n    initialize(panel) {\n        this.panelUpdatesDisposable.value = this._onUpdateParameters.event((parameters) => {\n            panel.update({\n                params: {\n                    params: parameters,\n                },\n            });\n        });\n    }\n    setVisible(isVisible) {\n        this._onVisibilityChange.fire({ isVisible });\n    }\n    setActive() {\n        this._onActiveChange.fire();\n    }\n    updateParameters(parameters) {\n        this._onUpdateParameters.fire(parameters);\n    }\n    dispose() {\n        super.dispose();\n    }\n}\n","import { Emitter } from '../events';\nimport { PanelApiImpl } from './panelApi';\nexport class SplitviewPanelApiImpl extends PanelApiImpl {\n    //\n    constructor(id) {\n        super(id);\n        this._onDidConstraintsChangeInternal = new Emitter();\n        this.onDidConstraintsChangeInternal = this._onDidConstraintsChangeInternal.event;\n        //\n        this._onDidConstraintsChange = new Emitter({\n            replay: true,\n        });\n        this.onDidConstraintsChange = this._onDidConstraintsChange.event;\n        //\n        this._onDidSizeChange = new Emitter();\n        this.onDidSizeChange = this._onDidSizeChange.event;\n        this.addDisposables(this._onDidConstraintsChangeInternal, this._onDidConstraintsChange, this._onDidSizeChange);\n    }\n    setConstraints(value) {\n        this._onDidConstraintsChangeInternal.fire(value);\n    }\n    setSize(event) {\n        this._onDidSizeChange.fire(event);\n    }\n}\n","import { Emitter } from '../events';\nimport { SplitviewPanelApiImpl } from './splitviewPanelApi';\nexport class PaneviewPanelApiImpl extends SplitviewPanelApiImpl {\n    set pane(pane) {\n        this._pane = pane;\n    }\n    constructor(id) {\n        super(id);\n        this._onDidExpansionChange = new Emitter({\n            replay: true,\n        });\n        this.onDidExpansionChange = this._onDidExpansionChange.event;\n        this._onMouseEnter = new Emitter({});\n        this.onMouseEnter = this._onMouseEnter.event;\n        this._onMouseLeave = new Emitter({});\n        this.onMouseLeave = this._onMouseLeave.event;\n        this.addDisposables(this._onDidExpansionChange, this._onMouseEnter, this._onMouseLeave);\n    }\n    setExpanded(isExpanded) {\n        var _a;\n        (_a = this._pane) === null || _a === void 0 ? void 0 : _a.setExpanded(isExpanded);\n    }\n    get isExpanded() {\n        var _a;\n        return !!((_a = this._pane) === null || _a === void 0 ? void 0 : _a.isExpanded());\n    }\n}\n","import { trackFocus } from '../dom';\nimport { CompositeDisposable } from '../lifecycle';\nexport class BasePanelView extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    get params() {\n        var _a;\n        return (_a = this._params) === null || _a === void 0 ? void 0 : _a.params;\n    }\n    constructor(id, component, api) {\n        super();\n        this.id = id;\n        this.component = component;\n        this.api = api;\n        this._height = 0;\n        this._width = 0;\n        this._element = document.createElement('div');\n        this._element.tabIndex = -1;\n        this._element.style.outline = 'none';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n        this._element.style.overflow = 'hidden';\n        const { onDidFocus, onDidBlur } = trackFocus(this._element);\n        this.addDisposables(this.api, onDidFocus(() => {\n            this.api._onDidChangeFocus.fire({ isFocused: true });\n        }), onDidBlur(() => {\n            this.api._onDidChangeFocus.fire({ isFocused: false });\n        }));\n    }\n    focus() {\n        this.api._onFocusEvent.fire();\n    }\n    layout(width, height) {\n        this._width = width;\n        this._height = height;\n        this.api._onDidDimensionChange.fire({ width, height });\n        if (this.part) {\n            if (this._params) {\n                this.part.update(this._params.params);\n            }\n        }\n    }\n    init(parameters) {\n        this._params = parameters;\n        this.part = this.getComponent();\n    }\n    update(event) {\n        var _a, _b;\n        this._params = Object.assign(Object.assign({}, this._params), { params: Object.assign(Object.assign({}, (_a = this._params) === null || _a === void 0 ? void 0 : _a.params), event.params) });\n        (_b = this.part) === null || _b === void 0 ? void 0 : _b.update({ params: this._params.params });\n    }\n    toJSON() {\n        var _a, _b;\n        const params = (_b = (_a = this._params) === null || _a === void 0 ? void 0 : _a.params) !== null && _b !== void 0 ? _b : {};\n        return {\n            id: this.id,\n            component: this.component,\n            params: Object.keys(params).length > 0 ? params : undefined,\n        };\n    }\n    dispose() {\n        var _a;\n        super.dispose();\n        this.api.dispose();\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import { PaneviewPanelApiImpl } from '../api/paneviewPanelApi';\nimport { addClasses, removeClasses } from '../dom';\nimport { addDisposableListener, Emitter } from '../events';\nimport { BasePanelView, } from '../gridview/basePanelView';\nimport { Orientation } from '../splitview/splitview';\nexport class PaneviewPanel extends BasePanelView {\n    set orientation(value) {\n        this._orientation = value;\n    }\n    get orientation() {\n        return this._orientation;\n    }\n    get minimumSize() {\n        const headerSize = this.headerSize;\n        const expanded = this.isExpanded();\n        const minimumBodySize = expanded ? this._minimumBodySize : 0;\n        return headerSize + minimumBodySize;\n    }\n    get maximumSize() {\n        const headerSize = this.headerSize;\n        const expanded = this.isExpanded();\n        const maximumBodySize = expanded ? this._maximumBodySize : 0;\n        return headerSize + maximumBodySize;\n    }\n    get size() {\n        return this._size;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    set orthogonalSize(size) {\n        this._orthogonalSize = size;\n    }\n    get minimumBodySize() {\n        return this._minimumBodySize;\n    }\n    set minimumBodySize(value) {\n        this._minimumBodySize = typeof value === 'number' ? value : 0;\n    }\n    get maximumBodySize() {\n        return this._maximumBodySize;\n    }\n    set maximumBodySize(value) {\n        this._maximumBodySize =\n            typeof value === 'number' ? value : Number.POSITIVE_INFINITY;\n    }\n    get headerVisible() {\n        return this._headerVisible;\n    }\n    set headerVisible(value) {\n        this._headerVisible = value;\n        this.header.style.display = value ? '' : 'none';\n    }\n    constructor(id, component, headerComponent, orientation, isExpanded, isHeaderVisible) {\n        super(id, component, new PaneviewPanelApiImpl(id));\n        this.headerComponent = headerComponent;\n        this._onDidChangeExpansionState = new Emitter({ replay: true });\n        this.onDidChangeExpansionState = this._onDidChangeExpansionState.event;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this.headerSize = 22;\n        this._orthogonalSize = 0;\n        this._size = 0;\n        this._minimumBodySize = 100;\n        this._maximumBodySize = Number.POSITIVE_INFINITY;\n        this._isExpanded = false;\n        this.expandedSize = 0;\n        this.api.pane = this; // TODO cannot use 'this' before 'super'\n        this.api.initialize(this);\n        this._isExpanded = isExpanded;\n        this._headerVisible = isHeaderVisible;\n        this._onDidChangeExpansionState.fire(this.isExpanded()); // initialize value\n        this._orientation = orientation;\n        this.element.classList.add('pane');\n        this.addDisposables(this.api.onDidSizeChange((event) => {\n            this._onDidChange.fire({ size: event.size });\n        }), addDisposableListener(this.element, 'mouseenter', (ev) => {\n            this.api._onMouseEnter.fire(ev);\n        }), addDisposableListener(this.element, 'mouseleave', (ev) => {\n            this.api._onMouseLeave.fire(ev);\n        }));\n        this.addDisposables(this._onDidChangeExpansionState, this.onDidChangeExpansionState((isPanelExpanded) => {\n            this.api._onDidExpansionChange.fire({\n                isExpanded: isPanelExpanded,\n            });\n        }), this.api.onDidFocusChange((e) => {\n            if (!this.header) {\n                return;\n            }\n            if (e.isFocused) {\n                addClasses(this.header, 'focused');\n            }\n            else {\n                removeClasses(this.header, 'focused');\n            }\n        }));\n        this.renderOnce();\n    }\n    setVisible(isVisible) {\n        this.api._onDidVisibilityChange.fire({ isVisible });\n    }\n    setActive(isActive) {\n        this.api._onDidActiveChange.fire({ isActive });\n    }\n    isExpanded() {\n        return this._isExpanded;\n    }\n    setExpanded(expanded) {\n        if (this._isExpanded === expanded) {\n            return;\n        }\n        this._isExpanded = expanded;\n        if (expanded) {\n            if (this.animationTimer) {\n                clearTimeout(this.animationTimer);\n            }\n            if (this.body) {\n                this.element.appendChild(this.body);\n            }\n        }\n        else {\n            this.animationTimer = setTimeout(() => {\n                var _a;\n                (_a = this.body) === null || _a === void 0 ? void 0 : _a.remove();\n            }, 200);\n        }\n        this._onDidChange.fire(expanded ? { size: this.width } : {});\n        this._onDidChangeExpansionState.fire(expanded);\n    }\n    layout(size, orthogonalSize) {\n        this._size = size;\n        this._orthogonalSize = orthogonalSize;\n        const [width, height] = this.orientation === Orientation.HORIZONTAL\n            ? [size, orthogonalSize]\n            : [orthogonalSize, size];\n        if (this.isExpanded()) {\n            this.expandedSize = width;\n        }\n        super.layout(width, height);\n    }\n    init(parameters) {\n        var _a, _b;\n        super.init(parameters);\n        if (typeof parameters.minimumBodySize === 'number') {\n            this.minimumBodySize = parameters.minimumBodySize;\n        }\n        if (typeof parameters.maximumBodySize === 'number') {\n            this.maximumBodySize = parameters.maximumBodySize;\n        }\n        this.bodyPart = this.getBodyComponent();\n        this.headerPart = this.getHeaderComponent();\n        this.bodyPart.init(Object.assign(Object.assign({}, parameters), { api: this.api }));\n        this.headerPart.init(Object.assign(Object.assign({}, parameters), { api: this.api }));\n        (_a = this.body) === null || _a === void 0 ? void 0 : _a.append(this.bodyPart.element);\n        (_b = this.header) === null || _b === void 0 ? void 0 : _b.append(this.headerPart.element);\n        if (typeof parameters.isExpanded === 'boolean') {\n            this.setExpanded(parameters.isExpanded);\n        }\n    }\n    toJSON() {\n        const params = this._params;\n        return Object.assign(Object.assign({}, super.toJSON()), { headerComponent: this.headerComponent, title: params.title });\n    }\n    renderOnce() {\n        this.header = document.createElement('div');\n        this.header.tabIndex = 0;\n        this.header.className = 'pane-header';\n        this.header.style.height = `${this.headerSize}px`;\n        this.header.style.lineHeight = `${this.headerSize}px`;\n        this.header.style.minHeight = `${this.headerSize}px`;\n        this.header.style.maxHeight = `${this.headerSize}px`;\n        this.element.appendChild(this.header);\n        this.body = document.createElement('div');\n        this.body.className = 'pane-body';\n        this.element.appendChild(this.body);\n    }\n    // TODO slightly hacky by-pass of the component to create a body and header component\n    getComponent() {\n        return {\n            update: (params) => {\n                var _a, _b;\n                (_a = this.bodyPart) === null || _a === void 0 ? void 0 : _a.update({ params });\n                (_b = this.headerPart) === null || _b === void 0 ? void 0 : _b.update({ params });\n            },\n            dispose: () => {\n                var _a, _b;\n                (_a = this.bodyPart) === null || _a === void 0 ? void 0 : _a.dispose();\n                (_b = this.headerPart) === null || _b === void 0 ? void 0 : _b.dispose();\n            },\n        };\n    }\n}\n","import { PaneviewApi } from '../api/component.api';\nimport { DragHandler } from '../dnd/abstractDragHandler';\nimport { getPaneData, LocalSelectionTransfer, PaneTransfer, } from '../dnd/dataTransfer';\nimport { Droptarget } from '../dnd/droptarget';\nimport { Emitter } from '../events';\nimport { PaneviewPanel, } from './paneviewPanel';\nexport class DraggablePaneviewPanel extends PaneviewPanel {\n    constructor(accessor, id, component, headerComponent, orientation, isExpanded, disableDnd) {\n        super(id, component, headerComponent, orientation, isExpanded, true);\n        this.accessor = accessor;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        if (!disableDnd) {\n            this.initDragFeatures();\n        }\n    }\n    initDragFeatures() {\n        if (!this.header) {\n            return;\n        }\n        const id = this.id;\n        const accessorId = this.accessor.id;\n        this.header.draggable = true;\n        this.handler = new (class PaneDragHandler extends DragHandler {\n            getData() {\n                LocalSelectionTransfer.getInstance().setData([new PaneTransfer(accessorId, id)], PaneTransfer.prototype);\n                return {\n                    dispose: () => {\n                        LocalSelectionTransfer.getInstance().clearData(PaneTransfer.prototype);\n                    },\n                };\n            }\n        })(this.header);\n        this.target = new Droptarget(this.element, {\n            acceptedTargetZones: ['top', 'bottom'],\n            overlayModel: {\n                activationSize: { type: 'percentage', value: 50 },\n            },\n            canDisplayOverlay: (event) => {\n                const data = getPaneData();\n                if (data) {\n                    if (data.paneId !== this.id &&\n                        data.viewId === this.accessor.id) {\n                        return true;\n                    }\n                }\n                if (this.accessor.options.showDndOverlay) {\n                    return this.accessor.options.showDndOverlay({\n                        nativeEvent: event,\n                        getData: getPaneData,\n                        panel: this,\n                    });\n                }\n                return false;\n            },\n        });\n        this.addDisposables(this._onDidDrop, this.handler, this.target, this.target.onDrop((event) => {\n            this.onDrop(event);\n        }));\n    }\n    onDrop(event) {\n        const data = getPaneData();\n        if (!data || data.viewId !== this.accessor.id) {\n            // if there is no local drag event for this panel\n            // or if the drag event was creating by another Paneview instance\n            this._onDidDrop.fire(Object.assign(Object.assign({}, event), { panel: this, api: new PaneviewApi(this.accessor), getData: getPaneData }));\n            return;\n        }\n        const containerApi = this._params\n            .containerApi;\n        const panelId = data.paneId;\n        const existingPanel = containerApi.getPanel(panelId);\n        if (!existingPanel) {\n            // if the panel doesn't exist\n            this._onDidDrop.fire(Object.assign(Object.assign({}, event), { panel: this, getData: getPaneData, api: new PaneviewApi(this.accessor) }));\n            return;\n        }\n        const allPanels = containerApi.panels;\n        const fromIndex = allPanels.indexOf(existingPanel);\n        let toIndex = containerApi.panels.indexOf(this);\n        if (event.position === 'left' || event.position === 'top') {\n            toIndex = Math.max(0, toIndex - 1);\n        }\n        if (event.position === 'right' || event.position === 'bottom') {\n            if (fromIndex > toIndex) {\n                toIndex++;\n            }\n            toIndex = Math.min(allPanels.length - 1, toIndex);\n        }\n        containerApi.movePanel(fromIndex, toIndex);\n    }\n}\n","import { Emitter } from '../events';\nimport { PanelApiImpl } from './panelApi';\nexport class GridviewPanelApiImpl extends PanelApiImpl {\n    constructor(id, panel) {\n        super(id);\n        this._onDidConstraintsChangeInternal = new Emitter();\n        this.onDidConstraintsChangeInternal = this._onDidConstraintsChangeInternal.event;\n        this._onDidConstraintsChange = new Emitter({\n            replay: true,\n        });\n        this.onDidConstraintsChange = this._onDidConstraintsChange.event;\n        this._onDidSizeChange = new Emitter();\n        this.onDidSizeChange = this._onDidSizeChange.event;\n        this.addDisposables(this._onDidConstraintsChangeInternal, this._onDidConstraintsChange, this._onDidSizeChange);\n        if (panel) {\n            this.initialize(panel);\n        }\n    }\n    setConstraints(value) {\n        this._onDidConstraintsChangeInternal.fire(value);\n    }\n    setSize(event) {\n        this._onDidSizeChange.fire(event);\n    }\n}\n","import { BasePanelView, } from './basePanelView';\nimport { GridviewPanelApiImpl, } from '../api/gridviewPanelApi';\nimport { Emitter } from '../events';\nexport class GridviewPanel extends BasePanelView {\n    get priority() {\n        return this._priority;\n    }\n    get snap() {\n        return this._snap;\n    }\n    get minimumWidth() {\n        const width = typeof this._minimumWidth === 'function'\n            ? this._minimumWidth()\n            : this._minimumWidth;\n        if (width !== this._evaluatedMinimumWidth) {\n            this._evaluatedMinimumWidth = width;\n            this.updateConstraints();\n        }\n        return width;\n    }\n    get minimumHeight() {\n        const height = typeof this._minimumHeight === 'function'\n            ? this._minimumHeight()\n            : this._minimumHeight;\n        if (height !== this._evaluatedMinimumHeight) {\n            this._evaluatedMinimumHeight = height;\n            this.updateConstraints();\n        }\n        return height;\n    }\n    get maximumHeight() {\n        const height = typeof this._maximumHeight === 'function'\n            ? this._maximumHeight()\n            : this._maximumHeight;\n        if (height !== this._evaluatedMaximumHeight) {\n            this._evaluatedMaximumHeight = height;\n            this.updateConstraints();\n        }\n        return height;\n    }\n    get maximumWidth() {\n        const width = typeof this._maximumWidth === 'function'\n            ? this._maximumWidth()\n            : this._maximumWidth;\n        if (width !== this._evaluatedMaximumWidth) {\n            this._evaluatedMaximumWidth = width;\n            this.updateConstraints();\n        }\n        return width;\n    }\n    get isActive() {\n        return this.api.isActive;\n    }\n    constructor(id, component, options) {\n        super(id, component, new GridviewPanelApiImpl(id));\n        this._evaluatedMinimumWidth = 0;\n        this._evaluatedMaximumWidth = Number.MAX_SAFE_INTEGER;\n        this._evaluatedMinimumHeight = 0;\n        this._evaluatedMaximumHeight = Number.MAX_SAFE_INTEGER;\n        this._minimumWidth = 0;\n        this._minimumHeight = 0;\n        this._maximumWidth = Number.MAX_SAFE_INTEGER;\n        this._maximumHeight = Number.MAX_SAFE_INTEGER;\n        this._snap = false;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        if (typeof (options === null || options === void 0 ? void 0 : options.minimumWidth) === 'number') {\n            this._minimumWidth = options.minimumWidth;\n        }\n        if (typeof (options === null || options === void 0 ? void 0 : options.maximumWidth) === 'number') {\n            this._maximumWidth = options.maximumWidth;\n        }\n        if (typeof (options === null || options === void 0 ? void 0 : options.minimumHeight) === 'number') {\n            this._minimumHeight = options.minimumHeight;\n        }\n        if (typeof (options === null || options === void 0 ? void 0 : options.maximumHeight) === 'number') {\n            this._maximumHeight = options.maximumHeight;\n        }\n        this.api.initialize(this); // TODO: required to by-pass 'super before this' requirement\n        this.addDisposables(this._onDidChange, this.api.onVisibilityChange((event) => {\n            const { isVisible } = event;\n            const { accessor } = this._params;\n            accessor.setVisible(this, isVisible);\n        }), this.api.onActiveChange(() => {\n            const { accessor } = this._params;\n            accessor.setActive(this);\n        }), this.api.onDidConstraintsChangeInternal((event) => {\n            if (typeof event.minimumWidth === 'number' ||\n                typeof event.minimumWidth === 'function') {\n                this._minimumWidth = event.minimumWidth;\n            }\n            if (typeof event.minimumHeight === 'number' ||\n                typeof event.minimumHeight === 'function') {\n                this._minimumHeight = event.minimumHeight;\n            }\n            if (typeof event.maximumWidth === 'number' ||\n                typeof event.maximumWidth === 'function') {\n                this._maximumWidth = event.maximumWidth;\n            }\n            if (typeof event.maximumHeight === 'number' ||\n                typeof event.maximumHeight === 'function') {\n                this._maximumHeight = event.maximumHeight;\n            }\n        }), this.api.onDidSizeChange((event) => {\n            this._onDidChange.fire({\n                height: event.height,\n                width: event.width,\n            });\n        }));\n    }\n    setVisible(isVisible) {\n        this.api._onDidVisibilityChange.fire({ isVisible });\n    }\n    setActive(isActive) {\n        this.api._onDidActiveChange.fire({ isActive });\n    }\n    init(parameters) {\n        if (parameters.maximumHeight) {\n            this._maximumHeight = parameters.maximumHeight;\n        }\n        if (parameters.minimumHeight) {\n            this._minimumHeight = parameters.minimumHeight;\n        }\n        if (parameters.maximumWidth) {\n            this._maximumWidth = parameters.maximumWidth;\n        }\n        if (parameters.minimumWidth) {\n            this._minimumWidth = parameters.minimumWidth;\n        }\n        this._priority = parameters.priority;\n        this._snap = !!parameters.snap;\n        super.init(parameters);\n        if (typeof parameters.isVisible === 'boolean') {\n            this.setVisible(parameters.isVisible);\n        }\n    }\n    updateConstraints() {\n        this.api._onDidConstraintsChange.fire({\n            minimumWidth: this._evaluatedMinimumWidth,\n            maximumWidth: this._evaluatedMaximumWidth,\n            minimumHeight: this._evaluatedMinimumHeight,\n            maximumHeight: this._evaluatedMaximumHeight,\n        });\n    }\n    toJSON() {\n        const state = super.toJSON();\n        const maximum = (value) => value === Number.MAX_SAFE_INTEGER ? undefined : value;\n        const minimum = (value) => (value <= 0 ? undefined : value);\n        return Object.assign(Object.assign({}, state), { minimumHeight: minimum(this.minimumHeight), maximumHeight: maximum(this.maximumHeight), minimumWidth: minimum(this.minimumWidth), maximumWidth: maximum(this.maximumWidth), snap: this.snap, priority: this.priority });\n    }\n}\n","import { DockviewGroupPanelModel, } from './dockviewGroupPanelModel';\nimport { GridviewPanel } from '../gridview/gridviewPanel';\nexport class DockviewGroupPanel extends GridviewPanel {\n    get panels() {\n        return this._model.panels;\n    }\n    get activePanel() {\n        return this._model.activePanel;\n    }\n    get size() {\n        return this._model.size;\n    }\n    get model() {\n        return this._model;\n    }\n    get locked() {\n        return this._model.locked;\n    }\n    set locked(value) {\n        this._model.locked = value;\n    }\n    get header() {\n        return this._model.header;\n    }\n    constructor(accessor, id, options) {\n        super(id, 'groupview_default', {\n            minimumHeight: 100,\n            minimumWidth: 100,\n        });\n        this._model = new DockviewGroupPanelModel(this.element, accessor, id, options, this);\n    }\n    initialize() {\n        this._model.initialize();\n    }\n    setActive(isActive) {\n        super.setActive(isActive);\n        this.model.setActive(isActive);\n    }\n    layout(width, height) {\n        super.layout(width, height);\n        this.model.layout(width, height);\n    }\n    getComponent() {\n        return this._model;\n    }\n    toJSON() {\n        // TODO fix typing\n        return this.model.toJSON();\n    }\n}\n","import { Emitter } from '../events';\nimport { GridviewPanelApiImpl } from './gridviewPanelApi';\nimport { MutableDisposable } from '../lifecycle';\nexport class DockviewPanelApiImpl extends GridviewPanelApiImpl {\n    get title() {\n        return this.panel.title;\n    }\n    get isGroupActive() {\n        var _a;\n        return !!((_a = this.group) === null || _a === void 0 ? void 0 : _a.isActive);\n    }\n    set group(value) {\n        const isOldGroupActive = this.isGroupActive;\n        this._group = value;\n        this._onDidGroupChange.fire();\n        if (this._group) {\n            this.disposable.value = this._group.api.onDidActiveChange(() => {\n                this._onDidActiveGroupChange.fire();\n            });\n            if (this.isGroupActive !== isOldGroupActive) {\n                this._onDidActiveGroupChange.fire();\n            }\n        }\n    }\n    get group() {\n        return this._group;\n    }\n    constructor(panel, group) {\n        super(panel.id);\n        this.panel = panel;\n        this._onDidTitleChange = new Emitter();\n        this.onDidTitleChange = this._onDidTitleChange.event;\n        this._onDidActiveGroupChange = new Emitter();\n        this.onDidActiveGroupChange = this._onDidActiveGroupChange.event;\n        this._onDidGroupChange = new Emitter();\n        this.onDidGroupChange = this._onDidGroupChange.event;\n        this.disposable = new MutableDisposable();\n        this.initialize(panel);\n        this._group = group;\n        this.addDisposables(this.disposable, this._onDidTitleChange, this._onDidGroupChange, this._onDidActiveGroupChange);\n    }\n    setTitle(title) {\n        this.panel.update({ params: { title } });\n    }\n    close() {\n        this.group.model.closePanel(this.panel);\n    }\n}\n","import { DockviewPanelApiImpl, } from '../api/dockviewPanelApi';\nimport { CompositeDisposable } from '../lifecycle';\nexport class DockviewPanel extends CompositeDisposable {\n    get params() {\n        return this._params;\n    }\n    get title() {\n        return this._title;\n    }\n    get group() {\n        return this._group;\n    }\n    constructor(id, accessor, containerApi, group, view) {\n        super();\n        this.id = id;\n        this.containerApi = containerApi;\n        this.view = view;\n        this._title = '';\n        this._group = group;\n        this.api = new DockviewPanelApiImpl(this, this._group);\n        this.addDisposables(this.api.onActiveChange(() => {\n            accessor.setActivePanel(this);\n        }), this.api.onDidSizeChange((event) => {\n            // forward the resize event to the group since if you want to resize a panel\n            // you are actually just resizing the panels parent which is the group\n            this.group.api.setSize(event);\n        }));\n    }\n    init(params) {\n        var _a;\n        this._params = params.params;\n        this.setTitle(params.title);\n        (_a = this.view) === null || _a === void 0 ? void 0 : _a.init(Object.assign(Object.assign({}, params), { api: this.api, containerApi: this.containerApi }));\n    }\n    focus() {\n        this.api._onFocusEvent.fire();\n    }\n    toJSON() {\n        return {\n            id: this.id,\n            contentComponent: this.view.contentComponent,\n            tabComponent: this.view.tabComponent,\n            params: Object.keys(this._params || {}).length > 0\n                ? this._params\n                : undefined,\n            title: this.title,\n        };\n    }\n    setTitle(title) {\n        var _a, _b;\n        const didTitleChange = title !== ((_a = this._params) === null || _a === void 0 ? void 0 : _a.title);\n        if (didTitleChange) {\n            this._title = title;\n            (_b = this.view) === null || _b === void 0 ? void 0 : _b.update({\n                params: {\n                    params: this._params,\n                    title: this.title,\n                },\n            });\n            this.api._onDidTitleChange.fire({ title });\n        }\n    }\n    update(event) {\n        var _a;\n        const params = event.params;\n        this._params = Object.assign(Object.assign({}, (this._params || {})), event.params.params);\n        if (params.title !== this.title) {\n            this._title = params.title;\n            this.api._onDidTitleChange.fire({ title: this.title });\n        }\n        (_a = this.view) === null || _a === void 0 ? void 0 : _a.update({\n            params: {\n                params: this._params,\n                title: this.title,\n            },\n        });\n    }\n    updateParentGroup(group, isGroupActive) {\n        this._group = group;\n        this.api.group = group;\n        const isPanelVisible = this._group.model.isPanelActive(this);\n        this.api._onDidActiveChange.fire({\n            isActive: isGroupActive && isPanelVisible,\n        });\n        this.api._onDidVisibilityChange.fire({\n            isVisible: isPanelVisible,\n        });\n        this.view.updateParentGroup(this._group, this._group.model.isPanelActive(this));\n    }\n    layout(width, height) {\n        var _a;\n        // the obtain the correct dimensions of the content panel we must deduct the tab height\n        this.api._onDidDimensionChange.fire({\n            width,\n            height: height - (this.group.model.header.height || 0),\n        });\n        (_a = this.view) === null || _a === void 0 ? void 0 : _a.layout(width, height);\n    }\n    dispose() {\n        var _a;\n        this.api.dispose();\n        (_a = this.view) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","const createSvgElementFromPath = (params) => {\n    const svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n    svg.setAttributeNS(null, 'height', params.height);\n    svg.setAttributeNS(null, 'width', params.width);\n    svg.setAttributeNS(null, 'viewBox', params.viewbox);\n    svg.setAttributeNS(null, 'aria-hidden', 'false');\n    svg.setAttributeNS(null, 'focusable', 'false');\n    svg.classList.add('dockview-svg');\n    const path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n    path.setAttributeNS(null, 'd', params.path);\n    svg.appendChild(path);\n    return svg;\n};\nexport const createCloseButton = () => createSvgElementFromPath({\n    width: '11',\n    height: '11',\n    viewbox: '0 0 28 28',\n    path: 'M2.1 27.3L0 25.2L11.55 13.65L0 2.1L2.1 0L13.65 11.55L25.2 0L27.3 2.1L15.75 13.65L27.3 25.2L25.2 27.3L13.65 15.75L2.1 27.3Z',\n});\nexport const createExpandMoreButton = () => createSvgElementFromPath({\n    width: '11',\n    height: '11',\n    viewbox: '0 0 24 15',\n    path: 'M12 14.15L0 2.15L2.15 0L12 9.9L21.85 0.0499992L24 2.2L12 14.15Z',\n});\nexport const createChevronRightButton = () => createSvgElementFromPath({\n    width: '11',\n    height: '11',\n    viewbox: '0 0 15 25',\n    path: 'M2.15 24.1L0 21.95L9.9 12.05L0 2.15L2.15 0L14.2 12.05L2.15 24.1Z',\n});\n","import { CompositeDisposable } from '../../../lifecycle';\nimport { addDisposableListener } from '../../../events';\nimport { createCloseButton } from '../../../svg';\nexport class DefaultTab extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor() {\n        super();\n        //\n        this.params = {};\n        this._element = document.createElement('div');\n        this._element.className = 'default-tab';\n        //\n        this._content = document.createElement('div');\n        this._content.className = 'tab-content';\n        //\n        this._actionContainer = document.createElement('div');\n        this._actionContainer.className = 'action-container';\n        //\n        this._list = document.createElement('ul');\n        this._list.className = 'tab-list';\n        //\n        this.action = document.createElement('div');\n        this.action.className = 'tab-action';\n        this.action.appendChild(createCloseButton());\n        //\n        this._element.appendChild(this._content);\n        this._element.appendChild(this._actionContainer);\n        this._actionContainer.appendChild(this._list);\n        this._list.appendChild(this.action);\n        //\n        this.addDisposables(addDisposableListener(this._actionContainer, 'mousedown', (ev) => {\n            ev.preventDefault();\n        }));\n        this.render();\n    }\n    update(event) {\n        this.params = Object.assign(Object.assign({}, this.params), event.params);\n        this.render();\n    }\n    focus() {\n        //noop\n    }\n    init(params) {\n        this.params = params;\n        this._content.textContent = params.title;\n        addDisposableListener(this.action, 'click', (ev) => {\n            ev.preventDefault(); //\n            this.params.api.close();\n        });\n    }\n    onGroupChange(_group) {\n        this.render();\n    }\n    onPanelVisibleChange(_isPanelVisible) {\n        this.render();\n    }\n    layout(_width, _height) {\n        // noop\n    }\n    render() {\n        if (this._content.textContent !== this.params.title) {\n            this._content.textContent = this.params.title;\n        }\n    }\n}\n","export function createComponent(id, componentName, components = {}, frameworkComponents = {}, createFrameworkComponent, fallback) {\n    const Component = typeof componentName === 'string'\n        ? components[componentName]\n        : undefined;\n    const FrameworkComponent = typeof componentName === 'string'\n        ? frameworkComponents[componentName]\n        : undefined;\n    if (Component && FrameworkComponent) {\n        throw new Error(`Cannot create '${id}'. component '${componentName}' registered as both a component and frameworkComponent`);\n    }\n    if (FrameworkComponent) {\n        if (!createFrameworkComponent) {\n            throw new Error(`Cannot create '${id}' for framework component '${componentName}'. you must register a frameworkPanelWrapper to use framework components`);\n        }\n        return createFrameworkComponent.createComponent(id, componentName, FrameworkComponent);\n    }\n    if (!Component) {\n        if (fallback) {\n            return fallback();\n        }\n        throw new Error(`Cannot create '${id}', no component '${componentName}' provided`);\n    }\n    return new Component(id, componentName);\n}\n","import { DefaultTab } from './components/tab/defaultTab';\nimport { createComponent } from '../panel/componentFactory';\nexport class DockviewPanelModel {\n    get content() {\n        return this._content;\n    }\n    get tab() {\n        return this._tab;\n    }\n    constructor(accessor, id, contentComponent, tabComponent) {\n        var _a;\n        this.accessor = accessor;\n        this.id = id;\n        this.contentComponent = contentComponent;\n        this.tabComponent = tabComponent;\n        this._group = null;\n        this._isPanelVisible = null;\n        this._content = this.createContentComponent(this.id, contentComponent);\n        this._tab =\n            (_a = this.createTabComponent(this.id, tabComponent)) !== null && _a !== void 0 ? _a : new DefaultTab();\n    }\n    init(params) {\n        this.content.init(Object.assign(Object.assign({}, params), { tab: this.tab }));\n        this.tab.init(params);\n    }\n    updateParentGroup(group, isPanelVisible) {\n        if (group !== this._group) {\n            this._group = group;\n            if (this._content.onGroupChange) {\n                this._content.onGroupChange(group);\n            }\n            if (this._tab.onGroupChange) {\n                this._tab.onGroupChange(group);\n            }\n        }\n        if (isPanelVisible !== this._isPanelVisible) {\n            this._isPanelVisible = isPanelVisible;\n            if (this._content.onPanelVisibleChange) {\n                this._content.onPanelVisibleChange(isPanelVisible);\n            }\n            if (this._tab.onPanelVisibleChange) {\n                this._tab.onPanelVisibleChange(isPanelVisible);\n            }\n        }\n    }\n    layout(width, height) {\n        var _a, _b;\n        (_b = (_a = this.content).layout) === null || _b === void 0 ? void 0 : _b.call(_a, width, height);\n    }\n    update(event) {\n        var _a, _b, _c, _d;\n        (_b = (_a = this.content).update) === null || _b === void 0 ? void 0 : _b.call(_a, event);\n        (_d = (_c = this.tab).update) === null || _d === void 0 ? void 0 : _d.call(_c, event);\n    }\n    dispose() {\n        var _a, _b, _c, _d;\n        (_b = (_a = this.content).dispose) === null || _b === void 0 ? void 0 : _b.call(_a);\n        (_d = (_c = this.tab).dispose) === null || _d === void 0 ? void 0 : _d.call(_c);\n    }\n    createContentComponent(id, componentName) {\n        var _a;\n        return createComponent(id, componentName, this.accessor.options.components || {}, this.accessor.options.frameworkComponents, (_a = this.accessor.options.frameworkComponentFactory) === null || _a === void 0 ? void 0 : _a.content);\n    }\n    createTabComponent(id, componentName) {\n        var _a;\n        return createComponent(id, componentName, this.accessor.options.tabComponents || {}, this.accessor.options.frameworkTabComponents, (_a = this.accessor.options.frameworkComponentFactory) === null || _a === void 0 ? void 0 : _a.tab, () => new DefaultTab());\n    }\n}\n","import { DockviewPanel } from './dockviewPanel';\nimport { createComponent } from '../panel/componentFactory';\nimport { DefaultTab } from './components/tab/defaultTab';\nimport { DockviewPanelModel } from './dockviewPanelModel';\nimport { DockviewApi } from '../api/component.api';\nexport class DefaultDockviewDeserialzier {\n    constructor(layout) {\n        this.layout = layout;\n    }\n    fromJSON(panelData, group) {\n        var _a, _b, _c;\n        const panelId = panelData.id;\n        const params = panelData.params;\n        const title = panelData.title;\n        const viewData = panelData.view;\n        const contentComponent = viewData\n            ? viewData.content.id\n            : panelData.contentComponent || 'unknown';\n        const tabComponent = viewData\n            ? (_a = viewData.tab) === null || _a === void 0 ? void 0 : _a.id\n            : panelData.tabComponent;\n        let tab;\n        if (tabComponent) {\n            tab = createComponent(panelId, tabComponent, this.layout.options.tabComponents, this.layout.options.frameworkTabComponents, (_b = this.layout.options.frameworkComponentFactory) === null || _b === void 0 ? void 0 : _b.tab, () => new DefaultTab());\n        }\n        else if (this.layout.options.defaultTabComponent) {\n            tab = createComponent(panelId, this.layout.options.defaultTabComponent, this.layout.options.tabComponents, this.layout.options.frameworkTabComponents, (_c = this.layout.options.frameworkComponentFactory) === null || _c === void 0 ? void 0 : _c.tab, () => new DefaultTab());\n        }\n        else {\n            tab = new DefaultTab();\n        }\n        const view = new DockviewPanelModel(this.layout, panelId, contentComponent, tabComponent);\n        const panel = new DockviewPanel(panelId, this.layout, new DockviewApi(this.layout), group, view);\n        panel.init({\n            title: title || panelId,\n            params: params || {},\n        });\n        return panel;\n    }\n}\n","import { addDisposableListener } from '../../../events';\nimport { toggleClass } from '../../../dom';\nimport { CompositeDisposable } from '../../../lifecycle';\nimport { createCloseButton } from '../../../svg';\nexport class Watermark extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor() {\n        super();\n        this._element = document.createElement('div');\n        this._element.className = 'watermark';\n        const title = document.createElement('div');\n        title.className = 'watermark-title';\n        const emptySpace = document.createElement('span');\n        emptySpace.style.flexGrow = '1';\n        const content = document.createElement('div');\n        content.className = 'watermark-content';\n        this._element.appendChild(title);\n        this._element.appendChild(content);\n        const actionsContainer = document.createElement('div');\n        actionsContainer.className = 'actions-container';\n        const closeAnchor = document.createElement('div');\n        closeAnchor.className = 'close-action';\n        closeAnchor.appendChild(createCloseButton());\n        actionsContainer.appendChild(closeAnchor);\n        title.appendChild(emptySpace);\n        title.appendChild(actionsContainer);\n        this.addDisposables(addDisposableListener(closeAnchor, 'click', (ev) => {\n            var _a;\n            ev.preventDefault();\n            if (this._group) {\n                (_a = this._api) === null || _a === void 0 ? void 0 : _a.removeGroup(this._group);\n            }\n        }));\n    }\n    update(_event) {\n        // noop\n    }\n    focus() {\n        // noop\n    }\n    layout(_width, _height) {\n        // noop\n    }\n    init(_params) {\n        this._api = _params.containerApi;\n        this.render();\n    }\n    updateParentGroup(group, _visible) {\n        this._group = group;\n        this.render();\n    }\n    dispose() {\n        super.dispose();\n    }\n    render() {\n        const isOneGroup = !!(this._api && this._api.size <= 1);\n        toggleClass(this.element, 'has-actions', isOneGroup);\n    }\n}\n","import { getRelativeLocation, getGridLocation, } from '../gridview/gridview';\nimport { directionToPosition, Droptarget } from '../dnd/droptarget';\nimport { tail, sequenceEquals } from '../array';\nimport { DockviewPanel } from './dockviewPanel';\nimport { CompositeDisposable } from '../lifecycle';\nimport { Event, Emitter } from '../events';\nimport { Watermark } from './components/watermark/watermark';\nimport { DockviewDropTargets, } from './types';\nimport { sequentialNumberGenerator } from '../math';\nimport { DefaultDockviewDeserialzier } from './deserializer';\nimport { createComponent } from '../panel/componentFactory';\nimport { isGroupOptionsWithGroup, isGroupOptionsWithPanel, isPanelOptionsWithGroup, isPanelOptionsWithPanel, } from './options';\nimport { BaseGrid, toTarget, } from '../gridview/baseComponentGridview';\nimport { DockviewApi } from '../api/component.api';\nimport { Orientation, Sizing } from '../splitview/splitview';\nimport { DockviewGroupPanel } from './dockviewGroupPanel';\nimport { DockviewPanelModel } from './dockviewPanelModel';\nimport { getPanelData } from '../dnd/dataTransfer';\nexport class DockviewComponent extends BaseGrid {\n    get orientation() {\n        return this.gridview.orientation;\n    }\n    get totalPanels() {\n        return this.panels.length;\n    }\n    get panels() {\n        return this.groups.flatMap((group) => group.panels);\n    }\n    get options() {\n        return this._options;\n    }\n    get activePanel() {\n        const activeGroup = this.activeGroup;\n        if (!activeGroup) {\n            return undefined;\n        }\n        return activeGroup.activePanel;\n    }\n    set tabHeight(height) {\n        this.options.tabHeight = height;\n        this._groups.forEach((value) => {\n            value.value.model.header.height = height;\n        });\n    }\n    get tabHeight() {\n        return this.options.tabHeight;\n    }\n    constructor(options) {\n        super({\n            proportionalLayout: true,\n            orientation: options.orientation || Orientation.HORIZONTAL,\n            styles: options.styles,\n            parentElement: options.parentElement,\n        });\n        this.nextGroupId = sequentialNumberGenerator();\n        this._deserializer = new DefaultDockviewDeserialzier(this);\n        this.watermark = null;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onDidRemovePanel = new Emitter();\n        this.onDidRemovePanel = this._onDidRemovePanel.event;\n        this._onDidAddPanel = new Emitter();\n        this.onDidAddPanel = this._onDidAddPanel.event;\n        this._onDidLayoutFromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutFromJSON.event;\n        this._onDidActivePanelChange = new Emitter();\n        this.onDidActivePanelChange = this._onDidActivePanelChange.event;\n        this.element.classList.add('dv-dockview');\n        this.addDisposables(this._onDidDrop, Event.any(this.onDidAddGroup, this.onDidRemoveGroup)(() => {\n            this.updateWatermark();\n        }), Event.any(this.onDidAddPanel, this.onDidRemovePanel, this.onDidActivePanelChange)(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }));\n        this._options = options;\n        if (!this.options.components) {\n            this.options.components = {};\n        }\n        if (!this.options.frameworkComponents) {\n            this.options.frameworkComponents = {};\n        }\n        if (!this.options.frameworkTabComponents) {\n            this.options.frameworkTabComponents = {};\n        }\n        if (!this.options.tabComponents) {\n            this.options.tabComponents = {};\n        }\n        if (!this.options.watermarkComponent &&\n            !this.options.watermarkFrameworkComponent) {\n            this.options.watermarkComponent = Watermark;\n        }\n        const dropTarget = new Droptarget(this.element, {\n            canDisplayOverlay: (event, position) => {\n                const data = getPanelData();\n                if (data) {\n                    if (data.viewId !== this.id) {\n                        return false;\n                    }\n                    return true;\n                }\n                if (this.options.showDndOverlay) {\n                    return this.options.showDndOverlay({\n                        nativeEvent: event,\n                        position: position,\n                        target: DockviewDropTargets.Edge,\n                        getData: getPanelData,\n                    });\n                }\n                return false;\n            },\n            acceptedTargetZones: ['top', 'bottom', 'left', 'right'],\n            overlayModel: {\n                activationSize: { type: 'pixels', value: 10 },\n                size: { type: 'pixels', value: 20 },\n            },\n        });\n        this.addDisposables(dropTarget, dropTarget.onDrop((event) => {\n            const data = getPanelData();\n            if (data) {\n                this.moveGroupOrPanel(this.orthogonalize(event.position), data.groupId, data.panelId || undefined, 'center');\n            }\n            else {\n                this._onDidDrop.fire(Object.assign(Object.assign({}, event), { api: this._api, group: null, getData: getPanelData }));\n            }\n        }));\n        this._api = new DockviewApi(this);\n        this.updateWatermark();\n    }\n    orthogonalize(position) {\n        switch (position) {\n            case 'top':\n            case 'bottom':\n                if (this.gridview.orientation === Orientation.HORIZONTAL) {\n                    // we need to add to a vertical splitview but the current root is a horizontal splitview.\n                    // insert a vertical splitview at the root level and add the existing view as a child\n                    this.gridview.insertOrthogonalSplitviewAtRoot();\n                }\n                break;\n            case 'left':\n            case 'right':\n                if (this.gridview.orientation === Orientation.VERTICAL) {\n                    // we need to add to a horizontal splitview but the current root is a vertical splitview.\n                    // insert a horiziontal splitview at the root level and add the existing view as a child\n                    this.gridview.insertOrthogonalSplitviewAtRoot();\n                }\n                break;\n            default:\n                break;\n        }\n        switch (position) {\n            case 'top':\n            case 'left':\n                return this.createGroupAtLocation([0]); // insert into first position\n            case 'bottom':\n            case 'right':\n                return this.createGroupAtLocation([this.gridview.length]); // insert into last position\n            default:\n                throw new Error(`unsupported position ${position}`);\n        }\n    }\n    updateOptions(options) {\n        const hasOrientationChanged = typeof options.orientation === 'string' &&\n            this.gridview.orientation !== options.orientation;\n        this._options = Object.assign(Object.assign({}, this.options), options);\n        if (hasOrientationChanged) {\n            this.gridview.orientation = options.orientation;\n        }\n        this.layout(this.gridview.width, this.gridview.height, true);\n    }\n    focus() {\n        var _a;\n        (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    getGroupPanel(id) {\n        return this.panels.find((panel) => panel.id === id);\n    }\n    setActivePanel(panel) {\n        this.doSetGroupActive(panel.group);\n        panel.group.model.openPanel(panel);\n    }\n    moveToNext(options = {}) {\n        var _a;\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        if (options.includePanel && options.group) {\n            if (options.group.activePanel !==\n                options.group.panels[options.group.panels.length - 1]) {\n                options.group.model.moveToNext({ suppressRoll: true });\n                return;\n            }\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.next(location)) === null || _a === void 0 ? void 0 : _a.view;\n        this.doSetGroupActive(next);\n    }\n    moveToPrevious(options = {}) {\n        var _a;\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        if (options.includePanel && options.group) {\n            if (options.group.activePanel !== options.group.panels[0]) {\n                options.group.model.moveToPrevious({ suppressRoll: true });\n                return;\n            }\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.previous(location)) === null || _a === void 0 ? void 0 : _a.view;\n        if (next) {\n            this.doSetGroupActive(next);\n        }\n    }\n    /**\n     * Serialize the current state of the layout\n     *\n     * @returns A JSON respresentation of the layout\n     */\n    toJSON() {\n        var _a;\n        const data = this.gridview.serialize();\n        const panels = this.panels.reduce((collection, panel) => {\n            collection[panel.id] = panel.toJSON();\n            return collection;\n        }, {});\n        return {\n            grid: data,\n            panels,\n            activeGroup: (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.id,\n            options: { tabHeight: this.tabHeight },\n        };\n    }\n    fromJSON(data) {\n        this.clear();\n        const { grid, panels, options, activeGroup } = data;\n        if (typeof (options === null || options === void 0 ? void 0 : options.tabHeight) === 'number') {\n            this.tabHeight = options.tabHeight;\n        }\n        if (grid.root.type !== 'branch' || !Array.isArray(grid.root.data)) {\n            throw new Error('root must be of type branch');\n        }\n        this.gridview.deserialize(grid, {\n            fromJSON: (node) => {\n                const { id, locked, hideHeader, views, activeView } = node.data;\n                const group = this.createGroup({\n                    id,\n                    locked: !!locked,\n                    hideHeader: !!hideHeader,\n                });\n                this._onDidAddGroup.fire(group);\n                for (const child of views) {\n                    const panel = this._deserializer.fromJSON(panels[child], group);\n                    const isActive = typeof activeView === 'string' &&\n                        activeView === panel.id;\n                    group.model.openPanel(panel, {\n                        skipSetPanelActive: !isActive,\n                        skipSetGroupActive: true,\n                    });\n                }\n                if (!group.activePanel && group.panels.length > 0) {\n                    group.model.openPanel(group.panels[group.panels.length - 1], {\n                        skipSetGroupActive: true,\n                    });\n                }\n                return group;\n            },\n        });\n        if (typeof activeGroup === 'string') {\n            const panel = this.getPanel(activeGroup);\n            if (panel) {\n                this.doSetGroupActive(panel);\n            }\n        }\n        this.gridview.layout(this.width, this.height);\n        this._onDidLayoutFromJSON.fire();\n    }\n    clear() {\n        const groups = Array.from(this._groups.values()).map((_) => _.value);\n        const hasActiveGroup = !!this.activeGroup;\n        const hasActivePanel = !!this.activePanel;\n        for (const group of groups) {\n            // remove the group will automatically remove the panels\n            this.removeGroup(group, true);\n        }\n        if (hasActiveGroup) {\n            this.doSetGroupActive(undefined);\n        }\n        if (hasActivePanel) {\n            this._onDidActivePanelChange.fire(undefined);\n        }\n        this.gridview.clear();\n    }\n    closeAllGroups() {\n        for (const entry of this._groups.entries()) {\n            const [_, group] = entry;\n            group.value.model.closeAllPanels();\n        }\n    }\n    addPanel(options) {\n        var _a, _b;\n        if (this.panels.find((_) => _.id === options.id)) {\n            throw new Error(`panel with id ${options.id} already exists`);\n        }\n        let referenceGroup;\n        if (options.position) {\n            if (isPanelOptionsWithPanel(options.position)) {\n                const referencePanel = typeof options.position.referencePanel === 'string'\n                    ? this.getGroupPanel(options.position.referencePanel)\n                    : options.position.referencePanel;\n                if (!referencePanel) {\n                    throw new Error(`referencePanel ${options.position.referencePanel} does not exist`);\n                }\n                referenceGroup = this.findGroup(referencePanel);\n            }\n            else if (isPanelOptionsWithGroup(options.position)) {\n                referenceGroup =\n                    typeof options.position.referenceGroup === 'string'\n                        ? (_a = this._groups.get(options.position.referenceGroup)) === null || _a === void 0 ? void 0 : _a.value\n                        : options.position.referenceGroup;\n                if (!referenceGroup) {\n                    throw new Error(`referencePanel ${options.position.referenceGroup} does not exist`);\n                }\n            }\n            else {\n                const group = this.orthogonalize(directionToPosition(options.position.direction));\n                const panel = this.createPanel(options, group);\n                group.model.openPanel(panel);\n                return panel;\n            }\n        }\n        else {\n            referenceGroup = this.activeGroup;\n        }\n        let panel;\n        if (referenceGroup) {\n            const target = toTarget(((_b = options.position) === null || _b === void 0 ? void 0 : _b.direction) || 'within');\n            if (target === 'center') {\n                panel = this.createPanel(options, referenceGroup);\n                referenceGroup.model.openPanel(panel);\n            }\n            else {\n                const location = getGridLocation(referenceGroup.element);\n                const relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n                const group = this.createGroupAtLocation(relativeLocation);\n                panel = this.createPanel(options, group);\n                group.model.openPanel(panel);\n            }\n        }\n        else {\n            const group = this.createGroupAtLocation();\n            panel = this.createPanel(options, group);\n            group.model.openPanel(panel);\n        }\n        return panel;\n    }\n    removePanel(panel, options = {\n        removeEmptyGroup: true,\n        skipDispose: false,\n    }) {\n        const group = panel.group;\n        if (!group) {\n            throw new Error(`cannot remove panel ${panel.id}. it's missing a group.`);\n        }\n        group.model.removePanel(panel);\n        panel.dispose();\n        if (group.size === 0 && options.removeEmptyGroup) {\n            this.removeGroup(group);\n        }\n    }\n    createWatermarkComponent() {\n        var _a;\n        return createComponent('watermark-id', 'watermark-name', this.options.watermarkComponent\n            ? { 'watermark-name': this.options.watermarkComponent }\n            : {}, this.options.watermarkFrameworkComponent\n            ? { 'watermark-name': this.options.watermarkFrameworkComponent }\n            : {}, (_a = this.options.frameworkComponentFactory) === null || _a === void 0 ? void 0 : _a.watermark);\n    }\n    updateWatermark() {\n        var _a, _b;\n        if (this.groups.length === 0) {\n            if (!this.watermark) {\n                this.watermark = this.createWatermarkComponent();\n                this.watermark.init({\n                    containerApi: new DockviewApi(this),\n                });\n                const watermarkContainer = document.createElement('div');\n                watermarkContainer.className = 'dv-watermark-container';\n                watermarkContainer.appendChild(this.watermark.element);\n                this.element.appendChild(watermarkContainer);\n            }\n        }\n        else if (this.watermark) {\n            this.watermark.element.parentElement.remove();\n            (_b = (_a = this.watermark).dispose) === null || _b === void 0 ? void 0 : _b.call(_a);\n            this.watermark = null;\n        }\n    }\n    addGroup(options) {\n        var _a;\n        const group = this.createGroup();\n        if (options) {\n            let referenceGroup;\n            if (isGroupOptionsWithPanel(options)) {\n                const referencePanel = typeof options.referencePanel === 'string'\n                    ? this.panels.find((panel) => panel.id === options.referencePanel)\n                    : options.referencePanel;\n                if (!referencePanel) {\n                    throw new Error(`reference panel ${options.referencePanel} does not exist`);\n                }\n                referenceGroup = this.findGroup(referencePanel);\n                if (!referenceGroup) {\n                    throw new Error(`reference group for reference panel ${options.referencePanel} does not exist`);\n                }\n            }\n            else if (isGroupOptionsWithGroup(options)) {\n                referenceGroup =\n                    typeof options.referenceGroup === 'string'\n                        ? (_a = this._groups.get(options.referenceGroup)) === null || _a === void 0 ? void 0 : _a.value\n                        : options.referenceGroup;\n                if (!referenceGroup) {\n                    throw new Error(`reference group ${options.referenceGroup} does not exist`);\n                }\n            }\n            else {\n                const group = this.orthogonalize(directionToPosition(options.direction));\n                return group;\n            }\n            const target = toTarget(options.direction || 'within');\n            const location = getGridLocation(referenceGroup.element);\n            const relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n            this.doAddGroup(group, relativeLocation);\n            return group;\n        }\n        else {\n            this.doAddGroup(group);\n            return group;\n        }\n    }\n    removeGroup(group, skipActive = false) {\n        const panels = [...group.panels]; // reassign since group panels will mutate\n        for (const panel of panels) {\n            this.removePanel(panel, {\n                removeEmptyGroup: false,\n                skipDispose: false,\n            });\n        }\n        super.doRemoveGroup(group, { skipActive });\n    }\n    moveGroupOrPanel(referenceGroup, groupId, itemId, target, index) {\n        var _a;\n        const sourceGroup = groupId\n            ? (_a = this._groups.get(groupId)) === null || _a === void 0 ? void 0 : _a.value\n            : undefined;\n        if (itemId === undefined) {\n            if (sourceGroup) {\n                this.moveGroup(sourceGroup, referenceGroup, target);\n            }\n            return;\n        }\n        if (!target || target === 'center') {\n            const groupItem = (sourceGroup === null || sourceGroup === void 0 ? void 0 : sourceGroup.model.removePanel(itemId)) ||\n                this.panels.find((panel) => panel.id === itemId);\n            if (!groupItem) {\n                throw new Error(`No panel with id ${itemId}`);\n            }\n            if ((sourceGroup === null || sourceGroup === void 0 ? void 0 : sourceGroup.model.size) === 0) {\n                this.doRemoveGroup(sourceGroup);\n            }\n            referenceGroup.model.openPanel(groupItem, { index });\n        }\n        else {\n            const referenceLocation = getGridLocation(referenceGroup.element);\n            const targetLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, target);\n            if (sourceGroup && sourceGroup.size < 2) {\n                const [targetParentLocation, to] = tail(targetLocation);\n                const sourceLocation = getGridLocation(sourceGroup.element);\n                const [sourceParentLocation, from] = tail(sourceLocation);\n                if (sequenceEquals(sourceParentLocation, targetParentLocation)) {\n                    // special case when 'swapping' two views within same grid location\n                    // if a group has one tab - we are essentially moving the 'group'\n                    // which is equivalent to swapping two views in this case\n                    this.gridview.moveView(sourceParentLocation, from, to);\n                }\n                else {\n                    // source group will become empty so delete the group\n                    const targetGroup = this.doRemoveGroup(sourceGroup, {\n                        skipActive: true,\n                        skipDispose: true,\n                    });\n                    // after deleting the group we need to re-evaulate the ref location\n                    const updatedReferenceLocation = getGridLocation(referenceGroup.element);\n                    const location = getRelativeLocation(this.gridview.orientation, updatedReferenceLocation, target);\n                    this.doAddGroup(targetGroup, location);\n                }\n            }\n            else {\n                const groupItem = (sourceGroup === null || sourceGroup === void 0 ? void 0 : sourceGroup.model.removePanel(itemId)) ||\n                    this.panels.find((panel) => panel.id === itemId);\n                if (!groupItem) {\n                    throw new Error(`No panel with id ${itemId}`);\n                }\n                const dropLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, target);\n                const group = this.createGroupAtLocation(dropLocation);\n                group.model.openPanel(groupItem);\n            }\n        }\n    }\n    moveGroup(sourceGroup, referenceGroup, target) {\n        if (sourceGroup) {\n            if (!target || target === 'center') {\n                const activePanel = sourceGroup.activePanel;\n                const panels = [...sourceGroup.panels].map((p) => sourceGroup.model.removePanel(p.id));\n                if ((sourceGroup === null || sourceGroup === void 0 ? void 0 : sourceGroup.model.size) === 0) {\n                    this.doRemoveGroup(sourceGroup);\n                }\n                for (const panel of panels) {\n                    referenceGroup.model.openPanel(panel, {\n                        skipSetPanelActive: panel !== activePanel,\n                    });\n                }\n            }\n            else {\n                this.gridview.removeView(getGridLocation(sourceGroup.element));\n                const referenceLocation = getGridLocation(referenceGroup.element);\n                const dropLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, target);\n                this.gridview.addView(sourceGroup, Sizing.Distribute, dropLocation);\n            }\n        }\n    }\n    doSetGroupActive(group, skipFocus) {\n        var _a, _b;\n        const isGroupAlreadyFocused = this._activeGroup === group;\n        super.doSetGroupActive(group, skipFocus);\n        if (!isGroupAlreadyFocused && ((_a = this._activeGroup) === null || _a === void 0 ? void 0 : _a.activePanel)) {\n            this._onDidActivePanelChange.fire((_b = this._activeGroup) === null || _b === void 0 ? void 0 : _b.activePanel);\n        }\n    }\n    createGroup(options) {\n        if (!options) {\n            options = { tabHeight: this.tabHeight };\n        }\n        if (typeof options.tabHeight !== 'number') {\n            options.tabHeight = this.tabHeight;\n        }\n        let id = options === null || options === void 0 ? void 0 : options.id;\n        if (id && this._groups.has(options.id)) {\n            console.warn(`Duplicate group id ${options === null || options === void 0 ? void 0 : options.id}. reassigning group id to avoid errors`);\n            id = undefined;\n        }\n        if (!id) {\n            id = this.nextGroupId.next();\n            while (this._groups.has(id)) {\n                id = this.nextGroupId.next();\n            }\n        }\n        const view = new DockviewGroupPanel(this, id, options);\n        view.init({ params: {}, accessor: null }); // required to initialized .part and allow for correct disposal of group\n        if (!this._groups.has(view.id)) {\n            const disposable = new CompositeDisposable(view.model.onMove((event) => {\n                const { groupId, itemId, target, index } = event;\n                this.moveGroupOrPanel(view, groupId, itemId, target, index);\n            }), view.model.onDidDrop((event) => {\n                this._onDidDrop.fire(Object.assign(Object.assign({}, event), { api: this._api, group: view }));\n            }), view.model.onDidAddPanel((event) => {\n                this._onDidAddPanel.fire(event.panel);\n            }), view.model.onDidRemovePanel((event) => {\n                this._onDidRemovePanel.fire(event.panel);\n            }), view.model.onDidActivePanelChange((event) => {\n                this._onDidActivePanelChange.fire(event.panel);\n            }));\n            this._groups.set(view.id, { value: view, disposable });\n        }\n        // TODO: must be called after the above listeners have been setup,\n        // not an ideal pattern\n        view.initialize();\n        if (typeof this.options.tabHeight === 'number') {\n            view.model.header.height = this.options.tabHeight;\n        }\n        return view;\n    }\n    createPanel(options, group) {\n        const contentComponent = options.component;\n        const tabComponent = options.tabComponent || this.options.defaultTabComponent;\n        const view = new DockviewPanelModel(this, options.id, contentComponent, tabComponent);\n        const panel = new DockviewPanel(options.id, this, this._api, group, view);\n        panel.init({\n            title: options.title || options.id,\n            params: (options === null || options === void 0 ? void 0 : options.params) || {},\n        });\n        return panel;\n    }\n    createGroupAtLocation(location = [0]) {\n        const group = this.createGroup();\n        this.doAddGroup(group, location);\n        return group;\n    }\n    findGroup(panel) {\n        var _a;\n        return (_a = Array.from(this._groups.values()).find((group) => group.value.model.containsPanel(panel))) === null || _a === void 0 ? void 0 : _a.value;\n    }\n    dispose() {\n        super.dispose();\n        this._onDidActivePanelChange.dispose();\n        this._onDidAddPanel.dispose();\n        this._onDidRemovePanel.dispose();\n        this._onDidLayoutFromJSON.dispose();\n    }\n}\n","export function isPanelOptionsWithPanel(data) {\n    if (data.referencePanel) {\n        return true;\n    }\n    return false;\n}\nexport function isPanelOptionsWithGroup(data) {\n    if (data.referenceGroup) {\n        return true;\n    }\n    return false;\n}\nexport function isGroupOptionsWithPanel(data) {\n    if (data.referencePanel) {\n        return true;\n    }\n    return false;\n}\nexport function isGroupOptionsWithGroup(data) {\n    if (data.referenceGroup) {\n        return true;\n    }\n    return false;\n}\n","import { getRelativeLocation, getGridLocation, } from './gridview';\nimport { tail, sequenceEquals } from '../array';\nimport { CompositeDisposable } from '../lifecycle';\nimport { BaseGrid, toTarget, } from './baseComponentGridview';\nimport { createComponent } from '../panel/componentFactory';\nimport { Emitter } from '../events';\nexport class GridviewComponent extends BaseGrid {\n    get orientation() {\n        return this.gridview.orientation;\n    }\n    set orientation(value) {\n        this.gridview.orientation = value;\n    }\n    get options() {\n        return this._options;\n    }\n    get deserializer() {\n        return this._deserializer;\n    }\n    set deserializer(value) {\n        this._deserializer = value;\n    }\n    constructor(options) {\n        super({\n            parentElement: options.parentElement,\n            proportionalLayout: options.proportionalLayout,\n            orientation: options.orientation,\n            styles: options.styles,\n        });\n        this._onDidLayoutfromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutfromJSON.event;\n        this._options = options;\n        if (!this.options.components) {\n            this.options.components = {};\n        }\n        if (!this.options.frameworkComponents) {\n            this.options.frameworkComponents = {};\n        }\n    }\n    updateOptions(options) {\n        const hasOrientationChanged = typeof options.orientation === 'string' &&\n            this.gridview.orientation !== options.orientation;\n        this._options = Object.assign(Object.assign({}, this.options), options);\n        if (hasOrientationChanged) {\n            this.gridview.orientation = options.orientation;\n        }\n        this.layout(this.gridview.width, this.gridview.height, true);\n    }\n    removePanel(panel) {\n        this.removeGroup(panel);\n    }\n    /**\n     * Serialize the current state of the layout\n     *\n     * @returns A JSON respresentation of the layout\n     */\n    toJSON() {\n        var _a;\n        const data = this.gridview.serialize();\n        return {\n            grid: data,\n            activePanel: (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.id,\n        };\n    }\n    setVisible(panel, visible) {\n        this.gridview.setViewVisible(getGridLocation(panel.element), visible);\n    }\n    setActive(panel) {\n        this._groups.forEach((value, _key) => {\n            value.value.setActive(panel === value.value);\n        });\n    }\n    focus() {\n        var _a;\n        (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    fromJSON(serializedGridview) {\n        this.clear();\n        const { grid, activePanel } = serializedGridview;\n        const queue = [];\n        this.gridview.deserialize(grid, {\n            fromJSON: (node) => {\n                const { data } = node;\n                const view = createComponent(data.id, data.component, this.options.components || {}, this.options.frameworkComponents || {}, this.options.frameworkComponentFactory\n                    ? {\n                        createComponent: this.options.frameworkComponentFactory\n                            .createComponent,\n                    }\n                    : undefined);\n                queue.push(() => view.init({\n                    params: data.params,\n                    minimumWidth: data.minimumWidth,\n                    maximumWidth: data.maximumWidth,\n                    minimumHeight: data.minimumHeight,\n                    maximumHeight: data.maximumHeight,\n                    priority: data.priority,\n                    snap: !!data.snap,\n                    accessor: this,\n                    isVisible: node.visible,\n                }));\n                this._onDidAddGroup.fire(view);\n                this.registerPanel(view);\n                return view;\n            },\n        });\n        this.layout(this.width, this.height, true);\n        queue.forEach((f) => f());\n        if (typeof activePanel === 'string') {\n            const panel = this.getPanel(activePanel);\n            if (panel) {\n                this.doSetGroupActive(panel);\n            }\n        }\n        this._onDidLayoutfromJSON.fire();\n    }\n    clear() {\n        const hasActiveGroup = this.activeGroup;\n        const groups = Array.from(this._groups.values()); // reassign since group panels will mutate\n        for (const group of groups) {\n            group.disposable.dispose();\n            this.doRemoveGroup(group.value, { skipActive: true });\n        }\n        if (hasActiveGroup) {\n            this.doSetGroupActive(undefined);\n        }\n        this.gridview.clear();\n    }\n    movePanel(panel, options) {\n        var _a;\n        let relativeLocation;\n        const removedPanel = this.gridview.remove(panel);\n        const referenceGroup = (_a = this._groups.get(options.reference)) === null || _a === void 0 ? void 0 : _a.value;\n        if (!referenceGroup) {\n            throw new Error(`reference group ${options.reference} does not exist`);\n        }\n        const target = toTarget(options.direction);\n        if (target === 'center') {\n            throw new Error(`${target} not supported as an option`);\n        }\n        else {\n            const location = getGridLocation(referenceGroup.element);\n            relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n        }\n        this.doAddGroup(removedPanel, relativeLocation, options.size);\n    }\n    addPanel(options) {\n        var _a, _b;\n        let relativeLocation = options.location || [0];\n        if ((_a = options.position) === null || _a === void 0 ? void 0 : _a.referencePanel) {\n            const referenceGroup = (_b = this._groups.get(options.position.referencePanel)) === null || _b === void 0 ? void 0 : _b.value;\n            if (!referenceGroup) {\n                throw new Error(`reference group ${options.position.referencePanel} does not exist`);\n            }\n            const target = toTarget(options.position.direction);\n            if (target === 'center') {\n                throw new Error(`${target} not supported as an option`);\n            }\n            else {\n                const location = getGridLocation(referenceGroup.element);\n                relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n            }\n        }\n        const view = createComponent(options.id, options.component, this.options.components || {}, this.options.frameworkComponents || {}, this.options.frameworkComponentFactory\n            ? {\n                createComponent: this.options.frameworkComponentFactory\n                    .createComponent,\n            }\n            : undefined);\n        view.init({\n            params: options.params || {},\n            minimumWidth: options.minimumWidth,\n            maximumWidth: options.maximumWidth,\n            minimumHeight: options.minimumHeight,\n            maximumHeight: options.maximumHeight,\n            priority: options.priority,\n            snap: !!options.snap,\n            accessor: this,\n            isVisible: true,\n        });\n        this.registerPanel(view);\n        this.doAddGroup(view, relativeLocation, options.size);\n        return view;\n    }\n    registerPanel(panel) {\n        const disposable = new CompositeDisposable(panel.api.onDidFocusChange((event) => {\n            if (!event.isFocused) {\n                return;\n            }\n            this._groups.forEach((groupItem) => {\n                const group = groupItem.value;\n                if (group !== panel) {\n                    group.setActive(false);\n                }\n                else {\n                    group.setActive(true);\n                }\n            });\n        }));\n        this._groups.set(panel.id, {\n            value: panel,\n            disposable,\n        });\n    }\n    moveGroup(referenceGroup, groupId, target) {\n        const sourceGroup = this.getPanel(groupId);\n        if (!sourceGroup) {\n            throw new Error('invalid operation');\n        }\n        const referenceLocation = getGridLocation(referenceGroup.element);\n        const targetLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, target);\n        const [targetParentLocation, to] = tail(targetLocation);\n        const sourceLocation = getGridLocation(sourceGroup.element);\n        const [sourceParentLocation, from] = tail(sourceLocation);\n        if (sequenceEquals(sourceParentLocation, targetParentLocation)) {\n            // special case when 'swapping' two views within same grid location\n            // if a group has one tab - we are essentially moving the 'group'\n            // which is equivalent to swapping two views in this case\n            this.gridview.moveView(sourceParentLocation, from, to);\n            return;\n        }\n        // source group will become empty so delete the group\n        const targetGroup = this.doRemoveGroup(sourceGroup, {\n            skipActive: true,\n            skipDispose: true,\n        });\n        // after deleting the group we need to re-evaulate the ref location\n        const updatedReferenceLocation = getGridLocation(referenceGroup.element);\n        const location = getRelativeLocation(this.gridview.orientation, updatedReferenceLocation, target);\n        this.doAddGroup(targetGroup, location);\n    }\n    removeGroup(group) {\n        super.removeGroup(group);\n    }\n    dispose() {\n        super.dispose();\n        this._onDidLayoutfromJSON.dispose();\n    }\n}\n","import { CompositeDisposable, MutableDisposable, } from '../lifecycle';\nimport { Orientation, Sizing, Splitview, } from './splitview';\nimport { Emitter } from '../events';\nimport { createComponent } from '../panel/componentFactory';\nimport { Resizable } from '../resizable';\n/**\n * A high-level implementation of splitview that works using 'panels'\n */\nexport class SplitviewComponent extends Resizable {\n    get panels() {\n        return this.splitview.getViews();\n    }\n    get options() {\n        return this._options;\n    }\n    get length() {\n        return this._panels.size;\n    }\n    get orientation() {\n        return this.splitview.orientation;\n    }\n    get splitview() {\n        return this._splitview;\n    }\n    set splitview(value) {\n        this._splitview = value;\n        this._disposable.value = new CompositeDisposable(this._splitview.onDidSashEnd(() => {\n            this._onDidLayoutChange.fire(undefined);\n        }), this._splitview.onDidAddView((e) => this._onDidAddView.fire(e)), this._splitview.onDidRemoveView((e) => this._onDidRemoveView.fire(e)));\n    }\n    get minimumSize() {\n        return this.splitview.minimumSize;\n    }\n    get maximumSize() {\n        return this.splitview.maximumSize;\n    }\n    get height() {\n        return this.splitview.orientation === Orientation.HORIZONTAL\n            ? this.splitview.orthogonalSize\n            : this.splitview.size;\n    }\n    get width() {\n        return this.splitview.orientation === Orientation.HORIZONTAL\n            ? this.splitview.size\n            : this.splitview.orthogonalSize;\n    }\n    constructor(options) {\n        super(options.parentElement);\n        this._disposable = new MutableDisposable();\n        this._panels = new Map();\n        this._onDidLayoutfromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutfromJSON.event;\n        this._onDidAddView = new Emitter();\n        this.onDidAddView = this._onDidAddView.event;\n        this._onDidRemoveView = new Emitter();\n        this.onDidRemoveView = this._onDidRemoveView.event;\n        this._onDidLayoutChange = new Emitter();\n        this.onDidLayoutChange = this._onDidLayoutChange.event;\n        this._options = options;\n        if (!options.components) {\n            options.components = {};\n        }\n        if (!options.frameworkComponents) {\n            options.frameworkComponents = {};\n        }\n        this.splitview = new Splitview(this.element, options);\n        this.addDisposables(this._disposable, this._onDidAddView, this._onDidLayoutfromJSON, this._onDidRemoveView, this._onDidLayoutChange);\n    }\n    updateOptions(options) {\n        const hasOrientationChanged = typeof options.orientation === 'string' &&\n            this.options.orientation !== options.orientation;\n        this._options = Object.assign(Object.assign({}, this.options), options);\n        if (hasOrientationChanged) {\n            this.splitview.orientation = options.orientation;\n        }\n        this.splitview.layout(this.splitview.size, this.splitview.orthogonalSize);\n    }\n    focus() {\n        var _a;\n        (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    movePanel(from, to) {\n        this.splitview.moveView(from, to);\n    }\n    setVisible(panel, visible) {\n        const index = this.panels.indexOf(panel);\n        this.splitview.setViewVisible(index, visible);\n    }\n    setActive(view, skipFocus) {\n        this._activePanel = view;\n        this.panels\n            .filter((v) => v !== view)\n            .forEach((v) => {\n            v.api._onDidActiveChange.fire({ isActive: false });\n            if (!skipFocus) {\n                v.focus();\n            }\n        });\n        view.api._onDidActiveChange.fire({ isActive: true });\n        if (!skipFocus) {\n            view.focus();\n        }\n    }\n    removePanel(panel, sizing) {\n        const disposable = this._panels.get(panel.id);\n        if (!disposable) {\n            throw new Error(`unknown splitview panel ${panel.id}`);\n        }\n        disposable.disposable.dispose();\n        disposable.value.dispose();\n        this._panels.delete(panel.id);\n        const index = this.panels.findIndex((_) => _ === panel);\n        this.splitview.removeView(index, sizing);\n        const panels = this.panels;\n        if (panels.length > 0) {\n            this.setActive(panels[panels.length - 1]);\n        }\n    }\n    getPanel(id) {\n        return this.panels.find((view) => view.id === id);\n    }\n    addPanel(options) {\n        if (this._panels.has(options.id)) {\n            throw new Error(`panel ${options.id} already exists`);\n        }\n        const view = createComponent(options.id, options.component, this.options.components || {}, this.options.frameworkComponents || {}, this.options.frameworkWrapper\n            ? {\n                createComponent: this.options.frameworkWrapper.createComponent,\n            }\n            : undefined);\n        view.orientation = this.splitview.orientation;\n        view.init({\n            params: options.params || {},\n            minimumSize: options.minimumSize,\n            maximumSize: options.maximumSize,\n            snap: options.snap,\n            priority: options.priority,\n            accessor: this,\n        });\n        const size = typeof options.size === 'number' ? options.size : Sizing.Distribute;\n        const index = typeof options.index === 'number' ? options.index : undefined;\n        this.splitview.addView(view, size, index);\n        this.doAddView(view);\n        this.setActive(view);\n        return view;\n    }\n    layout(width, height) {\n        const [size, orthogonalSize] = this.splitview.orientation === Orientation.HORIZONTAL\n            ? [width, height]\n            : [height, width];\n        this.splitview.layout(size, orthogonalSize);\n    }\n    doAddView(view) {\n        const disposable = view.api.onDidFocusChange((event) => {\n            if (!event.isFocused) {\n                return;\n            }\n            this.setActive(view, true);\n        });\n        this._panels.set(view.id, { disposable, value: view });\n    }\n    toJSON() {\n        var _a;\n        const views = this.splitview\n            .getViews()\n            .map((view, i) => {\n            const size = this.splitview.getViewSize(i);\n            return {\n                size,\n                data: view.toJSON(),\n                snap: !!view.snap,\n                priority: view.priority,\n            };\n        });\n        return {\n            views,\n            activeView: (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.id,\n            size: this.splitview.size,\n            orientation: this.splitview.orientation,\n        };\n    }\n    fromJSON(serializedSplitview) {\n        this.clear();\n        const { views, orientation, size, activeView } = serializedSplitview;\n        const queue = [];\n        this.splitview = new Splitview(this.element, {\n            orientation,\n            proportionalLayout: this.options.proportionalLayout,\n            descriptor: {\n                size,\n                views: views.map((view) => {\n                    const data = view.data;\n                    if (this._panels.has(data.id)) {\n                        throw new Error(`panel ${data.id} already exists`);\n                    }\n                    const panel = createComponent(data.id, data.component, this.options.components || {}, this.options.frameworkComponents || {}, this.options.frameworkWrapper\n                        ? {\n                            createComponent: this.options.frameworkWrapper\n                                .createComponent,\n                        }\n                        : undefined);\n                    queue.push(() => {\n                        panel.init({\n                            params: data.params || {},\n                            minimumSize: data.minimumSize,\n                            maximumSize: data.maximumSize,\n                            snap: view.snap,\n                            priority: view.priority,\n                            accessor: this,\n                        });\n                    });\n                    panel.orientation = orientation;\n                    this.doAddView(panel);\n                    setTimeout(() => {\n                        // the original onDidAddView events are missed since they are fired before we can subcribe to them\n                        this._onDidAddView.fire(panel);\n                    }, 0);\n                    return { size: view.size, view: panel };\n                }),\n            },\n        });\n        this.layout(this.width, this.height);\n        queue.forEach((f) => f());\n        if (typeof activeView === 'string') {\n            const panel = this.getPanel(activeView);\n            if (panel) {\n                this.setActive(panel);\n            }\n        }\n        this._onDidLayoutfromJSON.fire();\n    }\n    clear() {\n        for (const [_, value] of this._panels.entries()) {\n            value.disposable.dispose();\n            value.value.dispose();\n        }\n        this._panels.clear();\n        this.splitview.dispose();\n    }\n    dispose() {\n        for (const [_, value] of this._panels.entries()) {\n            value.disposable.dispose();\n            value.value.dispose();\n        }\n        this._panels.clear();\n        this.splitview.dispose();\n        super.dispose();\n    }\n}\n","import { addDisposableListener } from '../events';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nimport { toggleClass } from '../dom';\nimport { createChevronRightButton, createExpandMoreButton } from '../svg';\nexport class DefaultHeader extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor() {\n        super();\n        this._expandedIcon = createExpandMoreButton();\n        this._collapsedIcon = createChevronRightButton();\n        this.disposable = new MutableDisposable();\n        this.apiRef = { api: null };\n        this._element = document.createElement('div');\n        this.element.className = 'default-header';\n        this._content = document.createElement('span');\n        this._expander = document.createElement('div');\n        this._expander.className = 'dockview-pane-header-icon';\n        this.element.appendChild(this._expander);\n        this.element.appendChild(this._content);\n        this.addDisposables(addDisposableListener(this._element, 'click', () => {\n            var _a;\n            (_a = this.apiRef.api) === null || _a === void 0 ? void 0 : _a.setExpanded(!this.apiRef.api.isExpanded);\n        }));\n    }\n    init(params) {\n        this.apiRef.api = params.api;\n        this._content.textContent = params.title;\n        this.updateIcon();\n        this.disposable.value = params.api.onDidExpansionChange(() => {\n            this.updateIcon();\n        });\n    }\n    updateIcon() {\n        var _a;\n        const isExpanded = !!((_a = this.apiRef.api) === null || _a === void 0 ? void 0 : _a.isExpanded);\n        toggleClass(this._expander, 'collapsed', !isExpanded);\n        if (isExpanded) {\n            if (this._expander.contains(this._collapsedIcon)) {\n                this._collapsedIcon.remove();\n            }\n            if (!this._expander.contains(this._expandedIcon)) {\n                this._expander.appendChild(this._expandedIcon);\n            }\n        }\n        else {\n            if (this._expander.contains(this._expandedIcon)) {\n                this._expandedIcon.remove();\n            }\n            if (!this._expander.contains(this._collapsedIcon)) {\n                this._expander.appendChild(this._collapsedIcon);\n            }\n        }\n    }\n    update(_params) {\n        //\n    }\n    dispose() {\n        this.disposable.dispose();\n        super.dispose();\n    }\n}\n","import { PaneviewApi } from '../api/component.api';\nimport { createComponent } from '../panel/componentFactory';\nimport { Emitter } from '../events';\nimport { CompositeDisposable, MutableDisposable, } from '../lifecycle';\nimport { Orientation, Sizing } from '../splitview/splitview';\nimport { Paneview } from './paneview';\nimport { DraggablePaneviewPanel, } from './draggablePaneviewPanel';\nimport { DefaultHeader } from './defaultPaneviewHeader';\nimport { sequentialNumberGenerator } from '../math';\nimport { Resizable } from '../resizable';\nconst nextLayoutId = sequentialNumberGenerator();\nexport class PaneFramework extends DraggablePaneviewPanel {\n    constructor(options) {\n        super(options.accessor, options.id, options.component, options.headerComponent, options.orientation, options.isExpanded, options.disableDnd);\n        this.options = options;\n    }\n    getBodyComponent() {\n        return this.options.body;\n    }\n    getHeaderComponent() {\n        return this.options.header;\n    }\n}\nexport class PaneviewComponent extends Resizable {\n    get id() {\n        return this._id;\n    }\n    get panels() {\n        return this.paneview.getPanes();\n    }\n    set paneview(value) {\n        this._paneview = value;\n        this._disposable.value = new CompositeDisposable(this._paneview.onDidChange(() => {\n            this._onDidLayoutChange.fire(undefined);\n        }), this._paneview.onDidAddView((e) => this._onDidAddView.fire(e)), this._paneview.onDidRemoveView((e) => this._onDidRemoveView.fire(e)));\n    }\n    get paneview() {\n        return this._paneview;\n    }\n    get minimumSize() {\n        return this.paneview.minimumSize;\n    }\n    get maximumSize() {\n        return this.paneview.maximumSize;\n    }\n    get height() {\n        return this.paneview.orientation === Orientation.HORIZONTAL\n            ? this.paneview.orthogonalSize\n            : this.paneview.size;\n    }\n    get width() {\n        return this.paneview.orientation === Orientation.HORIZONTAL\n            ? this.paneview.size\n            : this.paneview.orthogonalSize;\n    }\n    get options() {\n        return this._options;\n    }\n    constructor(options) {\n        super(options.parentElement);\n        this._id = nextLayoutId.next();\n        this._disposable = new MutableDisposable();\n        this._viewDisposables = new Map();\n        this._onDidLayoutfromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutfromJSON.event;\n        this._onDidLayoutChange = new Emitter();\n        this.onDidLayoutChange = this._onDidLayoutChange.event;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onDidAddView = new Emitter();\n        this.onDidAddView = this._onDidAddView.event;\n        this._onDidRemoveView = new Emitter();\n        this.onDidRemoveView = this._onDidRemoveView.event;\n        this.addDisposables(this._onDidLayoutChange, this._onDidLayoutfromJSON, this._onDidDrop, this._onDidAddView, this._onDidRemoveView);\n        this._options = options;\n        if (!options.components) {\n            options.components = {};\n        }\n        if (!options.frameworkComponents) {\n            options.frameworkComponents = {};\n        }\n        this.paneview = new Paneview(this.element, {\n            // only allow paneview in the vertical orientation for now\n            orientation: Orientation.VERTICAL,\n        });\n        this.addDisposables(this._disposable);\n    }\n    focus() {\n        //noop\n    }\n    updateOptions(options) {\n        this._options = Object.assign(Object.assign({}, this.options), options);\n    }\n    addPanel(options) {\n        const body = createComponent(options.id, options.component, this.options.components || {}, this.options.frameworkComponents || {}, this.options.frameworkWrapper\n            ? {\n                createComponent: this.options.frameworkWrapper.body.createComponent,\n            }\n            : undefined);\n        let header;\n        if (options.headerComponent) {\n            header = createComponent(options.id, options.headerComponent, this.options.headerComponents || {}, this.options.headerframeworkComponents, this.options.frameworkWrapper\n                ? {\n                    createComponent: this.options.frameworkWrapper.header\n                        .createComponent,\n                }\n                : undefined);\n        }\n        else {\n            header = new DefaultHeader();\n        }\n        const view = new PaneFramework({\n            id: options.id,\n            component: options.component,\n            headerComponent: options.headerComponent,\n            header,\n            body,\n            orientation: Orientation.VERTICAL,\n            isExpanded: !!options.isExpanded,\n            disableDnd: !!this.options.disableDnd,\n            accessor: this,\n        });\n        this.doAddPanel(view);\n        const size = typeof options.size === 'number' ? options.size : Sizing.Distribute;\n        const index = typeof options.index === 'number' ? options.index : undefined;\n        view.init({\n            params: options.params || {},\n            minimumBodySize: options.minimumBodySize,\n            maximumBodySize: options.maximumBodySize,\n            isExpanded: options.isExpanded,\n            title: options.title,\n            containerApi: new PaneviewApi(this),\n        });\n        this.paneview.addPane(view, size, index);\n        view.orientation = this.paneview.orientation;\n        return view;\n    }\n    removePanel(panel) {\n        const views = this.panels;\n        const index = views.findIndex((_) => _ === panel);\n        this.paneview.removePane(index);\n        this.doRemovePanel(panel);\n    }\n    movePanel(from, to) {\n        this.paneview.moveView(from, to);\n    }\n    getPanel(id) {\n        return this.panels.find((view) => view.id === id);\n    }\n    layout(width, height) {\n        const [size, orthogonalSize] = this.paneview.orientation === Orientation.HORIZONTAL\n            ? [width, height]\n            : [height, width];\n        this.paneview.layout(size, orthogonalSize);\n    }\n    toJSON() {\n        const maximum = (value) => value === Number.MAX_SAFE_INTEGER ||\n            value === Number.POSITIVE_INFINITY\n            ? undefined\n            : value;\n        const minimum = (value) => (value <= 0 ? undefined : value);\n        const views = this.paneview\n            .getPanes()\n            .map((view, i) => {\n            const size = this.paneview.getViewSize(i);\n            return {\n                size,\n                data: view.toJSON(),\n                minimumSize: minimum(view.minimumBodySize),\n                maximumSize: maximum(view.maximumBodySize),\n                expanded: view.isExpanded(),\n            };\n        });\n        return {\n            views,\n            size: this.paneview.size,\n        };\n    }\n    fromJSON(serializedPaneview) {\n        this.clear();\n        const { views, size } = serializedPaneview;\n        const queue = [];\n        this.paneview = new Paneview(this.element, {\n            orientation: Orientation.VERTICAL,\n            descriptor: {\n                size,\n                views: views.map((view) => {\n                    const data = view.data;\n                    const body = createComponent(data.id, data.component, this.options.components || {}, this.options.frameworkComponents || {}, this.options.frameworkWrapper\n                        ? {\n                            createComponent: this.options.frameworkWrapper.body\n                                .createComponent,\n                        }\n                        : undefined);\n                    let header;\n                    if (data.headerComponent) {\n                        header = createComponent(data.id, data.headerComponent, this.options.headerComponents || {}, this.options.headerframeworkComponents || {}, this.options.frameworkWrapper\n                            ? {\n                                createComponent: this.options.frameworkWrapper.header\n                                    .createComponent,\n                            }\n                            : undefined);\n                    }\n                    else {\n                        header = new DefaultHeader();\n                    }\n                    const panel = new PaneFramework({\n                        id: data.id,\n                        component: data.component,\n                        headerComponent: data.headerComponent,\n                        header,\n                        body,\n                        orientation: Orientation.VERTICAL,\n                        isExpanded: !!view.expanded,\n                        disableDnd: !!this.options.disableDnd,\n                        accessor: this,\n                    });\n                    this.doAddPanel(panel);\n                    queue.push(() => {\n                        panel.init({\n                            params: data.params || {},\n                            minimumBodySize: view.minimumSize,\n                            maximumBodySize: view.maximumSize,\n                            title: data.title,\n                            isExpanded: !!view.expanded,\n                            containerApi: new PaneviewApi(this),\n                        });\n                        panel.orientation = this.paneview.orientation;\n                    });\n                    setTimeout(() => {\n                        // the original onDidAddView events are missed since they are fired before we can subcribe to them\n                        this._onDidAddView.fire(panel);\n                    }, 0);\n                    return { size: view.size, view: panel };\n                }),\n            },\n        });\n        this.layout(this.width, this.height);\n        queue.forEach((f) => f());\n        this._onDidLayoutfromJSON.fire();\n    }\n    clear() {\n        for (const [_, value] of this._viewDisposables.entries()) {\n            value.dispose();\n        }\n        this._viewDisposables.clear();\n        this.paneview.dispose();\n    }\n    doAddPanel(panel) {\n        const disposable = panel.onDidDrop((event) => {\n            this._onDidDrop.fire(event);\n        });\n        this._viewDisposables.set(panel.id, disposable);\n    }\n    doRemovePanel(panel) {\n        const disposable = this._viewDisposables.get(panel.id);\n        if (disposable) {\n            disposable.dispose();\n            this._viewDisposables.delete(panel.id);\n        }\n    }\n    dispose() {\n        super.dispose();\n        for (const [_, value] of this._viewDisposables.entries()) {\n            value.dispose();\n        }\n        this._viewDisposables.clear();\n        this.paneview.dispose();\n    }\n}\n","import { BasePanelView, } from '../gridview/basePanelView';\nimport { SplitviewPanelApiImpl } from '../api/splitviewPanelApi';\nimport { Orientation } from './splitview';\nimport { Emitter } from '../events';\nexport class SplitviewPanel extends BasePanelView {\n    get priority() {\n        return this._priority;\n    }\n    set orientation(value) {\n        this._orientation = value;\n    }\n    get orientation() {\n        return this._orientation;\n    }\n    get minimumSize() {\n        const size = typeof this._minimumSize === 'function'\n            ? this._minimumSize()\n            : this._minimumSize;\n        if (size !== this._evaluatedMinimumSize) {\n            this._evaluatedMinimumSize = size;\n            this.updateConstraints();\n        }\n        return size;\n    }\n    get maximumSize() {\n        const size = typeof this._maximumSize === 'function'\n            ? this._maximumSize()\n            : this._maximumSize;\n        if (size !== this._evaluatedMaximumSize) {\n            this._evaluatedMaximumSize = size;\n            this.updateConstraints();\n        }\n        return size;\n    }\n    get snap() {\n        return this._snap;\n    }\n    constructor(id, componentName) {\n        super(id, componentName, new SplitviewPanelApiImpl(id));\n        this._evaluatedMinimumSize = 0;\n        this._evaluatedMaximumSize = Number.POSITIVE_INFINITY;\n        this._minimumSize = 0;\n        this._maximumSize = Number.POSITIVE_INFINITY;\n        this._snap = false;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this.api.initialize(this);\n        this.addDisposables(this._onDidChange, this.api.onVisibilityChange((event) => {\n            const { isVisible } = event;\n            const { accessor } = this._params;\n            accessor.setVisible(this, isVisible);\n        }), this.api.onActiveChange(() => {\n            const { accessor } = this._params;\n            accessor.setActive(this);\n        }), this.api.onDidConstraintsChangeInternal((event) => {\n            if (typeof event.minimumSize === 'number' ||\n                typeof event.minimumSize === 'function') {\n                this._minimumSize = event.minimumSize;\n            }\n            if (typeof event.maximumSize === 'number' ||\n                typeof event.maximumSize === 'function') {\n                this._maximumSize = event.maximumSize;\n            }\n            this.updateConstraints();\n        }), this.api.onDidSizeChange((event) => {\n            this._onDidChange.fire({ size: event.size });\n        }));\n    }\n    setVisible(isVisible) {\n        this.api._onDidVisibilityChange.fire({ isVisible });\n    }\n    setActive(isActive) {\n        this.api._onDidActiveChange.fire({ isActive });\n    }\n    layout(size, orthogonalSize) {\n        const [width, height] = this.orientation === Orientation.HORIZONTAL\n            ? [size, orthogonalSize]\n            : [orthogonalSize, size];\n        super.layout(width, height);\n    }\n    init(parameters) {\n        super.init(parameters);\n        this._priority = parameters.priority;\n        if (parameters.minimumSize) {\n            this._minimumSize = parameters.minimumSize;\n        }\n        if (parameters.maximumSize) {\n            this._maximumSize = parameters.maximumSize;\n        }\n        if (parameters.snap) {\n            this._snap = parameters.snap;\n        }\n    }\n    toJSON() {\n        const maximum = (value) => value === Number.MAX_SAFE_INTEGER ||\n            value === Number.POSITIVE_INFINITY\n            ? undefined\n            : value;\n        const minimum = (value) => (value <= 0 ? undefined : value);\n        return Object.assign(Object.assign({}, super.toJSON()), { minimumSize: minimum(this.minimumSize), maximumSize: maximum(this.maximumSize) });\n    }\n    updateConstraints() {\n        this.api._onDidConstraintsChange.fire({\n            maximumSize: this._evaluatedMaximumSize,\n            minimumSize: this._evaluatedMinimumSize,\n        });\n    }\n}\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\n/**\n * This component is intended to interface between vanilla-js and React hence we need to be\n * creative in how we update props.\n * A ref of the component is exposed with an update method; which when called stores the props\n * as a ref within this component and forcefully triggers a re-render of the component using\n * the ref of props we just set on the renderered component as the props passed to the inner\n * component\n */\nconst ReactComponentBridge = (props, ref) => {\n    const [_, triggerRender] = React.useState();\n    const _props = React.useRef(props.componentProps);\n    React.useImperativeHandle(ref, () => ({\n        update: (componentProps) => {\n            _props.current = Object.assign(Object.assign({}, _props.current), componentProps);\n            /**\n             * setting a arbitrary piece of state within this component will\n             * trigger a re-render.\n             * we use this rather than updating through a prop since we can\n             * pass a ref into the vanilla-js world.\n             */\n            triggerRender(Date.now());\n        },\n    }), []);\n    return React.createElement(props.component, _props.current);\n};\nReactComponentBridge.displayName = 'DockviewReactJsBridge';\n/**\n * Since we are storing the React.Portal references in a rendered array they\n * require a key property like any other React element rendered in an array\n * to prevent excessive re-rendering\n */\nconst uniquePortalKeyGenerator = (() => {\n    let value = 1;\n    return { next: () => `dockview_react_portal_key_${(value++).toString()}` };\n})();\nexport const ReactPartContext = React.createContext({});\nexport class ReactPart {\n    constructor(parent, portalStore, component, parameters, context) {\n        this.parent = parent;\n        this.portalStore = portalStore;\n        this.component = component;\n        this.parameters = parameters;\n        this.context = context;\n        this._initialProps = {};\n        this.disposed = false;\n        this.createPortal();\n    }\n    update(props) {\n        if (this.disposed) {\n            throw new Error('invalid operation: resource is already disposed');\n        }\n        if (!this.componentInstance) {\n            // if the component is yet to be mounted store the props\n            this._initialProps = Object.assign(Object.assign({}, this._initialProps), props);\n        }\n        else {\n            this.componentInstance.update(props);\n        }\n    }\n    createPortal() {\n        if (this.disposed) {\n            throw new Error('invalid operation: resource is already disposed');\n        }\n        if (typeof this.component !== 'function') {\n            /**\n             * we know this isn't a React.FunctionComponent so throw an error here.\n             * if we do not intercept this the React library will throw a very obsure error\n             * for the same reason, at least at this point we will emit a sensible stacktrace.\n             */\n            throw new Error('Invalid Operation. dockview only supports React Functional Components.');\n        }\n        const bridgeComponent = React.createElement(React.forwardRef(ReactComponentBridge), {\n            component: this\n                .component,\n            componentProps: this.parameters,\n            ref: (element) => {\n                this.componentInstance = element;\n                if (Object.keys(this._initialProps).length > 0) {\n                    this.componentInstance.update(this._initialProps);\n                    this._initialProps = {}; // don't keep a reference to the users object once no longer required\n                }\n            },\n        });\n        const node = this.context\n            ? React.createElement(ReactPartContext.Provider, { value: this.context }, bridgeComponent)\n            : bridgeComponent;\n        const portal = ReactDOM.createPortal(node, this.parent, uniquePortalKeyGenerator.next());\n        this.ref = {\n            portal,\n            disposable: this.portalStore.addPortal(portal),\n        };\n    }\n    dispose() {\n        var _a;\n        (_a = this.ref) === null || _a === void 0 ? void 0 : _a.disposable.dispose();\n        this.disposed = true;\n    }\n}\n/**\n * A React Hook that returns an array of portals to be rendered by the user of this hook\n * and a disposable function to add a portal. Calling dispose removes this portal from the\n * portal array\n */\nexport const usePortalsLifecycle = () => {\n    const [portals, setPortals] = React.useState([]);\n    React.useDebugValue(`Portal count: ${portals.length}`);\n    const addPortal = React.useCallback((portal) => {\n        setPortals((existingPortals) => [...existingPortals, portal]);\n        let disposed = false;\n        return {\n            dispose: () => {\n                if (disposed) {\n                    throw new Error('invalid operation: resource already disposed');\n                }\n                disposed = true;\n                setPortals((existingPortals) => existingPortals.filter((p) => p !== portal));\n            },\n        };\n    }, []);\n    return [portals, addPortal];\n};\n// it does the job...\nexport function isReactElement(element) {\n    return element === null || element === void 0 ? void 0 : element.type;\n}\n","import { ReactPart } from '../react';\nimport { DockviewEmitter, } from 'dockview-core';\nexport class ReactPanelContentPart {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._onDidFocus = new DockviewEmitter();\n        this.onDidFocus = this._onDidFocus.event;\n        this._onDidBlur = new DockviewEmitter();\n        this.onDidBlur = this._onDidBlur.event;\n        this._element = document.createElement('div');\n        this._element.className = 'dockview-react-part';\n    }\n    focus() {\n        // TODO\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            params: parameters.params,\n            api: parameters.api,\n            containerApi: parameters.containerApi,\n        });\n    }\n    update(event) {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update(event.params);\n    }\n    layout(_width, _height) {\n        // noop\n    }\n    dispose() {\n        var _a;\n        this._onDidFocus.dispose();\n        this._onDidBlur.dispose();\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import { ReactPart } from '../react';\nexport class ReactPanelHeaderPart {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._element = document.createElement('div');\n        this._element.className = 'dockview-react-part';\n    }\n    focus() {\n        //noop\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            params: parameters.params,\n            api: parameters.api,\n            containerApi: parameters.containerApi,\n        });\n    }\n    update(event) {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update(event.params);\n    }\n    layout(_width, _height) {\n        // noop - retrieval from api\n    }\n    dispose() {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import { ReactPart } from '../react';\nexport class ReactWatermarkPart {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._element = document.createElement('div');\n        this._element.className = 'dockview-react-part';\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            group: parameters.group,\n            containerApi: parameters.containerApi,\n            close: () => {\n                if (parameters.group) {\n                    parameters.containerApi.removeGroup(parameters.group);\n                }\n            },\n        });\n    }\n    focus() {\n        // noop\n    }\n    update(params) {\n        var _a, _b;\n        if (this.parameters) {\n            this.parameters.params = params.params;\n        }\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update({ params: ((_b = this.parameters) === null || _b === void 0 ? void 0 : _b.params) || {} });\n    }\n    layout(_width, _height) {\n        // noop - retrieval from api\n    }\n    updateParentGroup(_group, _isPanelVisible) {\n        // noop\n    }\n    dispose() {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import { ReactPart } from '../react';\nimport { DockviewCompositeDisposable, DockviewMutableDisposable, } from 'dockview-core';\nexport class ReactGroupControlsRendererPart {\n    get element() {\n        return this._element;\n    }\n    get part() {\n        return this._part;\n    }\n    get group() {\n        return this._group;\n    }\n    constructor(component, reactPortalStore, _group) {\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._group = _group;\n        this.mutableDisposable = new DockviewMutableDisposable();\n        this._element = document.createElement('div');\n        this._element.className = 'dockview-react-part';\n    }\n    focus() {\n        // TODO\n    }\n    init(parameters) {\n        this.mutableDisposable.value = new DockviewCompositeDisposable(this._group.model.onDidAddPanel(() => {\n            this.updatePanels();\n        }), this._group.model.onDidRemovePanel(() => {\n            this.updatePanels();\n        }), this._group.model.onDidActivePanelChange(() => {\n            this.updateActivePanel();\n        }), parameters.api.onDidActiveChange(() => {\n            this.updateGroupActive();\n        }));\n        this._part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            api: parameters.api,\n            containerApi: parameters.containerApi,\n            panels: this._group.model.panels,\n            activePanel: this._group.model.activePanel,\n            isGroupActive: this._group.api.isActive,\n        });\n    }\n    update(event) {\n        var _a;\n        (_a = this._part) === null || _a === void 0 ? void 0 : _a.update(event.params);\n    }\n    dispose() {\n        var _a;\n        this.mutableDisposable.dispose();\n        (_a = this._part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n    updatePanels() {\n        this.update({ params: { panels: this._group.model.panels } });\n    }\n    updateActivePanel() {\n        this.update({\n            params: {\n                activePanel: this._group.model.activePanel,\n            },\n        });\n    }\n    updateGroupActive() {\n        this.update({\n            params: {\n                isGroupActive: this._group.api.isActive,\n            },\n        });\n    }\n}\n","import * as React from 'react';\nimport { DockviewComponent, DockviewApi, } from 'dockview-core';\nimport { ReactPanelContentPart } from './reactContentPart';\nimport { ReactPanelHeaderPart } from './reactHeaderPart';\nimport { usePortalsLifecycle } from '../react';\nimport { ReactWatermarkPart } from './reactWatermarkPart';\nimport { ReactGroupControlsRendererPart, } from './groupControlsRenderer';\nfunction createGroupControlElement(component, store) {\n    return component\n        ? (groupPanel) => {\n            return new ReactGroupControlsRendererPart(component, store, groupPanel);\n        }\n        : undefined;\n}\nconst DEFAULT_REACT_TAB = 'props.defaultTabComponent';\nexport const DockviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const dockviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    React.useEffect(() => {\n        if (!domRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const factory = {\n            content: {\n                createComponent: (_id, componentId, component) => {\n                    return new ReactPanelContentPart(componentId, component, {\n                        addPortal,\n                    });\n                },\n            },\n            tab: {\n                createComponent: (_id, componentId, component) => {\n                    return new ReactPanelHeaderPart(componentId, component, {\n                        addPortal,\n                    });\n                },\n            },\n            watermark: {\n                createComponent: (_id, componentId, component) => {\n                    return new ReactWatermarkPart(componentId, component, {\n                        addPortal,\n                    });\n                },\n            },\n        };\n        const frameworkTabComponents = props.tabComponents || {};\n        if (props.defaultTabComponent) {\n            frameworkTabComponents[DEFAULT_REACT_TAB] =\n                props.defaultTabComponent;\n        }\n        const dockview = new DockviewComponent({\n            parentElement: domRef.current,\n            frameworkComponentFactory: factory,\n            frameworkComponents: props.components,\n            frameworkTabComponents,\n            tabHeight: props.tabHeight,\n            watermarkFrameworkComponent: props.watermarkComponent,\n            defaultTabComponent: props.defaultTabComponent\n                ? DEFAULT_REACT_TAB\n                : undefined,\n            styles: props.hideBorders\n                ? { separatorBorder: 'transparent' }\n                : undefined,\n            showDndOverlay: props.showDndOverlay,\n            createGroupControlElement: createGroupControlElement(props.groupControlComponent, { addPortal }),\n            singleTabMode: props.singleTabMode,\n        });\n        const { clientWidth, clientHeight } = domRef.current;\n        dockview.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api: new DockviewApi(dockview) });\n        }\n        dockviewRef.current = dockview;\n        return () => {\n            dockview.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const disposable = dockviewRef.current.onDidDrop((event) => {\n            if (props.onDidDrop) {\n                props.onDidDrop(event);\n            }\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.onDidDrop]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            frameworkComponents: props.components,\n        });\n    }, [props.components]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            watermarkFrameworkComponent: props.watermarkComponent,\n        });\n    }, [props.watermarkComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            showDndOverlay: props.showDndOverlay,\n        });\n    }, [props.showDndOverlay]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            frameworkTabComponents: props.tabComponents,\n        });\n    }, [props.tabComponents]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        const frameworkTabComponents = props.tabComponents || {};\n        if (props.defaultTabComponent) {\n            frameworkTabComponents[DEFAULT_REACT_TAB] =\n                props.defaultTabComponent;\n        }\n        dockviewRef.current.updateOptions({\n            defaultTabComponent: props.defaultTabComponent\n                ? DEFAULT_REACT_TAB\n                : undefined,\n            frameworkTabComponents,\n        });\n    }, [props.defaultTabComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createGroupControlElement: createGroupControlElement(props.groupControlComponent, { addPortal }),\n        });\n    }, [props.groupControlComponent]);\n    return (React.createElement(\"div\", { className: props.className, style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nDockviewReact.displayName = 'DockviewComponent';\n","import * as React from 'react';\nexport const CloseButton = () => (React.createElement(\"svg\", { height: \"11\", width: \"11\", viewBox: \"0 0 28 28\", \"aria-hidden\": 'false', focusable: false, className: \"dockview-svg\" },\n    React.createElement(\"path\", { d: \"M2.1 27.3L0 25.2L11.55 13.65L0 2.1L2.1 0L13.65 11.55L25.2 0L27.3 2.1L15.75 13.65L27.3 25.2L25.2 27.3L13.65 15.75L2.1 27.3Z\" })));\nexport const ExpandMore = () => {\n    return (React.createElement(\"svg\", { width: \"11\", height: \"11\", viewBox: \"0 0 24 15\", \"aria-hidden\": 'false', focusable: false, className: \"dockview-svg\" },\n        React.createElement(\"path\", { d: \"M12 14.15L0 2.15L2.15 0L12 9.9L21.85 0.0499992L24 2.2L12 14.15Z\" })));\n};\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from 'react';\nimport { CloseButton } from '../svg';\nexport const DockviewDefaultTab = (_a) => {\n    var { api, containerApi: _containerApi, params: _params } = _a, rest = __rest(_a, [\"api\", \"containerApi\", \"params\"]);\n    const onClose = React.useCallback((event) => {\n        event.stopPropagation();\n        api.close();\n    }, [api]);\n    const onClick = React.useCallback((event) => {\n        api.setActive();\n        if (rest.onClick) {\n            rest.onClick(event);\n        }\n    }, [api, rest.onClick]);\n    const iconClassname = React.useMemo(() => {\n        const cn = ['dockview-react-tab-action'];\n        return cn.join(',');\n    }, []);\n    return (React.createElement(\"div\", Object.assign({}, rest, { onClick: onClick, className: \"dockview-react-tab\" }),\n        React.createElement(\"span\", { className: \"dockview-react-tab-title\" }, api.title),\n        React.createElement(\"div\", { className: iconClassname, onClick: onClose },\n            React.createElement(CloseButton, null))));\n};\n","import { SplitviewApi, SplitviewPanel, } from 'dockview-core';\nimport { ReactPart } from '../react';\nexport class ReactPanelView extends SplitviewPanel {\n    constructor(id, component, reactComponent, reactPortalStore) {\n        super(id, component);\n        this.reactComponent = reactComponent;\n        this.reactPortalStore = reactPortalStore;\n    }\n    getComponent() {\n        var _a;\n        return new ReactPart(this.element, this.reactPortalStore, this.reactComponent, {\n            params: ((_a = this._params) === null || _a === void 0 ? void 0 : _a.params) || {},\n            api: this.api,\n            containerApi: new SplitviewApi(this._params.accessor),\n        });\n    }\n}\n","import * as React from 'react';\nimport { SplitviewApi, SplitviewComponent, Orientation, } from 'dockview-core';\nimport { usePortalsLifecycle } from '../react';\nimport { ReactPanelView } from './view';\nexport const SplitviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const splitviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    React.useEffect(() => {\n        const splitview = new SplitviewComponent({\n            parentElement: domRef.current,\n            orientation: props.orientation || Orientation.HORIZONTAL,\n            frameworkComponents: props.components,\n            frameworkWrapper: {\n                createComponent: (id, componentId, component) => {\n                    return new ReactPanelView(id, componentId, component, {\n                        addPortal,\n                    });\n                },\n            },\n            proportionalLayout: typeof props.proportionalLayout === 'boolean'\n                ? props.proportionalLayout\n                : true,\n            styles: props.hideBorders\n                ? { separatorBorder: 'transparent' }\n                : undefined,\n        });\n        const { clientWidth, clientHeight } = domRef.current;\n        splitview.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api: new SplitviewApi(splitview) });\n        }\n        splitviewRef.current = splitview;\n        return () => {\n            splitview.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!splitviewRef.current) {\n            return;\n        }\n        splitviewRef.current.updateOptions({\n            frameworkComponents: props.components,\n        });\n    }, [props.components]);\n    return (React.createElement(\"div\", { className: props.className, style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nSplitviewReact.displayName = 'SplitviewComponent';\n","import { GridviewApi, GridviewPanel, } from 'dockview-core';\nimport { ReactPart } from '../react';\nexport class ReactGridPanelView extends GridviewPanel {\n    constructor(id, component, reactComponent, reactPortalStore) {\n        super(id, component);\n        this.reactComponent = reactComponent;\n        this.reactPortalStore = reactPortalStore;\n    }\n    getComponent() {\n        var _a;\n        return new ReactPart(this.element, this.reactPortalStore, this.reactComponent, {\n            params: ((_a = this._params) === null || _a === void 0 ? void 0 : _a.params) || {},\n            api: this.api,\n            containerApi: new GridviewApi(this._params.accessor),\n        });\n    }\n}\n","import * as React from 'react';\nimport { GridviewComponent, Orientation, GridviewApi, } from 'dockview-core';\nimport { ReactGridPanelView } from './view';\nimport { usePortalsLifecycle } from '../react';\nexport const GridviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const gridviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    React.useEffect(() => {\n        if (!domRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const gridview = new GridviewComponent({\n            parentElement: domRef.current,\n            proportionalLayout: typeof props.proportionalLayout === 'boolean'\n                ? props.proportionalLayout\n                : true,\n            orientation: props.orientation || Orientation.HORIZONTAL,\n            frameworkComponents: props.components,\n            frameworkComponentFactory: {\n                createComponent: (id, componentId, component) => {\n                    return new ReactGridPanelView(id, componentId, component, {\n                        addPortal,\n                    });\n                },\n            },\n            styles: props.hideBorders\n                ? { separatorBorder: 'transparent' }\n                : undefined,\n        });\n        const { clientWidth, clientHeight } = domRef.current;\n        gridview.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api: new GridviewApi(gridview) });\n        }\n        gridviewRef.current = gridview;\n        return () => {\n            gridview.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!gridviewRef.current) {\n            return;\n        }\n        gridviewRef.current.updateOptions({\n            frameworkComponents: props.components,\n        });\n    }, [props.components]);\n    return (React.createElement(\"div\", { className: props.className, style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nGridviewReact.displayName = 'GridviewComponent';\n","import { ReactPart } from '../react';\nexport class PanePanelSection {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._element = document.createElement('div');\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            params: parameters.params,\n            api: parameters.api,\n            title: parameters.title,\n            containerApi: parameters.containerApi,\n        });\n    }\n    toJSON() {\n        return {\n            id: this.id,\n        };\n    }\n    update(params) {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update(params.params);\n    }\n    dispose() {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import * as React from 'react';\nimport { PaneviewComponent, PaneviewApi, } from 'dockview-core';\nimport { usePortalsLifecycle } from '../react';\nimport { PanePanelSection } from './view';\nexport const PaneviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const paneviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    React.useEffect(() => {\n        const createComponent = (id, _componentId, component) => new PanePanelSection(id, component, {\n            addPortal,\n        });\n        const paneview = new PaneviewComponent({\n            parentElement: domRef.current,\n            frameworkComponents: props.components,\n            components: {},\n            headerComponents: {},\n            disableDnd: props.disableDnd,\n            headerframeworkComponents: props.headerComponents,\n            frameworkWrapper: {\n                header: {\n                    createComponent,\n                },\n                body: {\n                    createComponent,\n                },\n            },\n            showDndOverlay: props.showDndOverlay,\n        });\n        const api = new PaneviewApi(paneview);\n        const { clientWidth, clientHeight } = domRef.current;\n        paneview.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api });\n        }\n        paneviewRef.current = paneview;\n        return () => {\n            paneview.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return;\n        }\n        paneviewRef.current.updateOptions({\n            frameworkComponents: props.components,\n        });\n    }, [props.components]);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return;\n        }\n        paneviewRef.current.updateOptions({\n            headerframeworkComponents: props.headerComponents,\n        });\n    }, [props.headerComponents]);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return () => {\n                //\n            };\n        }\n        const paneview = paneviewRef.current;\n        const disposable = paneview.onDidDrop((event) => {\n            if (props.onDidDrop) {\n                props.onDidDrop(Object.assign(Object.assign({}, event), { api: new PaneviewApi(paneview) }));\n            }\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.onDidDrop]);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return;\n        }\n        paneviewRef.current.updateOptions({\n            showDndOverlay: props.showDndOverlay,\n        });\n    }, [props.showDndOverlay]);\n    return (React.createElement(\"div\", { className: props.className, style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nPaneviewReact.displayName = 'PaneviewComponent';\n","import {\n    IGridviewPanelProps,\n    Orientation,\n    GridviewReact,\n    GridviewReadyEvent,\n    GridviewApi,\n} from 'dockview';\nimport * as React from 'react';\nimport { Console, Line } from '../ui/console/console';\n\nconst components = {\n    default: (props: IGridviewPanelProps<{ title: string }>) => {\n        return <div style={{ padding: '20px' }}>{props.params.title}</div>;\n    },\n};\n\nexport const EventsGridview = () => {\n    const [lines, setLines] = React.useState<Line[]>([]);\n    const [checked, setChecked] = React.useState<boolean>(false);\n\n    const [api, setApi] = React.useState<GridviewApi | undefined>();\n\n    React.useEffect(() => {\n        if (!api) {\n            return () => {\n                //noop\n            };\n        }\n\n        const disposables = [\n            api.onDidAddPanel((panel) => {\n                setLines((lines) => [\n                    ...lines,\n                    {\n                        timestamp: new Date(),\n                        text: `onDidAddPanel: ${panel.id}`,\n                    },\n                ]);\n            }),\n            api.onDidRemovePanel((panel) => {\n                setLines((lines) => [\n                    ...lines,\n                    {\n                        timestamp: new Date(),\n                        text: `onDidRemovePanel: ${panel.id}`,\n                    },\n                ]);\n            }),\n            api.onDidActivePanelChange((panel) => {\n                setLines((lines) => [\n                    ...lines,\n                    {\n                        timestamp: new Date(),\n                        text: `onDidActivePanelChange: ${panel?.id}`,\n                    },\n                ]);\n            }),\n            api.onDidLayoutChange((panel) => {\n                setLines((lines) => [\n                    ...lines,\n                    { timestamp: new Date(), text: `onDidLayoutChange` },\n                ]);\n            }),\n            api.onDidLayoutFromJSON((panel) => {\n                setLines((lines) => [\n                    ...lines,\n                    { timestamp: new Date(), text: `onDidLayoutFromJSON` },\n                ]);\n            }),\n        ];\n\n        return () => {\n            disposables.forEach((disposable) => disposable.dispose());\n        };\n    }, [api]);\n\n    React.useEffect(() => {\n        if (!api) {\n            return;\n        }\n\n        setLines((lines) => [\n            ...lines,\n            {\n                timestamp: new Date(),\n                text: `Rebuilding view fromJSON:${checked}`,\n                css: { color: 'yellow', backgroundColor: 'grey' },\n            },\n        ]);\n\n        if (checked) {\n            api.fromJSON({\n                grid: {\n                    root: {\n                        type: 'branch',\n                        data: [\n                            {\n                                type: 'branch',\n                                data: [\n                                    {\n                                        type: 'leaf',\n                                        data: {\n                                            id: 'panel_3',\n                                            component: 'default',\n                                            params: { title: 'Panel 3' },\n                                            snap: false,\n                                        },\n                                        size: 394,\n                                    },\n                                    {\n                                        type: 'branch',\n                                        data: [\n                                            {\n                                                type: 'leaf',\n                                                data: {\n                                                    id: 'panel_5',\n                                                    component: 'default',\n                                                    params: {\n                                                        title: 'Panel 5',\n                                                    },\n                                                    snap: false,\n                                                },\n                                                size: 50,\n                                            },\n                                            {\n                                                type: 'branch',\n                                                data: [\n                                                    {\n                                                        type: 'leaf',\n                                                        data: {\n                                                            id: 'panel_6',\n                                                            component:\n                                                                'default',\n                                                            params: {\n                                                                title: 'Panel 6',\n                                                            },\n                                                            minimumWidth: 10,\n                                                            snap: false,\n                                                        },\n                                                        size: 131,\n                                                    },\n                                                    {\n                                                        type: 'leaf',\n                                                        data: {\n                                                            id: 'panel_8',\n                                                            component:\n                                                                'default',\n                                                            params: {\n                                                                title: 'Panel 8',\n                                                            },\n                                                            minimumWidth: 10,\n                                                            snap: false,\n                                                        },\n                                                        size: 131,\n                                                    },\n                                                    {\n                                                        type: 'leaf',\n                                                        data: {\n                                                            id: 'panel_7',\n                                                            component:\n                                                                'default',\n                                                            params: {\n                                                                title: 'Panel 7',\n                                                            },\n                                                            minimumWidth: 10,\n                                                            snap: false,\n                                                        },\n                                                        size: 132,\n                                                    },\n                                                ],\n                                                size: 50,\n                                            },\n                                        ],\n                                        size: 394,\n                                    },\n                                ],\n                                size: 100,\n                            },\n                            {\n                                type: 'leaf',\n                                data: {\n                                    id: 'panel_2',\n                                    component: 'default',\n                                    params: { title: 'Panel 2' },\n                                    snap: false,\n                                },\n                                size: 100,\n                            },\n                            {\n                                type: 'branch',\n                                data: [\n                                    {\n                                        type: 'leaf',\n                                        data: {\n                                            id: 'panel_1',\n                                            component: 'default',\n                                            params: { title: 'Panel 1' },\n                                            snap: false,\n                                        },\n                                        size: 394,\n                                    },\n                                    {\n                                        type: 'leaf',\n                                        data: {\n                                            id: 'panel_4',\n                                            component: 'default',\n                                            params: { title: 'Panel 4' },\n                                            snap: false,\n                                        },\n                                        size: 394,\n                                    },\n                                ],\n                                size: 100,\n                            },\n                        ],\n                        size: 788,\n                    },\n                    width: 788,\n                    height: 300,\n                    orientation: Orientation.VERTICAL,\n                },\n                activePanel: 'panel_8',\n            });\n            return;\n        }\n\n        api.clear();\n        api.orientation = Orientation.VERTICAL;\n\n        api.addPanel({\n            id: 'panel_1',\n            component: 'default',\n            params: {\n                title: 'Panel 1',\n            },\n        });\n\n        api.addPanel({\n            id: 'panel_2',\n            component: 'default',\n            params: {\n                title: 'Panel 2',\n            },\n        });\n\n        api.addPanel({\n            id: 'panel_3',\n            component: 'default',\n            params: {\n                title: 'Panel 3',\n            },\n        });\n\n        console.log('sdf');\n\n        api.addPanel({\n            id: 'panel_4',\n            component: 'default',\n            params: {\n                title: 'Panel 4',\n            },\n            position: { referencePanel: 'panel_1', direction: 'right' },\n        });\n\n        api.addPanel({\n            id: 'panel_5',\n            component: 'default',\n            params: {\n                title: 'Panel 5',\n            },\n            position: { referencePanel: 'panel_3', direction: 'right' },\n        });\n\n        api.addPanel({\n            id: 'panel_6',\n            component: 'default',\n            params: {\n                title: 'Panel 6',\n            },\n            position: { referencePanel: 'panel_5', direction: 'below' },\n            minimumWidth: 10,\n        });\n\n        api.addPanel({\n            id: 'panel_7',\n            component: 'default',\n            params: {\n                title: 'Panel 7',\n            },\n            position: { referencePanel: 'panel_6', direction: 'right' },\n            minimumWidth: 10,\n        });\n\n        api.addPanel({\n            id: 'panel_8',\n            component: 'default',\n            params: {\n                title: 'Panel 8',\n            },\n            position: { referencePanel: 'panel_6', direction: 'right' },\n            minimumWidth: 10,\n        });\n    }, [api, checked]);\n\n    const onReady = (event: GridviewReadyEvent) => {\n        setApi(event.api);\n    };\n\n    return (\n        <>\n            <label>\n                <input\n                    type=\"checkbox\"\n                    checked={checked}\n                    onChange={(e) => setChecked(e.target.checked)}\n                />\n                <span>{'fromJSON'}</span>\n            </label>\n            <div\n                style={{\n                    height: '300px',\n                    backgroundColor: 'rgb(30,30,30)',\n                    color: 'white',\n                    margin: '20px 0px',\n                }}\n            >\n                <GridviewReact\n                    components={components}\n                    onReady={onReady}\n                    proportionalLayout={false}\n                    orientation={Orientation.VERTICAL}\n                    className=\"dockview-theme-abyss\"\n                />\n            </div>\n\n            <Console lines={lines} />\n        </>\n    );\n};\n","import {\n    IGridviewPanelProps,\n    Orientation,\n    GridviewReact,\n    GridviewReadyEvent,\n} from 'dockview';\nimport * as React from 'react';\n\nconst components = {\n    default: (props: IGridviewPanelProps<{ title: string }>) => {\n        return <div style={{ padding: '20px' }}>{props.params.title}</div>;\n    },\n};\n\nexport const SimpleGridview = () => {\n    const onReady = (event: GridviewReadyEvent) => {\n        event.api.addPanel({\n            id: 'panel_1',\n            component: 'default',\n            params: {\n                title: 'Panel 1',\n            },\n        });\n\n        event.api.addPanel({\n            id: 'panel_2',\n            component: 'default',\n            params: {\n                title: 'Panel 2',\n            },\n        });\n\n        event.api.addPanel({\n            id: 'panel_3',\n            component: 'default',\n            params: {\n                title: 'Panel 3',\n            },\n        });\n\n        event.api.addPanel({\n            id: 'panel_4',\n            component: 'default',\n            params: {\n                title: 'Panel 4',\n            },\n            position: { referencePanel: 'panel_1', direction: 'right' },\n        });\n\n        event.api.addPanel({\n            id: 'panel_5',\n            component: 'default',\n            params: {\n                title: 'Panel 5',\n            },\n            position: { referencePanel: 'panel_3', direction: 'right' },\n        });\n\n        event.api.addPanel({\n            id: 'panel_6',\n            component: 'default',\n            params: {\n                title: 'Panel 6',\n            },\n            position: { referencePanel: 'panel_5', direction: 'below' },\n            minimumWidth: 10,\n        });\n\n        event.api.addPanel({\n            id: 'panel_7',\n            component: 'default',\n            params: {\n                title: 'Panel 7',\n            },\n            position: { referencePanel: 'panel_6', direction: 'right' },\n            minimumWidth: 10,\n        });\n\n        event.api.addPanel({\n            id: 'panel_8',\n            component: 'default',\n            params: {\n                title: 'Panel 8',\n            },\n            position: { referencePanel: 'panel_6', direction: 'right' },\n            minimumWidth: 10,\n        });\n    };\n\n    return (\n        <GridviewReact\n            components={components}\n            onReady={onReady}\n            proportionalLayout={false}\n            orientation={Orientation.VERTICAL}\n            className=\"dockview-theme-abyss\"\n        />\n    );\n};\n","import * as React from 'react';\nimport './console.scss';\n\nconst formatTime = (now: Date) => {\n    const pad = (x: number) => (x < 10 ? `0${x}` : `${x}`);\n\n    return `${pad(now.getHours())}:${pad(now.getMinutes())}:${pad(\n        now.getSeconds()\n    )}.${now.getMilliseconds()}`;\n};\n\nexport interface Line {\n    timestamp: Date;\n    text: string;\n    css?: React.CSSProperties;\n}\n\nexport interface IConsoleProps {\n    lines: Line[];\n}\n\nexport const Console = (props: IConsoleProps) => {\n    const ref = React.useRef<HTMLDivElement>();\n\n    React.useLayoutEffect(() => {\n        if (!ref.current) {\n            return;\n        }\n\n        ref.current.scrollTop = Math.max(\n            0,\n            ref.current.scrollHeight - ref.current.clientHeight\n        );\n    }, [props.lines]);\n\n    return (\n        <div ref={ref} className=\"console-container\">\n            {props.lines.map((line, i) => {\n                return (\n                    <div key={i} className=\"console-line\">\n                        <span className=\"console-line-timestamp\">\n                            {formatTime(line.timestamp)}\n                        </span>\n                        <span className=\"console-line-text\" style={line.css}>\n                            {line.text}\n                        </span>\n                    </div>\n                );\n            })}\n        </div>\n    );\n};\n","\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\n/* @jsxFrag React.Fragment */\n\nimport React from 'react';\nimport { mdx } from '@mdx-js/react';\n\n\nexport const frontMatter = {\n\tdescription: 'Gridview Documentation'\n};\nexport const contentTitle = 'Gridview';\nexport const metadata = {\n  \"unversionedId\": \"components/gridview\",\n  \"id\": \"version-1.7.0/components/gridview\",\n  \"title\": \"Gridview\",\n  \"description\": \"Gridview Documentation\",\n  \"source\": \"@site/versioned_docs/version-1.7.0/components/gridview.mdx\",\n  \"sourceDirName\": \"components\",\n  \"slug\": \"/components/gridview\",\n  \"permalink\": \"/docs/components/gridview\",\n  \"draft\": false,\n  \"editUrl\": \"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/versioned_docs/version-1.7.0/components/gridview.mdx\",\n  \"tags\": [],\n  \"version\": \"1.7.0\",\n  \"frontMatter\": {\n    \"description\": \"Gridview Documentation\"\n  },\n  \"sidebar\": \"tutorialSidebar\",\n  \"previous\": {\n    \"title\": \"Dockview\",\n    \"permalink\": \"/docs/components/dockview\"\n  },\n  \"next\": {\n    \"title\": \"Paneview\",\n    \"permalink\": \"/docs/components/paneview\"\n  }\n};\nexport const assets = {\n\n};\n\nimport { SimpleGridview } from '@site/src/components/simpleGridview';\nimport { EventsGridview } from '@site/src/components/gridview/events';\nimport Link from '@docusaurus/Link';\nexport const toc = [{\n  value: 'Introduction',\n  id: 'introduction',\n  level: 2\n}, {\n  value: 'GridviewReact Component',\n  id: 'gridviewreact-component',\n  level: 2\n}, {\n  value: 'Gridview API',\n  id: 'gridview-api',\n  level: 2\n}, {\n  value: 'Gridview Panel API',\n  id: 'gridview-panel-api',\n  level: 2\n}, {\n  value: 'Events',\n  id: 'events',\n  level: 2\n}];\n\nconst layoutProps = {\n  toc\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"gridview\"\n    }}>{`Gridview`}</h1>\n    <h2 {...{\n      \"id\": \"introduction\"\n    }}>{`Introduction`}</h2>\n    <div style={{\n      height: '300px',\n      backgroundColor: 'rgb(30,30,30)',\n      color: 'white',\n      margin: '20px 0px'\n    }}>\n    <SimpleGridview mdxType=\"SimpleGridview\" />\n    </div>\n    <h2 {...{\n      \"id\": \"gridviewreact-component\"\n    }}>{`GridviewReact Component`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`import { ReactGridview } from 'dockview';\n`}</code></pre>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Property`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Optional`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Default`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`onReady`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`(event: SplitviewReadyEvent) => void`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`No`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`components`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`object`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`No`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`orientation`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Orientation`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Yes`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Orientation.HORIZONTAL`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`proportionalLayout`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`boolean`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Yes`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`true`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`See `}<Link to=\"../basics/#proportional-layout\" mdxType=\"Link\">{`Proportional layout`}</Link></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`hideBorders`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`boolean`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Yes`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`false`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`className`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Yes`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`''`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`disableAutoResizing`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`boolean`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Yes`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`false`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`See `}<Link to=\"../basics/#auto-resizing\" mdxType=\"Link\">{`Auto Resizing`}</Link></td>\n        </tr>\n      </tbody>\n    </table>\n    <h2 {...{\n      \"id\": \"gridview-api\"\n    }}>{`Gridview API`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`const MyComponent = (props: IGridviewPanelProps<{ title: string }>) => {\n    // props.containerApi...\n\n    return <div>{\\`My first panel has the title: \\${props.params.title}\\`}</div>;\n};\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`const onReady = (event: GridviewReadyEvent) => {\n    // event.api...\n};\n`}</code></pre>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Property`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`height`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`number`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Component pixel height`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`width`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`number`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Component pixel width`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`minimumHeight`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`number`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`maximumHeight`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`number`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`maximumWidth`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`number`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`maximumWidth`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`number`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`length`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`number`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Number of panels`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`panels`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`ISplitviewPanel[]`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`all panels`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`orientation`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`Orientation`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`onDidLayoutChange`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`Event<void>`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Fires on layout change`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`onDidLayoutFromJSON`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`Event<void>`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Fires of layout change caused by a fromJSON deserialization call`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`onDidAddPanel`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`Event<IGridviewPanel>`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Fires when a view is added`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`onDidRemovePanel`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`Event<IGridviewPanel>`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Fires when a view is removed`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`onDidActivePanelChange`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`Event<IGridviewPanel \\\\| undefined>`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Fires when the active group changes`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`addPanel`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`addPanel(options: AddComponentOptions): IGridviewPanel`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`removePanel`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`(panel: IGridviewPanel, sizing?: Sizing): void`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`movePanel`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`(panel: IGridviewPanel, options: {direction: Direction, refernece:string, size?: number}): void`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`getPanel`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`(id: string) \\\\| IGridviewPanel \\\\| undefined`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`updateOptions`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`(options:SplitviewComponentUpdateOptions): void`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`focus`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`(): void`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Focus the active panel, if exists`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`layout`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`(width: number, height:number): void`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><Link to=\"../basics/#auto-resizing\" mdxType=\"Link\">{`Auto Resizing`}</Link></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`fromJSON`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`(data: SerializedGridview): void`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><Link to=\"../basics/#serialization\" mdxType=\"Link\">{`Serialization`}</Link></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`toJSON`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`(): SerializedGridview`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><Link to=\"../basics/#serialization\" mdxType=\"Link\">{`Serialization`}</Link></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`clear`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`(): void`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Clears the current layout`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h2 {...{\n      \"id\": \"gridview-panel-api\"\n    }}>{`Gridview Panel API`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`const MyComponent = (props: IGridviewPanelProps<{ title: string }>) => {\n    // props.api...\n\n    return <div>{\\`My first panel has the title: \\${props.params.title}\\`}</div>;\n};\n`}</code></pre>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Property`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`id`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`string`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Panel id`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`isFocused`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`boolean`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Is panel focsed`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`isActive`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`boolean`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Is panel active`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`isVisible`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`boolean`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Is panel visible`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`width`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`number`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Panel width`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`height`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`number`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Panel height`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`onDidDimensionsChange`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`Event<PanelDimensionChangeEvent>`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`onDidFocusChange`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`Event<FocusEvent>`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`onDidVisibilityChange`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`Event<VisibilityEvent>`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`onDidActiveChange`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`Event<ActiveEvent>`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`onDidConstraintsChange`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`onDidConstraintsChange: Event<PanelConstraintChangeEvent>`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`setVisible`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`(isVisible: boolean): void`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`setActive`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`(): void`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`setConstraints`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`(value: PanelConstraintChangeEvent2): void;`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`setSize`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`(event: SizeEvent): void`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n      </tbody>\n    </table>\n    <h2 {...{\n      \"id\": \"events\"\n    }}>{`Events`}</h2>\n    <p><inlineCode parentName=\"p\">{`GridviewReact`}</inlineCode>{` exposes a number of events that the developer can listen to and below is a simple example with a log panel showing those events that occur.`}</p>\n    <EventsGridview mdxType=\"EventsGridview\" />\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","sourceSymbolKeys","prototype","propertyIsEnumerable","call","MDXContext","useMDXComponents","components","contextComponents","allComponents","MDXProvider","props","Provider","children","TYPE_PROP_NAME","DEFAULTS","inlineCode","wrapper","_ref","MDXCreateElement","ref","propComponents","mdxType","originalType","parentName","etc","type","Component","concat","createElement","args","argsLength","createElementArgArray","Array","newProps","hasOwnProperty","displayName","TransferObject","constructor","PanelTransfer","viewId","groupId","panelId","super","this","PaneTransfer","paneId","LocalSelectionTransfer","static","INSTANCE","hasData","proto","clearData","undefined","data","getData","setData","getPanelData","panelTransfer","getInstance","getPaneData","paneTransfer","Event","Disposable","any","_len","_key","listener","disposables","map","child","dispose","d","Emitter","options","_listeners","_disposed","event","_event","_a","replay","_last","index","splice","fire","e","addDisposableWindowListener","element","addEventListener","removeEventListener","addDisposableListener","TickDelayedEvent","_onFired","onEvent","timer","clearTimeout","setTimeout","NONE","CompositeDisposable","isDisposed","_isDisposed","_len2","_key2","addDisposables","_len3","_key3","arg","MutableDisposable","_disposable","disposable","removeClasses","classes","classname","classList","contains","remove","addClasses","add","toggleClass","className","isToggled","hasClass","isAncestor","testChild","testAncestor","parentNode","getElementsByTagName","tag","slice","document","trackFocus","FocusTracker","_onDidFocus","onDidFocus","_onDidBlur","onDidBlur","hasFocus","activeElement","loosingFocus","onFocus","onBlur","window","_refreshStateHandler","HTMLElement","refreshState","tail","arr","Error","sequenceEquals","arr1","arr2","pushToStart","unshift","pushToEnd","clamp","min","max","Math","sequentialNumberGenerator","next","toString","range","from","to","result","ViewItem","size","_size","cachedVisibleSize","_cachedVisibleSize","visible","minimumSize","view","viewMinimumSize","maximumSize","viewMaximumSize","priority","snap","enabled","container","style","pointerEvents","setVisible","toggle","Orientation","SashState","LayoutPriority","Sizing","Distribute","Split","Invisible","Splitview","orthogonalSize","_orthogonalSize","views","proportions","_proportions","orientation","_orientation","tmp","HORIZONTAL","reduce","r","item","Number","POSITIVE_INFINITY","startSnappingEnabled","_startSnappingEnabled","updateSashEnablement","endSnappingEnabled","_endSnappingEnabled","_this","sashes","contentSize","_onDidSashEnd","onDidSashEnd","_onDidAddView","onDidAddView","_onDidRemoveView","onDidRemoveView","resize","delta","sizes","lowPriorityIndexes","highPriorityIndexes","overloadMinDelta","overloadMaxDelta","snapBefore","snapAfter","x","NEGATIVE_INFINITY","upIndexes","downIndexes","upItems","upSizes","downItems","downSizes","minDeltaUp","_","maxDeltaUp","maxDeltaDown","minDeltaDown","minDelta","maxDelta","snapped","snapView","limitDelta","actualDelta","deltaUp","viewDelta","deltaDown","createContainer","proportionalLayout","viewContainer","createViewContainer","sashContainer","createSashContainer","appendChild","styles","descriptor","viewDescriptor","sizing","addView","saveProportions","separatorBorder","removeProperty","setProperty","isViewVisible","setViewVisible","viewItem","distributeEmptySpace","layoutViews","getViewSize","resizeView","indexes","Low","High","round","relayout","getViews","onDidChange","skipLayout","viewSize","newSize","removeChild","insertBefore","sash","onStart","iframes","iframe","start","clientX","clientY","sashIndex","array","fn","firstIndex","s","snapBeforeIndex","findFirstSnapIndex","snapAfterIndex","snappedViewItem","halfSize","floor","mousemove","mousemoveEvent","end","sashItem","distributeViewSizes","flexibleViewItems","flexibleSize","removeView","getViewCachedVisibleSize","moveView","layout","previousSize","lowPriorityIndex","emptyDelta","sum","offset","left","top","VERTICAL","width","height","previous","collapsesDown","expandsDown","reverseViews","reverse","collapsesUp","expandsUp","position","snappedBefore","snappedAfter","updateSash","MINIMUM","MAXIMUM","DISABLED","ENABLED","state","orientationClassname","Paneview","splitview","paneItems","skipAnimation","_onDidChange","getPanes","pane","onDidChangeExpansionState","setupAnimation","paneItem","addPane","removePane","skipDispose","animationTimer","LeafNode","minimumWidth","maximumWidth","minimumHeight","maximumHeight","minimumOrthogonalSize","maximumOrthogonalSize","BranchNode","c","Normal","priorities","some","p","childDescriptors","_childrenDisposable","childDescriptor","node","setupChildrenEvents","isChildVisible","setChildVisible","moveChild","_removeChild","_addChild","getChildSize","resizeChild","addChild","getChildCachedVisibleSize","findLeaf","candiateNode","last","flipNode","orthogonal","totalSize","childSize","getGridLocation","parentElement","test","el","firstElementChild","lastElementChild","nextElementSibling","indexInParent","getRelativeLocation","rootOrientation","location","direction","getLocationOrientation","directionOrientation","getDirectionOrientation","rest","_index","serializeBranchNode","box","isGridBranchNode","toJSON","Gridview","_root","root","serialize","getView","clear","deserialize","json","deserializer","_deserialize","_deserializeNode","isRoot","serializedChild","fromJSON","oldRoot","insertOrthogonalSplitviewAtRoot","childReference","progmaticSelect","getNode","_getViews","nodeCachedVisibleSize","path","n","l","parent","parentLocation","pathToParent","grandParent","parentIndex","__","newSiblingSize","newSiblingCachedVisibleSize","newParent","newSibling","sibling","isSiblingVisible","siblingSizing","SplitviewApi","component","panels","onDidLayoutFromJSON","onDidLayoutChange","updateOptions","removePanel","panel","focus","getPanel","id","addPanel","movePanel","PaneviewApi","onDidDrop","emitter","assign","api","GridviewApi","onDidAddPanel","onDidAddGroup","onDidRemovePanel","onDidRemoveGroup","onDidActivePanelChange","onDidActiveGroupChange","groups","force","DockviewApi","totalPanels","activePanel","activeGroup","getTabHeight","tabHeight","setTabHeight","getGroupPanel","addGroup","moveToNext","moveToPrevious","closeAllGroups","removeGroup","group","getGroup","DragAndDropObserver","callbacks","registerListeners","onDragEnter","preventDefault","onDragOver","onDragLeave","onDragEnd","onDrop","directionToPosition","positionToDirection","Droptarget","_state","_onDrop","acceptedTargetZonesSet","Set","acceptedTargetZones","clientWidth","clientHeight","rect","currentTarget","getBoundingClientRect","y","quadrant","calculateQuadrant","canDisplayOverlay","targetElement","overlayElement","append","toggleClasses","setState","removeDropTarget","stopPropagation","nativeEvent","_b","_c","_d","isSmallX","isSmallY","isLeft","isRight","isTop","isBottom","rightClass","leftClass","topClass","bottomClass","overlayModel","translate","transform","overlayType","_e","_f","isPercentage","activationSize","maybeNumber","fallback","threshold","xp","yp","has","calculateQuadrantAsPercentage","calculateQuadrantAsPixels","ContentContainer","_element","tabIndex","show","display","hide","openPanel","content","_width","_height","closePanel","DockviewDropTargets","DragHandler","_onDragStart","onDragStart","configure","dataTransfer","effectAllowed","Tab","accessor","_onChanged","onChanged","_onDropped","draggable","defaultPrevented","droptarget","locked","model","setActive","isActive","setContent","part","GroupDragHandler","accessorId","getComputedStyle","bgColor","getPropertyValue","color","ghostElement","backgroundColor","padding","fontSize","lineHeight","borderRadius","textContent","body","setDragImage","addGhostImage","VoidContainer","doSetGroupActive","handler","voidDropTarget","Panel","TabsContainer","tabs","hidden","_hidden","setActionElement","actions","actionContainer","tab","selectedIndex","findIndex","singleTabMode","tabContainer","voidContainer","button","_isGroupActive","addTab","delete","tabToRemove","setActivePanel","isActivePanel","find","tabToAdd","alreadyFocused","isContentFocused","skipFocus","DockviewGroupPanelModel","_activePanel","_locked","_panels","isEmpty","hasWatermark","watermark","header","tabsContainer","contentContainer","groupPanel","mostRecentlyUsed","_onMove","onMove","_onDidDrop","_onDidAddPanel","_onDidRemovePanel","_onDidActivePanelChange","dropTarget","hideHeader","handleDropEvent","initialize","doAddPanel","updateContainer","createGroupControlElement","_control","init","containerApi","activeView","normalizedIndex","suppressRoll","containsPanel","includes","_params","update","skipSetPanelActive","skipSetGroupActive","updateParentGroup","doSetActivePanel","groupItemOrId","panelToRemove","_removePanel","closeAllPanels","arrPanelCpy","doClose","isPanelActive","updateActions","isGroupActive","doRemovePanel","nextPanel","skipSetActive","hasExistingPanel","updateMru","createWatermarkComponent","showDndOverlay","itemId","Resizable","cb","observer","ResizeObserver","entires","requestAnimationFrame","firstEntry","observe","unobserve","disconnect","watchElementResize","entry","contentRect","nextLayoutId","toTarget","BaseGrid","_id","_groups","values","gridview","_activeGroup","Map","_onDidLayoutChange","_onDidRemoveGroup","_onDidAddGroup","_onDidActiveGroupChange","_bufferOnDidLayoutChange","isVisible","doAddGroup","doRemoveGroup","get","skipActive","forceResize","PanelApiImpl","isFocused","_isFocused","_isActive","_isVisible","panelUpdatesDisposable","_onDidDimensionChange","onDidDimensionsChange","_onDidChangeFocus","onDidFocusChange","_onFocusEvent","onFocusEvent","_onDidVisibilityChange","onDidVisibilityChange","_onVisibilityChange","onVisibilityChange","_onDidActiveChange","onDidActiveChange","_onActiveChange","onActiveChange","_onUpdateParameters","onUpdateParameters","parameters","params","updateParameters","SplitviewPanelApiImpl","_onDidConstraintsChangeInternal","onDidConstraintsChangeInternal","_onDidConstraintsChange","onDidConstraintsChange","_onDidSizeChange","onDidSizeChange","setConstraints","setSize","PaneviewPanelApiImpl","_pane","_onDidExpansionChange","onDidExpansionChange","_onMouseEnter","onMouseEnter","_onMouseLeave","onMouseLeave","setExpanded","isExpanded","BasePanelView","outline","overflow","getComponent","PaneviewPanel","headerSize","_minimumBodySize","_maximumBodySize","minimumBodySize","maximumBodySize","headerVisible","_headerVisible","headerComponent","isHeaderVisible","_onDidChangeExpansionState","_isExpanded","expandedSize","ev","isPanelExpanded","renderOnce","expanded","bodyPart","getBodyComponent","headerPart","getHeaderComponent","title","minHeight","maxHeight","DraggablePaneviewPanel","disableDnd","initDragFeatures","existingPanel","allPanels","fromIndex","toIndex","GridviewPanelApiImpl","GridviewPanel","_priority","_snap","_minimumWidth","_evaluatedMinimumWidth","updateConstraints","_minimumHeight","_evaluatedMinimumHeight","_maximumHeight","_evaluatedMaximumHeight","_maximumWidth","_evaluatedMaximumWidth","MAX_SAFE_INTEGER","maximum","minimum","DockviewGroupPanel","_model","DockviewPanelApiImpl","isOldGroupActive","_group","_onDidGroupChange","_onDidTitleChange","onDidTitleChange","onDidGroupChange","setTitle","close","DockviewPanel","_title","contentComponent","tabComponent","isPanelVisible","createSvgElementFromPath","svg","createElementNS","setAttributeNS","viewbox","createCloseButton","DefaultTab","_content","_actionContainer","_list","action","render","onGroupChange","onPanelVisibleChange","_isPanelVisible","createComponent","componentName","frameworkComponents","createFrameworkComponent","FrameworkComponent","DockviewPanelModel","_tab","createContentComponent","createTabComponent","frameworkComponentFactory","tabComponents","frameworkTabComponents","DefaultDockviewDeserialzier","panelData","viewData","defaultTabComponent","Watermark","emptySpace","flexGrow","actionsContainer","closeAnchor","_api","_visible","isOneGroup","DockviewComponent","flatMap","_options","nextGroupId","_deserializer","_onDidLayoutFromJSON","updateWatermark","watermarkComponent","watermarkFrameworkComponent","Edge","moveGroupOrPanel","orthogonalize","createGroupAtLocation","hasOrientationChanged","includePanel","grid","collection","isArray","createGroup","hasActiveGroup","hasActivePanel","entries","referenceGroup","referencePanel","findGroup","isPanelOptionsWithGroup","createPanel","relativeLocation","removeEmptyGroup","watermarkContainer","isGroupOptionsWithGroup","sourceGroup","referenceLocation","targetLocation","targetParentLocation","sourceLocation","sourceParentLocation","targetGroup","updatedReferenceLocation","groupItem","dropLocation","moveGroup","isGroupAlreadyFocused","console","warn","set","GridviewComponent","_onDidLayoutfromJSON","serializedGridview","queue","registerPanel","f","removedPanel","reference","SplitviewComponent","_splitview","v","frameworkWrapper","doAddView","serializedSplitview","DefaultHeader","_expandedIcon","_collapsedIcon","apiRef","_expander","updateIcon","PaneFramework","PaneviewComponent","paneview","_paneview","_viewDisposables","headerComponents","headerframeworkComponents","serializedPaneview","SplitviewPanel","_minimumSize","_evaluatedMinimumSize","_maximumSize","_evaluatedMaximumSize","ReactComponentBridge","triggerRender","React","_props","componentProps","current","Date","now","uniquePortalKeyGenerator","ReactPartContext","ReactPart","portalStore","context","_initialProps","disposed","createPortal","componentInstance","bridgeComponent","portal","ReactDOM","addPortal","usePortalsLifecycle","portals","setPortals","existingPortals","ReactPanelContentPart","reactPortalStore","DockviewEmitter","ReactPanelHeaderPart","ReactWatermarkPart","ReactGroupControlsRendererPart","_part","mutableDisposable","DockviewMutableDisposable","DockviewCompositeDisposable","updatePanels","updateActivePanel","updateGroupActive","store","DEFAULT_REACT_TAB","DockviewReact","domRef","dockviewRef","factory","componentId","dockview","hideBorders","groupControlComponent","onReady","CloseButton","viewBox","focusable","__rest","t","DockviewDefaultTab","_containerApi","onClose","onClick","iconClassname","join","ReactPanelView","reactComponent","SplitviewReact","splitviewRef","ReactGridPanelView","GridviewReact","gridviewRef","PanePanelSection","PaneviewReact","paneviewRef","_componentId","default","EventsGridview","lines","setLines","checked","setChecked","setApi","timestamp","text","css","log","onChange","margin","Console","SimpleGridview","scrollTop","scrollHeight","line","pad","getHours","getMinutes","getSeconds","getMilliseconds","formatTime","frontMatter","description","contentTitle","metadata","assets","toc","level","layoutProps","MDXLayout","MDXContent","mdx","_extends","Link","isMDXComponent"],"sourceRoot":""}