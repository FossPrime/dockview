{"version":3,"file":"assets/js/common.dbb12019.js","mappings":"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","sources":["webpack://dockview-docs/../../node_modules/@mdx-js/react/dist/esm.js","webpack://dockview-docs/../dockview/dist/esm/dnd/dataTransfer.js","webpack://dockview-docs/../dockview/dist/esm/events.js","webpack://dockview-docs/../dockview/dist/esm/lifecycle.js","webpack://dockview-docs/../dockview/dist/esm/dom.js","webpack://dockview-docs/../dockview/dist/esm/math.js","webpack://dockview-docs/../dockview/dist/esm/array.js","webpack://dockview-docs/../dockview/dist/esm/splitview/core/viewItem.js","webpack://dockview-docs/../dockview/dist/esm/splitview/core/splitview.js","webpack://dockview-docs/../dockview/dist/esm/paneview/paneview.js","webpack://dockview-docs/../dockview/dist/esm/gridview/leafNode.js","webpack://dockview-docs/../dockview/dist/esm/gridview/branchNode.js","webpack://dockview-docs/../dockview/dist/esm/gridview/gridview.js","webpack://dockview-docs/../dockview/dist/esm/api/component.api.js","webpack://dockview-docs/../dockview/dist/esm/dnd/dnd.js","webpack://dockview-docs/../dockview/dist/esm/dnd/droptarget.js","webpack://dockview-docs/../dockview/dist/esm/groupview/panel/content.js","webpack://dockview-docs/../dockview/dist/esm/groupview/dnd.js","webpack://dockview-docs/../dockview/dist/esm/dnd/abstractDragHandler.js","webpack://dockview-docs/../dockview/dist/esm/groupview/tab.js","webpack://dockview-docs/../dockview/dist/esm/dnd/groupDragHandler.js","webpack://dockview-docs/../dockview/dist/esm/dnd/ghost.js","webpack://dockview-docs/../dockview/dist/esm/groupview/titlebar/voidContainer.js","webpack://dockview-docs/../dockview/dist/esm/groupview/titlebar/tabsContainer.js","webpack://dockview-docs/../dockview/dist/esm/groupview/groupview.js","webpack://dockview-docs/../dockview/dist/esm/gridview/baseComponentGridview.js","webpack://dockview-docs/../dockview/dist/esm/api/panelApi.js","webpack://dockview-docs/../dockview/dist/esm/api/gridviewPanelApi.js","webpack://dockview-docs/../dockview/dist/esm/api/groupPanelApi.js","webpack://dockview-docs/../dockview/dist/esm/dockview/dockviewPanel.js","webpack://dockview-docs/../dockview/dist/esm/actionbar/actionsContainer.js","webpack://dockview-docs/../dockview/dist/esm/svg.js","webpack://dockview-docs/../dockview/dist/esm/dockview/components/watermark/watermark.js","webpack://dockview-docs/../dockview/dist/esm/panel/componentFactory.js","webpack://dockview-docs/../dockview/dist/esm/dockview/components/tab/defaultTab.js","webpack://dockview-docs/../dockview/dist/esm/gridview/basePanelView.js","webpack://dockview-docs/../dockview/dist/esm/gridview/gridviewPanel.js","webpack://dockview-docs/../dockview/dist/esm/groupview/groupviewPanel.js","webpack://dockview-docs/../dockview/dist/esm/dockview/defaultGroupPanelView.js","webpack://dockview-docs/../dockview/dist/esm/dockview/dockviewComponent.js","webpack://dockview-docs/../dockview/dist/esm/dockview/options.js","webpack://dockview-docs/../dockview/dist/esm/gridview/gridviewComponent.js","webpack://dockview-docs/../dockview/dist/esm/splitview/splitviewComponent.js","webpack://dockview-docs/../dockview/dist/esm/api/splitviewPanelApi.js","webpack://dockview-docs/../dockview/dist/esm/api/paneviewPanelApi.js","webpack://dockview-docs/../dockview/dist/esm/paneview/paneviewPanel.js","webpack://dockview-docs/../dockview/dist/esm/paneview/draggablePaneviewPanel.js","webpack://dockview-docs/../dockview/dist/esm/paneview/defaultPaneviewHeader.js","webpack://dockview-docs/../dockview/dist/esm/paneview/paneviewComponent.js","webpack://dockview-docs/../dockview/dist/esm/splitview/splitviewPanel.js","webpack://dockview-docs/../dockview/dist/esm/react/react.js","webpack://dockview-docs/../dockview/dist/esm/react/dockview/reactContentPart.js","webpack://dockview-docs/../dockview/dist/esm/react/dockview/reactHeaderPart.js","webpack://dockview-docs/../dockview/dist/esm/react/deserializer.js","webpack://dockview-docs/../dockview/dist/esm/react/dockview/reactWatermarkPart.js","webpack://dockview-docs/../dockview/dist/esm/react/dockview/groupControlsRenderer.js","webpack://dockview-docs/../dockview/dist/esm/react/dockview/dockview.js","webpack://dockview-docs/../dockview/dist/esm/react/svg.js","webpack://dockview-docs/../dockview/dist/esm/react/dockview/defaultTab.js","webpack://dockview-docs/../dockview/dist/esm/react/splitview/view.js","webpack://dockview-docs/../dockview/dist/esm/react/splitview/splitview.js","webpack://dockview-docs/../dockview/dist/esm/react/gridview/view.js","webpack://dockview-docs/../dockview/dist/esm/react/gridview/gridview.js","webpack://dockview-docs/../dockview/dist/esm/react/paneview/view.js","webpack://dockview-docs/../dockview/dist/esm/react/paneview/paneview.js"],"sourcesContent":["import React from 'react';\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nvar isFunction = function isFunction(obj) {\n  return typeof obj === 'function';\n};\n\nvar MDXContext = /*#__PURE__*/React.createContext({});\nvar withMDXComponents = function withMDXComponents(Component) {\n  return function (props) {\n    var allComponents = useMDXComponents(props.components);\n    return /*#__PURE__*/React.createElement(Component, _extends({}, props, {\n      components: allComponents\n    }));\n  };\n};\nvar useMDXComponents = function useMDXComponents(components) {\n  var contextComponents = React.useContext(MDXContext);\n  var allComponents = contextComponents;\n\n  if (components) {\n    allComponents = isFunction(components) ? components(contextComponents) : _objectSpread2(_objectSpread2({}, contextComponents), components);\n  }\n\n  return allComponents;\n};\nvar MDXProvider = function MDXProvider(props) {\n  var allComponents = useMDXComponents(props.components);\n  return /*#__PURE__*/React.createElement(MDXContext.Provider, {\n    value: allComponents\n  }, props.children);\n};\n\nvar TYPE_PROP_NAME = 'mdxType';\nvar DEFAULTS = {\n  inlineCode: 'code',\n  wrapper: function wrapper(_ref) {\n    var children = _ref.children;\n    return /*#__PURE__*/React.createElement(React.Fragment, {}, children);\n  }\n};\nvar MDXCreateElement = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var propComponents = props.components,\n      mdxType = props.mdxType,\n      originalType = props.originalType,\n      parentName = props.parentName,\n      etc = _objectWithoutProperties(props, [\"components\", \"mdxType\", \"originalType\", \"parentName\"]);\n\n  var components = useMDXComponents(propComponents);\n  var type = mdxType;\n  var Component = components[\"\".concat(parentName, \".\").concat(type)] || components[type] || DEFAULTS[type] || originalType;\n\n  if (propComponents) {\n    return /*#__PURE__*/React.createElement(Component, _objectSpread2(_objectSpread2({\n      ref: ref\n    }, etc), {}, {\n      components: propComponents\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _objectSpread2({\n    ref: ref\n  }, etc));\n});\nMDXCreateElement.displayName = 'MDXCreateElement';\nfunction createElement (type, props) {\n  var args = arguments;\n  var mdxType = props && props.mdxType;\n\n  if (typeof type === 'string' || mdxType) {\n    var argsLength = args.length;\n    var createElementArgArray = new Array(argsLength);\n    createElementArgArray[0] = MDXCreateElement;\n    var newProps = {};\n\n    for (var key in props) {\n      if (hasOwnProperty.call(props, key)) {\n        newProps[key] = props[key];\n      }\n    }\n\n    newProps.originalType = type;\n    newProps[TYPE_PROP_NAME] = typeof type === 'string' ? type : mdxType;\n    createElementArgArray[1] = newProps;\n\n    for (var i = 2; i < argsLength; i++) {\n      createElementArgArray[i] = args[i];\n    }\n\n    return React.createElement.apply(null, createElementArgArray);\n  }\n\n  return React.createElement.apply(null, args);\n}\n\nexport { MDXContext, MDXProvider, createElement as mdx, useMDXComponents, withMDXComponents };\n","class TransferObject {\n    constructor() {\n        //\n    }\n}\nexport class PanelTransfer extends TransferObject {\n    constructor(viewId, groupId, panelId) {\n        super();\n        this.viewId = viewId;\n        this.groupId = groupId;\n        this.panelId = panelId;\n    }\n}\nexport class PaneTransfer extends TransferObject {\n    constructor(viewId, paneId) {\n        super();\n        this.viewId = viewId;\n        this.paneId = paneId;\n    }\n}\n/**\n * A singleton to store transfer data during drag & drop operations that are only valid within the application.\n */\nexport class LocalSelectionTransfer {\n    constructor() {\n        // protect against external instantiation\n    }\n    static getInstance() {\n        return LocalSelectionTransfer.INSTANCE;\n    }\n    hasData(proto) {\n        return proto && proto === this.proto;\n    }\n    clearData(proto) {\n        if (this.hasData(proto)) {\n            this.proto = undefined;\n            this.data = undefined;\n        }\n    }\n    getData(proto) {\n        if (this.hasData(proto)) {\n            return this.data;\n        }\n        return undefined;\n    }\n    setData(data, proto) {\n        if (proto) {\n            this.data = data;\n            this.proto = proto;\n        }\n    }\n}\nLocalSelectionTransfer.INSTANCE = new LocalSelectionTransfer();\nexport function getPanelData() {\n    const panelTransfer = LocalSelectionTransfer.getInstance();\n    const isPanelEvent = panelTransfer.hasData(PanelTransfer.prototype);\n    if (!isPanelEvent) {\n        return undefined;\n    }\n    return panelTransfer.getData(PanelTransfer.prototype)[0];\n}\nexport function getPaneData() {\n    const paneTransfer = LocalSelectionTransfer.getInstance();\n    const isPanelEvent = paneTransfer.hasData(PaneTransfer.prototype);\n    if (!isPanelEvent) {\n        return undefined;\n    }\n    return paneTransfer.getData(PaneTransfer.prototype)[0];\n}\n","export var Event;\n(function (Event) {\n    Event.any = (...children) => {\n        return (listener) => {\n            const disposables = children.map((child) => child(listener));\n            return {\n                dispose: () => {\n                    disposables.forEach((d) => {\n                        d.dispose();\n                    });\n                },\n            };\n        };\n    };\n})(Event || (Event = {}));\n// dumb event emitter with better typings than nodes event emitter\n// https://github.com/microsoft/vscode/blob/master/src/vs/base/common/event.ts\nexport class Emitter {\n    constructor(options) {\n        this.options = options;\n        this._listeners = [];\n        this._disposed = false;\n    }\n    get event() {\n        if (!this._event) {\n            this._event = (listener) => {\n                var _a;\n                if (((_a = this.options) === null || _a === void 0 ? void 0 : _a.replay) && this._last !== undefined) {\n                    listener(this._last);\n                }\n                this._listeners.push(listener);\n                return {\n                    dispose: () => {\n                        const index = this._listeners.indexOf(listener);\n                        if (index > -1) {\n                            this._listeners.splice(index, 1);\n                        }\n                    },\n                };\n            };\n        }\n        return this._event;\n    }\n    fire(e) {\n        this._last = e;\n        for (const listener of this._listeners) {\n            listener(e);\n        }\n    }\n    dispose() {\n        this._listeners = [];\n        this._disposed = true;\n    }\n}\nexport function addDisposableWindowListener(element, type, listener, options) {\n    element.addEventListener(type, listener, options);\n    return {\n        dispose: () => {\n            element.removeEventListener(type, listener);\n        },\n    };\n}\nexport function addDisposableListener(element, type, listener, options) {\n    element.addEventListener(type, listener, options);\n    return {\n        dispose: () => {\n            element.removeEventListener(type, listener);\n        },\n    };\n}\nexport class TickDelayedEvent {\n    constructor() {\n        this._onFired = new Emitter();\n        this.onEvent = this._onFired.event;\n    }\n    fire() {\n        if (this.timer) {\n            clearTimeout(this.timer);\n        }\n        this.timer = setTimeout(() => {\n            this._onFired.fire();\n            clearTimeout(this.timer);\n        });\n    }\n    dispose() {\n        this._onFired.dispose();\n    }\n}\n","export var Disposable;\n(function (Disposable) {\n    Disposable.NONE = {\n        dispose: () => {\n            // noop\n        },\n    };\n})(Disposable || (Disposable = {}));\nexport class CompositeDisposable {\n    constructor(...args) {\n        this.disposables = args;\n    }\n    static from(...args) {\n        return new CompositeDisposable(...args);\n    }\n    addDisposables(...args) {\n        args.forEach((arg) => this.disposables.push(arg));\n    }\n    dispose() {\n        this.disposables.forEach((arg) => arg.dispose());\n    }\n}\nexport class MutableDisposable {\n    constructor() {\n        this._disposable = Disposable.NONE;\n    }\n    set value(disposable) {\n        if (this._disposable) {\n            this._disposable.dispose();\n        }\n        this._disposable = disposable;\n    }\n    dispose() {\n        if (this._disposable) {\n            this._disposable.dispose();\n            this._disposable = Disposable.NONE;\n        }\n    }\n}\n","import { Emitter, addDisposableListener, addDisposableWindowListener, } from './events';\nimport { CompositeDisposable } from './lifecycle';\nexport function watchElementResize(element, cb) {\n    const observer = new ResizeObserver((entires) => {\n        const firstEntry = entires[0];\n        cb(firstEntry);\n    });\n    observer.observe(element);\n    return {\n        dispose: () => {\n            observer.unobserve(element);\n            observer.disconnect();\n        },\n    };\n}\nexport const removeClasses = (element, ...classes) => {\n    for (const classname of classes) {\n        if (element.classList.contains(classname)) {\n            element.classList.remove(classname);\n        }\n    }\n};\nexport const addClasses = (element, ...classes) => {\n    for (const classname of classes) {\n        if (!element.classList.contains(classname)) {\n            element.classList.add(classname);\n        }\n    }\n};\nexport const toggleClass = (element, className, isToggled) => {\n    const hasClass = element.classList.contains(className);\n    if (isToggled && !hasClass) {\n        element.classList.add(className);\n    }\n    if (!isToggled && hasClass) {\n        element.classList.remove(className);\n    }\n};\nexport function isAncestor(testChild, testAncestor) {\n    while (testChild) {\n        if (testChild === testAncestor) {\n            return true;\n        }\n        testChild = testChild.parentNode;\n    }\n    return false;\n}\nexport function getElementsByTagName(tag) {\n    return Array.prototype.slice.call(document.getElementsByTagName(tag), 0);\n}\nexport function trackFocus(element) {\n    return new FocusTracker(element);\n}\n/**\n * Track focus on an element. Ensure tabIndex is set when an HTMLElement is not focusable by default\n */\nclass FocusTracker extends CompositeDisposable {\n    constructor(element) {\n        super();\n        this._onDidFocus = new Emitter();\n        this.onDidFocus = this._onDidFocus.event;\n        this._onDidBlur = new Emitter();\n        this.onDidBlur = this._onDidBlur.event;\n        let hasFocus = isAncestor(document.activeElement, element);\n        let loosingFocus = false;\n        const onFocus = () => {\n            loosingFocus = false;\n            if (!hasFocus) {\n                hasFocus = true;\n                this._onDidFocus.fire();\n            }\n        };\n        const onBlur = () => {\n            if (hasFocus) {\n                loosingFocus = true;\n                window.setTimeout(() => {\n                    if (loosingFocus) {\n                        loosingFocus = false;\n                        hasFocus = false;\n                        this._onDidBlur.fire();\n                    }\n                }, 0);\n            }\n        };\n        this._refreshStateHandler = () => {\n            const currentNodeHasFocus = isAncestor(document.activeElement, element);\n            if (currentNodeHasFocus !== hasFocus) {\n                if (hasFocus) {\n                    onBlur();\n                }\n                else {\n                    onFocus();\n                }\n            }\n        };\n        if (element instanceof HTMLElement) {\n            this.addDisposables(addDisposableListener(element, 'focus', onFocus, true));\n            this.addDisposables(addDisposableListener(element, 'blur', onBlur, true));\n        }\n        else {\n            this.addDisposables(addDisposableWindowListener(element, 'focus', onFocus, true));\n            this.addDisposables(addDisposableWindowListener(element, 'blur', onBlur, true));\n        }\n    }\n    refreshState() {\n        this._refreshStateHandler();\n    }\n    dispose() {\n        super.dispose();\n        this._onDidBlur.dispose();\n        this._onDidFocus.dispose();\n    }\n}\n","export const clamp = (value, min, max) => {\n    if (min > max) {\n        throw new Error(`${min} > ${max} is an invalid condition`);\n    }\n    return Math.min(max, Math.max(value, min));\n};\nexport const sequentialNumberGenerator = () => {\n    let value = 1;\n    return { next: () => (value++).toString() };\n};\n","export function tail(arr) {\n    if (arr.length === 0) {\n        throw new Error('Invalid tail call');\n    }\n    return [arr.slice(0, arr.length - 1), arr[arr.length - 1]];\n}\nexport function last(arr) {\n    return arr.length > 0 ? arr[arr.length - 1] : undefined;\n}\nexport function sequenceEquals(arr1, arr2) {\n    if (arr1.length !== arr2.length) {\n        return false;\n    }\n    for (let i = 0; i < arr1.length; i++) {\n        if (arr1[i] !== arr2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Pushes an element to the start of the array, if found.\n */\nexport function pushToStart(arr, value) {\n    const index = arr.indexOf(value);\n    if (index > -1) {\n        arr.splice(index, 1);\n        arr.unshift(value);\n    }\n}\n/**\n * Pushes an element to the end of the array, if found.\n */\nexport function pushToEnd(arr, value) {\n    const index = arr.indexOf(value);\n    if (index > -1) {\n        arr.splice(index, 1);\n        arr.push(value);\n    }\n}\nexport const range = (from, to) => {\n    const result = [];\n    if (typeof to !== 'number') {\n        to = from;\n        from = 0;\n    }\n    if (from <= to) {\n        for (let i = from; i < to; i++) {\n            result.push(i);\n        }\n    }\n    else {\n        for (let i = from; i > to; i--) {\n            result.push(i);\n        }\n    }\n    return result;\n};\nexport function firstIndex(array, fn) {\n    for (let i = 0; i < array.length; i++) {\n        const element = array[i];\n        if (fn(element)) {\n            return i;\n        }\n    }\n    return -1;\n}\n","import { clamp } from '../../math';\nexport class ViewItem {\n    constructor(container, view, size, disposable) {\n        this.container = container;\n        this.view = view;\n        this.disposable = disposable;\n        this._cachedVisibleSize = undefined;\n        if (typeof size === 'number') {\n            this._size = size;\n            this._cachedVisibleSize = undefined;\n            container.classList.add('visible');\n        }\n        else {\n            this._size = 0;\n            this._cachedVisibleSize = size.cachedVisibleSize;\n        }\n    }\n    set size(size) {\n        this._size = size;\n    }\n    get size() {\n        return this._size;\n    }\n    get cachedVisibleSize() {\n        return this._cachedVisibleSize;\n    }\n    get visible() {\n        return typeof this._cachedVisibleSize === 'undefined';\n    }\n    setVisible(visible, size) {\n        var _a;\n        if (visible === this.visible) {\n            return;\n        }\n        if (visible) {\n            this.size = clamp((_a = this._cachedVisibleSize) !== null && _a !== void 0 ? _a : 0, this.viewMinimumSize, this.viewMaximumSize);\n            this._cachedVisibleSize = undefined;\n        }\n        else {\n            this._cachedVisibleSize =\n                typeof size === 'number' ? size : this.size;\n            this.size = 0;\n        }\n        this.container.classList.toggle('visible', visible);\n        if (this.view.setVisible) {\n            this.view.setVisible(visible);\n        }\n    }\n    get minimumSize() {\n        return this.visible ? this.view.minimumSize : 0;\n    }\n    get viewMinimumSize() {\n        return this.view.minimumSize;\n    }\n    get maximumSize() {\n        return this.visible ? this.view.maximumSize : 0;\n    }\n    get viewMaximumSize() {\n        return this.view.maximumSize;\n    }\n    get priority() {\n        return this.view.priority;\n    }\n    get snap() {\n        return !!this.view.snap;\n    }\n    set enabled(enabled) {\n        this.container.style.pointerEvents = enabled ? '' : 'none';\n    }\n    // layout(offset: number, layoutContext: TLayoutContext | undefined): void {\n    //     this.layoutContainer(offset);\n    //     this.view.layout(this.size, offset, layoutContext);\n    // }\n    // abstract layoutContainer(offset: number): void;\n    dispose() {\n        this.disposable.dispose();\n        return this.view;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/splitview\n *--------------------------------------------------------------------------------------------*/\nimport { removeClasses, addClasses, toggleClass, getElementsByTagName, } from '../../dom';\nimport { clamp } from '../../math';\nimport { Emitter } from '../../events';\nimport { pushToStart, pushToEnd, range, firstIndex } from '../../array';\nimport { ViewItem } from './viewItem';\nexport var Orientation;\n(function (Orientation) {\n    Orientation[\"HORIZONTAL\"] = \"HORIZONTAL\";\n    Orientation[\"VERTICAL\"] = \"VERTICAL\";\n})(Orientation || (Orientation = {}));\nexport var SashState;\n(function (SashState) {\n    SashState[SashState[\"MAXIMUM\"] = 0] = \"MAXIMUM\";\n    SashState[SashState[\"MINIMUM\"] = 1] = \"MINIMUM\";\n    SashState[SashState[\"DISABLED\"] = 2] = \"DISABLED\";\n    SashState[SashState[\"ENABLED\"] = 3] = \"ENABLED\";\n})(SashState || (SashState = {}));\nexport var LayoutPriority;\n(function (LayoutPriority) {\n    LayoutPriority[\"Low\"] = \"low\";\n    LayoutPriority[\"High\"] = \"high\";\n    LayoutPriority[\"Normal\"] = \"normal\";\n})(LayoutPriority || (LayoutPriority = {}));\nexport var Sizing;\n(function (Sizing) {\n    Sizing.Distribute = { type: 'distribute' };\n    function Split(index) {\n        return { type: 'split', index };\n    }\n    Sizing.Split = Split;\n    function Invisible(cachedVisibleSize) {\n        return { type: 'invisible', cachedVisibleSize };\n    }\n    Sizing.Invisible = Invisible;\n})(Sizing || (Sizing = {}));\nexport class Splitview {\n    constructor(container, options) {\n        this.container = container;\n        this.views = [];\n        this.sashes = [];\n        this._size = 0;\n        this._orthogonalSize = 0;\n        this.contentSize = 0;\n        this._proportions = undefined;\n        this._onDidSashEnd = new Emitter();\n        this.onDidSashEnd = this._onDidSashEnd.event;\n        this._onDidAddView = new Emitter();\n        this.onDidAddView = this._onDidAddView.event;\n        this._onDidRemoveView = new Emitter();\n        this.onDidRemoveView = this._onDidRemoveView.event;\n        this._startSnappingEnabled = true;\n        this._endSnappingEnabled = true;\n        this.resize = (index, delta, sizes = this.views.map((x) => x.size), lowPriorityIndexes, highPriorityIndexes, overloadMinDelta = Number.NEGATIVE_INFINITY, overloadMaxDelta = Number.POSITIVE_INFINITY, snapBefore, snapAfter) => {\n            if (index < 0 || index > this.views.length) {\n                return 0;\n            }\n            const upIndexes = range(index, -1);\n            const downIndexes = range(index + 1, this.views.length);\n            //\n            if (highPriorityIndexes) {\n                for (const i of highPriorityIndexes) {\n                    pushToStart(upIndexes, i);\n                    pushToStart(downIndexes, i);\n                }\n            }\n            if (lowPriorityIndexes) {\n                for (const i of lowPriorityIndexes) {\n                    pushToEnd(upIndexes, i);\n                    pushToEnd(downIndexes, i);\n                }\n            }\n            //\n            const upItems = upIndexes.map((i) => this.views[i]);\n            const upSizes = upIndexes.map((i) => sizes[i]);\n            //\n            const downItems = downIndexes.map((i) => this.views[i]);\n            const downSizes = downIndexes.map((i) => sizes[i]);\n            //\n            const minDeltaUp = upIndexes.reduce((_, i) => _ + this.views[i].minimumSize - sizes[i], 0);\n            const maxDeltaUp = upIndexes.reduce((_, i) => _ + this.views[i].maximumSize - sizes[i], 0);\n            //\n            const maxDeltaDown = downIndexes.length === 0\n                ? Number.POSITIVE_INFINITY\n                : downIndexes.reduce((_, i) => _ + sizes[i] - this.views[i].minimumSize, 0);\n            const minDeltaDown = downIndexes.length === 0\n                ? Number.NEGATIVE_INFINITY\n                : downIndexes.reduce((_, i) => _ + sizes[i] - this.views[i].maximumSize, 0);\n            //\n            const minDelta = Math.max(minDeltaUp, minDeltaDown);\n            const maxDelta = Math.min(maxDeltaDown, maxDeltaUp);\n            //\n            let snapped = false;\n            if (snapBefore) {\n                const snapView = this.views[snapBefore.index];\n                const visible = delta >= snapBefore.limitDelta;\n                snapped = visible !== snapView.visible;\n                snapView.setVisible(visible, snapBefore.size);\n            }\n            if (!snapped && snapAfter) {\n                const snapView = this.views[snapAfter.index];\n                const visible = delta < snapAfter.limitDelta;\n                snapped = visible !== snapView.visible;\n                snapView.setVisible(visible, snapAfter.size);\n            }\n            if (snapped) {\n                return this.resize(index, delta, sizes, lowPriorityIndexes, highPriorityIndexes, overloadMinDelta, overloadMaxDelta);\n            }\n            //\n            const tentativeDelta = clamp(delta, minDelta, maxDelta);\n            let actualDelta = 0;\n            //\n            let deltaUp = tentativeDelta;\n            for (let i = 0; i < upItems.length; i++) {\n                const item = upItems[i];\n                const size = clamp(upSizes[i] + deltaUp, item.minimumSize, item.maximumSize);\n                const viewDelta = size - upSizes[i];\n                actualDelta += viewDelta;\n                deltaUp -= viewDelta;\n                item.size = size;\n            }\n            //\n            let deltaDown = actualDelta;\n            for (let i = 0; i < downItems.length; i++) {\n                const item = downItems[i];\n                const size = clamp(downSizes[i] - deltaDown, item.minimumSize, item.maximumSize);\n                const viewDelta = size - downSizes[i];\n                deltaDown += viewDelta;\n                item.size = size;\n            }\n            //\n            return delta;\n        };\n        this._orientation = options.orientation;\n        this.element = this.createContainer();\n        this.proportionalLayout =\n            options.proportionalLayout === undefined\n                ? true\n                : !!options.proportionalLayout;\n        this.viewContainer = this.createViewContainer();\n        this.sashContainer = this.createSashContainer();\n        this.element.appendChild(this.sashContainer);\n        this.element.appendChild(this.viewContainer);\n        this.container.appendChild(this.element);\n        this.style(options.styles);\n        // We have an existing set of view, add them now\n        if (options.descriptor) {\n            this._size = options.descriptor.size;\n            options.descriptor.views.forEach((viewDescriptor, index) => {\n                const sizing = viewDescriptor.visible === undefined ||\n                    viewDescriptor.visible\n                    ? viewDescriptor.size\n                    : {\n                        type: 'invisible',\n                        cachedVisibleSize: viewDescriptor.size,\n                    };\n                const view = viewDescriptor.view;\n                this.addView(view, sizing, index, true\n                // true skip layout\n                );\n            });\n            // Initialize content size and proportions for first layout\n            this.contentSize = this.views.reduce((r, i) => r + i.size, 0);\n            this.saveProportions();\n        }\n    }\n    get size() {\n        return this._size;\n    }\n    set size(value) {\n        this._size = value;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    set orthogonalSize(value) {\n        this._orthogonalSize = value;\n    }\n    get length() {\n        return this.views.length;\n    }\n    get proportions() {\n        return this._proportions ? [...this._proportions] : undefined;\n    }\n    get orientation() {\n        return this._orientation;\n    }\n    set orientation(value) {\n        this._orientation = value;\n        const tmp = this.size;\n        this.size = this.orthogonalSize;\n        this.orthogonalSize = tmp;\n        removeClasses(this.element, 'horizontal', 'vertical');\n        this.element.classList.add(this.orientation == Orientation.HORIZONTAL\n            ? 'horizontal'\n            : 'vertical');\n    }\n    get minimumSize() {\n        return this.views.reduce((r, item) => r + item.minimumSize, 0);\n    }\n    get maximumSize() {\n        return this.length === 0\n            ? Number.POSITIVE_INFINITY\n            : this.views.reduce((r, item) => r + item.maximumSize, 0);\n    }\n    get startSnappingEnabled() {\n        return this._startSnappingEnabled;\n    }\n    set startSnappingEnabled(startSnappingEnabled) {\n        if (this._startSnappingEnabled === startSnappingEnabled) {\n            return;\n        }\n        this._startSnappingEnabled = startSnappingEnabled;\n        this.updateSashEnablement();\n    }\n    get endSnappingEnabled() {\n        return this._endSnappingEnabled;\n    }\n    set endSnappingEnabled(endSnappingEnabled) {\n        if (this._endSnappingEnabled === endSnappingEnabled) {\n            return;\n        }\n        this._endSnappingEnabled = endSnappingEnabled;\n        this.updateSashEnablement();\n    }\n    style(styles) {\n        if ((styles === null || styles === void 0 ? void 0 : styles.separatorBorder) === 'transparent') {\n            removeClasses(this.element, 'separator-border');\n            this.element.style.removeProperty('--dv-separator-border');\n        }\n        else {\n            addClasses(this.element, 'separator-border');\n            if (styles === null || styles === void 0 ? void 0 : styles.separatorBorder) {\n                this.element.style.setProperty('--dv-separator-border', styles.separatorBorder);\n            }\n        }\n    }\n    isViewVisible(index) {\n        if (index < 0 || index >= this.views.length) {\n            throw new Error('Index out of bounds');\n        }\n        const viewItem = this.views[index];\n        return viewItem.visible;\n    }\n    setViewVisible(index, visible) {\n        if (index < 0 || index >= this.views.length) {\n            throw new Error('Index out of bounds');\n        }\n        toggleClass(this.container, 'visible', visible);\n        const viewItem = this.views[index];\n        toggleClass(this.container, 'visible', visible);\n        viewItem.setVisible(visible, viewItem.size);\n        this.distributeEmptySpace(index);\n        this.layoutViews();\n        this.saveProportions();\n    }\n    getViewSize(index) {\n        if (index < 0 || index >= this.views.length) {\n            return -1;\n        }\n        return this.views[index].size;\n    }\n    resizeView(index, size) {\n        if (index < 0 || index >= this.views.length) {\n            return;\n        }\n        const indexes = range(this.views.length).filter((i) => i !== index);\n        const lowPriorityIndexes = [\n            ...indexes.filter((i) => this.views[i].priority === LayoutPriority.Low),\n            index,\n        ];\n        const highPriorityIndexes = indexes.filter((i) => this.views[i].priority === LayoutPriority.High);\n        const item = this.views[index];\n        size = Math.round(size);\n        size = clamp(size, item.minimumSize, Math.min(item.maximumSize, this._size));\n        item.size = size;\n        this.relayout(lowPriorityIndexes, highPriorityIndexes);\n    }\n    getViews() {\n        return this.views.map((x) => x.view);\n    }\n    onDidChange(item, size) {\n        const index = this.views.indexOf(item);\n        if (index < 0 || index >= this.views.length) {\n            return;\n        }\n        size = typeof size === 'number' ? size : item.size;\n        size = clamp(size, item.minimumSize, item.maximumSize);\n        item.size = size;\n        this.relayout([index]);\n    }\n    addView(view, size = { type: 'distribute' }, index = this.views.length, skipLayout) {\n        const container = document.createElement('div');\n        container.className = 'view';\n        container.appendChild(view.element);\n        let viewSize;\n        if (typeof size === 'number') {\n            viewSize = size;\n        }\n        else if (size.type === 'split') {\n            viewSize = this.getViewSize(size.index) / 2;\n        }\n        else if (size.type === 'invisible') {\n            viewSize = { cachedVisibleSize: size.cachedVisibleSize };\n        }\n        else {\n            viewSize = view.minimumSize;\n        }\n        const disposable = view.onDidChange((newSize) => this.onDidChange(viewItem, newSize.size));\n        const dispose = () => {\n            disposable === null || disposable === void 0 ? void 0 : disposable.dispose();\n            this.viewContainer.removeChild(container);\n        };\n        const viewItem = new ViewItem(container, view, viewSize, { dispose });\n        if (index === this.views.length) {\n            this.viewContainer.appendChild(container);\n        }\n        else {\n            this.viewContainer.insertBefore(container, this.viewContainer.children.item(index));\n        }\n        this.views.splice(index, 0, viewItem);\n        if (this.views.length > 1) {\n            //add sash\n            const sash = document.createElement('div');\n            sash.className = 'sash';\n            const onStart = (event) => {\n                for (const item of this.views) {\n                    item.enabled = false;\n                }\n                const iframes = [\n                    ...getElementsByTagName('iframe'),\n                    ...getElementsByTagName('webview'),\n                ];\n                for (const iframe of iframes) {\n                    iframe.style.pointerEvents = 'none';\n                }\n                const start = this._orientation === Orientation.HORIZONTAL\n                    ? event.clientX\n                    : event.clientY;\n                const sashIndex = firstIndex(this.sashes, (s) => s.container === sash);\n                //\n                const sizes = this.views.map((x) => x.size);\n                //\n                let snapBefore;\n                let snapAfter;\n                const upIndexes = range(sashIndex, -1);\n                const downIndexes = range(sashIndex + 1, this.views.length);\n                const minDeltaUp = upIndexes.reduce((r, i) => r + (this.views[i].minimumSize - sizes[i]), 0);\n                const maxDeltaUp = upIndexes.reduce((r, i) => r + (this.views[i].viewMaximumSize - sizes[i]), 0);\n                const maxDeltaDown = downIndexes.length === 0\n                    ? Number.POSITIVE_INFINITY\n                    : downIndexes.reduce((r, i) => r + (sizes[i] - this.views[i].minimumSize), 0);\n                const minDeltaDown = downIndexes.length === 0\n                    ? Number.NEGATIVE_INFINITY\n                    : downIndexes.reduce((r, i) => r +\n                        (sizes[i] - this.views[i].viewMaximumSize), 0);\n                const minDelta = Math.max(minDeltaUp, minDeltaDown);\n                const maxDelta = Math.min(maxDeltaDown, maxDeltaUp);\n                const snapBeforeIndex = this.findFirstSnapIndex(upIndexes);\n                const snapAfterIndex = this.findFirstSnapIndex(downIndexes);\n                if (typeof snapBeforeIndex === 'number') {\n                    const snappedViewItem = this.views[snapBeforeIndex];\n                    const halfSize = Math.floor(snappedViewItem.viewMinimumSize / 2);\n                    snapBefore = {\n                        index: snapBeforeIndex,\n                        limitDelta: snappedViewItem.visible\n                            ? minDelta - halfSize\n                            : minDelta + halfSize,\n                        size: snappedViewItem.size,\n                    };\n                }\n                if (typeof snapAfterIndex === 'number') {\n                    const snappedViewItem = this.views[snapAfterIndex];\n                    const halfSize = Math.floor(snappedViewItem.viewMinimumSize / 2);\n                    snapAfter = {\n                        index: snapAfterIndex,\n                        limitDelta: snappedViewItem.visible\n                            ? maxDelta + halfSize\n                            : maxDelta - halfSize,\n                        size: snappedViewItem.size,\n                    };\n                }\n                //\n                const mousemove = (mousemoveEvent) => {\n                    const current = this._orientation === Orientation.HORIZONTAL\n                        ? mousemoveEvent.clientX\n                        : mousemoveEvent.clientY;\n                    const delta = current - start;\n                    this.resize(sashIndex, delta, sizes, undefined, undefined, minDelta, maxDelta, snapBefore, snapAfter);\n                    this.distributeEmptySpace();\n                    this.layoutViews();\n                };\n                const end = () => {\n                    for (const item of this.views) {\n                        item.enabled = true;\n                    }\n                    for (const iframe of iframes) {\n                        iframe.style.pointerEvents = 'auto';\n                    }\n                    this.saveProportions();\n                    document.removeEventListener('mousemove', mousemove);\n                    document.removeEventListener('mouseup', end);\n                    document.removeEventListener('mouseend', end);\n                    this._onDidSashEnd.fire(undefined);\n                };\n                document.addEventListener('mousemove', mousemove);\n                document.addEventListener('mouseup', end);\n                document.addEventListener('mouseend', end);\n            };\n            sash.addEventListener('mousedown', onStart);\n            const sashItem = {\n                container: sash,\n                disposable: () => {\n                    sash.removeEventListener('mousedown', onStart);\n                    this.sashContainer.removeChild(sash);\n                },\n            };\n            this.sashContainer.appendChild(sash);\n            this.sashes.push(sashItem);\n        }\n        if (!skipLayout) {\n            this.relayout([index]);\n        }\n        if (!skipLayout &&\n            typeof size !== 'number' &&\n            size.type === 'distribute') {\n            this.distributeViewSizes();\n        }\n        this._onDidAddView.fire(view);\n    }\n    distributeViewSizes() {\n        const flexibleViewItems = [];\n        let flexibleSize = 0;\n        for (const item of this.views) {\n            if (item.maximumSize - item.minimumSize > 0) {\n                flexibleViewItems.push(item);\n                flexibleSize += item.size;\n            }\n        }\n        const size = Math.floor(flexibleSize / flexibleViewItems.length);\n        for (const item of flexibleViewItems) {\n            item.size = clamp(size, item.minimumSize, item.maximumSize);\n        }\n        const indexes = range(this.views.length);\n        const lowPriorityIndexes = indexes.filter((i) => this.views[i].priority === LayoutPriority.Low);\n        const highPriorityIndexes = indexes.filter((i) => this.views[i].priority === LayoutPriority.High);\n        this.relayout(lowPriorityIndexes, highPriorityIndexes);\n    }\n    removeView(index, sizing, skipLayout = false) {\n        // Remove view\n        const viewItem = this.views.splice(index, 1)[0];\n        viewItem.dispose();\n        // Remove sash\n        if (this.views.length >= 1) {\n            const sashIndex = Math.max(index - 1, 0);\n            const sashItem = this.sashes.splice(sashIndex, 1)[0];\n            sashItem.disposable();\n        }\n        if (!skipLayout) {\n            this.relayout();\n        }\n        if (sizing && sizing.type === 'distribute') {\n            this.distributeViewSizes();\n        }\n        this._onDidRemoveView.fire(viewItem.view);\n        return viewItem.view;\n    }\n    getViewCachedVisibleSize(index) {\n        if (index < 0 || index >= this.views.length) {\n            throw new Error('Index out of bounds');\n        }\n        const viewItem = this.views[index];\n        return viewItem.cachedVisibleSize;\n    }\n    moveView(from, to) {\n        const cachedVisibleSize = this.getViewCachedVisibleSize(from);\n        const sizing = typeof cachedVisibleSize === 'undefined'\n            ? this.getViewSize(from)\n            : Sizing.Invisible(cachedVisibleSize);\n        const view = this.removeView(from, undefined, true);\n        this.addView(view, sizing, to);\n    }\n    layout(size, orthogonalSize) {\n        const previousSize = Math.max(this.size, this.contentSize);\n        this.size = size;\n        this.orthogonalSize = orthogonalSize;\n        if (!this.proportions) {\n            const indexes = range(this.views.length);\n            const lowPriorityIndexes = indexes.filter((i) => this.views[i].priority === LayoutPriority.Low);\n            const highPriorityIndexes = indexes.filter((i) => this.views[i].priority === LayoutPriority.High);\n            this.resize(this.views.length - 1, size - previousSize, undefined, lowPriorityIndexes, highPriorityIndexes);\n        }\n        else {\n            for (let i = 0; i < this.views.length; i++) {\n                const item = this.views[i];\n                item.size = clamp(Math.round(this.proportions[i] * size), item.minimumSize, item.maximumSize);\n            }\n        }\n        this.distributeEmptySpace();\n        this.layoutViews();\n    }\n    relayout(lowPriorityIndexes, highPriorityIndexes) {\n        const contentSize = this.views.reduce((r, i) => r + i.size, 0);\n        this.resize(this.views.length - 1, this._size - contentSize, undefined, lowPriorityIndexes, highPriorityIndexes);\n        this.distributeEmptySpace();\n        this.layoutViews();\n        this.saveProportions();\n    }\n    distributeEmptySpace(lowPriorityIndex) {\n        const contentSize = this.views.reduce((r, i) => r + i.size, 0);\n        let emptyDelta = this.size - contentSize;\n        const indexes = range(this.views.length - 1, -1);\n        const lowPriorityIndexes = indexes.filter((i) => this.views[i].priority === LayoutPriority.Low);\n        const highPriorityIndexes = indexes.filter((i) => this.views[i].priority === LayoutPriority.High);\n        for (const index of highPriorityIndexes) {\n            pushToStart(indexes, index);\n        }\n        for (const index of lowPriorityIndexes) {\n            pushToEnd(indexes, index);\n        }\n        if (typeof lowPriorityIndex === 'number') {\n            pushToEnd(indexes, lowPriorityIndex);\n        }\n        for (let i = 0; emptyDelta !== 0 && i < indexes.length; i++) {\n            const item = this.views[indexes[i]];\n            const size = clamp(item.size + emptyDelta, item.minimumSize, item.maximumSize);\n            const viewDelta = size - item.size;\n            emptyDelta -= viewDelta;\n            item.size = size;\n        }\n    }\n    saveProportions() {\n        if (this.proportionalLayout && this.contentSize > 0) {\n            this._proportions = this.views.map((i) => i.size / this.contentSize);\n        }\n    }\n    layoutViews() {\n        this.contentSize = this.views.reduce((r, i) => r + i.size, 0);\n        let sum = 0;\n        const x = [];\n        this.updateSashEnablement();\n        for (let i = 0; i < this.views.length - 1; i++) {\n            sum += this.views[i].size;\n            x.push(sum);\n            const offset = Math.min(Math.max(0, sum - 2), this.size - 4);\n            if (this._orientation === Orientation.HORIZONTAL) {\n                this.sashes[i].container.style.left = `${offset}px`;\n                this.sashes[i].container.style.top = `0px`;\n            }\n            if (this._orientation === Orientation.VERTICAL) {\n                this.sashes[i].container.style.left = `0px`;\n                this.sashes[i].container.style.top = `${offset}px`;\n            }\n        }\n        this.views.forEach((view, i) => {\n            if (this._orientation === Orientation.HORIZONTAL) {\n                view.container.style.width = `${view.size}px`;\n                view.container.style.left = i == 0 ? '0px' : `${x[i - 1]}px`;\n                view.container.style.top = '';\n                view.container.style.height = '';\n            }\n            if (this._orientation === Orientation.VERTICAL) {\n                view.container.style.height = `${view.size}px`;\n                view.container.style.top = i == 0 ? '0px' : `${x[i - 1]}px`;\n                view.container.style.width = '';\n                view.container.style.left = '';\n            }\n            view.view.layout(view.size, this._orthogonalSize);\n        });\n    }\n    findFirstSnapIndex(indexes) {\n        // visible views first\n        for (const index of indexes) {\n            const viewItem = this.views[index];\n            if (!viewItem.visible) {\n                continue;\n            }\n            if (viewItem.snap) {\n                return index;\n            }\n        }\n        // then, hidden views\n        for (const index of indexes) {\n            const viewItem = this.views[index];\n            if (viewItem.visible &&\n                viewItem.maximumSize - viewItem.minimumSize > 0) {\n                return undefined;\n            }\n            if (!viewItem.visible && viewItem.snap) {\n                return index;\n            }\n        }\n        return undefined;\n    }\n    updateSashEnablement() {\n        let previous = false;\n        const collapsesDown = this.views.map((i) => (previous = i.size - i.minimumSize > 0 || previous));\n        previous = false;\n        const expandsDown = this.views.map((i) => (previous = i.maximumSize - i.size > 0 || previous));\n        const reverseViews = [...this.views].reverse();\n        previous = false;\n        const collapsesUp = reverseViews\n            .map((i) => (previous = i.size - i.minimumSize > 0 || previous))\n            .reverse();\n        previous = false;\n        const expandsUp = reverseViews\n            .map((i) => (previous = i.maximumSize - i.size > 0 || previous))\n            .reverse();\n        let position = 0;\n        for (let index = 0; index < this.sashes.length; index++) {\n            const sash = this.sashes[index];\n            const viewItem = this.views[index];\n            position += viewItem.size;\n            const min = !(collapsesDown[index] && expandsUp[index + 1]);\n            const max = !(expandsDown[index] && collapsesUp[index + 1]);\n            if (min && max) {\n                const upIndexes = range(index, -1);\n                const downIndexes = range(index + 1, this.views.length);\n                const snapBeforeIndex = this.findFirstSnapIndex(upIndexes);\n                const snapAfterIndex = this.findFirstSnapIndex(downIndexes);\n                const snappedBefore = typeof snapBeforeIndex === 'number' &&\n                    !this.views[snapBeforeIndex].visible;\n                const snappedAfter = typeof snapAfterIndex === 'number' &&\n                    !this.views[snapAfterIndex].visible;\n                if (snappedBefore &&\n                    collapsesUp[index] &&\n                    (position > 0 || this.startSnappingEnabled)) {\n                    this.updateSash(sash, SashState.MINIMUM);\n                }\n                else if (snappedAfter &&\n                    collapsesDown[index] &&\n                    (position < this.contentSize || this.endSnappingEnabled)) {\n                    this.updateSash(sash, SashState.MAXIMUM);\n                }\n                else {\n                    this.updateSash(sash, SashState.DISABLED);\n                }\n            }\n            else if (min && !max) {\n                this.updateSash(sash, SashState.MINIMUM);\n            }\n            else if (!min && max) {\n                this.updateSash(sash, SashState.MAXIMUM);\n            }\n            else {\n                this.updateSash(sash, SashState.ENABLED);\n            }\n        }\n    }\n    updateSash(sash, state) {\n        toggleClass(sash.container, 'disabled', state === SashState.DISABLED);\n        toggleClass(sash.container, 'enabled', state === SashState.ENABLED);\n        toggleClass(sash.container, 'maximum', state === SashState.MAXIMUM);\n        toggleClass(sash.container, 'minimum', state === SashState.MINIMUM);\n    }\n    createViewContainer() {\n        const element = document.createElement('div');\n        element.className = 'view-container';\n        return element;\n    }\n    createSashContainer() {\n        const element = document.createElement('div');\n        element.className = 'sash-container';\n        return element;\n    }\n    createContainer() {\n        const element = document.createElement('div');\n        const orientationClassname = this._orientation === Orientation.HORIZONTAL\n            ? 'horizontal'\n            : 'vertical';\n        element.className = `split-view-container ${orientationClassname}`;\n        return element;\n    }\n    dispose() {\n        this._onDidSashEnd.dispose();\n        this._onDidAddView.dispose();\n        this._onDidRemoveView.dispose();\n        for (let i = 0; i < this.element.children.length; i++) {\n            if (this.element.children.item(i) === this.element) {\n                this.element.removeChild(this.element);\n                break;\n            }\n        }\n        this.element.remove();\n    }\n}\n","import { Splitview, Orientation, } from '../splitview/core/splitview';\nimport { CompositeDisposable } from '../lifecycle';\nimport { Emitter } from '../events';\nimport { addClasses, removeClasses } from '../dom';\nexport class Paneview extends CompositeDisposable {\n    constructor(container, options) {\n        var _a;\n        super();\n        this.paneItems = [];\n        this.skipAnimation = false;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._orientation = (_a = options.orientation) !== null && _a !== void 0 ? _a : Orientation.VERTICAL;\n        this.element = document.createElement('div');\n        this.element.className = 'pane-container';\n        container.appendChild(this.element);\n        this.splitview = new Splitview(this.element, {\n            orientation: this._orientation,\n            proportionalLayout: false,\n            descriptor: options.descriptor,\n        });\n        // if we've added views from the descriptor we need to\n        // add the panes to our Pane array and setup animation\n        this.getPanes().forEach((pane) => {\n            const disposable = new CompositeDisposable(pane.onDidChangeExpansionState(() => {\n                this.setupAnimation();\n                this._onDidChange.fire(undefined);\n            }));\n            const paneItem = {\n                pane,\n                disposable: {\n                    dispose: () => {\n                        disposable.dispose();\n                    },\n                },\n            };\n            this.paneItems.push(paneItem);\n            pane.orthogonalSize = this.splitview.orthogonalSize;\n        });\n        this.addDisposables(this._onDidChange, this.splitview.onDidSashEnd(() => {\n            this._onDidChange.fire(undefined);\n        }), this.splitview.onDidAddView(() => {\n            this._onDidChange.fire();\n        }), this.splitview.onDidRemoveView(() => {\n            this._onDidChange.fire();\n        }));\n    }\n    get onDidAddView() {\n        return this.splitview.onDidAddView;\n    }\n    get onDidRemoveView() {\n        return this.splitview.onDidRemoveView;\n    }\n    get minimumSize() {\n        return this.splitview.minimumSize;\n    }\n    get maximumSize() {\n        return this.splitview.maximumSize;\n    }\n    get orientation() {\n        return this.splitview.orientation;\n    }\n    get size() {\n        return this.splitview.size;\n    }\n    get orthogonalSize() {\n        return this.splitview.orthogonalSize;\n    }\n    addPane(pane, size, index = this.splitview.length, skipLayout = false) {\n        const disposable = pane.onDidChangeExpansionState(() => {\n            this.setupAnimation();\n            this._onDidChange.fire(undefined);\n        });\n        const paneItem = {\n            pane,\n            disposable: {\n                dispose: () => {\n                    disposable.dispose();\n                },\n            },\n        };\n        this.paneItems.splice(index, 0, paneItem);\n        pane.orthogonalSize = this.splitview.orthogonalSize;\n        this.splitview.addView(pane, size, index, skipLayout);\n    }\n    getViewSize(index) {\n        return this.splitview.getViewSize(index);\n    }\n    getPanes() {\n        return this.splitview.getViews();\n    }\n    removePane(index, options = { skipDispose: false }) {\n        const paneItem = this.paneItems.splice(index, 1)[0];\n        this.splitview.removeView(index);\n        if (!options.skipDispose) {\n            paneItem.disposable.dispose();\n            paneItem.pane.dispose();\n        }\n        return paneItem;\n    }\n    moveView(from, to) {\n        if (from === to) {\n            return;\n        }\n        const view = this.removePane(from, { skipDispose: true });\n        this.skipAnimation = true;\n        try {\n            this.addPane(view.pane, view.pane.size, to, false);\n        }\n        finally {\n            this.skipAnimation = false;\n        }\n    }\n    layout(size, orthogonalSize) {\n        this.splitview.layout(size, orthogonalSize);\n    }\n    setupAnimation() {\n        if (this.skipAnimation) {\n            return;\n        }\n        if (this.animationTimer) {\n            clearTimeout(this.animationTimer);\n            this.animationTimer = undefined;\n        }\n        addClasses(this.element, 'animated');\n        this.animationTimer = setTimeout(() => {\n            this.animationTimer = undefined;\n            removeClasses(this.element, 'animated');\n        }, 200);\n    }\n    dispose() {\n        super.dispose();\n        if (this.animationTimer) {\n            clearTimeout(this.animationTimer);\n            this.animationTimer = undefined;\n        }\n        this.paneItems.forEach((paneItem) => {\n            paneItem.disposable.dispose();\n            paneItem.pane.dispose();\n        });\n        this.paneItems = [];\n        this.splitview.dispose();\n        this.element.remove();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/grid\n *--------------------------------------------------------------------------------------------*/\nimport { Orientation, } from '../splitview/core/splitview';\nimport { Emitter } from '../events';\nexport class LeafNode {\n    constructor(view, orientation, orthogonalSize, size = 0) {\n        this.view = view;\n        this.orientation = orientation;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._orthogonalSize = orthogonalSize;\n        this._size = size;\n        this._disposable = this.view.onDidChange((event) => {\n            if (event) {\n                this._onDidChange.fire({\n                    size: this.orientation === Orientation.VERTICAL\n                        ? event.width\n                        : event.height,\n                    orthogonalSize: this.orientation === Orientation.VERTICAL\n                        ? event.height\n                        : event.width,\n                });\n            }\n            else {\n                this._onDidChange.fire({});\n            }\n        });\n    }\n    get minimumWidth() {\n        return this.view.minimumWidth;\n    }\n    get maximumWidth() {\n        return this.view.maximumWidth;\n    }\n    get minimumHeight() {\n        return this.view.minimumHeight;\n    }\n    get maximumHeight() {\n        return this.view.maximumHeight;\n    }\n    get priority() {\n        return this.view.priority;\n    }\n    get snap() {\n        return this.view.snap;\n    }\n    get minimumSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumHeight\n            : this.minimumWidth;\n    }\n    get maximumSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumHeight\n            : this.maximumWidth;\n    }\n    get minimumOrthogonalSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumWidth\n            : this.minimumHeight;\n    }\n    get maximumOrthogonalSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumWidth\n            : this.maximumHeight;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    get size() {\n        return this._size;\n    }\n    get element() {\n        return this.view.element;\n    }\n    get width() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.orthogonalSize\n            : this.size;\n    }\n    get height() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.size\n            : this.orthogonalSize;\n    }\n    setVisible(visible) {\n        if (this.view.setVisible) {\n            this.view.setVisible(visible);\n            this._onDidChange.fire({});\n        }\n    }\n    layout(size, orthogonalSize) {\n        this._size = size;\n        this._orthogonalSize = orthogonalSize;\n        this.view.layout(this.width, this.height);\n    }\n    dispose() {\n        this._onDidChange.dispose();\n        this._disposable.dispose();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/grid\n *--------------------------------------------------------------------------------------------*/\nimport { Splitview, Orientation, LayoutPriority, } from '../splitview/core/splitview';\nimport { Emitter, Event } from '../events';\nimport { LeafNode } from './leafNode';\nimport { CompositeDisposable, Disposable } from '../lifecycle';\nexport class BranchNode extends CompositeDisposable {\n    constructor(orientation, proportionalLayout, styles, size, orthogonalSize, childDescriptors) {\n        super();\n        this.orientation = orientation;\n        this.proportionalLayout = proportionalLayout;\n        this.styles = styles;\n        this.children = [];\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._childrenDisposable = Disposable.NONE;\n        this._orthogonalSize = orthogonalSize;\n        this._size = size;\n        this.element = document.createElement('div');\n        this.element.className = 'branch-node';\n        if (!childDescriptors) {\n            this.splitview = new Splitview(this.element, {\n                orientation: this.orientation,\n                proportionalLayout,\n                styles,\n            });\n            this.splitview.layout(this.size, this.orthogonalSize);\n        }\n        else {\n            const descriptor = {\n                views: childDescriptors.map((childDescriptor) => {\n                    return {\n                        view: childDescriptor.node,\n                        size: childDescriptor.node.size,\n                        visible: childDescriptor.node instanceof LeafNode &&\n                            childDescriptor.visible !== undefined\n                            ? childDescriptor.visible\n                            : true,\n                    };\n                }),\n                size: this.size,\n            };\n            this.children = childDescriptors.map((c) => c.node);\n            this.splitview = new Splitview(this.element, {\n                orientation: this.orientation,\n                descriptor,\n                proportionalLayout,\n            });\n        }\n        this.addDisposables(this._onDidChange, this.splitview.onDidSashEnd(() => {\n            this._onDidChange.fire({});\n        }));\n        this.setupChildrenEvents();\n    }\n    get width() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.size\n            : this.orthogonalSize;\n    }\n    get height() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.orthogonalSize\n            : this.size;\n    }\n    get minimumSize() {\n        return this.children.length === 0\n            ? 0\n            : Math.max(...this.children.map((c) => c.minimumOrthogonalSize));\n    }\n    get maximumSize() {\n        return Math.min(...this.children.map((c) => c.maximumOrthogonalSize));\n    }\n    get minimumOrthogonalSize() {\n        return this.splitview.minimumSize;\n    }\n    get maximumOrthogonalSize() {\n        return this.splitview.maximumSize;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    get size() {\n        return this._size;\n    }\n    get minimumWidth() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumOrthogonalSize\n            : this.minimumSize;\n    }\n    get minimumHeight() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumSize\n            : this.minimumOrthogonalSize;\n    }\n    get maximumWidth() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumOrthogonalSize\n            : this.maximumSize;\n    }\n    get maximumHeight() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumSize\n            : this.maximumOrthogonalSize;\n    }\n    get priority() {\n        if (this.children.length === 0) {\n            return LayoutPriority.Normal;\n        }\n        const priorities = this.children.map((c) => typeof c.priority === 'undefined'\n            ? LayoutPriority.Normal\n            : c.priority);\n        if (priorities.some((p) => p === LayoutPriority.High)) {\n            return LayoutPriority.High;\n        }\n        else if (priorities.some((p) => p === LayoutPriority.Low)) {\n            return LayoutPriority.Low;\n        }\n        return LayoutPriority.Normal;\n    }\n    setVisible(visible) {\n        for (const child of this.children) {\n            child.setVisible(visible);\n        }\n    }\n    isChildVisible(index) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        return this.splitview.isViewVisible(index);\n    }\n    setChildVisible(index, visible) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        if (this.splitview.isViewVisible(index) === visible) {\n            return;\n        }\n        this.splitview.setViewVisible(index, visible);\n    }\n    moveChild(from, to) {\n        if (from === to) {\n            return;\n        }\n        if (from < 0 || from >= this.children.length) {\n            throw new Error('Invalid from index');\n        }\n        if (from < to) {\n            to--;\n        }\n        this.splitview.moveView(from, to);\n        const child = this._removeChild(from);\n        this._addChild(child, to);\n    }\n    getChildSize(index) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        return this.splitview.getViewSize(index);\n    }\n    resizeChild(index, size) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        this.splitview.resizeView(index, size);\n    }\n    layout(size, orthogonalSize) {\n        this._size = orthogonalSize;\n        this._orthogonalSize = size;\n        this.splitview.layout(this.size, this.orthogonalSize);\n    }\n    addChild(node, size, index, skipLayout) {\n        if (index < 0 || index > this.children.length) {\n            throw new Error('Invalid index');\n        }\n        this.splitview.addView(node, size, index, skipLayout);\n        this._addChild(node, index);\n    }\n    getChildCachedVisibleSize(index) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        return this.splitview.getViewCachedVisibleSize(index);\n    }\n    removeChild(index, sizing) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        this.splitview.removeView(index, sizing);\n        this._removeChild(index);\n    }\n    _addChild(node, index) {\n        this.children.splice(index, 0, node);\n        this.setupChildrenEvents();\n    }\n    _removeChild(index) {\n        const [child] = this.children.splice(index, 1);\n        this.setupChildrenEvents();\n        return child;\n    }\n    setupChildrenEvents() {\n        this._childrenDisposable.dispose();\n        this._childrenDisposable = Event.any(...this.children.map((c) => c.onDidChange))((e) => {\n            /**\n             * indicate a change has occured to allows any re-rendering but don't bubble\n             * event because that was specific to this branch\n             */\n            this._onDidChange.fire({ size: e.orthogonalSize });\n        });\n    }\n    dispose() {\n        super.dispose();\n        this._childrenDisposable.dispose();\n        this.children.forEach((child) => child.dispose());\n        this.splitview.dispose();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/grid\n *--------------------------------------------------------------------------------------------*/\nimport { Orientation, Sizing, } from '../splitview/core/splitview';\nimport { tail } from '../array';\nimport { LeafNode } from './leafNode';\nimport { BranchNode } from './branchNode';\nimport { Emitter } from '../events';\nimport { MutableDisposable } from '../lifecycle';\nfunction findLeaf(candiateNode, last) {\n    if (candiateNode instanceof LeafNode) {\n        return candiateNode;\n    }\n    if (candiateNode instanceof BranchNode) {\n        return findLeaf(candiateNode.children[last ? candiateNode.children.length - 1 : 0], last);\n    }\n    throw new Error('invalid node');\n}\nfunction flipNode(node, size, orthogonalSize) {\n    if (node instanceof BranchNode) {\n        const result = new BranchNode(orthogonal(node.orientation), node.proportionalLayout, node.styles, size, orthogonalSize);\n        let totalSize = 0;\n        for (let i = node.children.length - 1; i >= 0; i--) {\n            const child = node.children[i];\n            const childSize = child instanceof BranchNode ? child.orthogonalSize : child.size;\n            let newSize = node.size === 0\n                ? 0\n                : Math.round((size * childSize) / node.size);\n            totalSize += newSize;\n            // The last view to add should adjust to rounding errors\n            if (i === 0) {\n                newSize += size - totalSize;\n            }\n            result.addChild(flipNode(child, orthogonalSize, newSize), newSize, 0, true);\n        }\n        return result;\n    }\n    else {\n        return new LeafNode(node.view, orthogonal(node.orientation), orthogonalSize);\n    }\n}\nexport function indexInParent(element) {\n    const parentElement = element.parentElement;\n    if (!parentElement) {\n        throw new Error('Invalid grid element');\n    }\n    let el = parentElement.firstElementChild;\n    let index = 0;\n    while (el !== element && el !== parentElement.lastElementChild && el) {\n        el = el.nextElementSibling;\n        index++;\n    }\n    return index;\n}\n/**\n * Find the grid location of a specific DOM element by traversing the parent\n * chain and finding each child index on the way.\n *\n * This will break as soon as DOM structures of the Splitview or Gridview change.\n */\nexport function getGridLocation(element) {\n    const parentElement = element.parentElement;\n    if (!parentElement) {\n        throw new Error('Invalid grid element');\n    }\n    if (/\\bgrid-view\\b/.test(parentElement.className)) {\n        return [];\n    }\n    const index = indexInParent(parentElement);\n    const ancestor = parentElement.parentElement.parentElement.parentElement;\n    return [...getGridLocation(ancestor), index];\n}\nexport function getRelativeLocation(rootOrientation, location, direction) {\n    const orientation = getLocationOrientation(rootOrientation, location);\n    const directionOrientation = getDirectionOrientation(direction);\n    if (orientation === directionOrientation) {\n        const [rest, _index] = tail(location);\n        let index = _index;\n        if (direction === 'right' || direction === 'bottom') {\n            index += 1;\n        }\n        return [...rest, index];\n    }\n    else {\n        const index = direction === 'right' || direction === 'bottom' ? 1 : 0;\n        return [...location, index];\n    }\n}\nexport function getDirectionOrientation(direction) {\n    return direction === 'top' || direction === 'bottom'\n        ? Orientation.VERTICAL\n        : Orientation.HORIZONTAL;\n}\nexport function getLocationOrientation(rootOrientation, location) {\n    return location.length % 2 === 0\n        ? orthogonal(rootOrientation)\n        : rootOrientation;\n}\nexport const orthogonal = (orientation) => orientation === Orientation.HORIZONTAL\n    ? Orientation.VERTICAL\n    : Orientation.HORIZONTAL;\nexport function isGridBranchNode(node) {\n    return !!node.children;\n}\nconst serializeBranchNode = (node, orientation) => {\n    const size = orientation === Orientation.VERTICAL ? node.box.width : node.box.height;\n    if (!isGridBranchNode(node)) {\n        if (typeof node.cachedVisibleSize === 'number') {\n            return {\n                type: 'leaf',\n                data: node.view.toJSON(),\n                size: node.cachedVisibleSize,\n                visible: false,\n            };\n        }\n        return { type: 'leaf', data: node.view.toJSON(), size };\n    }\n    return {\n        type: 'branch',\n        data: node.children.map((c) => serializeBranchNode(c, orthogonal(orientation))),\n        size,\n    };\n};\nexport class Gridview {\n    constructor(proportionalLayout, styles, orientation) {\n        this.proportionalLayout = proportionalLayout;\n        this.styles = styles;\n        this.disposable = new MutableDisposable();\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this.element = document.createElement('div');\n        this.element.className = 'grid-view';\n        this.root = new BranchNode(orientation, proportionalLayout, styles, 0, 0);\n    }\n    get length() {\n        return this._root ? this._root.children.length : 0;\n    }\n    serialize() {\n        const root = serializeBranchNode(this.getView(), this.orientation);\n        return {\n            root,\n            width: this.width,\n            height: this.height,\n            orientation: this.orientation,\n        };\n    }\n    dispose() {\n        this.disposable.dispose();\n        this._onDidChange.dispose();\n        this.root.dispose();\n        this.element.remove();\n    }\n    clear() {\n        const orientation = this.root.orientation;\n        this.root = new BranchNode(orientation, this.proportionalLayout, this.styles, this.root.size, this.root.orthogonalSize);\n    }\n    deserialize(json, deserializer) {\n        const orientation = json.orientation;\n        const height = orientation === Orientation.VERTICAL ? json.height : json.width;\n        this._deserialize(json.root, orientation, deserializer, height);\n    }\n    _deserialize(root, orientation, deserializer, orthogonalSize) {\n        this.root = this._deserializeNode(root, orientation, deserializer, orthogonalSize, true);\n    }\n    _deserializeNode(node, orientation, deserializer, orthogonalSize, isRoot = false) {\n        let result;\n        if (node.type === 'branch') {\n            const serializedChildren = node.data;\n            const children = serializedChildren.map((serializedChild) => {\n                return {\n                    node: this._deserializeNode(serializedChild, orthogonal(orientation), deserializer, node.size),\n                    visible: serializedChild.visible,\n                };\n            });\n            // HORIZONTAL => height=orthogonalsize width=size\n            // VERTICAL => height=size width=orthogonalsize\n            result = new BranchNode(orientation, this.proportionalLayout, this.styles, isRoot ? orthogonalSize : node.size, isRoot ? node.size : orthogonalSize, children);\n        }\n        else {\n            result = new LeafNode(deserializer.fromJSON(node), orientation, orthogonalSize, node.size);\n        }\n        return result;\n    }\n    get orientation() {\n        return this.root.orientation;\n    }\n    set orientation(orientation) {\n        if (this.root.orientation === orientation) {\n            return;\n        }\n        const { size, orthogonalSize } = this.root;\n        this.root = flipNode(this.root, orthogonalSize, size);\n        this.root.layout(size, orthogonalSize);\n    }\n    get root() {\n        return this._root;\n    }\n    set root(root) {\n        const oldRoot = this._root;\n        if (oldRoot) {\n            oldRoot.dispose();\n            this.element.removeChild(oldRoot.element);\n        }\n        this._root = root;\n        this.element.appendChild(this._root.element);\n        this.disposable.value = this._root.onDidChange((e) => {\n            this._onDidChange.fire(e);\n        });\n    }\n    /**\n     * If the root is orientated as a VERTICAL node then nest the existing root within a new HORIZIONTAL root node\n     * If the root is orientated as a HORIZONTAL node then nest the existing root within a new VERITCAL root node\n     */\n    insertOrthogonalSplitviewAtRoot() {\n        if (!this._root) {\n            return;\n        }\n        const oldRoot = this.root;\n        oldRoot.element.remove();\n        this._root = new BranchNode(orthogonal(oldRoot.orientation), this.proportionalLayout, this.styles, this.root.orthogonalSize, this.root.size);\n        if (oldRoot.children.length === 1) {\n            // can remove one level of redundant branching if there is only a single child\n            const childReference = oldRoot.children[0];\n            oldRoot.removeChild(0); // remove to prevent disposal when disposing of unwanted root\n            oldRoot.dispose();\n            this._root.addChild(childReference, Sizing.Distribute, 0);\n        }\n        else {\n            this._root.addChild(oldRoot, Sizing.Distribute, 0);\n        }\n        this.element.appendChild(this._root.element);\n        this.disposable.value = this._root.onDidChange((e) => {\n            this._onDidChange.fire(e);\n        });\n    }\n    next(location) {\n        return this.progmaticSelect(location);\n    }\n    previous(location) {\n        return this.progmaticSelect(location, true);\n    }\n    getView(location) {\n        const node = location ? this.getNode(location)[1] : this.root;\n        return this._getViews(node, this.orientation);\n    }\n    _getViews(node, orientation, cachedVisibleSize) {\n        const box = { height: node.height, width: node.width };\n        if (node instanceof LeafNode) {\n            return { box, view: node.view, cachedVisibleSize };\n        }\n        const children = [];\n        for (let i = 0; i < node.children.length; i++) {\n            const child = node.children[i];\n            const nodeCachedVisibleSize = node.getChildCachedVisibleSize(i);\n            children.push(this._getViews(child, orthogonal(orientation), nodeCachedVisibleSize));\n        }\n        return { box, children };\n    }\n    progmaticSelect(location, reverse = false) {\n        const [path, node] = this.getNode(location);\n        if (!(node instanceof LeafNode)) {\n            throw new Error('invalid location');\n        }\n        for (let i = path.length - 1; i > -1; i--) {\n            const n = path[i];\n            const l = location[i] || 0;\n            const canProgressInCurrentLevel = reverse\n                ? l - 1 > -1\n                : l + 1 < n.children.length;\n            if (canProgressInCurrentLevel) {\n                return findLeaf(n.children[reverse ? l - 1 : l + 1], reverse);\n            }\n        }\n        return findLeaf(this.root, reverse);\n    }\n    get width() {\n        return this.root.width;\n    }\n    get height() {\n        return this.root.height;\n    }\n    get minimumWidth() {\n        return this.root.minimumWidth;\n    }\n    get minimumHeight() {\n        return this.root.minimumHeight;\n    }\n    get maximumWidth() {\n        return this.root.maximumHeight;\n    }\n    get maximumHeight() {\n        return this.root.maximumHeight;\n    }\n    isViewVisible(location) {\n        const [rest, index] = tail(location);\n        const [, parent] = this.getNode(rest);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid from location');\n        }\n        return parent.isChildVisible(index);\n    }\n    setViewVisible(location, visible) {\n        const [rest, index] = tail(location);\n        const [, parent] = this.getNode(rest);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid from location');\n        }\n        parent.setChildVisible(index, visible);\n    }\n    moveView(parentLocation, from, to) {\n        const [, parent] = this.getNode(parentLocation);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid location');\n        }\n        parent.moveChild(from, to);\n    }\n    addView(view, size, location) {\n        const [rest, index] = tail(location);\n        const [pathToParent, parent] = this.getNode(rest);\n        if (parent instanceof BranchNode) {\n            const node = new LeafNode(view, orthogonal(parent.orientation), parent.orthogonalSize);\n            parent.addChild(node, size, index);\n        }\n        else {\n            const [grandParent, ..._] = [...pathToParent].reverse();\n            const [parentIndex, ...__] = [...rest].reverse();\n            let newSiblingSize = 0;\n            const newSiblingCachedVisibleSize = grandParent.getChildCachedVisibleSize(parentIndex);\n            if (typeof newSiblingCachedVisibleSize === 'number') {\n                newSiblingSize = Sizing.Invisible(newSiblingCachedVisibleSize);\n            }\n            grandParent.removeChild(parentIndex);\n            const newParent = new BranchNode(parent.orientation, this.proportionalLayout, this.styles, parent.size, parent.orthogonalSize);\n            grandParent.addChild(newParent, parent.size, parentIndex);\n            const newSibling = new LeafNode(parent.view, grandParent.orientation, parent.size);\n            newParent.addChild(newSibling, newSiblingSize, 0);\n            if (typeof size !== 'number' && size.type === 'split') {\n                size = { type: 'split', index: 0 };\n            }\n            const node = new LeafNode(view, grandParent.orientation, parent.size);\n            newParent.addChild(node, size, index);\n        }\n    }\n    remove(view, sizing) {\n        const location = getGridLocation(view.element);\n        return this.removeView(location, sizing);\n    }\n    removeView(location, sizing) {\n        const [rest, index] = tail(location);\n        const [pathToParent, parent] = this.getNode(rest);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid location');\n        }\n        const node = parent.children[index];\n        if (!(node instanceof LeafNode)) {\n            throw new Error('Invalid location');\n        }\n        parent.removeChild(index, sizing);\n        if (parent.children.length === 0) {\n            return node.view;\n        }\n        if (parent.children.length > 1) {\n            return node.view;\n        }\n        const sibling = parent.children[0];\n        if (pathToParent.length === 0) {\n            // parent is root\n            if (sibling instanceof LeafNode) {\n                return node.view;\n            }\n            // we must promote sibling to be the new root\n            parent.removeChild(0, sizing);\n            this.root = sibling;\n            return node.view;\n        }\n        const [grandParent, ..._] = [...pathToParent].reverse();\n        const [parentIndex, ...__] = [...rest].reverse();\n        const isSiblingVisible = parent.isChildVisible(0);\n        parent.removeChild(0, sizing);\n        const sizes = grandParent.children.map((_size, i) => grandParent.getChildSize(i));\n        grandParent.removeChild(parentIndex, sizing);\n        if (sibling instanceof BranchNode) {\n            sizes.splice(parentIndex, 1, ...sibling.children.map((c) => c.size));\n            for (let i = 0; i < sibling.children.length; i++) {\n                const child = sibling.children[i];\n                grandParent.addChild(child, child.size, parentIndex + i);\n            }\n        }\n        else {\n            const newSibling = new LeafNode(sibling.view, orthogonal(sibling.orientation), sibling.size);\n            const siblingSizing = isSiblingVisible\n                ? sibling.orthogonalSize\n                : Sizing.Invisible(sibling.orthogonalSize);\n            grandParent.addChild(newSibling, siblingSizing, parentIndex);\n        }\n        for (let i = 0; i < sizes.length; i++) {\n            grandParent.resizeChild(i, sizes[i]);\n        }\n        return node.view;\n    }\n    layout(width, height) {\n        const [size, orthogonalSize] = this.root.orientation === Orientation.HORIZONTAL\n            ? [height, width]\n            : [width, height];\n        this.root.layout(size, orthogonalSize);\n    }\n    getNode(location, node = this.root, path = []) {\n        if (location.length === 0) {\n            return [path, node];\n        }\n        if (!(node instanceof BranchNode)) {\n            throw new Error('Invalid location');\n        }\n        const [index, ...rest] = location;\n        if (index < 0 || index >= node.children.length) {\n            throw new Error('Invalid location');\n        }\n        const child = node.children[index];\n        path.push(node);\n        return this.getNode(rest, child, path);\n    }\n}\n","import { Emitter } from '../events';\nexport class SplitviewApi {\n    constructor(component) {\n        this.component = component;\n    }\n    get minimumSize() {\n        return this.component.minimumSize;\n    }\n    get maximumSize() {\n        return this.component.maximumSize;\n    }\n    get height() {\n        return this.component.height;\n    }\n    get width() {\n        return this.component.width;\n    }\n    get length() {\n        return this.component.length;\n    }\n    get orientation() {\n        return this.component.orientation;\n    }\n    get panels() {\n        return this.component.panels;\n    }\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    get onDidAddView() {\n        return this.component.onDidAddView;\n    }\n    get onDidRemoveView() {\n        return this.component.onDidRemoveView;\n    }\n    updateOptions(options) {\n        this.component.updateOptions(options);\n    }\n    removePanel(panel, sizing) {\n        this.component.removePanel(panel, sizing);\n    }\n    focus() {\n        this.component.focus();\n    }\n    getPanel(id) {\n        return this.component.getPanel(id);\n    }\n    layout(width, height) {\n        return this.component.layout(width, height);\n    }\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    movePanel(from, to) {\n        this.component.movePanel(from, to);\n    }\n    fromJSON(data) {\n        this.component.fromJSON(data);\n    }\n    toJSON() {\n        return this.component.toJSON();\n    }\n    clear() {\n        this.component.clear();\n    }\n}\nexport class PaneviewApi {\n    constructor(component) {\n        this.component = component;\n    }\n    get minimumSize() {\n        return this.component.minimumSize;\n    }\n    get maximumSize() {\n        return this.component.maximumSize;\n    }\n    get height() {\n        return this.component.height;\n    }\n    get width() {\n        return this.component.width;\n    }\n    get panels() {\n        return this.component.panels;\n    }\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    get onDidAddView() {\n        return this.component.onDidAddView;\n    }\n    get onDidRemoveView() {\n        return this.component.onDidRemoveView;\n    }\n    get onDidDrop() {\n        const emitter = new Emitter();\n        const disposable = this.component.onDidDrop((e) => {\n            emitter.fire(Object.assign(Object.assign({}, e), { api: this }));\n        });\n        emitter.dispose = () => {\n            disposable.dispose();\n            emitter.dispose();\n        };\n        return emitter.event;\n    }\n    removePanel(panel) {\n        this.component.removePanel(panel);\n    }\n    getPanel(id) {\n        return this.component.getPanel(id);\n    }\n    movePanel(from, to) {\n        this.component.movePanel(from, to);\n    }\n    focus() {\n        this.component.focus();\n    }\n    layout(width, height) {\n        this.component.layout(width, height);\n    }\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    fromJSON(data) {\n        this.component.fromJSON(data);\n    }\n    toJSON() {\n        return this.component.toJSON();\n    }\n    clear() {\n        this.component.clear();\n    }\n}\nexport class GridviewApi {\n    constructor(component) {\n        this.component = component;\n    }\n    get minimumHeight() {\n        return this.component.minimumHeight;\n    }\n    get maximumHeight() {\n        return this.component.maximumHeight;\n    }\n    get minimumWidth() {\n        return this.component.minimumWidth;\n    }\n    get maximumWidth() {\n        return this.component.maximumWidth;\n    }\n    get width() {\n        return this.component.width;\n    }\n    get height() {\n        return this.component.height;\n    }\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    get onDidAddPanel() {\n        return this.component.onDidAddGroup;\n    }\n    get onDidRemovePanel() {\n        return this.component.onDidRemoveGroup;\n    }\n    get onDidActivePanelChange() {\n        return this.component.onDidActiveGroupChange;\n    }\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    get panels() {\n        return this.component.groups;\n    }\n    get orientation() {\n        return this.component.orientation;\n    }\n    set orientation(value) {\n        this.component.updateOptions({ orientation: value });\n    }\n    focus() {\n        this.component.focus();\n    }\n    layout(width, height, force = false) {\n        this.component.layout(width, height, force);\n    }\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    removePanel(panel, sizing) {\n        this.component.removePanel(panel, sizing);\n    }\n    movePanel(panel, options) {\n        this.component.movePanel(panel, options);\n    }\n    getPanel(id) {\n        return this.component.getPanel(id);\n    }\n    fromJSON(data) {\n        return this.component.fromJSON(data);\n    }\n    toJSON() {\n        return this.component.toJSON();\n    }\n    clear() {\n        this.component.clear();\n    }\n}\nexport class DockviewApi {\n    constructor(component) {\n        this.component = component;\n    }\n    get id() {\n        return this.component.id;\n    }\n    get width() {\n        return this.component.width;\n    }\n    get height() {\n        return this.component.height;\n    }\n    get minimumHeight() {\n        return this.component.minimumHeight;\n    }\n    get maximumHeight() {\n        return this.component.maximumHeight;\n    }\n    get minimumWidth() {\n        return this.component.minimumWidth;\n    }\n    get maximumWidth() {\n        return this.component.maximumWidth;\n    }\n    get size() {\n        return this.component.size;\n    }\n    get totalPanels() {\n        return this.component.totalPanels;\n    }\n    get onDidActiveGroupChange() {\n        return this.component.onDidActiveGroupChange;\n    }\n    get onDidAddGroup() {\n        return this.component.onDidAddGroup;\n    }\n    get onDidRemoveGroup() {\n        return this.component.onDidRemoveGroup;\n    }\n    get onDidActivePanelChange() {\n        return this.component.onDidActivePanelChange;\n    }\n    get onDidAddPanel() {\n        return this.component.onDidAddPanel;\n    }\n    get onDidRemovePanel() {\n        return this.component.onDidRemovePanel;\n    }\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    get onDidDrop() {\n        return this.component.onDidDrop;\n    }\n    get panels() {\n        return this.component.panels;\n    }\n    get groups() {\n        return this.component.groups;\n    }\n    get activePanel() {\n        return this.component.activePanel;\n    }\n    get activeGroup() {\n        return this.component.activeGroup;\n    }\n    getTabHeight() {\n        return this.component.tabHeight;\n    }\n    setTabHeight(height) {\n        this.component.tabHeight = height;\n    }\n    focus() {\n        this.component.focus();\n    }\n    getPanel(id) {\n        return this.component.getGroupPanel(id);\n    }\n    layout(width, height, force = false) {\n        this.component.layout(width, height, force);\n    }\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    addGroup(options) {\n        return this.component.addGroup(options);\n    }\n    moveToNext(options) {\n        this.component.moveToNext(options);\n    }\n    moveToPrevious(options) {\n        this.component.moveToPrevious(options);\n    }\n    closeAllGroups() {\n        return this.component.closeAllGroups();\n    }\n    removeGroup(group) {\n        this.component.removeGroup(group);\n    }\n    getGroup(id) {\n        return this.component.getPanel(id);\n    }\n    fromJSON(data) {\n        this.component.fromJSON(data);\n    }\n    toJSON() {\n        return this.component.toJSON();\n    }\n    clear() {\n        this.component.clear();\n    }\n}\n","import { addDisposableListener } from '../events';\nimport { CompositeDisposable } from '../lifecycle';\nexport class DragAndDropObserver extends CompositeDisposable {\n    constructor(element, callbacks) {\n        super();\n        this.element = element;\n        this.callbacks = callbacks;\n        this.target = null;\n        this.registerListeners();\n    }\n    registerListeners() {\n        this.addDisposables(addDisposableListener(this.element, 'dragenter', (e) => {\n            this.target = e.target;\n            this.callbacks.onDragEnter(e);\n        }, true));\n        this.addDisposables(addDisposableListener(this.element, 'dragover', (e) => {\n            e.preventDefault(); // needed so that the drop event fires (https://stackoverflow.com/questions/21339924/drop-event-not-firing-in-chrome)\n            if (this.callbacks.onDragOver) {\n                this.callbacks.onDragOver(e);\n            }\n        }, true));\n        this.addDisposables(addDisposableListener(this.element, 'dragleave', (e) => {\n            if (this.target === e.target) {\n                this.target = null;\n                this.callbacks.onDragLeave(e);\n            }\n        }));\n        this.addDisposables(addDisposableListener(this.element, 'dragend', (e) => {\n            this.target = null;\n            this.callbacks.onDragEnd(e);\n        }));\n        this.addDisposables(addDisposableListener(this.element, 'drop', (e) => {\n            this.callbacks.onDrop(e);\n        }));\n    }\n}\n","import { toggleClass } from '../dom';\nimport { Emitter } from '../events';\nimport { CompositeDisposable } from '../lifecycle';\nimport { DragAndDropObserver } from './dnd';\nimport { clamp } from '../math';\nfunction numberOrFallback(maybeNumber, fallback) {\n    return typeof maybeNumber === 'number' ? maybeNumber : fallback;\n}\nexport function directionToPosition(direction) {\n    switch (direction) {\n        case 'above':\n            return 'top';\n        case 'below':\n            return 'bottom';\n        case 'left':\n            return 'left';\n        case 'right':\n            return 'right';\n        case 'within':\n            return 'center';\n        default:\n            throw new Error(`invalid direction '${direction}'`);\n    }\n}\nfunction isBooleanValue(canDisplayOverlay) {\n    return typeof canDisplayOverlay === 'boolean';\n}\nexport class Droptarget extends CompositeDisposable {\n    constructor(element, options) {\n        super();\n        this.element = element;\n        this.options = options;\n        this._onDrop = new Emitter();\n        this.onDrop = this._onDrop.event;\n        // use a set to take advantage of #<set>.has\n        const acceptedTargetZonesSet = new Set(this.options.acceptedTargetZones);\n        this.addDisposables(this._onDrop, new DragAndDropObserver(this.element, {\n            onDragEnter: () => undefined,\n            onDragOver: (e) => {\n                const width = this.element.clientWidth;\n                const height = this.element.clientHeight;\n                if (width === 0 || height === 0) {\n                    return; // avoid div!0\n                }\n                const rect = e.currentTarget.getBoundingClientRect();\n                const x = e.clientX - rect.left;\n                const y = e.clientY - rect.top;\n                const quadrant = this.calculateQuadrant(acceptedTargetZonesSet, x, y, width, height);\n                if (quadrant === null) {\n                    this.removeDropTarget();\n                    return;\n                }\n                if (isBooleanValue(this.options.canDisplayOverlay)) {\n                    if (!this.options.canDisplayOverlay) {\n                        return;\n                    }\n                }\n                else if (!this.options.canDisplayOverlay(e, quadrant)) {\n                    return;\n                }\n                if (!this.target) {\n                    this.target = document.createElement('div');\n                    this.target.className = 'drop-target-dropzone';\n                    this.overlay = document.createElement('div');\n                    this.overlay.className = 'drop-target-selection';\n                    this._state = 'center';\n                    this.target.appendChild(this.overlay);\n                    this.element.classList.add('drop-target');\n                    this.element.append(this.target);\n                }\n                if (this.options.acceptedTargetZones.length === 0) {\n                    return;\n                }\n                if (!this.target || !this.overlay) {\n                    return;\n                }\n                this.toggleClasses(quadrant, width, height);\n                this.setState(quadrant);\n            },\n            onDragLeave: () => {\n                this.removeDropTarget();\n            },\n            onDragEnd: () => {\n                this.removeDropTarget();\n            },\n            onDrop: (e) => {\n                e.preventDefault();\n                e.stopPropagation();\n                const state = this._state;\n                this.removeDropTarget();\n                if (state) {\n                    this._onDrop.fire({ position: state, nativeEvent: e });\n                }\n            },\n        }));\n    }\n    get state() {\n        return this._state;\n    }\n    dispose() {\n        this.removeDropTarget();\n    }\n    toggleClasses(quadrant, width, height) {\n        var _a, _b, _c, _d;\n        if (!this.overlay) {\n            return;\n        }\n        const isSmallX = width < 100;\n        const isSmallY = height < 100;\n        const isLeft = quadrant === 'left';\n        const isRight = quadrant === 'right';\n        const isTop = quadrant === 'top';\n        const isBottom = quadrant === 'bottom';\n        const rightClass = !isSmallX && isRight;\n        const leftClass = !isSmallX && isLeft;\n        const topClass = !isSmallY && isTop;\n        const bottomClass = !isSmallY && isBottom;\n        let size = 0.5;\n        if (((_b = (_a = this.options.overlayModel) === null || _a === void 0 ? void 0 : _a.size) === null || _b === void 0 ? void 0 : _b.type) === 'percentage') {\n            size = clamp(this.options.overlayModel.size.value, 0, 100) / 100;\n        }\n        if (((_d = (_c = this.options.overlayModel) === null || _c === void 0 ? void 0 : _c.size) === null || _d === void 0 ? void 0 : _d.type) === 'pixels') {\n            if (rightClass || leftClass) {\n                size =\n                    clamp(0, this.options.overlayModel.size.value, width) /\n                        width;\n            }\n            if (topClass || bottomClass) {\n                size =\n                    clamp(0, this.options.overlayModel.size.value, height) /\n                        height;\n            }\n        }\n        const translate = (1 - size) / 2;\n        const scale = size;\n        let transform;\n        if (rightClass) {\n            transform = `translateX(${100 * translate}%) scaleX(${scale})`;\n        }\n        else if (leftClass) {\n            transform = `translateX(-${100 * translate}%) scaleX(${scale})`;\n        }\n        else if (topClass) {\n            transform = `translateY(-${100 * translate}%) scaleY(${scale})`;\n        }\n        else if (bottomClass) {\n            transform = `translateY(${100 * translate}%) scaleY(${scale})`;\n        }\n        else {\n            transform = '';\n        }\n        this.overlay.style.transform = transform;\n        toggleClass(this.overlay, 'small-right', isSmallX && isRight);\n        toggleClass(this.overlay, 'small-left', isSmallX && isLeft);\n        toggleClass(this.overlay, 'small-top', isSmallY && isTop);\n        toggleClass(this.overlay, 'small-bottom', isSmallY && isBottom);\n    }\n    setState(quadrant) {\n        switch (quadrant) {\n            case 'top':\n                this._state = 'top';\n                break;\n            case 'left':\n                this._state = 'left';\n                break;\n            case 'bottom':\n                this._state = 'bottom';\n                break;\n            case 'right':\n                this._state = 'right';\n                break;\n            case 'center':\n                this._state = 'center';\n                break;\n        }\n    }\n    calculateQuadrant(overlayType, x, y, width, height) {\n        var _a, _b, _c, _d, _e, _f;\n        const isPercentage = ((_a = this.options.overlayModel) === null || _a === void 0 ? void 0 : _a.activationSize) === undefined ||\n            ((_c = (_b = this.options.overlayModel) === null || _b === void 0 ? void 0 : _b.activationSize) === null || _c === void 0 ? void 0 : _c.type) === 'percentage';\n        const value = numberOrFallback((_f = (_e = (_d = this.options) === null || _d === void 0 ? void 0 : _d.overlayModel) === null || _e === void 0 ? void 0 : _e.activationSize) === null || _f === void 0 ? void 0 : _f.value, 20);\n        if (isPercentage) {\n            return calculateQuadrantAsPercentage(overlayType, x, y, width, height, value);\n        }\n        return calculateQuadrantAsPixels(overlayType, x, y, width, height, value);\n    }\n    removeDropTarget() {\n        if (this.target) {\n            this._state = undefined;\n            this.element.removeChild(this.target);\n            this.target = undefined;\n            this.overlay = undefined;\n            this.element.classList.remove('drop-target');\n        }\n    }\n}\nexport function calculateQuadrantAsPercentage(overlayType, x, y, width, height, threshold) {\n    const xp = (100 * x) / width;\n    const yp = (100 * y) / height;\n    if (overlayType.has('left') && xp < threshold) {\n        return 'left';\n    }\n    if (overlayType.has('right') && xp > 100 - threshold) {\n        return 'right';\n    }\n    if (overlayType.has('top') && yp < threshold) {\n        return 'top';\n    }\n    if (overlayType.has('bottom') && yp > 100 - threshold) {\n        return 'bottom';\n    }\n    if (!overlayType.has('center')) {\n        return null;\n    }\n    return 'center';\n}\nexport function calculateQuadrantAsPixels(overlayType, x, y, width, height, threshold) {\n    if (overlayType.has('left') && x < threshold) {\n        return 'left';\n    }\n    if (overlayType.has('right') && x > width - threshold) {\n        return 'right';\n    }\n    if (overlayType.has('top') && y < threshold) {\n        return 'top';\n    }\n    if (overlayType.has('bottom') && y > height - threshold) {\n        return 'bottom';\n    }\n    if (!overlayType.has('center')) {\n        return null;\n    }\n    return 'center';\n}\n","import { CompositeDisposable, MutableDisposable, } from '../../lifecycle';\nimport { Emitter } from '../../events';\nimport { trackFocus } from '../../dom';\nexport class ContentContainer extends CompositeDisposable {\n    constructor() {\n        super();\n        this.disposable = new MutableDisposable();\n        this._onDidFocus = new Emitter();\n        this.onDidFocus = this._onDidFocus.event;\n        this._onDidBlur = new Emitter();\n        this.onDidBlur = this._onDidBlur.event;\n        this._element = document.createElement('div');\n        this._element.className = 'content-container';\n        this._element.tabIndex = -1;\n        this.addDisposables(this._onDidFocus, this._onDidBlur);\n        // for hosted containers\n        // 1) register a drop target on the host\n        // 2) register window dragStart events to disable pointer events\n        // 3) register dragEnd events\n        // 4) register mouseMove events (if no buttons are present we take this as a dragEnd event)\n    }\n    get element() {\n        return this._element;\n    }\n    show() {\n        this.element.style.display = '';\n    }\n    hide() {\n        this.element.style.display = 'none';\n    }\n    openPanel(panel) {\n        var _a;\n        if (this.panel === panel) {\n            return;\n        }\n        if (this.panel) {\n            if ((_a = this.panel.view) === null || _a === void 0 ? void 0 : _a.content) {\n                this._element.removeChild(this.panel.view.content.element);\n            }\n            this.panel = undefined;\n        }\n        this.panel = panel;\n        const disposable = new CompositeDisposable();\n        if (this.panel.view) {\n            const _onDidFocus = this.panel.view.content.onDidFocus;\n            const _onDidBlur = this.panel.view.content.onDidBlur;\n            const { onDidFocus, onDidBlur } = trackFocus(this._element);\n            disposable.addDisposables(onDidFocus(() => this._onDidFocus.fire()), onDidBlur(() => this._onDidBlur.fire()));\n            if (_onDidFocus) {\n                disposable.addDisposables(_onDidFocus(() => this._onDidFocus.fire()));\n            }\n            if (_onDidBlur) {\n                disposable.addDisposables(_onDidBlur(() => this._onDidBlur.fire()));\n            }\n            this._element.appendChild(this.panel.view.content.element);\n        }\n        this.disposable.value = disposable;\n    }\n    layout(_width, _height) {\n        // noop\n    }\n    closePanel() {\n        var _a, _b, _c;\n        if ((_c = (_b = (_a = this.panel) === null || _a === void 0 ? void 0 : _a.view) === null || _b === void 0 ? void 0 : _b.content) === null || _c === void 0 ? void 0 : _c.element) {\n            this._element.removeChild(this.panel.view.content.element);\n            this.panel = undefined;\n        }\n    }\n    dispose() {\n        this.disposable.dispose();\n        super.dispose();\n    }\n}\n","export var DockviewDropTargets;\n(function (DockviewDropTargets) {\n    DockviewDropTargets[DockviewDropTargets[\"Tab\"] = 0] = \"Tab\";\n    DockviewDropTargets[DockviewDropTargets[\"Panel\"] = 1] = \"Panel\";\n    DockviewDropTargets[DockviewDropTargets[\"TabContainer\"] = 2] = \"TabContainer\";\n    DockviewDropTargets[DockviewDropTargets[\"Edge\"] = 3] = \"Edge\";\n})(DockviewDropTargets || (DockviewDropTargets = {}));\n","import { getElementsByTagName } from '../dom';\nimport { addDisposableListener, Emitter } from '../events';\nimport { CompositeDisposable, MutableDisposable, } from '../lifecycle';\nexport class DragHandler extends CompositeDisposable {\n    constructor(el) {\n        super();\n        this.el = el;\n        this.disposable = new MutableDisposable();\n        this._onDragStart = new Emitter();\n        this.onDragStart = this._onDragStart.event;\n        this.iframes = [];\n        this.configure();\n    }\n    configure() {\n        this.addDisposables(this._onDragStart, addDisposableListener(this.el, 'dragstart', (event) => {\n            this.iframes = [\n                ...getElementsByTagName('iframe'),\n                ...getElementsByTagName('webview'),\n            ];\n            for (const iframe of this.iframes) {\n                iframe.style.pointerEvents = 'none';\n            }\n            this.el.classList.add('dv-dragged');\n            setTimeout(() => this.el.classList.remove('dv-dragged'), 0);\n            this.disposable.value = this.getData(event.dataTransfer);\n            if (event.dataTransfer) {\n                event.dataTransfer.effectAllowed = 'move';\n            }\n        }), addDisposableListener(this.el, 'dragend', () => {\n            for (const iframe of this.iframes) {\n                iframe.style.pointerEvents = 'auto';\n            }\n            this.iframes = [];\n            this.disposable.dispose();\n        }));\n    }\n}\n","import { addDisposableListener, Emitter } from '../events';\nimport { CompositeDisposable } from '../lifecycle';\nimport { getPanelData, LocalSelectionTransfer, PanelTransfer, } from '../dnd/dataTransfer';\nimport { toggleClass } from '../dom';\nimport { Droptarget } from '../dnd/droptarget';\nimport { DockviewDropTargets } from './dnd';\nimport { DragHandler } from '../dnd/abstractDragHandler';\nexport class Tab extends CompositeDisposable {\n    constructor(panelId, accessor, group) {\n        super();\n        this.panelId = panelId;\n        this.accessor = accessor;\n        this.group = group;\n        this._onChanged = new Emitter();\n        this.onChanged = this._onChanged.event;\n        this._onDropped = new Emitter();\n        this.onDrop = this._onDropped.event;\n        this.addDisposables(this._onChanged, this._onDropped);\n        this._element = document.createElement('div');\n        this._element.className = 'tab';\n        this._element.tabIndex = 0;\n        this._element.draggable = true;\n        toggleClass(this.element, 'inactive-tab', true);\n        this.addDisposables(new (class Handler extends DragHandler {\n            constructor() {\n                super(...arguments);\n                this.panelTransfer = LocalSelectionTransfer.getInstance();\n            }\n            getData() {\n                this.panelTransfer.setData([new PanelTransfer(accessor.id, group.id, panelId)], PanelTransfer.prototype);\n                return {\n                    dispose: () => {\n                        this.panelTransfer.clearData(PanelTransfer.prototype);\n                    },\n                };\n            }\n            dispose() {\n                //\n            }\n        })(this._element));\n        this.addDisposables(addDisposableListener(this._element, 'mousedown', (event) => {\n            if (event.defaultPrevented) {\n                return;\n            }\n            /**\n             * TODO: alternative to stopPropagation\n             *\n             * I need to stop the event propagation here since otherwise it'll be intercepted by event handlers\n             * on the tabs-container. I cannot use event.preventDefault() since I need the on DragStart event to occur\n             */\n            event.stopPropagation();\n            this._onChanged.fire(event);\n        }));\n        this.droptarget = new Droptarget(this._element, {\n            acceptedTargetZones: ['center'],\n            canDisplayOverlay: (event, position) => {\n                if (this.group.locked) {\n                    return false;\n                }\n                const data = getPanelData();\n                if (data && this.accessor.id === data.viewId) {\n                    if (data.panelId === null &&\n                        data.groupId === this.group.id) {\n                        // don't allow group move to drop on self\n                        return false;\n                    }\n                    return this.panelId !== data.panelId;\n                }\n                return this.group.model.canDisplayOverlay(event, position, DockviewDropTargets.Tab);\n            },\n        });\n        this.addDisposables(this.droptarget.onDrop((event) => {\n            this._onDropped.fire(event);\n        }));\n    }\n    get element() {\n        return this._element;\n    }\n    setActive(isActive) {\n        toggleClass(this.element, 'active-tab', isActive);\n        toggleClass(this.element, 'inactive-tab', !isActive);\n    }\n    setContent(part) {\n        if (this.content) {\n            this._element.removeChild(this.content.element);\n        }\n        this.content = part;\n        this._element.appendChild(this.content.element);\n    }\n    dispose() {\n        super.dispose();\n        this.droptarget.dispose();\n    }\n}\n","import { DragHandler } from './abstractDragHandler';\nimport { LocalSelectionTransfer, PanelTransfer } from './dataTransfer';\nimport { addGhostImage } from './ghost';\nexport class GroupDragHandler extends DragHandler {\n    constructor(element, accessorId, group) {\n        super(element);\n        this.accessorId = accessorId;\n        this.group = group;\n        this.panelTransfer = LocalSelectionTransfer.getInstance();\n    }\n    getData(dataTransfer) {\n        this.panelTransfer.setData([new PanelTransfer(this.accessorId, this.group.id, null)], PanelTransfer.prototype);\n        const style = window.getComputedStyle(this.el);\n        const bgColor = style.getPropertyValue('--dv-activegroup-visiblepanel-tab-background-color');\n        const color = style.getPropertyValue('--dv-activegroup-visiblepanel-tab-color');\n        if (dataTransfer) {\n            const ghostElement = document.createElement('div');\n            ghostElement.style.backgroundColor = bgColor;\n            ghostElement.style.color = color;\n            ghostElement.style.padding = '2px 8px';\n            ghostElement.style.height = '24px';\n            ghostElement.style.fontSize = '11px';\n            ghostElement.style.lineHeight = '20px';\n            ghostElement.style.borderRadius = '12px';\n            ghostElement.style.position = 'absolute';\n            ghostElement.textContent = `Multiple Panels (${this.group.size})`;\n            addGhostImage(dataTransfer, ghostElement);\n        }\n        return {\n            dispose: () => {\n                this.panelTransfer.clearData(PanelTransfer.prototype);\n            },\n        };\n    }\n    dispose() {\n        //\n    }\n}\n","import { addClasses } from '../dom';\nexport function addGhostImage(dataTransfer, ghostElement) {\n    // class dockview provides to force ghost image to be drawn on a different layer and prevent weird rendering issues\n    addClasses(ghostElement, 'dv-dragged');\n    document.body.appendChild(ghostElement);\n    dataTransfer.setDragImage(ghostElement, 0, 0);\n    setTimeout(() => {\n        ghostElement.remove();\n    }, 0);\n}\n","import { last } from '../../array';\nimport { getPanelData } from '../../dnd/dataTransfer';\nimport { Droptarget } from '../../dnd/droptarget';\nimport { GroupDragHandler } from '../../dnd/groupDragHandler';\nimport { addDisposableListener, Emitter } from '../../events';\nimport { CompositeDisposable } from '../../lifecycle';\nimport { DockviewDropTargets } from '../dnd';\nexport class VoidContainer extends CompositeDisposable {\n    constructor(accessor, group) {\n        super();\n        this.accessor = accessor;\n        this.group = group;\n        this._onDrop = new Emitter();\n        this.onDrop = this._onDrop.event;\n        this._element = document.createElement('div');\n        this._element.className = 'void-container';\n        this._element.tabIndex = 0;\n        this._element.draggable = true;\n        this.addDisposables(this._onDrop, addDisposableListener(this._element, 'click', () => {\n            this.accessor.doSetGroupActive(this.group);\n        }));\n        const handler = new GroupDragHandler(this._element, accessor.id, group);\n        this.voidDropTarget = new Droptarget(this._element, {\n            acceptedTargetZones: ['center'],\n            canDisplayOverlay: (event, position) => {\n                var _a;\n                const data = getPanelData();\n                if (data && this.accessor.id === data.viewId) {\n                    if (data.panelId === null &&\n                        data.groupId === this.group.id) {\n                        // don't allow group move to drop on self\n                        return false;\n                    }\n                    // don't show the overlay if the tab being dragged is the last panel of this group\n                    return ((_a = last(this.group.panels)) === null || _a === void 0 ? void 0 : _a.id) !== data.panelId;\n                }\n                return group.model.canDisplayOverlay(event, position, DockviewDropTargets.Panel);\n            },\n        });\n        this.addDisposables(handler, this.voidDropTarget.onDrop((event) => {\n            this._onDrop.fire(event);\n        }), this.voidDropTarget);\n    }\n    get element() {\n        return this._element;\n    }\n}\n","import { CompositeDisposable, } from '../../lifecycle';\nimport { addDisposableListener, Emitter } from '../../events';\nimport { Tab } from '../tab';\nimport { VoidContainer } from './voidContainer';\nimport { toggleClass } from '../../dom';\nexport class TabsContainer extends CompositeDisposable {\n    constructor(accessor, group) {\n        super();\n        this.accessor = accessor;\n        this.group = group;\n        this.tabs = [];\n        this.selectedIndex = -1;\n        this._hidden = false;\n        this._onDrop = new Emitter();\n        this.onDrop = this._onDrop.event;\n        this.addDisposables(this._onDrop);\n        this._element = document.createElement('div');\n        this._element.className = 'tabs-and-actions-container';\n        this.height = accessor.options.tabHeight;\n        toggleClass(this._element, 'dv-full-width-single-tab', this.accessor.options.singleTabMode === 'fullwidth');\n        this.addDisposables(this.accessor.onDidAddPanel((e) => {\n            if (e.api.group === this.group) {\n                toggleClass(this._element, 'dv-single-tab', this.size === 1);\n            }\n        }), this.accessor.onDidRemovePanel((e) => {\n            if (e.api.group === this.group) {\n                toggleClass(this._element, 'dv-single-tab', this.size === 1);\n            }\n        }));\n        this.actionContainer = document.createElement('div');\n        this.actionContainer.className = 'action-container';\n        this.tabContainer = document.createElement('div');\n        this.tabContainer.className = 'tabs-container';\n        this.voidContainer = new VoidContainer(this.accessor, this.group);\n        this._element.appendChild(this.tabContainer);\n        this._element.appendChild(this.voidContainer.element);\n        this._element.appendChild(this.actionContainer);\n        this.addDisposables(this.voidContainer, this.voidContainer.onDrop((event) => {\n            this._onDrop.fire({\n                event: event.nativeEvent,\n                index: this.tabs.length,\n            });\n        }), addDisposableListener(this.tabContainer, 'mousedown', (event) => {\n            if (event.defaultPrevented) {\n                return;\n            }\n            const isLeftClick = event.button === 0;\n            if (isLeftClick) {\n                this.accessor.doSetGroupActive(this.group);\n            }\n        }));\n    }\n    get panels() {\n        return this.tabs.map((_) => _.value.panelId);\n    }\n    get size() {\n        return this.tabs.length;\n    }\n    get height() {\n        return this._height;\n    }\n    set height(value) {\n        this._height = value;\n        if (typeof value !== 'number') {\n            this.element.style.removeProperty('--dv-tabs-and-actions-container-height');\n        }\n        else {\n            this.element.style.setProperty('--dv-tabs-and-actions-container-height', `${value}px`);\n        }\n    }\n    get hidden() {\n        return this._hidden;\n    }\n    set hidden(value) {\n        this._hidden = value;\n        this.element.style.display = value ? 'none' : '';\n    }\n    show() {\n        if (!this.hidden) {\n            this.element.style.display = '';\n        }\n    }\n    hide() {\n        this._element.style.display = 'none';\n    }\n    setActionElement(element) {\n        if (this.actions === element) {\n            return;\n        }\n        if (this.actions) {\n            this.actions.remove();\n            this.actions = undefined;\n        }\n        if (element) {\n            this.actionContainer.appendChild(element);\n            this.actions = element;\n        }\n    }\n    get element() {\n        return this._element;\n    }\n    isActive(tab) {\n        return (this.selectedIndex > -1 &&\n            this.tabs[this.selectedIndex].value === tab);\n    }\n    at(index) {\n        var _a;\n        return (_a = this.tabs[index]) === null || _a === void 0 ? void 0 : _a.value;\n    }\n    indexOf(id) {\n        return this.tabs.findIndex((tab) => tab.value.panelId === id);\n    }\n    setActive(_isGroupActive) {\n        // noop\n    }\n    addTab(tab, index = this.tabs.length) {\n        if (index < 0 || index > this.tabs.length) {\n            throw new Error('invalid location');\n        }\n        this.tabContainer.insertBefore(tab.value.element, this.tabContainer.children[index]);\n        this.tabs = [\n            ...this.tabs.slice(0, index),\n            tab,\n            ...this.tabs.slice(index),\n        ];\n        if (this.selectedIndex < 0) {\n            this.selectedIndex = index;\n        }\n    }\n    delete(id) {\n        const index = this.tabs.findIndex((tab) => tab.value.panelId === id);\n        const tabToRemove = this.tabs.splice(index, 1)[0];\n        const { value, disposable } = tabToRemove;\n        disposable.dispose();\n        value.element.remove();\n    }\n    setActivePanel(panel) {\n        this.tabs.forEach((tab) => {\n            const isActivePanel = panel.id === tab.value.panelId;\n            tab.value.setActive(isActivePanel);\n        });\n    }\n    openPanel(panel, index = this.tabs.length) {\n        var _a;\n        if (this.tabs.find((tab) => tab.value.panelId === panel.id)) {\n            return;\n        }\n        const tabToAdd = new Tab(panel.id, this.accessor, this.group);\n        if (!((_a = panel.view) === null || _a === void 0 ? void 0 : _a.tab)) {\n            throw new Error('invalid header component');\n        }\n        tabToAdd.setContent(panel.view.tab);\n        const disposable = CompositeDisposable.from(tabToAdd.onChanged((event) => {\n            var _a;\n            const alreadyFocused = panel.id === ((_a = this.group.model.activePanel) === null || _a === void 0 ? void 0 : _a.id) &&\n                this.group.model.isContentFocused;\n            const isLeftClick = event.button === 0;\n            if (!isLeftClick || event.defaultPrevented) {\n                return;\n            }\n            this.group.model.openPanel(panel, {\n                skipFocus: alreadyFocused,\n            });\n        }), tabToAdd.onDrop((event) => {\n            this._onDrop.fire({\n                event: event.nativeEvent,\n                index: this.tabs.findIndex((x) => x.value === tabToAdd),\n            });\n        }));\n        const value = { value: tabToAdd, disposable };\n        this.addTab(value, index);\n    }\n    closePanel(panel) {\n        this.delete(panel.id);\n    }\n    dispose() {\n        super.dispose();\n        this.tabs.forEach((tab) => {\n            tab.disposable.dispose();\n        });\n        this.tabs = [];\n    }\n}\n","import { DockviewApi } from '../api/component.api';\nimport { getPanelData } from '../dnd/dataTransfer';\nimport { Droptarget } from '../dnd/droptarget';\nimport { isAncestor, toggleClass } from '../dom';\nimport { addDisposableListener, Emitter } from '../events';\nimport { CompositeDisposable } from '../lifecycle';\nimport { ContentContainer } from './panel/content';\nimport { TabsContainer } from './titlebar/tabsContainer';\nimport { DockviewDropTargets } from './dnd';\nexport class Groupview extends CompositeDisposable {\n    constructor(container, accessor, id, options, groupPanel) {\n        super();\n        this.container = container;\n        this.accessor = accessor;\n        this.id = id;\n        this.options = options;\n        this.groupPanel = groupPanel;\n        this._isGroupActive = false;\n        this._locked = false;\n        this.mostRecentlyUsed = [];\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._width = 0;\n        this._height = 0;\n        this._panels = [];\n        this._onMove = new Emitter();\n        this.onMove = this._onMove.event;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onDidAddPanel = new Emitter();\n        this.onDidAddPanel = this._onDidAddPanel.event;\n        this._onDidRemovePanel = new Emitter();\n        this.onDidRemovePanel = this._onDidRemovePanel.event;\n        this._onDidActivePanelChange = new Emitter();\n        this.onDidActivePanelChange = this._onDidActivePanelChange.event;\n        this.container.classList.add('groupview');\n        this.tabsContainer = new TabsContainer(this.accessor, this.groupPanel);\n        this.contentContainer = new ContentContainer();\n        this.dropTarget = new Droptarget(this.contentContainer.element, {\n            acceptedTargetZones: ['top', 'bottom', 'left', 'right', 'center'],\n            canDisplayOverlay: (event, position) => {\n                if (this.locked && position === 'center') {\n                    return false;\n                }\n                const data = getPanelData();\n                if (data && data.viewId === this.accessor.id) {\n                    if (data.groupId === this.id) {\n                        if (position === 'center') {\n                            // don't allow to drop on self for center position\n                            return false;\n                        }\n                        if (data.panelId === null) {\n                            // don't allow group move to drop anywhere on self\n                            return false;\n                        }\n                    }\n                    const groupHasOnePanelAndIsActiveDragElement = this._panels.length === 1 && data.groupId === this.id;\n                    return !groupHasOnePanelAndIsActiveDragElement;\n                }\n                return this.canDisplayOverlay(event, position, DockviewDropTargets.Panel);\n            },\n        });\n        container.append(this.tabsContainer.element, this.contentContainer.element);\n        this.header.hidden = !!options.hideHeader;\n        this.locked = !!options.locked;\n        this.addDisposables(this._onMove, this._onDidChange, this._onDidDrop, this._onDidAddPanel, this._onDidRemovePanel, this._onDidActivePanelChange, this.tabsContainer.onDrop((event) => {\n            this.handleDropEvent(event.event, 'center', event.index);\n        }), this.contentContainer.onDidFocus(() => {\n            this.accessor.doSetGroupActive(this.groupPanel, true);\n        }), this.contentContainer.onDidBlur(() => {\n            // noop\n        }), this.dropTarget.onDrop((event) => {\n            this.handleDropEvent(event.nativeEvent, event.position);\n        }));\n    }\n    get element() {\n        throw new Error('not supported');\n    }\n    get activePanel() {\n        return this._activePanel;\n    }\n    get locked() {\n        return this._locked;\n    }\n    set locked(value) {\n        this._locked = value;\n        toggleClass(this.container, 'locked-groupview', value);\n    }\n    get isActive() {\n        return this._isGroupActive;\n    }\n    get panels() {\n        return this._panels;\n    }\n    get size() {\n        return this._panels.length;\n    }\n    get isEmpty() {\n        return this._panels.length === 0;\n    }\n    get minimumHeight() {\n        return 100;\n    }\n    get maximumHeight() {\n        return Number.MAX_SAFE_INTEGER;\n    }\n    get minimumWidth() {\n        return 100;\n    }\n    get maximumWidth() {\n        return Number.MAX_SAFE_INTEGER;\n    }\n    get hasWatermark() {\n        return !!(this.watermark && this.container.contains(this.watermark.element));\n    }\n    get header() {\n        return this.tabsContainer;\n    }\n    get isContentFocused() {\n        if (!document.activeElement) {\n            return false;\n        }\n        return isAncestor(document.activeElement, this.contentContainer.element);\n    }\n    initialize() {\n        var _a, _b;\n        if ((_a = this.options) === null || _a === void 0 ? void 0 : _a.panels) {\n            this.options.panels.forEach((panel) => {\n                this.doAddPanel(panel);\n            });\n        }\n        if ((_b = this.options) === null || _b === void 0 ? void 0 : _b.activePanel) {\n            this.openPanel(this.options.activePanel);\n        }\n        // must be run after the constructor otherwise this.parent may not be\n        // correctly initialized\n        this.setActive(this.isActive, true, true);\n        this.updateContainer();\n        if (this.accessor.options.createGroupControlElement) {\n            this._control = this.accessor.options.createGroupControlElement(this.groupPanel);\n            this.addDisposables(this._control);\n            this._control.init({\n                containerApi: new DockviewApi(this.accessor),\n                api: this.groupPanel.api,\n            });\n            this.tabsContainer.setActionElement(this._control.element);\n        }\n    }\n    indexOf(panel) {\n        return this.tabsContainer.indexOf(panel.id);\n    }\n    toJSON() {\n        var _a;\n        const result = {\n            views: this.tabsContainer.panels,\n            activeView: (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.id,\n            id: this.id,\n        };\n        if (this.locked) {\n            result.locked = true;\n        }\n        if (this.header.hidden) {\n            result.hideHeader = true;\n        }\n        return result;\n    }\n    moveToNext(options) {\n        if (!options) {\n            options = {};\n        }\n        if (!options.panel) {\n            options.panel = this.activePanel;\n        }\n        const index = options.panel ? this.panels.indexOf(options.panel) : -1;\n        let normalizedIndex;\n        if (index < this.panels.length - 1) {\n            normalizedIndex = index + 1;\n        }\n        else if (!options.suppressRoll) {\n            normalizedIndex = 0;\n        }\n        else {\n            return;\n        }\n        this.openPanel(this.panels[normalizedIndex]);\n    }\n    moveToPrevious(options) {\n        if (!options) {\n            options = {};\n        }\n        if (!options.panel) {\n            options.panel = this.activePanel;\n        }\n        if (!options.panel) {\n            return;\n        }\n        const index = this.panels.indexOf(options.panel);\n        let normalizedIndex;\n        if (index > 0) {\n            normalizedIndex = index - 1;\n        }\n        else if (!options.suppressRoll) {\n            normalizedIndex = this.panels.length - 1;\n        }\n        else {\n            return;\n        }\n        this.openPanel(this.panels[normalizedIndex]);\n    }\n    containsPanel(panel) {\n        return this.panels.includes(panel);\n    }\n    init(_params) {\n        //noop\n    }\n    update(_params) {\n        //noop\n    }\n    focus() {\n        var _a;\n        (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    openPanel(panel, options = {}) {\n        if (typeof options.index !== 'number' ||\n            options.index > this.panels.length) {\n            options.index = this.panels.length;\n        }\n        const skipSetPanelActive = !!options.skipSetPanelActive;\n        const skipSetGroupActive = !!options.skipSetGroupActive;\n        // ensure the group is updated before we fire any events\n        panel.updateParentGroup(this.groupPanel, true);\n        if (this._activePanel === panel) {\n            if (!skipSetGroupActive) {\n                this.accessor.doSetGroupActive(this.groupPanel);\n            }\n            return;\n        }\n        this.doAddPanel(panel, options.index, skipSetPanelActive);\n        if (!skipSetPanelActive) {\n            this.doSetActivePanel(panel);\n        }\n        if (!skipSetGroupActive) {\n            this.accessor.doSetGroupActive(this.groupPanel, !!options.skipFocus);\n        }\n        this.updateContainer();\n    }\n    removePanel(groupItemOrId) {\n        const id = typeof groupItemOrId === 'string'\n            ? groupItemOrId\n            : groupItemOrId.id;\n        const panelToRemove = this._panels.find((panel) => panel.id === id);\n        if (!panelToRemove) {\n            throw new Error('invalid operation');\n        }\n        return this._removePanel(panelToRemove);\n    }\n    closeAllPanels() {\n        if (this.panels.length > 0) {\n            // take a copy since we will be edting the array as we iterate through\n            const arrPanelCpy = [...this.panels];\n            for (const panel of arrPanelCpy) {\n                this.doClose(panel);\n            }\n        }\n        else {\n            this.accessor.removeGroup(this.groupPanel);\n        }\n    }\n    closePanel(panel) {\n        this.doClose(panel);\n    }\n    doClose(panel) {\n        this.accessor.removePanel(panel);\n    }\n    isPanelActive(panel) {\n        return this._activePanel === panel;\n    }\n    updateActions(element) {\n        this.tabsContainer.setActionElement(element);\n    }\n    setActive(isGroupActive, skipFocus = false, force = false) {\n        var _a, _b;\n        if (!force && this.isActive === isGroupActive) {\n            if (!skipFocus) {\n                (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.focus();\n            }\n            return;\n        }\n        this._isGroupActive = isGroupActive;\n        toggleClass(this.container, 'active-group', isGroupActive);\n        toggleClass(this.container, 'inactive-group', !isGroupActive);\n        this.tabsContainer.setActive(this.isActive);\n        if (!this._activePanel && this.panels.length > 0) {\n            this.doSetActivePanel(this.panels[0]);\n        }\n        this.updateContainer();\n        if (isGroupActive) {\n            if (!skipFocus) {\n                (_b = this._activePanel) === null || _b === void 0 ? void 0 : _b.focus();\n            }\n        }\n    }\n    layout(width, height) {\n        var _a;\n        this._width = width;\n        this._height = height;\n        this.contentContainer.layout(this._width, this._height);\n        if ((_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.layout) {\n            this._activePanel.layout(this._width, this._height);\n        }\n    }\n    _removePanel(panel) {\n        const isActivePanel = this._activePanel === panel;\n        this.doRemovePanel(panel);\n        if (isActivePanel && this.panels.length > 0) {\n            const nextPanel = this.mostRecentlyUsed[0];\n            this.openPanel(nextPanel);\n        }\n        if (this._activePanel && this.panels.length === 0) {\n            this.doSetActivePanel(undefined);\n        }\n        this.updateContainer();\n        return panel;\n    }\n    doRemovePanel(panel) {\n        const index = this.panels.indexOf(panel);\n        if (this._activePanel === panel) {\n            this.contentContainer.closePanel();\n        }\n        this.tabsContainer.delete(panel.id);\n        this._panels.splice(index, 1);\n        if (this.mostRecentlyUsed.includes(panel)) {\n            this.mostRecentlyUsed.splice(this.mostRecentlyUsed.indexOf(panel), 1);\n        }\n        this._onDidRemovePanel.fire({ panel });\n    }\n    doAddPanel(panel, index = this.panels.length, skipSetActive = false) {\n        const existingPanel = this._panels.indexOf(panel);\n        const hasExistingPanel = existingPanel > -1;\n        this.tabsContainer.openPanel(panel, index);\n        if (!skipSetActive) {\n            this.contentContainer.openPanel(panel);\n        }\n        this.tabsContainer.show();\n        this.contentContainer.show();\n        if (hasExistingPanel) {\n            // TODO - need to ensure ordering hasn't changed and if it has need to re-order this.panels\n            return;\n        }\n        this.updateMru(panel);\n        this.panels.splice(index, 0, panel);\n        this._onDidAddPanel.fire({ panel });\n    }\n    doSetActivePanel(panel) {\n        this._activePanel = panel;\n        if (panel) {\n            this.tabsContainer.setActivePanel(panel);\n            panel.layout(this._width, this._height);\n            this.updateMru(panel);\n            this._onDidActivePanelChange.fire({ panel });\n        }\n    }\n    updateMru(panel) {\n        if (this.mostRecentlyUsed.includes(panel)) {\n            this.mostRecentlyUsed.splice(this.mostRecentlyUsed.indexOf(panel), 1);\n        }\n        this.mostRecentlyUsed = [panel, ...this.mostRecentlyUsed];\n    }\n    updateContainer() {\n        toggleClass(this.container, 'empty', this.isEmpty);\n        this.panels.forEach((panel) => panel.updateParentGroup(this.groupPanel, this.isActive));\n        if (this.isEmpty && !this.watermark) {\n            const watermark = this.accessor.createWatermarkComponent();\n            watermark.init({\n                containerApi: new DockviewApi(this.accessor),\n                params: {},\n                title: '',\n                api: null,\n            });\n            this.watermark = watermark;\n            addDisposableListener(this.watermark.element, 'click', () => {\n                if (!this.isActive) {\n                    this.accessor.doSetGroupActive(this.groupPanel);\n                }\n            });\n            this.tabsContainer.hide();\n            this.contentContainer.element.appendChild(this.watermark.element);\n            this.watermark.updateParentGroup(this.groupPanel, true);\n        }\n        if (!this.isEmpty && this.watermark) {\n            this.watermark.element.remove();\n            this.watermark.dispose();\n            this.watermark = undefined;\n            this.tabsContainer.show();\n        }\n    }\n    canDisplayOverlay(event, position, target) {\n        // custom overlay handler\n        if (this.accessor.options.showDndOverlay) {\n            return this.accessor.options.showDndOverlay({\n                nativeEvent: event,\n                target,\n                group: this.accessor.getPanel(this.id),\n                position,\n                getData: getPanelData,\n            });\n        }\n        return false;\n    }\n    handleDropEvent(event, position, index) {\n        const data = getPanelData();\n        if (data) {\n            if (data.panelId === null) {\n                // this is a group move dnd event\n                const { groupId } = data;\n                this._onMove.fire({\n                    target: position,\n                    groupId: groupId,\n                    index,\n                });\n                return;\n            }\n            const fromSameGroup = this.tabsContainer.indexOf(data.panelId) !== -1;\n            if (fromSameGroup && this.tabsContainer.size === 1) {\n                return;\n            }\n            const { groupId, panelId } = data;\n            const isSameGroup = this.id === groupId;\n            if (isSameGroup && !position) {\n                const oldIndex = this.tabsContainer.indexOf(panelId);\n                if (oldIndex === index) {\n                    return;\n                }\n            }\n            this._onMove.fire({\n                target: position,\n                groupId: data.groupId,\n                itemId: data.panelId,\n                index,\n            });\n        }\n        else {\n            this._onDidDrop.fire({\n                nativeEvent: event,\n                position,\n                index,\n                getData: () => getPanelData(),\n            });\n        }\n    }\n    dispose() {\n        var _a;\n        super.dispose();\n        (_a = this.watermark) === null || _a === void 0 ? void 0 : _a.dispose();\n        for (const panel of this.panels) {\n            panel.dispose();\n        }\n        this.dropTarget.dispose();\n        this.tabsContainer.dispose();\n        this.contentContainer.dispose();\n    }\n}\n","import { Emitter, Event, TickDelayedEvent } from '../events';\nimport { getGridLocation, Gridview } from './gridview';\nimport { CompositeDisposable } from '../lifecycle';\nimport { sequentialNumberGenerator } from '../math';\nimport { Sizing, } from '../splitview/core/splitview';\nconst nextLayoutId = sequentialNumberGenerator();\nexport function toTarget(direction) {\n    switch (direction) {\n        case 'left':\n            return 'left';\n        case 'right':\n            return 'right';\n        case 'above':\n            return 'top';\n        case 'below':\n            return 'bottom';\n        case 'within':\n        default:\n            return 'center';\n    }\n}\nexport class BaseGrid extends CompositeDisposable {\n    constructor(_element, options) {\n        super();\n        this._element = _element;\n        this._id = nextLayoutId.next();\n        this._groups = new Map();\n        this._onDidLayoutChange = new Emitter();\n        this.onDidLayoutChange = this._onDidLayoutChange.event;\n        this._onDidRemoveGroup = new Emitter();\n        this.onDidRemoveGroup = this._onDidRemoveGroup.event;\n        this._onDidAddGroup = new Emitter();\n        this.onDidAddGroup = this._onDidAddGroup.event;\n        this._onDidActiveGroupChange = new Emitter();\n        this.onDidActiveGroupChange = this._onDidActiveGroupChange.event;\n        this._bufferOnDidLayoutChange = new TickDelayedEvent();\n        this.gridview = new Gridview(!!options.proportionalLayout, options.styles, options.orientation);\n        this.element.appendChild(this.gridview.element);\n        this.layout(0, 0, true); // set some elements height/widths\n        this.addDisposables(this.gridview.onDidChange(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }));\n        this.addDisposables(Event.any(this.onDidAddGroup, this.onDidRemoveGroup, this.onDidActiveGroupChange)(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), this._bufferOnDidLayoutChange.onEvent(() => {\n            this._onDidLayoutChange.fire();\n        }), this._bufferOnDidLayoutChange);\n    }\n    get id() {\n        return this._id;\n    }\n    get element() {\n        return this._element;\n    }\n    get size() {\n        return this._groups.size;\n    }\n    get groups() {\n        return Array.from(this._groups.values()).map((_) => _.value);\n    }\n    get width() {\n        return this.gridview.width;\n    }\n    get height() {\n        return this.gridview.height;\n    }\n    get minimumHeight() {\n        return this.gridview.minimumHeight;\n    }\n    get maximumHeight() {\n        return this.gridview.maximumHeight;\n    }\n    get minimumWidth() {\n        return this.gridview.minimumWidth;\n    }\n    get maximumWidth() {\n        return this.gridview.maximumWidth;\n    }\n    get activeGroup() {\n        return this._activeGroup;\n    }\n    setVisible(panel, visible) {\n        this.gridview.setViewVisible(getGridLocation(panel.element), visible);\n        this._onDidLayoutChange.fire();\n    }\n    isVisible(panel) {\n        return this.gridview.isViewVisible(getGridLocation(panel.element));\n    }\n    doAddGroup(group, location = [0], size) {\n        this.gridview.addView(group, size !== null && size !== void 0 ? size : Sizing.Distribute, location);\n        this._onDidAddGroup.fire(group);\n        this.doSetGroupActive(group);\n    }\n    doRemoveGroup(group, options) {\n        if (!this._groups.has(group.id)) {\n            throw new Error('invalid operation');\n        }\n        const item = this._groups.get(group.id);\n        const view = this.gridview.remove(group, Sizing.Distribute);\n        if (item && !(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n            item.disposable.dispose();\n            item.value.dispose();\n            this._groups.delete(group.id);\n        }\n        this._onDidRemoveGroup.fire(group);\n        if (!(options === null || options === void 0 ? void 0 : options.skipActive) && this._activeGroup === group) {\n            const groups = Array.from(this._groups.values());\n            this.doSetGroupActive(groups.length > 0 ? groups[0].value : undefined);\n        }\n        return view;\n    }\n    getPanel(id) {\n        var _a;\n        return (_a = this._groups.get(id)) === null || _a === void 0 ? void 0 : _a.value;\n    }\n    doSetGroupActive(group, skipFocus) {\n        if (this._activeGroup === group) {\n            return;\n        }\n        if (this._activeGroup) {\n            this._activeGroup.setActive(false);\n            if (!skipFocus) {\n                this._activeGroup.focus();\n            }\n        }\n        if (group) {\n            group.setActive(true);\n            if (!skipFocus) {\n                group.focus();\n            }\n        }\n        this._activeGroup = group;\n        this._onDidActiveGroupChange.fire(group);\n    }\n    removeGroup(group) {\n        this.doRemoveGroup(group);\n    }\n    moveToNext(options) {\n        var _a;\n        if (!options) {\n            options = {};\n        }\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.next(location)) === null || _a === void 0 ? void 0 : _a.view;\n        this.doSetGroupActive(next);\n    }\n    moveToPrevious(options) {\n        var _a;\n        if (!options) {\n            options = {};\n        }\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.previous(location)) === null || _a === void 0 ? void 0 : _a.view;\n        this.doSetGroupActive(next);\n    }\n    layout(width, height, forceResize) {\n        const different = forceResize || width !== this.width || height !== this.height;\n        if (!different) {\n            return;\n        }\n        this.element.style.height = `${height}px`;\n        this.element.style.width = `${width}px`;\n        this.gridview.layout(width, height);\n    }\n    dispose() {\n        super.dispose();\n        this._onDidActiveGroupChange.dispose();\n        this._onDidAddGroup.dispose();\n        this._onDidRemoveGroup.dispose();\n        this._onDidLayoutChange.dispose();\n        for (const group of this.groups) {\n            group.dispose();\n        }\n        this.gridview.dispose();\n    }\n}\n","import { Emitter } from '../events';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\n/**\n * A core api implementation that should be used across all panel-like objects\n */\nexport class PanelApiImpl extends CompositeDisposable {\n    constructor(id) {\n        super();\n        this.id = id;\n        this._isFocused = false;\n        this._isActive = false;\n        this._isVisible = true;\n        this._width = 0;\n        this._height = 0;\n        this.panelUpdatesDisposable = new MutableDisposable();\n        this._onDidDimensionChange = new Emitter({\n            replay: true,\n        });\n        this.onDidDimensionsChange = this._onDidDimensionChange.event;\n        //\n        this._onDidChangeFocus = new Emitter({\n            replay: true,\n        });\n        this.onDidFocusChange = this._onDidChangeFocus.event;\n        //\n        this._onFocusEvent = new Emitter();\n        this.onFocusEvent = this._onFocusEvent.event;\n        //\n        this._onDidVisibilityChange = new Emitter({\n            replay: true,\n        });\n        this.onDidVisibilityChange = this._onDidVisibilityChange.event;\n        //\n        this._onVisibilityChange = new Emitter();\n        this.onVisibilityChange = this._onVisibilityChange.event;\n        //\n        this._onDidActiveChange = new Emitter({\n            replay: true,\n        });\n        this.onDidActiveChange = this._onDidActiveChange.event;\n        //\n        this._onActiveChange = new Emitter();\n        this.onActiveChange = this._onActiveChange.event;\n        //\n        this._onUpdateParameters = new Emitter();\n        this.onUpdateParameters = this._onUpdateParameters.event;\n        this.addDisposables(this.panelUpdatesDisposable, this._onDidDimensionChange, this._onDidChangeFocus, this._onDidVisibilityChange, this._onDidActiveChange, this._onFocusEvent, this._onActiveChange, this._onVisibilityChange, this._onUpdateParameters, this.onDidFocusChange((event) => {\n            this._isFocused = event.isFocused;\n        }), this.onDidActiveChange((event) => {\n            this._isActive = event.isActive;\n        }), this.onDidVisibilityChange((event) => {\n            this._isVisible = event.isVisible;\n        }), this.onDidDimensionsChange((event) => {\n            this._width = event.width;\n            this._height = event.height;\n        }));\n    }\n    //\n    get isFocused() {\n        return this._isFocused;\n    }\n    get isActive() {\n        return this._isActive;\n    }\n    get isVisible() {\n        return this._isVisible;\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    initialize(panel) {\n        this.panelUpdatesDisposable.value = this._onUpdateParameters.event((parameters) => {\n            panel.update({\n                params: {\n                    params: parameters,\n                },\n            });\n        });\n    }\n    setVisible(isVisible) {\n        this._onVisibilityChange.fire({ isVisible });\n    }\n    setActive() {\n        this._onActiveChange.fire();\n    }\n    updateParameters(parameters) {\n        this._onUpdateParameters.fire(parameters);\n    }\n    dispose() {\n        super.dispose();\n    }\n}\n","import { Emitter } from '../events';\nimport { PanelApiImpl } from './panelApi';\nexport class GridviewPanelApiImpl extends PanelApiImpl {\n    //\n    constructor(id, panel) {\n        super(id);\n        this._onDidConstraintsChangeInternal = new Emitter();\n        this.onDidConstraintsChangeInternal = this._onDidConstraintsChangeInternal.event;\n        //\n        this._onDidConstraintsChange = new Emitter({\n            replay: true,\n        });\n        this.onDidConstraintsChange = this._onDidConstraintsChange.event;\n        //\n        this._onDidSizeChange = new Emitter();\n        this.onDidSizeChange = this._onDidSizeChange.event;\n        this.addDisposables(this._onDidConstraintsChangeInternal, this._onDidConstraintsChange, this._onDidSizeChange);\n        if (panel) {\n            this.initialize(panel);\n        }\n    }\n    setConstraints(value) {\n        this._onDidConstraintsChangeInternal.fire(value);\n    }\n    setSize(event) {\n        this._onDidSizeChange.fire(event);\n    }\n}\n","import { Emitter } from '../events';\nimport { GridviewPanelApiImpl } from './gridviewPanelApi';\nimport { MutableDisposable } from '../lifecycle';\nexport class DockviewPanelApiImpl extends GridviewPanelApiImpl {\n    constructor(panel, group) {\n        super(panel.id);\n        this.panel = panel;\n        this._onDidTitleChange = new Emitter();\n        this.onDidTitleChange = this._onDidTitleChange.event;\n        this._onDidActiveGroupChange = new Emitter();\n        this.onDidActiveGroupChange = this._onDidActiveGroupChange.event;\n        this._onDidGroupChange = new Emitter();\n        this.onDidGroupChange = this._onDidGroupChange.event;\n        this.disposable = new MutableDisposable();\n        this.initialize(panel);\n        this._group = group;\n        this.addDisposables(this.disposable, this._onDidTitleChange, this._onDidGroupChange, this._onDidActiveGroupChange);\n    }\n    get title() {\n        return this.panel.title;\n    }\n    get isGroupActive() {\n        var _a;\n        return !!((_a = this.group) === null || _a === void 0 ? void 0 : _a.isActive);\n    }\n    set group(value) {\n        const isOldGroupActive = this.isGroupActive;\n        this._group = value;\n        this._onDidGroupChange.fire();\n        if (this._group) {\n            this.disposable.value = this._group.api.onDidActiveChange(() => {\n                this._onDidActiveGroupChange.fire();\n            });\n            if (this.isGroupActive !== isOldGroupActive) {\n                this._onDidActiveGroupChange.fire();\n            }\n        }\n    }\n    get group() {\n        return this._group;\n    }\n    setTitle(title) {\n        this._onDidTitleChange.fire({ title });\n    }\n    close() {\n        if (!this.group) {\n            throw new Error(`panel ${this.id} has no group`);\n        }\n        return this.group.model.closePanel(this.panel);\n    }\n}\n","import { DockviewPanelApiImpl } from '../api/groupPanelApi';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nexport class DockviewPanel extends CompositeDisposable {\n    constructor(id, accessor, containerApi, group) {\n        super();\n        this.id = id;\n        this.containerApi = containerApi;\n        this.mutableDisposable = new MutableDisposable();\n        this._title = '';\n        this._group = group;\n        this.api = new DockviewPanelApiImpl(this, this._group);\n        this.addDisposables(this.api.onActiveChange(() => {\n            accessor.setActivePanel(this);\n        }));\n    }\n    get params() {\n        return this._params;\n    }\n    get title() {\n        return this._title;\n    }\n    get group() {\n        return this._group;\n    }\n    get view() {\n        return this._view;\n    }\n    init(params) {\n        var _a;\n        this._params = params.params;\n        this._view = params.view;\n        this.setTitle(params.title);\n        (_a = this.view) === null || _a === void 0 ? void 0 : _a.init(Object.assign(Object.assign({}, params), { api: this.api, containerApi: this.containerApi }));\n    }\n    focus() {\n        this.api._onFocusEvent.fire();\n    }\n    toJSON() {\n        return {\n            id: this.id,\n            view: this.view.toJSON(),\n            params: Object.keys(this._params || {}).length > 0\n                ? this._params\n                : undefined,\n            title: this.title,\n        };\n    }\n    setTitle(title) {\n        var _a, _b;\n        const didTitleChange = title !== ((_a = this._params) === null || _a === void 0 ? void 0 : _a.title);\n        if (didTitleChange) {\n            this._title = title;\n            (_b = this.view) === null || _b === void 0 ? void 0 : _b.update({\n                params: {\n                    params: this._params,\n                    title: this.title,\n                },\n            });\n            this.api._onDidTitleChange.fire({ title });\n        }\n    }\n    update(event) {\n        var _a;\n        const params = event.params;\n        this._params = Object.assign(Object.assign({}, (this._params || {})), event.params.params);\n        if (typeof params.title === 'string') {\n            if (params.title !== this.title) {\n                this._title = params.title;\n                this.api._onDidTitleChange.fire({ title: this.title });\n            }\n        }\n        (_a = this.view) === null || _a === void 0 ? void 0 : _a.update({\n            params: {\n                params: this._params,\n                title: this.title,\n            },\n        });\n    }\n    updateParentGroup(group, isGroupActive) {\n        var _a;\n        this._group = group;\n        this.api.group = group;\n        const isPanelVisible = this._group.model.isPanelActive(this);\n        this.api._onDidActiveChange.fire({\n            isActive: isGroupActive && isPanelVisible,\n        });\n        this.api._onDidVisibilityChange.fire({\n            isVisible: isPanelVisible,\n        });\n        (_a = this.view) === null || _a === void 0 ? void 0 : _a.updateParentGroup(this._group, this._group.model.isPanelActive(this));\n    }\n    layout(width, height) {\n        var _a;\n        // the obtain the correct dimensions of the content panel we must deduct the tab height\n        this.api._onDidDimensionChange.fire({\n            width,\n            height: height - (this.group.model.header.height || 0),\n        });\n        (_a = this.view) === null || _a === void 0 ? void 0 : _a.layout(width, height);\n    }\n    dispose() {\n        var _a;\n        this.api.dispose();\n        this.mutableDisposable.dispose();\n        (_a = this.view) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","export class ActionContainer {\n    constructor() {\n        this._element = document.createElement('div');\n        this._element.className = 'actions-bar';\n        this._list = document.createElement('ul');\n        this._list.className = 'actions-container';\n        this._element.appendChild(this._list);\n    }\n    get element() {\n        return this._element;\n    }\n    add(element) {\n        const listItem = document.createElement('li');\n        listItem.className = 'action-item';\n        this._list.appendChild(element);\n    }\n}\n","const createSvgElementFromPath = (params) => {\n    const svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n    svg.setAttributeNS(null, 'height', params.height);\n    svg.setAttributeNS(null, 'width', params.width);\n    svg.setAttributeNS(null, 'viewBox', params.viewbox);\n    svg.setAttributeNS(null, 'aria-hidden', 'false');\n    svg.setAttributeNS(null, 'focusable', 'false');\n    svg.classList.add('dockview-svg');\n    const path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n    path.setAttributeNS(null, 'd', params.path);\n    svg.appendChild(path);\n    return svg;\n};\nexport const createCloseButton = () => createSvgElementFromPath({\n    width: '11',\n    height: '11',\n    viewbox: '0 0 28 28',\n    path: 'M2.1 27.3L0 25.2L11.55 13.65L0 2.1L2.1 0L13.65 11.55L25.2 0L27.3 2.1L15.75 13.65L27.3 25.2L25.2 27.3L13.65 15.75L2.1 27.3Z',\n});\nexport const createExpandMoreButton = () => createSvgElementFromPath({\n    width: '11',\n    height: '11',\n    viewbox: '0 0 24 15',\n    path: 'M12 14.15L0 2.15L2.15 0L12 9.9L21.85 0.0499992L24 2.2L12 14.15Z',\n});\nexport const createChevronRightButton = () => createSvgElementFromPath({\n    width: '11',\n    height: '11',\n    viewbox: '0 0 15 25',\n    path: 'M2.15 24.1L0 21.95L9.9 12.05L0 2.15L2.15 0L14.2 12.05L2.15 24.1Z',\n});\n","import { ActionContainer } from '../../../actionbar/actionsContainer';\nimport { addDisposableListener } from '../../../events';\nimport { toggleClass } from '../../../dom';\nimport { CompositeDisposable } from '../../../lifecycle';\nimport { createCloseButton } from '../../../svg';\nexport class Watermark extends CompositeDisposable {\n    constructor() {\n        super();\n        this._element = document.createElement('div');\n        this._element.className = 'watermark';\n        const title = document.createElement('div');\n        title.className = 'watermark-title';\n        const emptySpace = document.createElement('span');\n        emptySpace.style.flexGrow = '1';\n        const content = document.createElement('div');\n        content.className = 'watermark-content';\n        this._element.appendChild(title);\n        this._element.appendChild(content);\n        const actions = new ActionContainer();\n        title.appendChild(emptySpace);\n        title.appendChild(actions.element);\n        const closeAnchor = document.createElement('div');\n        closeAnchor.className = 'close-action';\n        closeAnchor.appendChild(createCloseButton());\n        actions.add(closeAnchor);\n        this.addDisposables(addDisposableListener(closeAnchor, 'click', (ev) => {\n            var _a;\n            ev.preventDefault();\n            if (this.group) {\n                (_a = this.params) === null || _a === void 0 ? void 0 : _a.containerApi.removeGroup(this.group);\n            }\n        }));\n    }\n    get id() {\n        return 'watermark';\n    }\n    update(_event) {\n        // noop\n    }\n    focus() {\n        // noop\n    }\n    toJSON() {\n        return {};\n    }\n    layout(_width, _height) {\n        // noop\n    }\n    init(params) {\n        this.params = params;\n        this.addDisposables(this.params.containerApi.onDidLayoutChange(() => {\n            this.render();\n        }));\n        this.render();\n    }\n    updateParentGroup(group, _visible) {\n        this.group = group;\n        this.render();\n    }\n    get element() {\n        return this._element;\n    }\n    render() {\n        const isOneGroup = !!(this.params && this.params.containerApi.size <= 1);\n        toggleClass(this.element, 'has-actions', isOneGroup);\n    }\n    dispose() {\n        super.dispose();\n    }\n}\n","export function createComponent(id, componentName, components = {}, frameworkComponents = {}, createFrameworkComponent, fallback) {\n    const Component = typeof componentName === 'string'\n        ? components[componentName]\n        : undefined;\n    const FrameworkComponent = typeof componentName === 'string'\n        ? frameworkComponents[componentName]\n        : undefined;\n    if (Component && FrameworkComponent) {\n        throw new Error(`Cannot create '${id}'. component '${componentName}' registered as both a component and frameworkComponent`);\n    }\n    if (FrameworkComponent) {\n        if (!createFrameworkComponent) {\n            throw new Error(`Cannot create '${id}' for framework component '${componentName}'. you must register a frameworkPanelWrapper to use framework components`);\n        }\n        return createFrameworkComponent.createComponent(id, componentName, FrameworkComponent);\n    }\n    if (!Component) {\n        if (fallback) {\n            return fallback();\n        }\n        throw new Error(`Cannot create '${id}', no component '${componentName}' provided`);\n    }\n    return new Component(id, componentName);\n}\n","import { CompositeDisposable } from '../../../lifecycle';\nimport { addDisposableListener } from '../../../events';\nimport { createCloseButton } from '../../../svg';\nexport const DEFAULT_TAB_IDENTIFIER = '__default__tab__';\nexport class DefaultTab extends CompositeDisposable {\n    constructor() {\n        super();\n        this._isPanelVisible = false;\n        this._isGroupActive = false;\n        //\n        this.params = {};\n        this._element = document.createElement('div');\n        this._element.className = 'default-tab';\n        //\n        this._content = document.createElement('div');\n        this._content.className = 'tab-content';\n        //\n        this._actionContainer = document.createElement('div');\n        this._actionContainer.className = 'action-container';\n        //\n        this._list = document.createElement('ul');\n        this._list.className = 'tab-list';\n        //\n        this.action = document.createElement('div');\n        this.action.className = 'tab-action';\n        this.action.appendChild(createCloseButton());\n        //\n        this._element.appendChild(this._content);\n        this._element.appendChild(this._actionContainer);\n        this._actionContainer.appendChild(this._list);\n        this._list.appendChild(this.action);\n        //\n        this.addDisposables(addDisposableListener(this._actionContainer, 'mousedown', (ev) => {\n            ev.preventDefault();\n        }));\n        this.render();\n    }\n    get element() {\n        return this._element;\n    }\n    get id() {\n        return DEFAULT_TAB_IDENTIFIER;\n    }\n    update(event) {\n        this.params = Object.assign(Object.assign({}, this.params), event.params);\n        this.render();\n    }\n    toJSON() {\n        return { id: this.id };\n    }\n    focus() {\n        //noop\n    }\n    init(params) {\n        this.params = params;\n        this._content.textContent = params.title;\n        addDisposableListener(this.action, 'click', (ev) => {\n            ev.preventDefault(); //\n            this.params.api.close();\n        });\n    }\n    updateParentGroup(group, isPanelVisible) {\n        const changed = this._isPanelVisible !== isPanelVisible ||\n            this._isGroupActive !== group.isActive;\n        this._isPanelVisible = isPanelVisible;\n        this._isGroupActive = group.isActive;\n        if (changed) {\n            this.render();\n        }\n    }\n    layout(_width, _height) {\n        // noop\n    }\n    render() {\n        if (this._content.textContent !== this.params.title) {\n            this._content.textContent = this.params.title;\n        }\n    }\n}\n","import { trackFocus } from '../dom';\nimport { CompositeDisposable } from '../lifecycle';\nexport class BasePanelView extends CompositeDisposable {\n    constructor(id, component, api) {\n        super();\n        this.id = id;\n        this.component = component;\n        this.api = api;\n        this._height = 0;\n        this._width = 0;\n        this._element = document.createElement('div');\n        this._element.tabIndex = -1;\n        this._element.style.outline = 'none';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n        this._element.style.overflow = 'hidden';\n        const { onDidFocus, onDidBlur } = trackFocus(this._element);\n        this.addDisposables(this.api, onDidFocus(() => {\n            this.api._onDidChangeFocus.fire({ isFocused: true });\n        }), onDidBlur(() => {\n            this.api._onDidChangeFocus.fire({ isFocused: false });\n        }));\n    }\n    get element() {\n        return this._element;\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    get params() {\n        var _a;\n        return (_a = this._params) === null || _a === void 0 ? void 0 : _a.params;\n    }\n    focus() {\n        this.api._onFocusEvent.fire();\n    }\n    layout(width, height) {\n        this._width = width;\n        this._height = height;\n        this.api._onDidDimensionChange.fire({ width, height });\n        if (this.part) {\n            if (this._params) {\n                this.part.update(this._params.params);\n            }\n        }\n    }\n    init(parameters) {\n        this._params = parameters;\n        this.part = this.getComponent();\n    }\n    update(event) {\n        var _a, _b;\n        this._params = Object.assign(Object.assign({}, this._params), { params: Object.assign(Object.assign({}, (_a = this._params) === null || _a === void 0 ? void 0 : _a.params), event.params) });\n        (_b = this.part) === null || _b === void 0 ? void 0 : _b.update({ params: this._params.params });\n    }\n    toJSON() {\n        var _a, _b;\n        const params = (_b = (_a = this._params) === null || _a === void 0 ? void 0 : _a.params) !== null && _b !== void 0 ? _b : {};\n        return {\n            id: this.id,\n            component: this.component,\n            params: Object.keys(params).length > 0 ? params : undefined,\n        };\n    }\n    dispose() {\n        var _a;\n        super.dispose();\n        this.api.dispose();\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import { BasePanelView, } from './basePanelView';\nimport { Emitter } from '../events';\nexport class GridviewPanel extends BasePanelView {\n    constructor(id, component, api) {\n        super(id, component, api);\n        this._evaluatedMinimumWidth = 0;\n        this._evaluatedMaximumWidth = Number.MAX_SAFE_INTEGER;\n        this._evaluatedMinimumHeight = 0;\n        this._evaluatedMaximumHeight = Number.MAX_SAFE_INTEGER;\n        this._minimumWidth = 0;\n        this._minimumHeight = 0;\n        this._maximumWidth = Number.MAX_SAFE_INTEGER;\n        this._maximumHeight = Number.MAX_SAFE_INTEGER;\n        this._snap = false;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this.api.initialize(this); // TODO: required to by-pass 'super before this' requirement\n        this.addDisposables(this._onDidChange, this.api.onVisibilityChange((event) => {\n            const { isVisible } = event;\n            const { accessor } = this._params;\n            accessor.setVisible(this, isVisible);\n        }), this.api.onActiveChange(() => {\n            const { accessor } = this._params;\n            accessor.setActive(this);\n        }), this.api.onDidConstraintsChangeInternal((event) => {\n            if (typeof event.minimumWidth === 'number' ||\n                typeof event.minimumWidth === 'function') {\n                this._minimumWidth = event.minimumWidth;\n            }\n            if (typeof event.minimumHeight === 'number' ||\n                typeof event.minimumHeight === 'function') {\n                this._minimumHeight = event.minimumHeight;\n            }\n            if (typeof event.maximumWidth === 'number' ||\n                typeof event.maximumWidth === 'function') {\n                this._maximumWidth = event.maximumWidth;\n            }\n            if (typeof event.maximumHeight === 'number' ||\n                typeof event.maximumHeight === 'function') {\n                this._maximumHeight = event.maximumHeight;\n            }\n        }), this.api.onDidSizeChange((event) => {\n            this._onDidChange.fire({\n                height: event.height,\n                width: event.width,\n            });\n        }));\n    }\n    get priority() {\n        return this._priority;\n    }\n    get snap() {\n        return this._snap;\n    }\n    get minimumWidth() {\n        const width = typeof this._minimumWidth === 'function'\n            ? this._minimumWidth()\n            : this._minimumWidth;\n        if (width !== this._evaluatedMinimumWidth) {\n            this._evaluatedMinimumWidth = width;\n            this.updateConstraints();\n        }\n        return width;\n    }\n    get minimumHeight() {\n        const height = typeof this._minimumHeight === 'function'\n            ? this._minimumHeight()\n            : this._minimumHeight;\n        if (height !== this._evaluatedMinimumHeight) {\n            this._evaluatedMinimumHeight = height;\n            this.updateConstraints();\n        }\n        return height;\n    }\n    get maximumHeight() {\n        const height = typeof this._maximumHeight === 'function'\n            ? this._maximumHeight()\n            : this._maximumHeight;\n        if (height !== this._evaluatedMaximumHeight) {\n            this._evaluatedMaximumHeight = height;\n            this.updateConstraints();\n        }\n        return height;\n    }\n    get maximumWidth() {\n        const width = typeof this._maximumWidth === 'function'\n            ? this._maximumWidth()\n            : this._maximumWidth;\n        if (width !== this._evaluatedMaximumWidth) {\n            this._evaluatedMaximumWidth = width;\n            this.updateConstraints();\n        }\n        return width;\n    }\n    get isActive() {\n        return this.api.isActive;\n    }\n    setVisible(isVisible) {\n        this.api._onDidVisibilityChange.fire({ isVisible });\n    }\n    setActive(isActive) {\n        this.api._onDidActiveChange.fire({ isActive });\n    }\n    init(parameters) {\n        if (parameters.maximumHeight) {\n            this._maximumHeight = parameters.maximumHeight;\n        }\n        if (parameters.minimumHeight) {\n            this._minimumHeight = parameters.minimumHeight;\n        }\n        if (parameters.maximumWidth) {\n            this._maximumWidth = parameters.maximumWidth;\n        }\n        if (parameters.minimumWidth) {\n            this._minimumWidth = parameters.minimumWidth;\n        }\n        this._priority = parameters.priority;\n        this._snap = !!parameters.snap;\n        super.init(parameters);\n        if (typeof parameters.isVisible === 'boolean') {\n            this.setVisible(parameters.isVisible);\n        }\n    }\n    updateConstraints() {\n        this.api._onDidConstraintsChange.fire({\n            minimumWidth: this._evaluatedMinimumWidth,\n            maximumWidth: this._evaluatedMaximumWidth,\n            minimumHeight: this._evaluatedMinimumHeight,\n            maximumHeight: this._evaluatedMaximumHeight,\n        });\n    }\n    toJSON() {\n        const state = super.toJSON();\n        const maximum = (value) => value === Number.MAX_SAFE_INTEGER ? undefined : value;\n        const minimum = (value) => (value <= 0 ? undefined : value);\n        return Object.assign(Object.assign({}, state), { minimumHeight: minimum(this.minimumHeight), maximumHeight: maximum(this.maximumHeight), minimumWidth: minimum(this.minimumWidth), maximumWidth: maximum(this.maximumWidth), snap: this.snap, priority: this.priority });\n    }\n}\n","import { GridviewPanelApiImpl, } from '../api/gridviewPanelApi';\nimport { Groupview } from './groupview';\nimport { GridviewPanel } from '../gridview/gridviewPanel';\nclass GroupviewApi extends GridviewPanelApiImpl {\n}\nexport class GroupPanel extends GridviewPanel {\n    constructor(accessor, id, options) {\n        super(id, 'groupview_default', new GroupviewApi(id));\n        this._model = new Groupview(this.element, accessor, id, options, this);\n    }\n    get panels() {\n        return this._model.panels;\n    }\n    get activePanel() {\n        return this._model.activePanel;\n    }\n    get size() {\n        return this._model.size;\n    }\n    get model() {\n        return this._model;\n    }\n    get minimumHeight() {\n        return this._model.minimumHeight;\n    }\n    get maximumHeight() {\n        return this._model.maximumHeight;\n    }\n    get minimumWidth() {\n        return this._model.minimumWidth;\n    }\n    get maximumWidth() {\n        return this._model.maximumWidth;\n    }\n    get locked() {\n        return this._model.locked;\n    }\n    set locked(value) {\n        this._model.locked = value;\n    }\n    get header() {\n        return this._model.header;\n    }\n    initialize() {\n        this._model.initialize();\n    }\n    setActive(isActive) {\n        super.setActive(isActive);\n        this.model.setActive(isActive);\n    }\n    layout(width, height) {\n        super.layout(width, height);\n        this.model.layout(width, height);\n    }\n    getComponent() {\n        return this._model;\n    }\n    toJSON() {\n        return this.model.toJSON();\n    }\n}\n","import { DefaultTab } from './components/tab/defaultTab';\nexport class DefaultGroupPanelView {\n    constructor(renderers) {\n        var _a;\n        this._content = renderers.content;\n        this._tab = (_a = renderers.tab) !== null && _a !== void 0 ? _a : new DefaultTab();\n    }\n    get content() {\n        return this._content;\n    }\n    get tab() {\n        return this._tab;\n    }\n    init(params) {\n        this.content.init(Object.assign(Object.assign({}, params), { tab: this.tab }));\n        this.tab.init(params);\n    }\n    updateParentGroup(group, isPanelVisible) {\n        var _a;\n        this._content.updateParentGroup(group, isPanelVisible);\n        (_a = this._tab) === null || _a === void 0 ? void 0 : _a.updateParentGroup(group, isPanelVisible);\n    }\n    layout(width, height) {\n        this.content.layout(width, height);\n    }\n    update(event) {\n        this.content.update(event);\n        this.tab.update(event);\n    }\n    toJSON() {\n        let tab = this.tab instanceof DefaultTab ? undefined : this.tab.toJSON();\n        if (tab && Object.keys(tab).length === 0) {\n            tab = undefined;\n        }\n        return {\n            content: this.content.toJSON(),\n            tab,\n        };\n    }\n    dispose() {\n        this.content.dispose();\n        this.tab.dispose();\n    }\n}\n","import { getRelativeLocation, getGridLocation, } from '../gridview/gridview';\nimport { directionToPosition, Droptarget } from '../dnd/droptarget';\nimport { tail, sequenceEquals } from '../array';\nimport { DockviewPanel } from './dockviewPanel';\nimport { CompositeDisposable } from '../lifecycle';\nimport { Event, Emitter } from '../events';\nimport { Watermark } from './components/watermark/watermark';\nimport { sequentialNumberGenerator } from '../math';\nimport { createComponent } from '../panel/componentFactory';\nimport { isGroupOptionsWithGroup, isGroupOptionsWithPanel, isPanelOptionsWithGroup, isPanelOptionsWithPanel, } from './options';\nimport { BaseGrid, toTarget, } from '../gridview/baseComponentGridview';\nimport { DockviewApi } from '../api/component.api';\nimport { Orientation, Sizing } from '../splitview/core/splitview';\nimport { DefaultTab } from './components/tab/defaultTab';\nimport { GroupPanel } from '../groupview/groupviewPanel';\nimport { DefaultGroupPanelView } from './defaultGroupPanelView';\nimport { getPanelData } from '../dnd/dataTransfer';\nimport { DockviewDropTargets } from '../groupview/dnd';\nexport class DockviewComponent extends BaseGrid {\n    constructor(element, options) {\n        super(element, {\n            proportionalLayout: true,\n            orientation: options.orientation || Orientation.HORIZONTAL,\n            styles: options.styles,\n        });\n        this.nextGroupId = sequentialNumberGenerator();\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onDidRemovePanel = new Emitter();\n        this.onDidRemovePanel = this._onDidRemovePanel.event;\n        this._onDidAddPanel = new Emitter();\n        this.onDidAddPanel = this._onDidAddPanel.event;\n        this._onDidLayoutFromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutFromJSON.event;\n        this._onDidActivePanelChange = new Emitter();\n        this.onDidActivePanelChange = this._onDidActivePanelChange.event;\n        this.addDisposables(this._onDidDrop, Event.any(this.onDidAddPanel, this.onDidRemovePanel, this.onDidActivePanelChange)(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }));\n        this._options = options;\n        if (!this.options.components) {\n            this.options.components = {};\n        }\n        if (!this.options.frameworkComponents) {\n            this.options.frameworkComponents = {};\n        }\n        if (!this.options.frameworkTabComponents) {\n            this.options.frameworkTabComponents = {};\n        }\n        if (!this.options.tabComponents) {\n            this.options.tabComponents = {};\n        }\n        if (!this.options.watermarkComponent &&\n            !this.options.watermarkFrameworkComponent) {\n            this.options.watermarkComponent = Watermark;\n        }\n        const dropTarget = new Droptarget(this.element, {\n            canDisplayOverlay: (event, position) => {\n                const data = getPanelData();\n                if (data) {\n                    if (data.viewId !== this.id) {\n                        return false;\n                    }\n                    return true;\n                }\n                if (this.options.showDndOverlay) {\n                    return this.options.showDndOverlay({\n                        nativeEvent: event,\n                        position: position,\n                        target: DockviewDropTargets.Edge,\n                        getData: getPanelData,\n                    });\n                }\n                return false;\n            },\n            acceptedTargetZones: ['top', 'bottom', 'left', 'right'],\n            overlayModel: {\n                activationSize: { type: 'pixels', value: 10 },\n                size: { type: 'pixels', value: 20 },\n            },\n        });\n        this.addDisposables(dropTarget, dropTarget.onDrop((event) => {\n            const data = getPanelData();\n            if (data) {\n                this.moveGroupOrPanel(this.orthogonalize(event.position), data.groupId, data.panelId || undefined, 'center');\n            }\n        }));\n        this._api = new DockviewApi(this);\n    }\n    get orientation() {\n        return this.gridview.orientation;\n    }\n    get totalPanels() {\n        return this.panels.length;\n    }\n    get panels() {\n        return this.groups.flatMap((group) => group.panels);\n    }\n    get deserializer() {\n        return this._deserializer;\n    }\n    set deserializer(value) {\n        this._deserializer = value;\n    }\n    get options() {\n        return this._options;\n    }\n    get activePanel() {\n        const activeGroup = this.activeGroup;\n        if (!activeGroup) {\n            return undefined;\n        }\n        return activeGroup.activePanel;\n    }\n    set tabHeight(height) {\n        this.options.tabHeight = height;\n        this._groups.forEach((value) => {\n            value.value.model.header.height = height;\n        });\n    }\n    get tabHeight() {\n        return this.options.tabHeight;\n    }\n    orthogonalize(position) {\n        switch (position) {\n            case 'top':\n            case 'bottom':\n                if (this.gridview.orientation === Orientation.HORIZONTAL) {\n                    // we need to add to a vertical splitview but the current root is a horizontal splitview.\n                    // insert a vertical splitview at the root level and add the existing view as a child\n                    this.gridview.insertOrthogonalSplitviewAtRoot();\n                }\n                break;\n            case 'left':\n            case 'right':\n                if (this.gridview.orientation === Orientation.VERTICAL) {\n                    // we need to add to a horizontal splitview but the current root is a vertical splitview.\n                    // insert a horiziontal splitview at the root level and add the existing view as a child\n                    this.gridview.insertOrthogonalSplitviewAtRoot();\n                }\n                break;\n            default:\n                break;\n        }\n        switch (position) {\n            case 'top':\n            case 'left':\n                return this.createGroupAtLocation([0]); // insert into first position\n            case 'bottom':\n            case 'right':\n                return this.createGroupAtLocation([this.gridview.length]); // insert into last position\n            default:\n                throw new Error(`unsupported position ${position}`);\n        }\n    }\n    updateOptions(options) {\n        const hasOrientationChanged = typeof options.orientation === 'string' &&\n            this.gridview.orientation !== options.orientation;\n        this._options = Object.assign(Object.assign({}, this.options), options);\n        if (hasOrientationChanged) {\n            this.gridview.orientation = options.orientation;\n        }\n        this.layout(this.gridview.width, this.gridview.height, true);\n    }\n    focus() {\n        var _a;\n        (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    getGroupPanel(id) {\n        return this.panels.find((panel) => panel.id === id);\n    }\n    setActivePanel(panel) {\n        this.doSetGroupActive(panel.group);\n        panel.group.model.openPanel(panel);\n    }\n    moveToNext(options = {}) {\n        var _a;\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        if (options.includePanel && options.group) {\n            if (options.group.activePanel !==\n                options.group.panels[options.group.panels.length - 1]) {\n                options.group.model.moveToNext({ suppressRoll: true });\n                return;\n            }\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.next(location)) === null || _a === void 0 ? void 0 : _a.view;\n        this.doSetGroupActive(next);\n    }\n    moveToPrevious(options = {}) {\n        var _a;\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        if (options.includePanel && options.group) {\n            if (options.group.activePanel !== options.group.panels[0]) {\n                options.group.model.moveToPrevious({ suppressRoll: true });\n                return;\n            }\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.previous(location)) === null || _a === void 0 ? void 0 : _a.view;\n        if (next) {\n            this.doSetGroupActive(next);\n        }\n    }\n    /**\n     * Serialize the current state of the layout\n     *\n     * @returns A JSON respresentation of the layout\n     */\n    toJSON() {\n        var _a;\n        const data = this.gridview.serialize();\n        const panels = this.panels.reduce((collection, panel) => {\n            collection[panel.id] = panel.toJSON();\n            return collection;\n        }, {});\n        return {\n            grid: data,\n            panels,\n            activeGroup: (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.id,\n            options: { tabHeight: this.tabHeight },\n        };\n    }\n    fromJSON(data) {\n        this.clear();\n        if (!this.deserializer) {\n            throw new Error('invalid deserializer');\n        }\n        const { grid, panels, options, activeGroup } = data;\n        if (typeof (options === null || options === void 0 ? void 0 : options.tabHeight) === 'number') {\n            this.tabHeight = options.tabHeight;\n        }\n        if (!this.deserializer) {\n            throw new Error('no deserializer provided');\n        }\n        this.gridview.deserialize(grid, {\n            fromJSON: (node) => {\n                const { id, locked, hideHeader, views, activeView } = node.data;\n                const group = this.createGroup({\n                    id,\n                    locked: !!locked,\n                    hideHeader: !!hideHeader,\n                });\n                this._onDidAddGroup.fire(group);\n                for (const child of views) {\n                    const panel = this.deserializer.fromJSON(panels[child], group);\n                    const isActive = typeof activeView === 'string' &&\n                        activeView === panel.id;\n                    group.model.openPanel(panel, {\n                        skipSetPanelActive: !isActive,\n                        skipSetGroupActive: true,\n                    });\n                }\n                if (!group.activePanel && group.panels.length > 0) {\n                    group.model.openPanel(group.panels[group.panels.length - 1], {\n                        skipSetGroupActive: true,\n                    });\n                }\n                return group;\n            },\n        });\n        if (typeof activeGroup === 'string') {\n            const panel = this.getPanel(activeGroup);\n            if (panel) {\n                this.doSetGroupActive(panel);\n            }\n        }\n        this.gridview.layout(this.width, this.height);\n        this._onDidLayoutFromJSON.fire();\n    }\n    clear() {\n        const groups = Array.from(this._groups.values()).map((_) => _.value);\n        const hasActiveGroup = !!this.activeGroup;\n        const hasActivePanel = !!this.activePanel;\n        for (const group of groups) {\n            // remove the group will automatically remove the panels\n            this.removeGroup(group, true);\n        }\n        if (hasActiveGroup) {\n            this.doSetGroupActive(undefined);\n        }\n        if (hasActivePanel) {\n            this._onDidActivePanelChange.fire(undefined);\n        }\n        this.gridview.clear();\n    }\n    closeAllGroups() {\n        for (const entry of this._groups.entries()) {\n            const [_, group] = entry;\n            group.value.model.closeAllPanels();\n        }\n    }\n    addPanel(options) {\n        var _a, _b;\n        if (this.panels.find((_) => _.id === options.id)) {\n            throw new Error(`panel with id ${options.id} already exists`);\n        }\n        let referenceGroup;\n        if (options.position) {\n            if (isPanelOptionsWithPanel(options.position)) {\n                const referencePanel = typeof options.position.referencePanel === 'string'\n                    ? this.getGroupPanel(options.position.referencePanel)\n                    : options.position.referencePanel;\n                if (!referencePanel) {\n                    throw new Error(`referencePanel ${options.position.referencePanel} does not exist`);\n                }\n                referenceGroup = this.findGroup(referencePanel);\n            }\n            else if (isPanelOptionsWithGroup(options.position)) {\n                referenceGroup =\n                    typeof options.position.referenceGroup === 'string'\n                        ? (_a = this._groups.get(options.position.referenceGroup)) === null || _a === void 0 ? void 0 : _a.value\n                        : options.position.referenceGroup;\n                if (!referenceGroup) {\n                    throw new Error(`referencePanel ${options.position.referenceGroup} does not exist`);\n                }\n            }\n            else {\n                const group = this.orthogonalize(directionToPosition(options.position.direction));\n                const panel = this.createPanel(options, group);\n                group.model.openPanel(panel);\n                return panel;\n            }\n        }\n        else {\n            referenceGroup = this.activeGroup;\n        }\n        let panel;\n        if (referenceGroup) {\n            const target = toTarget(((_b = options.position) === null || _b === void 0 ? void 0 : _b.direction) || 'within');\n            if (target === 'center') {\n                panel = this.createPanel(options, referenceGroup);\n                referenceGroup.model.openPanel(panel);\n            }\n            else {\n                const location = getGridLocation(referenceGroup.element);\n                const relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n                const group = this.createGroupAtLocation(relativeLocation);\n                panel = this.createPanel(options, group);\n                group.model.openPanel(panel);\n            }\n        }\n        else {\n            const group = this.createGroupAtLocation();\n            panel = this.createPanel(options, group);\n            group.model.openPanel(panel);\n        }\n        return panel;\n    }\n    removePanel(panel, options = {\n        removeEmptyGroup: true,\n        skipDispose: false,\n    }) {\n        const group = panel.group;\n        if (!group) {\n            throw new Error(`cannot remove panel ${panel.id}. it's missing a group.`);\n        }\n        group.model.removePanel(panel);\n        panel.dispose();\n        const retainGroupForWatermark = this.size === 1;\n        if (!retainGroupForWatermark &&\n            group.size === 0 &&\n            options.removeEmptyGroup) {\n            this.removeGroup(group);\n        }\n    }\n    createWatermarkComponent() {\n        var _a;\n        return createComponent('watermark-id', 'watermark-name', this.options.watermarkComponent\n            ? { 'watermark-name': this.options.watermarkComponent }\n            : {}, this.options.watermarkFrameworkComponent\n            ? { 'watermark-name': this.options.watermarkFrameworkComponent }\n            : {}, (_a = this.options.frameworkComponentFactory) === null || _a === void 0 ? void 0 : _a.watermark);\n    }\n    addGroup(options) {\n        var _a;\n        const group = this.createGroup();\n        if (options) {\n            let referenceGroup;\n            if (isGroupOptionsWithPanel(options)) {\n                const referencePanel = typeof options.referencePanel === 'string'\n                    ? this.panels.find((panel) => panel.id === options.referencePanel)\n                    : options.referencePanel;\n                if (!referencePanel) {\n                    throw new Error(`reference panel ${options.referencePanel} does not exist`);\n                }\n                referenceGroup = this.findGroup(referencePanel);\n                if (!referenceGroup) {\n                    throw new Error(`reference group for reference panel ${options.referencePanel} does not exist`);\n                }\n            }\n            else if (isGroupOptionsWithGroup(options)) {\n                referenceGroup =\n                    typeof options.referenceGroup === 'string'\n                        ? (_a = this._groups.get(options.referenceGroup)) === null || _a === void 0 ? void 0 : _a.value\n                        : options.referenceGroup;\n                if (!referenceGroup) {\n                    throw new Error(`reference group ${options.referenceGroup} does not exist`);\n                }\n            }\n            else {\n                const group = this.orthogonalize(directionToPosition(options.direction));\n                return group;\n            }\n            const target = toTarget(options.direction || 'within');\n            const location = getGridLocation(referenceGroup.element);\n            const relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n            this.doAddGroup(group, relativeLocation);\n            return group;\n        }\n        else {\n            this.doAddGroup(group);\n            return group;\n        }\n    }\n    removeGroup(group, skipActive = false) {\n        const panels = [...group.panels]; // reassign since group panels will mutate\n        for (const panel of panels) {\n            this.removePanel(panel, {\n                removeEmptyGroup: false,\n                skipDispose: false,\n            });\n        }\n        super.doRemoveGroup(group, { skipActive });\n    }\n    moveGroupOrPanel(referenceGroup, groupId, itemId, target, index) {\n        var _a;\n        const sourceGroup = groupId\n            ? (_a = this._groups.get(groupId)) === null || _a === void 0 ? void 0 : _a.value\n            : undefined;\n        if (itemId === undefined) {\n            if (sourceGroup) {\n                this.moveGroup(sourceGroup, referenceGroup, target);\n            }\n            return;\n        }\n        if (!target || target === 'center') {\n            const groupItem = (sourceGroup === null || sourceGroup === void 0 ? void 0 : sourceGroup.model.removePanel(itemId)) ||\n                this.panels.find((panel) => panel.id === itemId);\n            if (!groupItem) {\n                throw new Error(`No panel with id ${itemId}`);\n            }\n            if ((sourceGroup === null || sourceGroup === void 0 ? void 0 : sourceGroup.model.size) === 0) {\n                this.doRemoveGroup(sourceGroup);\n            }\n            referenceGroup.model.openPanel(groupItem, { index });\n        }\n        else {\n            const referenceLocation = getGridLocation(referenceGroup.element);\n            const targetLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, target);\n            if (sourceGroup && sourceGroup.size < 2) {\n                const [targetParentLocation, to] = tail(targetLocation);\n                const sourceLocation = getGridLocation(sourceGroup.element);\n                const [sourceParentLocation, from] = tail(sourceLocation);\n                if (sequenceEquals(sourceParentLocation, targetParentLocation)) {\n                    // special case when 'swapping' two views within same grid location\n                    // if a group has one tab - we are essentially moving the 'group'\n                    // which is equivalent to swapping two views in this case\n                    this.gridview.moveView(sourceParentLocation, from, to);\n                }\n                else {\n                    // source group will become empty so delete the group\n                    const targetGroup = this.doRemoveGroup(sourceGroup, {\n                        skipActive: true,\n                        skipDispose: true,\n                    });\n                    // after deleting the group we need to re-evaulate the ref location\n                    const updatedReferenceLocation = getGridLocation(referenceGroup.element);\n                    const location = getRelativeLocation(this.gridview.orientation, updatedReferenceLocation, target);\n                    this.doAddGroup(targetGroup, location);\n                }\n            }\n            else {\n                const groupItem = (sourceGroup === null || sourceGroup === void 0 ? void 0 : sourceGroup.model.removePanel(itemId)) ||\n                    this.panels.find((panel) => panel.id === itemId);\n                if (!groupItem) {\n                    throw new Error(`No panel with id ${itemId}`);\n                }\n                const dropLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, target);\n                const group = this.createGroupAtLocation(dropLocation);\n                group.model.openPanel(groupItem);\n            }\n        }\n    }\n    moveGroup(sourceGroup, referenceGroup, target) {\n        if (sourceGroup) {\n            if (!target || target === 'center') {\n                const activePanel = sourceGroup.activePanel;\n                const panels = [...sourceGroup.panels].map((p) => sourceGroup.model.removePanel(p.id));\n                if ((sourceGroup === null || sourceGroup === void 0 ? void 0 : sourceGroup.model.size) === 0) {\n                    this.doRemoveGroup(sourceGroup);\n                }\n                for (const panel of panels) {\n                    referenceGroup.model.openPanel(panel, {\n                        skipSetPanelActive: panel !== activePanel,\n                    });\n                }\n            }\n            else {\n                this.gridview.removeView(getGridLocation(sourceGroup.element));\n                const referenceLocation = getGridLocation(referenceGroup.element);\n                const dropLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, target);\n                this.gridview.addView(sourceGroup, Sizing.Distribute, dropLocation);\n            }\n        }\n    }\n    doSetGroupActive(group, skipFocus) {\n        var _a, _b;\n        const isGroupAlreadyFocused = this._activeGroup === group;\n        super.doSetGroupActive(group, skipFocus);\n        if (!isGroupAlreadyFocused && ((_a = this._activeGroup) === null || _a === void 0 ? void 0 : _a.activePanel)) {\n            this._onDidActivePanelChange.fire((_b = this._activeGroup) === null || _b === void 0 ? void 0 : _b.activePanel);\n        }\n    }\n    createGroup(options) {\n        if (!options) {\n            options = { tabHeight: this.tabHeight };\n        }\n        if (typeof options.tabHeight !== 'number') {\n            options.tabHeight = this.tabHeight;\n        }\n        let id = options === null || options === void 0 ? void 0 : options.id;\n        if (id && this._groups.has(options.id)) {\n            console.warn(`Duplicate group id ${options === null || options === void 0 ? void 0 : options.id}. reassigning group id to avoid errors`);\n            id = undefined;\n        }\n        if (!id) {\n            id = this.nextGroupId.next();\n            while (this._groups.has(id)) {\n                id = this.nextGroupId.next();\n            }\n        }\n        const view = new GroupPanel(this, id, options);\n        view.init({ params: {}, accessor: null }); // required to initialized .part and allow for correct disposal of group\n        if (!this._groups.has(view.id)) {\n            const disposable = new CompositeDisposable(view.model.onMove((event) => {\n                const { groupId, itemId, target, index } = event;\n                this.moveGroupOrPanel(view, groupId, itemId, target, index);\n            }), view.model.onDidDrop((event) => {\n                this._onDidDrop.fire(Object.assign(Object.assign({}, event), { api: this._api, group: view }));\n            }), view.model.onDidAddPanel((event) => {\n                this._onDidAddPanel.fire(event.panel);\n            }), view.model.onDidRemovePanel((event) => {\n                this._onDidRemovePanel.fire(event.panel);\n            }), view.model.onDidActivePanelChange((event) => {\n                this._onDidActivePanelChange.fire(event.panel);\n            }));\n            this._groups.set(view.id, { value: view, disposable });\n        }\n        // TODO: must be called after the above listeners have been setup,\n        // not an ideal pattern\n        view.initialize();\n        if (typeof this.options.tabHeight === 'number') {\n            view.model.header.height = this.options.tabHeight;\n        }\n        return view;\n    }\n    createPanel(options, group) {\n        const view = new DefaultGroupPanelView({\n            content: this.createContentComponent(options.id, options.component),\n            tab: this.createTabComponent(options.id, options.tabComponent || this.options.defaultTabComponent),\n        });\n        const panel = new DockviewPanel(options.id, this, this._api, group);\n        panel.init({\n            view,\n            title: options.title || options.id,\n            params: (options === null || options === void 0 ? void 0 : options.params) || {},\n        });\n        return panel;\n    }\n    createContentComponent(id, componentName) {\n        var _a;\n        return createComponent(id, componentName, this.options.components || {}, this.options.frameworkComponents, (_a = this.options.frameworkComponentFactory) === null || _a === void 0 ? void 0 : _a.content);\n    }\n    createTabComponent(id, componentName) {\n        var _a;\n        return createComponent(id, componentName, this.options.tabComponents || {}, this.options.frameworkTabComponents, (_a = this.options.frameworkComponentFactory) === null || _a === void 0 ? void 0 : _a.tab, () => new DefaultTab());\n    }\n    createGroupAtLocation(location = [0]) {\n        const group = this.createGroup();\n        this.doAddGroup(group, location);\n        return group;\n    }\n    findGroup(panel) {\n        var _a;\n        return (_a = Array.from(this._groups.values()).find((group) => group.value.model.containsPanel(panel))) === null || _a === void 0 ? void 0 : _a.value;\n    }\n    dispose() {\n        super.dispose();\n        this._onDidActivePanelChange.dispose();\n        this._onDidAddPanel.dispose();\n        this._onDidRemovePanel.dispose();\n        this._onDidLayoutFromJSON.dispose();\n    }\n}\n","export function isPanelOptionsWithPanel(data) {\n    if (data.referencePanel) {\n        return true;\n    }\n    return false;\n}\nexport function isPanelOptionsWithGroup(data) {\n    if (data.referenceGroup) {\n        return true;\n    }\n    return false;\n}\nexport function isGroupOptionsWithPanel(data) {\n    if (data.referencePanel) {\n        return true;\n    }\n    return false;\n}\nexport function isGroupOptionsWithGroup(data) {\n    if (data.referenceGroup) {\n        return true;\n    }\n    return false;\n}\n","import { getRelativeLocation, getGridLocation, } from './gridview';\nimport { tail, sequenceEquals } from '../array';\nimport { CompositeDisposable } from '../lifecycle';\nimport { BaseGrid, toTarget, } from './baseComponentGridview';\nimport { createComponent } from '../panel/componentFactory';\nimport { Emitter } from '../events';\nexport class GridviewComponent extends BaseGrid {\n    constructor(element, options) {\n        super(element, {\n            proportionalLayout: options.proportionalLayout,\n            orientation: options.orientation,\n            styles: options.styles,\n        });\n        this._onDidLayoutfromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutfromJSON.event;\n        this._options = options;\n        if (!this.options.components) {\n            this.options.components = {};\n        }\n        if (!this.options.frameworkComponents) {\n            this.options.frameworkComponents = {};\n        }\n    }\n    get orientation() {\n        return this.gridview.orientation;\n    }\n    set orientation(value) {\n        this.gridview.orientation = value;\n    }\n    get options() {\n        return this._options;\n    }\n    get deserializer() {\n        return this._deserializer;\n    }\n    set deserializer(value) {\n        this._deserializer = value;\n    }\n    updateOptions(options) {\n        const hasOrientationChanged = typeof options.orientation === 'string' &&\n            this.gridview.orientation !== options.orientation;\n        this._options = Object.assign(Object.assign({}, this.options), options);\n        if (hasOrientationChanged) {\n            this.gridview.orientation = options.orientation;\n        }\n        this.layout(this.gridview.width, this.gridview.height, true);\n    }\n    removePanel(panel) {\n        this.removeGroup(panel);\n    }\n    /**\n     * Serialize the current state of the layout\n     *\n     * @returns A JSON respresentation of the layout\n     */\n    toJSON() {\n        var _a;\n        const data = this.gridview.serialize();\n        return {\n            grid: data,\n            activePanel: (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.id,\n        };\n    }\n    setVisible(panel, visible) {\n        this.gridview.setViewVisible(getGridLocation(panel.element), visible);\n    }\n    setActive(panel) {\n        this._groups.forEach((value, _key) => {\n            value.value.setActive(panel === value.value);\n        });\n    }\n    focus() {\n        var _a;\n        (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    fromJSON(serializedGridview) {\n        this.clear();\n        const { grid, activePanel } = serializedGridview;\n        const queue = [];\n        this.gridview.deserialize(grid, {\n            fromJSON: (node) => {\n                const { data } = node;\n                const view = createComponent(data.id, data.component, this.options.components || {}, this.options.frameworkComponents || {}, this.options.frameworkComponentFactory\n                    ? {\n                        createComponent: this.options.frameworkComponentFactory\n                            .createComponent,\n                    }\n                    : undefined);\n                queue.push(() => view.init({\n                    params: data.params,\n                    minimumWidth: data.minimumWidth,\n                    maximumWidth: data.maximumWidth,\n                    minimumHeight: data.minimumHeight,\n                    maximumHeight: data.maximumHeight,\n                    priority: data.priority,\n                    snap: !!data.snap,\n                    accessor: this,\n                    isVisible: node.visible,\n                }));\n                this._onDidAddGroup.fire(view);\n                this.registerPanel(view);\n                return view;\n            },\n        });\n        this.layout(this.width, this.height, true);\n        queue.forEach((f) => f());\n        if (typeof activePanel === 'string') {\n            const panel = this.getPanel(activePanel);\n            if (panel) {\n                this.doSetGroupActive(panel);\n            }\n        }\n        this._onDidLayoutfromJSON.fire();\n    }\n    clear() {\n        const hasActiveGroup = this.activeGroup;\n        const groups = Array.from(this._groups.values()); // reassign since group panels will mutate\n        for (const group of groups) {\n            group.disposable.dispose();\n            this.doRemoveGroup(group.value, { skipActive: true });\n        }\n        if (hasActiveGroup) {\n            this.doSetGroupActive(undefined);\n        }\n        this.gridview.clear();\n    }\n    movePanel(panel, options) {\n        var _a;\n        let relativeLocation;\n        const removedPanel = this.gridview.remove(panel);\n        const referenceGroup = (_a = this._groups.get(options.reference)) === null || _a === void 0 ? void 0 : _a.value;\n        if (!referenceGroup) {\n            throw new Error(`reference group ${options.reference} does not exist`);\n        }\n        const target = toTarget(options.direction);\n        if (target === 'center') {\n            throw new Error(`${target} not supported as an option`);\n        }\n        else {\n            const location = getGridLocation(referenceGroup.element);\n            relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n        }\n        this.doAddGroup(removedPanel, relativeLocation, options.size);\n    }\n    addPanel(options) {\n        var _a, _b;\n        let relativeLocation = options.location || [0];\n        if ((_a = options.position) === null || _a === void 0 ? void 0 : _a.referencePanel) {\n            const referenceGroup = (_b = this._groups.get(options.position.referencePanel)) === null || _b === void 0 ? void 0 : _b.value;\n            if (!referenceGroup) {\n                throw new Error(`reference group ${options.position.referencePanel} does not exist`);\n            }\n            const target = toTarget(options.position.direction);\n            if (target === 'center') {\n                throw new Error(`${target} not supported as an option`);\n            }\n            else {\n                const location = getGridLocation(referenceGroup.element);\n                relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n            }\n        }\n        const view = createComponent(options.id, options.component, this.options.components || {}, this.options.frameworkComponents || {}, this.options.frameworkComponentFactory\n            ? {\n                createComponent: this.options.frameworkComponentFactory\n                    .createComponent,\n            }\n            : undefined);\n        view.init({\n            params: options.params || {},\n            minimumWidth: options.minimumWidth,\n            maximumWidth: options.maximumWidth,\n            minimumHeight: options.minimumHeight,\n            maximumHeight: options.maximumHeight,\n            priority: options.priority,\n            snap: !!options.snap,\n            accessor: this,\n            isVisible: true,\n        });\n        this.registerPanel(view);\n        this.doAddGroup(view, relativeLocation, options.size);\n        return view;\n    }\n    registerPanel(panel) {\n        const disposable = new CompositeDisposable(panel.api.onDidFocusChange((event) => {\n            if (!event.isFocused) {\n                return;\n            }\n            this._groups.forEach((groupItem) => {\n                const group = groupItem.value;\n                if (group !== panel) {\n                    group.setActive(false);\n                }\n                else {\n                    group.setActive(true);\n                }\n            });\n        }));\n        this._groups.set(panel.id, {\n            value: panel,\n            disposable,\n        });\n    }\n    moveGroup(referenceGroup, groupId, target) {\n        const sourceGroup = this.getPanel(groupId);\n        if (!sourceGroup) {\n            throw new Error('invalid operation');\n        }\n        const referenceLocation = getGridLocation(referenceGroup.element);\n        const targetLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, target);\n        const [targetParentLocation, to] = tail(targetLocation);\n        const sourceLocation = getGridLocation(sourceGroup.element);\n        const [sourceParentLocation, from] = tail(sourceLocation);\n        if (sequenceEquals(sourceParentLocation, targetParentLocation)) {\n            // special case when 'swapping' two views within same grid location\n            // if a group has one tab - we are essentially moving the 'group'\n            // which is equivalent to swapping two views in this case\n            this.gridview.moveView(sourceParentLocation, from, to);\n            return;\n        }\n        // source group will become empty so delete the group\n        const targetGroup = this.doRemoveGroup(sourceGroup, {\n            skipActive: true,\n            skipDispose: true,\n        });\n        // after deleting the group we need to re-evaulate the ref location\n        const updatedReferenceLocation = getGridLocation(referenceGroup.element);\n        const location = getRelativeLocation(this.gridview.orientation, updatedReferenceLocation, target);\n        this.doAddGroup(targetGroup, location);\n    }\n    removeGroup(group) {\n        super.removeGroup(group);\n    }\n    dispose() {\n        super.dispose();\n        this._onDidLayoutfromJSON.dispose();\n    }\n}\n","import { CompositeDisposable, MutableDisposable, } from '../lifecycle';\nimport { Orientation, Sizing, Splitview, } from './core/splitview';\nimport { Emitter } from '../events';\nimport { createComponent } from '../panel/componentFactory';\n/**\n * A high-level implementation of splitview that works using 'panels'\n */\nexport class SplitviewComponent extends CompositeDisposable {\n    constructor(element, options) {\n        super();\n        this.element = element;\n        this._disposable = new MutableDisposable();\n        this._panels = new Map();\n        this._onDidLayoutfromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutfromJSON.event;\n        this._onDidAddView = new Emitter();\n        this.onDidAddView = this._onDidAddView.event;\n        this._onDidRemoveView = new Emitter();\n        this.onDidRemoveView = this._onDidRemoveView.event;\n        this._onDidLayoutChange = new Emitter();\n        this.onDidLayoutChange = this._onDidLayoutChange.event;\n        this._options = options;\n        if (!options.components) {\n            options.components = {};\n        }\n        if (!options.frameworkComponents) {\n            options.frameworkComponents = {};\n        }\n        this.splitview = new Splitview(this.element, options);\n        this.addDisposables(this._disposable, this._onDidAddView, this._onDidLayoutfromJSON, this._onDidRemoveView, this._onDidLayoutChange);\n    }\n    get panels() {\n        return this.splitview.getViews();\n    }\n    get options() {\n        return this._options;\n    }\n    get length() {\n        return this._panels.size;\n    }\n    get orientation() {\n        return this.splitview.orientation;\n    }\n    get splitview() {\n        return this._splitview;\n    }\n    set splitview(value) {\n        this._splitview = value;\n        this._disposable.value = new CompositeDisposable(this._splitview.onDidSashEnd(() => {\n            this._onDidLayoutChange.fire(undefined);\n        }), this._splitview.onDidAddView((e) => this._onDidAddView.fire(e)), this._splitview.onDidRemoveView((e) => this._onDidRemoveView.fire(e)));\n    }\n    get minimumSize() {\n        return this.splitview.minimumSize;\n    }\n    get maximumSize() {\n        return this.splitview.maximumSize;\n    }\n    get height() {\n        return this.splitview.orientation === Orientation.HORIZONTAL\n            ? this.splitview.orthogonalSize\n            : this.splitview.size;\n    }\n    get width() {\n        return this.splitview.orientation === Orientation.HORIZONTAL\n            ? this.splitview.size\n            : this.splitview.orthogonalSize;\n    }\n    updateOptions(options) {\n        const hasOrientationChanged = typeof options.orientation === 'string' &&\n            this.options.orientation !== options.orientation;\n        this._options = Object.assign(Object.assign({}, this.options), options);\n        if (hasOrientationChanged) {\n            this.splitview.orientation = options.orientation;\n        }\n        this.splitview.layout(this.splitview.size, this.splitview.orthogonalSize);\n    }\n    focus() {\n        var _a;\n        (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    movePanel(from, to) {\n        this.splitview.moveView(from, to);\n    }\n    setVisible(panel, visible) {\n        const index = this.panels.indexOf(panel);\n        this.splitview.setViewVisible(index, visible);\n    }\n    setActive(view, skipFocus) {\n        this._activePanel = view;\n        this.panels\n            .filter((v) => v !== view)\n            .forEach((v) => {\n            v.api._onDidActiveChange.fire({ isActive: false });\n            if (!skipFocus) {\n                v.focus();\n            }\n        });\n        view.api._onDidActiveChange.fire({ isActive: true });\n        if (!skipFocus) {\n            view.focus();\n        }\n    }\n    removePanel(panel, sizing) {\n        const disposable = this._panels.get(panel.id);\n        if (!disposable) {\n            throw new Error(`unknown splitview panel ${panel.id}`);\n        }\n        disposable.disposable.dispose();\n        disposable.value.dispose();\n        this._panels.delete(panel.id);\n        const index = this.panels.findIndex((_) => _ === panel);\n        this.splitview.removeView(index, sizing);\n        const panels = this.panels;\n        if (panels.length > 0) {\n            this.setActive(panels[panels.length - 1]);\n        }\n    }\n    getPanel(id) {\n        return this.panels.find((view) => view.id === id);\n    }\n    addPanel(options) {\n        if (this._panels.has(options.id)) {\n            throw new Error(`panel ${options.id} already exists`);\n        }\n        const view = createComponent(options.id, options.component, this.options.components || {}, this.options.frameworkComponents || {}, this.options.frameworkWrapper\n            ? {\n                createComponent: this.options.frameworkWrapper.createComponent,\n            }\n            : undefined);\n        view.orientation = this.splitview.orientation;\n        view.init({\n            params: options.params || {},\n            minimumSize: options.minimumSize,\n            maximumSize: options.maximumSize,\n            snap: options.snap,\n            priority: options.priority,\n            accessor: this,\n        });\n        const size = typeof options.size === 'number' ? options.size : Sizing.Distribute;\n        const index = typeof options.index === 'number' ? options.index : undefined;\n        this.splitview.addView(view, size, index);\n        this.doAddView(view);\n        this.setActive(view);\n        return view;\n    }\n    layout(width, height) {\n        const [size, orthogonalSize] = this.splitview.orientation === Orientation.HORIZONTAL\n            ? [width, height]\n            : [height, width];\n        this.splitview.layout(size, orthogonalSize);\n    }\n    doAddView(view) {\n        const disposable = view.api.onDidFocusChange((event) => {\n            if (!event.isFocused) {\n                return;\n            }\n            this.setActive(view, true);\n        });\n        this._panels.set(view.id, { disposable, value: view });\n    }\n    toJSON() {\n        var _a;\n        const views = this.splitview\n            .getViews()\n            .map((view, i) => {\n            const size = this.splitview.getViewSize(i);\n            return {\n                size,\n                data: view.toJSON(),\n                snap: !!view.snap,\n                priority: view.priority,\n            };\n        });\n        return {\n            views,\n            activeView: (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.id,\n            size: this.splitview.size,\n            orientation: this.splitview.orientation,\n        };\n    }\n    fromJSON(serializedSplitview) {\n        this.clear();\n        const { views, orientation, size, activeView } = serializedSplitview;\n        const queue = [];\n        this.splitview = new Splitview(this.element, {\n            orientation,\n            proportionalLayout: this.options.proportionalLayout,\n            descriptor: {\n                size,\n                views: views.map((view) => {\n                    const data = view.data;\n                    if (this._panels.has(data.id)) {\n                        throw new Error(`panel ${data.id} already exists`);\n                    }\n                    const panel = createComponent(data.id, data.component, this.options.components || {}, this.options.frameworkComponents || {}, this.options.frameworkWrapper\n                        ? {\n                            createComponent: this.options.frameworkWrapper\n                                .createComponent,\n                        }\n                        : undefined);\n                    queue.push(() => {\n                        panel.init({\n                            params: data.params || {},\n                            minimumSize: data.minimumSize,\n                            maximumSize: data.maximumSize,\n                            snap: view.snap,\n                            priority: view.priority,\n                            accessor: this,\n                        });\n                    });\n                    panel.orientation = orientation;\n                    this.doAddView(panel);\n                    setTimeout(() => {\n                        // the original onDidAddView events are missed since they are fired before we can subcribe to them\n                        this._onDidAddView.fire(panel);\n                    }, 0);\n                    return { size: view.size, view: panel };\n                }),\n            },\n        });\n        this.layout(this.width, this.height);\n        queue.forEach((f) => f());\n        if (typeof activeView === 'string') {\n            const panel = this.getPanel(activeView);\n            if (panel) {\n                this.setActive(panel);\n            }\n        }\n        this._onDidLayoutfromJSON.fire();\n    }\n    clear() {\n        for (const [_, value] of this._panels.entries()) {\n            value.disposable.dispose();\n            value.value.dispose();\n        }\n        this._panels.clear();\n        this.splitview.dispose();\n    }\n    dispose() {\n        for (const [_, value] of this._panels.entries()) {\n            value.disposable.dispose();\n            value.value.dispose();\n        }\n        this._panels.clear();\n        this.splitview.dispose();\n        super.dispose();\n    }\n}\n","import { Emitter } from '../events';\nimport { PanelApiImpl } from './panelApi';\nexport class SplitviewPanelApiImpl extends PanelApiImpl {\n    //\n    constructor(id) {\n        super(id);\n        this._onDidConstraintsChangeInternal = new Emitter();\n        this.onDidConstraintsChangeInternal = this._onDidConstraintsChangeInternal.event;\n        //\n        this._onDidConstraintsChange = new Emitter({\n            replay: true,\n        });\n        this.onDidConstraintsChange = this._onDidConstraintsChange.event;\n        //\n        this._onDidSizeChange = new Emitter();\n        this.onDidSizeChange = this._onDidSizeChange.event;\n        this.addDisposables(this._onDidConstraintsChangeInternal, this._onDidConstraintsChange, this._onDidSizeChange);\n    }\n    setConstraints(value) {\n        this._onDidConstraintsChangeInternal.fire(value);\n    }\n    setSize(event) {\n        this._onDidSizeChange.fire(event);\n    }\n}\n","import { Emitter } from '../events';\nimport { SplitviewPanelApiImpl } from './splitviewPanelApi';\nexport class PaneviewPanelApiImpl extends SplitviewPanelApiImpl {\n    constructor(id) {\n        super(id);\n        this._onDidExpansionChange = new Emitter({\n            replay: true,\n        });\n        this.onDidExpansionChange = this._onDidExpansionChange.event;\n        this._onMouseEnter = new Emitter({});\n        this.onMouseEnter = this._onMouseEnter.event;\n        this._onMouseLeave = new Emitter({});\n        this.onMouseLeave = this._onMouseLeave.event;\n        this.addDisposables(this._onDidExpansionChange, this._onMouseEnter, this._onMouseLeave);\n    }\n    set pane(pane) {\n        this._pane = pane;\n    }\n    setExpanded(isExpanded) {\n        var _a;\n        (_a = this._pane) === null || _a === void 0 ? void 0 : _a.setExpanded(isExpanded);\n    }\n    get isExpanded() {\n        var _a;\n        return !!((_a = this._pane) === null || _a === void 0 ? void 0 : _a.isExpanded());\n    }\n}\n","import { PaneviewPanelApiImpl } from '../api/paneviewPanelApi';\nimport { addClasses, removeClasses } from '../dom';\nimport { addDisposableListener, Emitter } from '../events';\nimport { BasePanelView, } from '../gridview/basePanelView';\nimport { Orientation } from '../splitview/core/splitview';\nexport class PaneviewPanel extends BasePanelView {\n    constructor(id, component, headerComponent, orientation, isExpanded, isHeaderVisible) {\n        super(id, component, new PaneviewPanelApiImpl(id));\n        this.headerComponent = headerComponent;\n        this._onDidChangeExpansionState = new Emitter({ replay: true });\n        this.onDidChangeExpansionState = this._onDidChangeExpansionState.event;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this.headerSize = 22;\n        this._orthogonalSize = 0;\n        this._size = 0;\n        this._minimumBodySize = 100;\n        this._maximumBodySize = Number.POSITIVE_INFINITY;\n        this._isExpanded = false;\n        this.expandedSize = 0;\n        this.api.pane = this; // TODO cannot use 'this' before 'super'\n        this.api.initialize(this);\n        this._isExpanded = isExpanded;\n        this._headerVisible = isHeaderVisible;\n        this._onDidChangeExpansionState.fire(this.isExpanded()); // initialize value\n        this._orientation = orientation;\n        this.element.classList.add('pane');\n        this.addDisposables(this.api.onDidSizeChange((event) => {\n            this._onDidChange.fire({ size: event.size });\n        }), addDisposableListener(this.element, 'mouseenter', (ev) => {\n            this.api._onMouseEnter.fire(ev);\n        }), addDisposableListener(this.element, 'mouseleave', (ev) => {\n            this.api._onMouseLeave.fire(ev);\n        }));\n        this.addDisposables(this._onDidChangeExpansionState, this.onDidChangeExpansionState((isPanelExpanded) => {\n            this.api._onDidExpansionChange.fire({\n                isExpanded: isPanelExpanded,\n            });\n        }), this.api.onDidFocusChange((e) => {\n            if (!this.header) {\n                return;\n            }\n            if (e.isFocused) {\n                addClasses(this.header, 'focused');\n            }\n            else {\n                removeClasses(this.header, 'focused');\n            }\n        }));\n        this.renderOnce();\n    }\n    set orientation(value) {\n        this._orientation = value;\n    }\n    get orientation() {\n        return this._orientation;\n    }\n    get minimumSize() {\n        const headerSize = this.headerSize;\n        const expanded = this.isExpanded();\n        const minimumBodySize = expanded ? this._minimumBodySize : 0;\n        return headerSize + minimumBodySize;\n    }\n    get maximumSize() {\n        const headerSize = this.headerSize;\n        const expanded = this.isExpanded();\n        const maximumBodySize = expanded ? this._maximumBodySize : 0;\n        return headerSize + maximumBodySize;\n    }\n    get size() {\n        return this._size;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    set orthogonalSize(size) {\n        this._orthogonalSize = size;\n    }\n    get minimumBodySize() {\n        return this._minimumBodySize;\n    }\n    set minimumBodySize(value) {\n        this._minimumBodySize = typeof value === 'number' ? value : 0;\n    }\n    get maximumBodySize() {\n        return this._maximumBodySize;\n    }\n    set maximumBodySize(value) {\n        this._maximumBodySize =\n            typeof value === 'number' ? value : Number.POSITIVE_INFINITY;\n    }\n    get headerVisible() {\n        return this._headerVisible;\n    }\n    set headerVisible(value) {\n        this._headerVisible = value;\n        this.header.style.display = value ? '' : 'none';\n    }\n    setVisible(isVisible) {\n        this.api._onDidVisibilityChange.fire({ isVisible });\n    }\n    setActive(isActive) {\n        this.api._onDidActiveChange.fire({ isActive });\n    }\n    isExpanded() {\n        return this._isExpanded;\n    }\n    setExpanded(expanded) {\n        if (this._isExpanded === expanded) {\n            return;\n        }\n        this._isExpanded = expanded;\n        if (expanded) {\n            if (this.animationTimer) {\n                clearTimeout(this.animationTimer);\n            }\n            if (this.body) {\n                this.element.appendChild(this.body);\n            }\n        }\n        else {\n            this.animationTimer = setTimeout(() => {\n                var _a;\n                (_a = this.body) === null || _a === void 0 ? void 0 : _a.remove();\n            }, 200);\n        }\n        this._onDidChange.fire(expanded ? { size: this.width } : {});\n        this._onDidChangeExpansionState.fire(expanded);\n    }\n    layout(size, orthogonalSize) {\n        this._size = size;\n        this._orthogonalSize = orthogonalSize;\n        const [width, height] = this.orientation === Orientation.HORIZONTAL\n            ? [size, orthogonalSize]\n            : [orthogonalSize, size];\n        if (this.isExpanded()) {\n            this.expandedSize = width;\n        }\n        super.layout(width, height);\n    }\n    init(parameters) {\n        var _a, _b;\n        super.init(parameters);\n        if (typeof parameters.minimumBodySize === 'number') {\n            this.minimumBodySize = parameters.minimumBodySize;\n        }\n        if (typeof parameters.maximumBodySize === 'number') {\n            this.maximumBodySize = parameters.maximumBodySize;\n        }\n        this.bodyPart = this.getBodyComponent();\n        this.headerPart = this.getHeaderComponent();\n        this.bodyPart.init(Object.assign(Object.assign({}, parameters), { api: this.api }));\n        this.headerPart.init(Object.assign(Object.assign({}, parameters), { api: this.api }));\n        (_a = this.body) === null || _a === void 0 ? void 0 : _a.append(this.bodyPart.element);\n        (_b = this.header) === null || _b === void 0 ? void 0 : _b.append(this.headerPart.element);\n        if (typeof parameters.isExpanded === 'boolean') {\n            this.setExpanded(parameters.isExpanded);\n        }\n    }\n    toJSON() {\n        const params = this._params;\n        return Object.assign(Object.assign({}, super.toJSON()), { headerComponent: this.headerComponent, title: params.title });\n    }\n    renderOnce() {\n        this.header = document.createElement('div');\n        this.header.tabIndex = 0;\n        this.header.className = 'pane-header';\n        this.header.style.height = `${this.headerSize}px`;\n        this.header.style.lineHeight = `${this.headerSize}px`;\n        this.header.style.minHeight = `${this.headerSize}px`;\n        this.header.style.maxHeight = `${this.headerSize}px`;\n        this.element.appendChild(this.header);\n        this.body = document.createElement('div');\n        this.body.className = 'pane-body';\n        this.element.appendChild(this.body);\n    }\n    // TODO slightly hacky by-pass of the component to create a body and header component\n    getComponent() {\n        return {\n            update: (params) => {\n                var _a, _b;\n                (_a = this.bodyPart) === null || _a === void 0 ? void 0 : _a.update({ params });\n                (_b = this.headerPart) === null || _b === void 0 ? void 0 : _b.update({ params });\n            },\n            dispose: () => {\n                var _a, _b;\n                (_a = this.bodyPart) === null || _a === void 0 ? void 0 : _a.dispose();\n                (_b = this.headerPart) === null || _b === void 0 ? void 0 : _b.dispose();\n            },\n        };\n    }\n}\n","import { DragHandler } from '../dnd/abstractDragHandler';\nimport { getPaneData, LocalSelectionTransfer, PaneTransfer, } from '../dnd/dataTransfer';\nimport { Droptarget } from '../dnd/droptarget';\nimport { Emitter } from '../events';\nimport { PaneviewPanel, } from './paneviewPanel';\nexport class DraggablePaneviewPanel extends PaneviewPanel {\n    constructor(accessor, id, component, headerComponent, orientation, isExpanded, disableDnd) {\n        super(id, component, headerComponent, orientation, isExpanded, true);\n        this.accessor = accessor;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        if (!disableDnd) {\n            this.initDragFeatures();\n        }\n    }\n    initDragFeatures() {\n        if (!this.header) {\n            return;\n        }\n        const id = this.id;\n        const accessorId = this.accessor.id;\n        this.header.draggable = true;\n        this.handler = new (class PaneDragHandler extends DragHandler {\n            getData() {\n                LocalSelectionTransfer.getInstance().setData([new PaneTransfer(accessorId, id)], PaneTransfer.prototype);\n                return {\n                    dispose: () => {\n                        LocalSelectionTransfer.getInstance().clearData(PaneTransfer.prototype);\n                    },\n                };\n            }\n        })(this.header);\n        this.target = new Droptarget(this.element, {\n            acceptedTargetZones: ['top', 'bottom'],\n            overlayModel: {\n                activationSize: { type: 'percentage', value: 50 },\n            },\n            canDisplayOverlay: (event) => {\n                const data = getPaneData();\n                if (data) {\n                    if (data.paneId !== this.id &&\n                        data.viewId === this.accessor.id) {\n                        return true;\n                    }\n                }\n                if (this.accessor.options.showDndOverlay) {\n                    return this.accessor.options.showDndOverlay({\n                        nativeEvent: event,\n                        getData: getPaneData,\n                        panel: this,\n                    });\n                }\n                return false;\n            },\n        });\n        this.addDisposables(this._onDidDrop, this.handler, this.target, this.target.onDrop((event) => {\n            this.onDrop(event);\n        }));\n    }\n    onDrop(event) {\n        const data = getPaneData();\n        if (!data || data.viewId !== this.accessor.id) {\n            // if there is no local drag event for this panel\n            // or if the drag event was creating by another Paneview instance\n            this._onDidDrop.fire(Object.assign(Object.assign({}, event), { panel: this, getData: getPaneData }));\n            return;\n        }\n        const containerApi = this._params\n            .containerApi;\n        const panelId = data.paneId;\n        const existingPanel = containerApi.getPanel(panelId);\n        if (!existingPanel) {\n            // if the panel doesn't exist\n            this._onDidDrop.fire(Object.assign(Object.assign({}, event), { panel: this, getData: getPaneData }));\n            return;\n        }\n        const allPanels = containerApi.panels;\n        const fromIndex = allPanels.indexOf(existingPanel);\n        let toIndex = containerApi.panels.indexOf(this);\n        if (event.position === 'left' || event.position === 'top') {\n            toIndex = Math.max(0, toIndex - 1);\n        }\n        if (event.position === 'right' || event.position === 'bottom') {\n            if (fromIndex > toIndex) {\n                toIndex++;\n            }\n            toIndex = Math.min(allPanels.length - 1, toIndex);\n        }\n        containerApi.movePanel(fromIndex, toIndex);\n    }\n}\n","import { addDisposableListener } from '../events';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nimport { toggleClass } from '../dom';\nimport { createChevronRightButton, createExpandMoreButton } from '../svg';\nexport class DefaultHeader extends CompositeDisposable {\n    constructor() {\n        super();\n        this._expandedIcon = createExpandMoreButton();\n        this._collapsedIcon = createChevronRightButton();\n        this.disposable = new MutableDisposable();\n        this.apiRef = { api: null };\n        this._element = document.createElement('div');\n        this.element.className = 'default-header';\n        this._content = document.createElement('span');\n        this._expander = document.createElement('div');\n        this._expander.className = 'dockview-pane-header-icon';\n        this.element.appendChild(this._expander);\n        this.element.appendChild(this._content);\n        this.addDisposables(addDisposableListener(this._element, 'click', () => {\n            var _a;\n            (_a = this.apiRef.api) === null || _a === void 0 ? void 0 : _a.setExpanded(!this.apiRef.api.isExpanded);\n        }));\n    }\n    get element() {\n        return this._element;\n    }\n    init(params) {\n        this.apiRef.api = params.api;\n        this._content.textContent = params.title;\n        this.updateIcon();\n        this.disposable.value = params.api.onDidExpansionChange(() => {\n            this.updateIcon();\n        });\n    }\n    updateIcon() {\n        var _a;\n        const isExpanded = !!((_a = this.apiRef.api) === null || _a === void 0 ? void 0 : _a.isExpanded);\n        toggleClass(this._expander, 'collapsed', !isExpanded);\n        if (isExpanded) {\n            if (this._expander.contains(this._collapsedIcon)) {\n                this._collapsedIcon.remove();\n            }\n            if (!this._expander.contains(this._expandedIcon)) {\n                this._expander.appendChild(this._expandedIcon);\n            }\n        }\n        else {\n            if (this._expander.contains(this._expandedIcon)) {\n                this._expandedIcon.remove();\n            }\n            if (!this._expander.contains(this._collapsedIcon)) {\n                this._expander.appendChild(this._collapsedIcon);\n            }\n        }\n    }\n    update(_params) {\n        //\n    }\n    dispose() {\n        this.disposable.dispose();\n        super.dispose();\n    }\n}\n","import { PaneviewApi } from '../api/component.api';\nimport { createComponent } from '../panel/componentFactory';\nimport { Emitter } from '../events';\nimport { CompositeDisposable, MutableDisposable, } from '../lifecycle';\nimport { Orientation, Sizing, } from '../splitview/core/splitview';\nimport { Paneview } from './paneview';\nimport { DraggablePaneviewPanel, } from './draggablePaneviewPanel';\nimport { DefaultHeader } from './defaultPaneviewHeader';\nimport { sequentialNumberGenerator } from '../math';\nconst nextLayoutId = sequentialNumberGenerator();\nexport class PaneFramework extends DraggablePaneviewPanel {\n    constructor(options) {\n        super(options.accessor, options.id, options.component, options.headerComponent, options.orientation, options.isExpanded, options.disableDnd);\n        this.options = options;\n    }\n    getBodyComponent() {\n        return this.options.body;\n    }\n    getHeaderComponent() {\n        return this.options.header;\n    }\n}\nexport class PaneviewComponent extends CompositeDisposable {\n    constructor(element, options) {\n        super();\n        this.element = element;\n        this._id = nextLayoutId.next();\n        this._disposable = new MutableDisposable();\n        this._viewDisposables = new Map();\n        this._onDidLayoutfromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutfromJSON.event;\n        this._onDidLayoutChange = new Emitter();\n        this.onDidLayoutChange = this._onDidLayoutChange.event;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onDidAddView = new Emitter();\n        this.onDidAddView = this._onDidAddView.event;\n        this._onDidRemoveView = new Emitter();\n        this.onDidRemoveView = this._onDidRemoveView.event;\n        this.addDisposables(this._onDidLayoutChange, this._onDidLayoutfromJSON, this._onDidDrop, this._onDidAddView, this._onDidRemoveView);\n        this._options = options;\n        if (!options.components) {\n            options.components = {};\n        }\n        if (!options.frameworkComponents) {\n            options.frameworkComponents = {};\n        }\n        this.paneview = new Paneview(this.element, {\n            // only allow paneview in the vertical orientation for now\n            orientation: Orientation.VERTICAL,\n        });\n        this.addDisposables(this._disposable);\n    }\n    get id() {\n        return this._id;\n    }\n    get panels() {\n        return this.paneview.getPanes();\n    }\n    set paneview(value) {\n        this._paneview = value;\n        this._disposable.value = new CompositeDisposable(this._paneview.onDidChange(() => {\n            this._onDidLayoutChange.fire(undefined);\n        }), this._paneview.onDidAddView((e) => this._onDidAddView.fire(e)), this._paneview.onDidRemoveView((e) => this._onDidRemoveView.fire(e)));\n    }\n    get paneview() {\n        return this._paneview;\n    }\n    get minimumSize() {\n        return this.paneview.minimumSize;\n    }\n    get maximumSize() {\n        return this.paneview.maximumSize;\n    }\n    get height() {\n        return this.paneview.orientation === Orientation.HORIZONTAL\n            ? this.paneview.orthogonalSize\n            : this.paneview.size;\n    }\n    get width() {\n        return this.paneview.orientation === Orientation.HORIZONTAL\n            ? this.paneview.size\n            : this.paneview.orthogonalSize;\n    }\n    get options() {\n        return this._options;\n    }\n    focus() {\n        //\n    }\n    updateOptions(options) {\n        this._options = Object.assign(Object.assign({}, this.options), options);\n    }\n    addPanel(options) {\n        const body = createComponent(options.id, options.component, this.options.components || {}, this.options.frameworkComponents || {}, this.options.frameworkWrapper\n            ? {\n                createComponent: this.options.frameworkWrapper.body.createComponent,\n            }\n            : undefined);\n        let header;\n        if (options.headerComponent) {\n            header = createComponent(options.id, options.headerComponent, this.options.headerComponents || {}, this.options.headerframeworkComponents, this.options.frameworkWrapper\n                ? {\n                    createComponent: this.options.frameworkWrapper.header\n                        .createComponent,\n                }\n                : undefined);\n        }\n        else {\n            header = new DefaultHeader();\n        }\n        const view = new PaneFramework({\n            id: options.id,\n            component: options.component,\n            headerComponent: options.headerComponent,\n            header,\n            body,\n            orientation: Orientation.VERTICAL,\n            isExpanded: !!options.isExpanded,\n            disableDnd: !!this.options.disableDnd,\n            accessor: this,\n        });\n        this.doAddPanel(view);\n        const size = typeof options.size === 'number' ? options.size : Sizing.Distribute;\n        const index = typeof options.index === 'number' ? options.index : undefined;\n        view.init({\n            params: options.params || {},\n            minimumBodySize: options.minimumBodySize,\n            maximumBodySize: options.maximumBodySize,\n            isExpanded: options.isExpanded,\n            title: options.title,\n            containerApi: new PaneviewApi(this),\n        });\n        this.paneview.addPane(view, size, index);\n        view.orientation = this.paneview.orientation;\n        return view;\n    }\n    removePanel(panel) {\n        const views = this.panels;\n        const index = views.findIndex((_) => _ === panel);\n        this.paneview.removePane(index);\n        this.doRemovePanel(panel);\n    }\n    movePanel(from, to) {\n        this.paneview.moveView(from, to);\n    }\n    getPanel(id) {\n        return this.panels.find((view) => view.id === id);\n    }\n    layout(width, height) {\n        const [size, orthogonalSize] = this.paneview.orientation === Orientation.HORIZONTAL\n            ? [width, height]\n            : [height, width];\n        this.paneview.layout(size, orthogonalSize);\n    }\n    toJSON() {\n        const maximum = (value) => value === Number.MAX_SAFE_INTEGER ||\n            value === Number.POSITIVE_INFINITY\n            ? undefined\n            : value;\n        const minimum = (value) => (value <= 0 ? undefined : value);\n        const views = this.paneview\n            .getPanes()\n            .map((view, i) => {\n            const size = this.paneview.getViewSize(i);\n            return {\n                size,\n                data: view.toJSON(),\n                minimumSize: minimum(view.minimumBodySize),\n                maximumSize: maximum(view.maximumBodySize),\n                expanded: view.isExpanded(),\n            };\n        });\n        return {\n            views,\n            size: this.paneview.size,\n        };\n    }\n    fromJSON(serializedPaneview) {\n        this.clear();\n        const { views, size } = serializedPaneview;\n        const queue = [];\n        this.paneview = new Paneview(this.element, {\n            orientation: Orientation.VERTICAL,\n            descriptor: {\n                size,\n                views: views.map((view) => {\n                    const data = view.data;\n                    const body = createComponent(data.id, data.component, this.options.components || {}, this.options.frameworkComponents || {}, this.options.frameworkWrapper\n                        ? {\n                            createComponent: this.options.frameworkWrapper.body\n                                .createComponent,\n                        }\n                        : undefined);\n                    let header;\n                    if (data.headerComponent) {\n                        header = createComponent(data.id, data.headerComponent, this.options.headerComponents || {}, this.options.headerframeworkComponents || {}, this.options.frameworkWrapper\n                            ? {\n                                createComponent: this.options.frameworkWrapper.header\n                                    .createComponent,\n                            }\n                            : undefined);\n                    }\n                    else {\n                        header = new DefaultHeader();\n                    }\n                    const panel = new PaneFramework({\n                        id: data.id,\n                        component: data.component,\n                        headerComponent: data.headerComponent,\n                        header,\n                        body,\n                        orientation: Orientation.VERTICAL,\n                        isExpanded: !!view.expanded,\n                        disableDnd: !!this.options.disableDnd,\n                        accessor: this,\n                    });\n                    this.doAddPanel(panel);\n                    queue.push(() => {\n                        panel.init({\n                            params: data.params || {},\n                            minimumBodySize: view.minimumSize,\n                            maximumBodySize: view.maximumSize,\n                            title: data.title,\n                            isExpanded: !!view.expanded,\n                            containerApi: new PaneviewApi(this),\n                        });\n                        panel.orientation = this.paneview.orientation;\n                    });\n                    setTimeout(() => {\n                        // the original onDidAddView events are missed since they are fired before we can subcribe to them\n                        this._onDidAddView.fire(panel);\n                    }, 0);\n                    return { size: view.size, view: panel };\n                }),\n            },\n        });\n        this.layout(this.width, this.height);\n        queue.forEach((f) => f());\n        this._onDidLayoutfromJSON.fire();\n    }\n    clear() {\n        for (const [_, value] of this._viewDisposables.entries()) {\n            value.dispose();\n        }\n        this._viewDisposables.clear();\n        this.paneview.dispose();\n    }\n    doAddPanel(panel) {\n        const disposable = panel.onDidDrop((event) => {\n            this._onDidDrop.fire(event);\n        });\n        this._viewDisposables.set(panel.id, disposable);\n    }\n    doRemovePanel(panel) {\n        const disposable = this._viewDisposables.get(panel.id);\n        if (disposable) {\n            disposable.dispose();\n            this._viewDisposables.delete(panel.id);\n        }\n    }\n    dispose() {\n        super.dispose();\n        for (const [_, value] of this._viewDisposables.entries()) {\n            value.dispose();\n        }\n        this._viewDisposables.clear();\n        this.paneview.dispose();\n    }\n}\n","import { BasePanelView, } from '../gridview/basePanelView';\nimport { SplitviewPanelApiImpl } from '../api/splitviewPanelApi';\nimport { Orientation } from './core/splitview';\nimport { Emitter } from '../events';\nexport class SplitviewPanel extends BasePanelView {\n    constructor(id, componentName) {\n        super(id, componentName, new SplitviewPanelApiImpl(id));\n        this._evaluatedMinimumSize = 0;\n        this._evaluatedMaximumSize = Number.POSITIVE_INFINITY;\n        this._minimumSize = 0;\n        this._maximumSize = Number.POSITIVE_INFINITY;\n        this._snap = false;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this.api.initialize(this);\n        this.addDisposables(this._onDidChange, this.api.onVisibilityChange((event) => {\n            const { isVisible } = event;\n            const { accessor } = this._params;\n            accessor.setVisible(this, isVisible);\n        }), this.api.onActiveChange(() => {\n            const { accessor } = this._params;\n            accessor.setActive(this);\n        }), this.api.onDidConstraintsChangeInternal((event) => {\n            if (typeof event.minimumSize === 'number' ||\n                typeof event.minimumSize === 'function') {\n                this._minimumSize = event.minimumSize;\n            }\n            if (typeof event.maximumSize === 'number' ||\n                typeof event.maximumSize === 'function') {\n                this._maximumSize = event.maximumSize;\n            }\n            this.updateConstraints();\n        }), this.api.onDidSizeChange((event) => {\n            this._onDidChange.fire({ size: event.size });\n        }));\n    }\n    get priority() {\n        return this._priority;\n    }\n    set orientation(value) {\n        this._orientation = value;\n    }\n    get orientation() {\n        return this._orientation;\n    }\n    get minimumSize() {\n        const size = typeof this._minimumSize === 'function'\n            ? this._minimumSize()\n            : this._minimumSize;\n        if (size !== this._evaluatedMinimumSize) {\n            this._evaluatedMinimumSize = size;\n            this.updateConstraints();\n        }\n        return size;\n    }\n    get maximumSize() {\n        const size = typeof this._maximumSize === 'function'\n            ? this._maximumSize()\n            : this._maximumSize;\n        if (size !== this._evaluatedMaximumSize) {\n            this._evaluatedMaximumSize = size;\n            this.updateConstraints();\n        }\n        return size;\n    }\n    get snap() {\n        return this._snap;\n    }\n    setVisible(isVisible) {\n        this.api._onDidVisibilityChange.fire({ isVisible });\n    }\n    setActive(isActive) {\n        this.api._onDidActiveChange.fire({ isActive });\n    }\n    layout(size, orthogonalSize) {\n        const [width, height] = this.orientation === Orientation.HORIZONTAL\n            ? [size, orthogonalSize]\n            : [orthogonalSize, size];\n        super.layout(width, height);\n    }\n    init(parameters) {\n        super.init(parameters);\n        this._priority = parameters.priority;\n        if (parameters.minimumSize) {\n            this._minimumSize = parameters.minimumSize;\n        }\n        if (parameters.maximumSize) {\n            this._maximumSize = parameters.maximumSize;\n        }\n        if (parameters.snap) {\n            this._snap = parameters.snap;\n        }\n    }\n    toJSON() {\n        const maximum = (value) => value === Number.MAX_SAFE_INTEGER ||\n            value === Number.POSITIVE_INFINITY\n            ? undefined\n            : value;\n        const minimum = (value) => (value <= 0 ? undefined : value);\n        return Object.assign(Object.assign({}, super.toJSON()), { minimumSize: minimum(this.minimumSize), maximumSize: maximum(this.maximumSize) });\n    }\n    updateConstraints() {\n        this.api._onDidConstraintsChange.fire({\n            maximumSize: this._evaluatedMaximumSize,\n            minimumSize: this._evaluatedMinimumSize,\n        });\n    }\n}\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { sequentialNumberGenerator } from '../math';\n/**\n * This component is intended to interface between vanilla-js and React hence we need to be\n * creative in how we update props.\n * A ref of the component is exposed with an update method; which when called stores the props\n * as a ref within this component and forcefully triggers a re-render of the component using\n * the ref of props we just set on the renderered component as the props passed to the inner\n * component\n */\nconst ReactComponentBridge = (props, ref) => {\n    const [_, triggerRender] = React.useState();\n    const _props = React.useRef(props.componentProps);\n    React.useImperativeHandle(ref, () => ({\n        update: (componentProps) => {\n            _props.current = Object.assign(Object.assign({}, _props.current), componentProps);\n            /**\n             * setting a arbitrary piece of state within this component will\n             * trigger a re-render.\n             * we use this rather than updating through a prop since we can\n             * pass a ref into the vanilla-js world.\n             */\n            triggerRender(Date.now());\n        },\n    }), []);\n    return React.createElement(props.component, _props.current);\n};\nReactComponentBridge.displayName = 'DockviewReactJsBridge';\n/**\n * Since we are storing the React.Portal references in a rendered array they\n * require a key property like any other React element rendered in an array\n * to prevent excessive re-rendering\n */\nconst uniquePortalKeyGenerator = sequentialNumberGenerator();\nexport const ReactPartContext = React.createContext({});\nexport class ReactPart {\n    constructor(parent, portalStore, component, parameters, context) {\n        this.parent = parent;\n        this.portalStore = portalStore;\n        this.component = component;\n        this.parameters = parameters;\n        this.context = context;\n        this._initialProps = {};\n        this.disposed = false;\n        this.createPortal();\n    }\n    update(props) {\n        if (this.disposed) {\n            throw new Error('invalid operation: resource is already disposed');\n        }\n        if (!this.componentInstance) {\n            // if the component is yet to be mounted store the props\n            this._initialProps = Object.assign(Object.assign({}, this._initialProps), props);\n        }\n        else {\n            this.componentInstance.update(props);\n        }\n    }\n    createPortal() {\n        if (this.disposed) {\n            throw new Error('invalid operation: resource is already disposed');\n        }\n        if (typeof this.component !== 'function') {\n            /**\n             * we know this isn't a React.FunctionComponent so throw an error here.\n             * if we do not intercept this the React library will throw a very obsure error\n             * for the same reason, at least at this point we will emit a sensible stacktrace.\n             */\n            throw new Error('Invalid Operation. dockview only supports React Functional Components.');\n        }\n        const bridgeComponent = React.createElement(React.forwardRef(ReactComponentBridge), {\n            component: this\n                .component,\n            componentProps: this.parameters,\n            ref: (element) => {\n                this.componentInstance = element;\n                if (Object.keys(this._initialProps).length > 0) {\n                    this.componentInstance.update(this._initialProps);\n                    this._initialProps = {}; // don't keep a reference to the users object once no longer required\n                }\n            },\n        });\n        const node = this.context\n            ? React.createElement(ReactPartContext.Provider, { value: this.context }, bridgeComponent)\n            : bridgeComponent;\n        const portal = ReactDOM.createPortal(node, this.parent, uniquePortalKeyGenerator.next());\n        this.ref = {\n            portal,\n            disposable: this.portalStore.addPortal(portal),\n        };\n    }\n    dispose() {\n        var _a;\n        (_a = this.ref) === null || _a === void 0 ? void 0 : _a.disposable.dispose();\n        this.disposed = true;\n    }\n}\n/**\n * A React Hook that returns an array of portals to be rendered by the user of this hook\n * and a disposable function to add a portal. Calling dispose removes this portal from the\n * portal array\n */\nexport const usePortalsLifecycle = () => {\n    const [portals, setPortals] = React.useState([]);\n    React.useDebugValue(`Portal count: ${portals.length}`);\n    const addPortal = React.useCallback((portal) => {\n        setPortals((existingPortals) => [...existingPortals, portal]);\n        let disposed = false;\n        return {\n            dispose: () => {\n                if (disposed) {\n                    throw new Error('invalid operation: resource already disposed');\n                }\n                disposed = true;\n                setPortals((existingPortals) => existingPortals.filter((p) => p !== portal));\n            },\n        };\n    }, []);\n    return [portals, addPortal];\n};\n// it does the job...\nexport function isReactElement(element) {\n    return element === null || element === void 0 ? void 0 : element.type;\n}\n","import { ReactPart } from '../react';\nimport { Emitter } from '../../events';\nexport class ReactPanelContentPart {\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._onDidFocus = new Emitter();\n        this.onDidFocus = this._onDidFocus.event;\n        this._onDidBlur = new Emitter();\n        this.onDidBlur = this._onDidBlur.event;\n        this._element = document.createElement('div');\n        this._element.className = 'dockview-react-part';\n    }\n    get element() {\n        return this._element;\n    }\n    focus() {\n        // TODO\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            params: parameters.params,\n            api: parameters.api,\n            containerApi: parameters.containerApi,\n        });\n    }\n    toJSON() {\n        return {\n            id: this.id,\n        };\n    }\n    update(event) {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update(event.params);\n    }\n    updateParentGroup(group, _isPanelVisible) {\n        this._group = group;\n    }\n    layout(_width, _height) {\n        // noop\n    }\n    dispose() {\n        var _a;\n        this._onDidFocus.dispose();\n        this._onDidBlur.dispose();\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import { ReactPart } from '../react';\nimport { DEFAULT_TAB_IDENTIFIER } from '../../dockview/components/tab/defaultTab';\nexport class ReactPanelHeaderPart {\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._element = document.createElement('div');\n        this._element.className = 'dockview-react-part';\n    }\n    get element() {\n        return this._element;\n    }\n    focus() {\n        //noop\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            params: parameters.params,\n            api: parameters.api,\n            containerApi: parameters.containerApi,\n        });\n    }\n    update(event) {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update(event.params);\n    }\n    toJSON() {\n        if (this.id === DEFAULT_TAB_IDENTIFIER) {\n            return {};\n        }\n        return {\n            id: this.id,\n        };\n    }\n    layout(_width, _height) {\n        // noop - retrieval from api\n    }\n    updateParentGroup(_group, _isPanelVisible) {\n        // noop - retrieval from api\n    }\n    dispose() {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import { DockviewPanel } from '../dockview/dockviewPanel';\nimport { createComponent } from '../panel/componentFactory';\nimport { DockviewApi } from '../api/component.api';\nimport { DefaultTab } from '../dockview/components/tab/defaultTab';\nimport { DefaultGroupPanelView } from '../dockview/defaultGroupPanelView';\nexport class ReactPanelDeserialzier {\n    constructor(layout) {\n        this.layout = layout;\n    }\n    fromJSON(panelData, group) {\n        var _a, _b, _c, _d;\n        const panelId = panelData.id;\n        const params = panelData.params;\n        const title = panelData.title;\n        const viewData = panelData.view;\n        let tab;\n        if ((_a = viewData.tab) === null || _a === void 0 ? void 0 : _a.id) {\n            tab = createComponent(viewData.tab.id, viewData.tab.id, this.layout.options.tabComponents, this.layout.options.frameworkTabComponents, (_b = this.layout.options.frameworkComponentFactory) === null || _b === void 0 ? void 0 : _b.tab, () => new DefaultTab());\n        }\n        else if (this.layout.options.defaultTabComponent) {\n            tab = createComponent(this.layout.options.defaultTabComponent, this.layout.options.defaultTabComponent, this.layout.options.tabComponents, this.layout.options.frameworkTabComponents, (_c = this.layout.options.frameworkComponentFactory) === null || _c === void 0 ? void 0 : _c.tab, () => new DefaultTab());\n        }\n        else {\n            tab = new DefaultTab();\n        }\n        const view = new DefaultGroupPanelView({\n            content: createComponent(viewData.content.id, viewData.content.id, this.layout.options.components, this.layout.options.frameworkComponents, (_d = this.layout.options.frameworkComponentFactory) === null || _d === void 0 ? void 0 : _d.content),\n            tab,\n        });\n        const panel = new DockviewPanel(panelId, this.layout, new DockviewApi(this.layout), group);\n        panel.init({\n            view,\n            title,\n            params: params || {},\n        });\n        return panel;\n    }\n}\n","import { ReactPart } from '../react';\nexport class ReactWatermarkPart {\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._groupRef = {\n            value: undefined,\n        };\n        this._element = document.createElement('div');\n        this._element.className = 'dockview-react-part';\n    }\n    get element() {\n        return this._element;\n    }\n    init(parameters) {\n        this.parameters = parameters;\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            params: parameters.params,\n            api: parameters.api,\n            containerApi: parameters.containerApi,\n            close: () => {\n                if (this._groupRef.value) {\n                    parameters.containerApi.removeGroup(this._groupRef.value);\n                }\n            },\n        });\n    }\n    focus() {\n        // noop\n    }\n    update(params) {\n        var _a, _b;\n        if (this.parameters) {\n            this.parameters.params = params.params;\n        }\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update({ params: ((_b = this.parameters) === null || _b === void 0 ? void 0 : _b.params) || {} });\n    }\n    toJSON() {\n        return {\n            id: this.id,\n        };\n    }\n    layout(_width, _height) {\n        // noop - retrieval from api\n    }\n    updateParentGroup(group, _isPanelVisible) {\n        // noop - retrieval from api\n        this._groupRef.value = group;\n    }\n    dispose() {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import { ReactPart } from '../react';\nimport { CompositeDisposable, MutableDisposable, } from '../../lifecycle';\nexport class ReactGroupControlsRendererPart {\n    constructor(component, reactPortalStore, _group) {\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._group = _group;\n        this.mutableDisposable = new MutableDisposable();\n        this._element = document.createElement('div');\n        this._element.className = 'dockview-react-part';\n    }\n    get element() {\n        return this._element;\n    }\n    get part() {\n        return this._part;\n    }\n    get group() {\n        return this._group;\n    }\n    focus() {\n        // TODO\n    }\n    init(parameters) {\n        this.mutableDisposable.value = new CompositeDisposable(this._group.model.onDidAddPanel(() => {\n            this.updatePanels();\n        }), this._group.model.onDidRemovePanel(() => {\n            this.updatePanels();\n        }), this._group.model.onDidActivePanelChange(() => {\n            this.updateActivePanel();\n        }), parameters.api.onDidActiveChange(() => {\n            this.updateGroupActive();\n        }));\n        this._part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            api: parameters.api,\n            containerApi: parameters.containerApi,\n            panels: this._group.model.panels,\n            activePanel: this._group.model.activePanel,\n            isGroupActive: this._group.api.isActive,\n        });\n    }\n    update(event) {\n        var _a;\n        (_a = this._part) === null || _a === void 0 ? void 0 : _a.update(event.params);\n    }\n    dispose() {\n        var _a;\n        this.mutableDisposable.dispose();\n        (_a = this._part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n    updatePanels() {\n        this.update({ params: { panels: this._group.model.panels } });\n    }\n    updateActivePanel() {\n        this.update({\n            params: {\n                activePanel: this._group.model.activePanel,\n            },\n        });\n    }\n    updateGroupActive() {\n        this.update({\n            params: {\n                isGroupActive: this._group.api.isActive,\n            },\n        });\n    }\n}\n","import * as React from 'react';\nimport { DockviewComponent, } from '../../dockview/dockviewComponent';\nimport { ReactPanelContentPart } from './reactContentPart';\nimport { ReactPanelHeaderPart } from './reactHeaderPart';\nimport { ReactPanelDeserialzier } from '../deserializer';\nimport { usePortalsLifecycle } from '../react';\nimport { DockviewApi } from '../../api/component.api';\nimport { ReactWatermarkPart } from './reactWatermarkPart';\nimport { watchElementResize } from '../../dom';\nimport { ReactGroupControlsRendererPart, } from './groupControlsRenderer';\nimport { DEFAULT_TAB_IDENTIFIER } from '../../dockview/components/tab/defaultTab';\nfunction createGroupControlElement(component, store) {\n    return component\n        ? (groupPanel) => {\n            return new ReactGroupControlsRendererPart(component, store, groupPanel);\n        }\n        : undefined;\n}\nexport const DockviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const dockviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    React.useEffect(() => {\n        if (props.disableAutoResizing) {\n            return () => {\n                //\n            };\n        }\n        const watcher = watchElementResize(domRef.current, (entry) => {\n            var _a;\n            const { width, height } = entry.contentRect;\n            (_a = dockviewRef.current) === null || _a === void 0 ? void 0 : _a.layout(width, height);\n        });\n        return () => {\n            watcher.dispose();\n        };\n    }, [props.disableAutoResizing]);\n    React.useEffect(() => {\n        var _a;\n        const factory = {\n            content: {\n                createComponent: (_id, componentId, component) => {\n                    return new ReactPanelContentPart(componentId, component, {\n                        addPortal,\n                    });\n                },\n            },\n            tab: {\n                createComponent: (_id, componentId, component) => {\n                    return new ReactPanelHeaderPart(componentId, component, {\n                        addPortal,\n                    });\n                },\n            },\n            watermark: {\n                createComponent: (_id, componentId, component) => {\n                    return new ReactWatermarkPart(componentId, component, {\n                        addPortal,\n                    });\n                },\n            },\n        };\n        const element = document.createElement('div');\n        const dockview = new DockviewComponent(element, {\n            frameworkComponentFactory: factory,\n            frameworkComponents: props.components,\n            frameworkTabComponents: Object.assign(Object.assign({}, (props.tabComponents || {})), { [DEFAULT_TAB_IDENTIFIER]: props.defaultTabComponent }),\n            tabHeight: props.tabHeight,\n            watermarkFrameworkComponent: props.watermarkComponent,\n            defaultTabComponent: DEFAULT_TAB_IDENTIFIER,\n            styles: props.hideBorders\n                ? { separatorBorder: 'transparent' }\n                : undefined,\n            showDndOverlay: props.showDndOverlay,\n            createGroupControlElement: createGroupControlElement(props.groupControlComponent, { addPortal }),\n            singleTabMode: props.singleTabMode,\n        });\n        (_a = domRef.current) === null || _a === void 0 ? void 0 : _a.appendChild(dockview.element);\n        dockview.deserializer = new ReactPanelDeserialzier(dockview);\n        const { clientWidth, clientHeight } = domRef.current;\n        dockview.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api: new DockviewApi(dockview) });\n        }\n        dockviewRef.current = dockview;\n        return () => {\n            dockview.dispose();\n            element.remove();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const disposable = dockviewRef.current.onDidDrop((event) => {\n            if (props.onDidDrop) {\n                props.onDidDrop(event);\n            }\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.onDidDrop]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            frameworkComponents: props.components,\n        });\n    }, [props.components]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            watermarkFrameworkComponent: props.watermarkComponent,\n        });\n    }, [props.watermarkComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            showDndOverlay: props.showDndOverlay,\n        });\n    }, [props.showDndOverlay]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            frameworkTabComponents: props.tabComponents,\n        });\n    }, [props.tabComponents]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            defaultTabComponent: DEFAULT_TAB_IDENTIFIER,\n            frameworkTabComponents: Object.assign(Object.assign({}, (props.tabComponents || {})), { [DEFAULT_TAB_IDENTIFIER]: props.defaultTabComponent }),\n        });\n    }, [props.defaultTabComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createGroupControlElement: createGroupControlElement(props.groupControlComponent, { addPortal }),\n        });\n    }, [props.groupControlComponent]);\n    return (React.createElement(\"div\", { className: props.className, style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nDockviewReact.displayName = 'DockviewComponent';\n","import * as React from 'react';\nexport const CloseButton = () => (React.createElement(\"svg\", { height: \"11\", width: \"11\", viewBox: \"0 0 28 28\", \"aria-hidden\": 'false', focusable: false, className: \"dockview-svg\" },\n    React.createElement(\"path\", { d: \"M2.1 27.3L0 25.2L11.55 13.65L0 2.1L2.1 0L13.65 11.55L25.2 0L27.3 2.1L15.75 13.65L27.3 25.2L25.2 27.3L13.65 15.75L2.1 27.3Z\" })));\nexport const ExpandMore = () => {\n    return (React.createElement(\"svg\", { width: \"11\", height: \"11\", viewBox: \"0 0 24 15\", \"aria-hidden\": 'false', focusable: false, className: \"dockview-svg\" },\n        React.createElement(\"path\", { d: \"M12 14.15L0 2.15L2.15 0L12 9.9L21.85 0.0499992L24 2.2L12 14.15Z\" })));\n};\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from 'react';\nimport { CloseButton } from '../svg';\nexport const DockviewDefaultTab = (_a) => {\n    var { api, containerApi: _containerApi, params: _params } = _a, rest = __rest(_a, [\"api\", \"containerApi\", \"params\"]);\n    const onClose = React.useCallback((event) => {\n        event.stopPropagation();\n        api.close();\n    }, [api]);\n    const onClick = React.useCallback((event) => {\n        api.setActive();\n        if (rest.onClick) {\n            rest.onClick(event);\n        }\n    }, [api, rest.onClick]);\n    const iconClassname = React.useMemo(() => {\n        const cn = ['dockview-react-tab-action'];\n        return cn.join(',');\n    }, []);\n    return (React.createElement(\"div\", Object.assign({}, rest, { onClick: onClick, className: \"dockview-react-tab\" }),\n        React.createElement(\"span\", { className: \"dockview-react-tab-title\" }, api.title),\n        React.createElement(\"div\", { className: iconClassname, onClick: onClose },\n            React.createElement(CloseButton, null))));\n};\n","import { SplitviewApi } from '../../api/component.api';\nimport { SplitviewPanel } from '../../splitview/splitviewPanel';\nimport { ReactPart } from '../react';\nexport class ReactPanelView extends SplitviewPanel {\n    constructor(id, component, reactComponent, reactPortalStore) {\n        super(id, component);\n        this.reactComponent = reactComponent;\n        this.reactPortalStore = reactPortalStore;\n    }\n    getComponent() {\n        var _a;\n        return new ReactPart(this.element, this.reactPortalStore, this.reactComponent, {\n            params: ((_a = this._params) === null || _a === void 0 ? void 0 : _a.params) || {},\n            api: this.api,\n            containerApi: new SplitviewApi(this._params.accessor),\n        });\n    }\n}\n","import * as React from 'react';\nimport { SplitviewApi } from '../../api/component.api';\nimport { SplitviewComponent, } from '../../splitview/splitviewComponent';\nimport { Orientation } from '../../splitview/core/splitview';\nimport { usePortalsLifecycle } from '../react';\nimport { ReactPanelView } from './view';\nimport { watchElementResize } from '../../dom';\nexport const SplitviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const splitviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    React.useEffect(() => {\n        if (props.disableAutoResizing) {\n            return () => {\n                //\n            };\n        }\n        const watcher = watchElementResize(domRef.current, (entry) => {\n            var _a;\n            const { width, height } = entry.contentRect;\n            (_a = splitviewRef.current) === null || _a === void 0 ? void 0 : _a.layout(width, height);\n        });\n        return () => {\n            watcher.dispose();\n        };\n    }, [props.disableAutoResizing]);\n    React.useEffect(() => {\n        const splitview = new SplitviewComponent(domRef.current, {\n            orientation: props.orientation || Orientation.HORIZONTAL,\n            frameworkComponents: props.components,\n            frameworkWrapper: {\n                createComponent: (id, componentId, component) => {\n                    return new ReactPanelView(id, componentId, component, {\n                        addPortal,\n                    });\n                },\n            },\n            proportionalLayout: typeof props.proportionalLayout === 'boolean'\n                ? props.proportionalLayout\n                : true,\n            styles: props.hideBorders\n                ? { separatorBorder: 'transparent' }\n                : undefined,\n        });\n        const { clientWidth, clientHeight } = domRef.current;\n        splitview.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api: new SplitviewApi(splitview) });\n        }\n        splitviewRef.current = splitview;\n        return () => {\n            splitview.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!splitviewRef.current) {\n            return;\n        }\n        splitviewRef.current.updateOptions({\n            frameworkComponents: props.components,\n        });\n    }, [props.components]);\n    return (React.createElement(\"div\", { className: props.className, style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nSplitviewReact.displayName = 'SplitviewComponent';\n","import { GridviewApi } from '../../api/component.api';\nimport { GridviewPanelApiImpl } from '../../api/gridviewPanelApi';\nimport { GridviewPanel, } from '../../gridview/gridviewPanel';\nimport { ReactPart } from '../react';\nexport class ReactGridPanelView extends GridviewPanel {\n    constructor(id, component, reactComponent, reactPortalStore) {\n        super(id, component, new GridviewPanelApiImpl(id));\n        this.reactComponent = reactComponent;\n        this.reactPortalStore = reactPortalStore;\n    }\n    getComponent() {\n        var _a;\n        return new ReactPart(this.element, this.reactPortalStore, this.reactComponent, {\n            params: ((_a = this._params) === null || _a === void 0 ? void 0 : _a.params) || {},\n            api: this.api,\n            containerApi: new GridviewApi(this._params.accessor),\n        });\n    }\n}\n","import * as React from 'react';\nimport { GridviewComponent, } from '../../gridview/gridviewComponent';\nimport { Orientation } from '../../splitview/core/splitview';\nimport { ReactGridPanelView } from './view';\nimport { usePortalsLifecycle } from '../react';\nimport { GridviewApi } from '../../api/component.api';\nimport { watchElementResize } from '../../dom';\nexport const GridviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const gridviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    React.useEffect(() => {\n        if (props.disableAutoResizing) {\n            return () => {\n                //\n            };\n        }\n        const watcher = watchElementResize(domRef.current, (entry) => {\n            var _a;\n            const { width, height } = entry.contentRect;\n            (_a = gridviewRef.current) === null || _a === void 0 ? void 0 : _a.layout(width, height);\n        });\n        return () => {\n            watcher.dispose();\n        };\n    }, [props.disableAutoResizing]);\n    React.useEffect(() => {\n        var _a;\n        const element = document.createElement('div');\n        const gridview = new GridviewComponent(element, {\n            proportionalLayout: typeof props.proportionalLayout === 'boolean'\n                ? props.proportionalLayout\n                : true,\n            orientation: props.orientation || Orientation.HORIZONTAL,\n            frameworkComponents: props.components,\n            frameworkComponentFactory: {\n                createComponent: (id, componentId, component) => {\n                    return new ReactGridPanelView(id, componentId, component, {\n                        addPortal,\n                    });\n                },\n            },\n            styles: props.hideBorders\n                ? { separatorBorder: 'transparent' }\n                : undefined,\n        });\n        (_a = domRef.current) === null || _a === void 0 ? void 0 : _a.appendChild(gridview.element);\n        const { clientWidth, clientHeight } = domRef.current;\n        gridview.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api: new GridviewApi(gridview) });\n        }\n        gridviewRef.current = gridview;\n        return () => {\n            gridview.dispose();\n            element.remove();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!gridviewRef.current) {\n            return;\n        }\n        gridviewRef.current.updateOptions({\n            frameworkComponents: props.components,\n        });\n    }, [props.components]);\n    return (React.createElement(\"div\", { className: props.className, style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nGridviewReact.displayName = 'GridviewComponent';\n","import { ReactPart } from '../react';\nexport class PanePanelSection {\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._element = document.createElement('div');\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    get element() {\n        return this._element;\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            params: parameters.params,\n            api: parameters.api,\n            title: parameters.title,\n            containerApi: parameters.containerApi,\n        });\n    }\n    toJSON() {\n        return {\n            id: this.id,\n        };\n    }\n    update(params) {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update(params.params);\n    }\n    dispose() {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import * as React from 'react';\nimport { PaneviewComponent, } from '../../paneview/paneviewComponent';\nimport { usePortalsLifecycle } from '../react';\nimport { PaneviewApi } from '../../api/component.api';\nimport { PanePanelSection } from './view';\nimport { watchElementResize } from '../../dom';\nexport const PaneviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const paneviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    React.useEffect(() => {\n        if (props.disableAutoResizing) {\n            return () => {\n                //\n            };\n        }\n        const watcher = watchElementResize(domRef.current, (entry) => {\n            var _a;\n            const { width, height } = entry.contentRect;\n            (_a = paneviewRef.current) === null || _a === void 0 ? void 0 : _a.layout(width, height);\n        });\n        return () => {\n            watcher.dispose();\n        };\n    }, [props.disableAutoResizing]);\n    React.useEffect(() => {\n        const createComponent = (id, _componentId, component) => new PanePanelSection(id, component, {\n            addPortal,\n        });\n        const paneview = new PaneviewComponent(domRef.current, {\n            frameworkComponents: props.components,\n            components: {},\n            headerComponents: {},\n            disableDnd: props.disableDnd,\n            headerframeworkComponents: props.headerComponents,\n            frameworkWrapper: {\n                header: {\n                    createComponent,\n                },\n                body: {\n                    createComponent,\n                },\n            },\n            showDndOverlay: props.showDndOverlay,\n        });\n        const api = new PaneviewApi(paneview);\n        const { clientWidth, clientHeight } = domRef.current;\n        paneview.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api });\n        }\n        paneviewRef.current = paneview;\n        return () => {\n            paneview.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return;\n        }\n        paneviewRef.current.updateOptions({\n            frameworkComponents: props.components,\n        });\n    }, [props.components]);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return;\n        }\n        paneviewRef.current.updateOptions({\n            headerframeworkComponents: props.headerComponents,\n        });\n    }, [props.headerComponents]);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return () => {\n                //\n            };\n        }\n        const paneview = paneviewRef.current;\n        const disposable = paneview.onDidDrop((event) => {\n            if (props.onDidDrop) {\n                props.onDidDrop(Object.assign(Object.assign({}, event), { api: new PaneviewApi(paneview) }));\n            }\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.onDidDrop]);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return;\n        }\n        paneviewRef.current.updateOptions({\n            showDndOverlay: props.showDndOverlay,\n        });\n    }, [props.showDndOverlay]);\n    return (React.createElement(\"div\", { className: props.className, style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nPaneviewReact.displayName = 'PaneviewComponent';\n"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","sourceSymbolKeys","prototype","propertyIsEnumerable","call","MDXContext","useMDXComponents","components","contextComponents","allComponents","MDXProvider","props","Provider","children","DEFAULTS","inlineCode","wrapper","_ref","MDXCreateElement","ref","propComponents","mdxType","originalType","parentName","etc","type","Component","concat","createElement","args","argsLength","createElementArgArray","Array","newProps","hasOwnProperty","displayName","TransferObject","constructor","PanelTransfer","viewId","groupId","panelId","super","this","PaneTransfer","paneId","LocalSelectionTransfer","INSTANCE","hasData","proto","clearData","undefined","data","getData","setData","getPanelData","panelTransfer","getInstance","getPaneData","paneTransfer","Event","Disposable","any","listener","disposables","map","child","dispose","d","Emitter","options","_listeners","_disposed","event","_event","_a","replay","_last","index","splice","fire","e","addDisposableWindowListener","element","addEventListener","removeEventListener","addDisposableListener","TickDelayedEvent","_onFired","onEvent","timer","clearTimeout","setTimeout","NONE","CompositeDisposable","addDisposables","arg","MutableDisposable","_disposable","disposable","watchElementResize","cb","observer","ResizeObserver","entires","firstEntry","observe","unobserve","disconnect","removeClasses","classes","classname","classList","contains","remove","addClasses","add","toggleClass","className","isToggled","hasClass","isAncestor","testChild","testAncestor","parentNode","getElementsByTagName","tag","slice","document","trackFocus","FocusTracker","_onDidFocus","onDidFocus","_onDidBlur","onDidBlur","hasFocus","activeElement","loosingFocus","onFocus","onBlur","window","_refreshStateHandler","HTMLElement","refreshState","clamp","min","max","Error","Math","sequentialNumberGenerator","next","toString","tail","arr","sequenceEquals","arr1","arr2","pushToStart","unshift","pushToEnd","range","from","to","result","ViewItem","container","view","size","_cachedVisibleSize","_size","cachedVisibleSize","visible","setVisible","viewMinimumSize","viewMaximumSize","toggle","minimumSize","maximumSize","priority","snap","enabled","style","pointerEvents","Orientation","SashState","LayoutPriority","Sizing","Distribute","Split","Invisible","Splitview","views","sashes","_orthogonalSize","contentSize","_proportions","_onDidSashEnd","onDidSashEnd","_onDidAddView","onDidAddView","_onDidRemoveView","onDidRemoveView","_startSnappingEnabled","_endSnappingEnabled","resize","delta","sizes","lowPriorityIndexes","highPriorityIndexes","overloadMinDelta","overloadMaxDelta","snapBefore","snapAfter","x","Number","NEGATIVE_INFINITY","POSITIVE_INFINITY","upIndexes","downIndexes","upItems","upSizes","downItems","downSizes","minDeltaUp","reduce","_","maxDeltaUp","maxDeltaDown","minDeltaDown","minDelta","maxDelta","snapped","snapView","limitDelta","actualDelta","deltaUp","item","viewDelta","deltaDown","_orientation","orientation","createContainer","proportionalLayout","viewContainer","createViewContainer","sashContainer","createSashContainer","appendChild","styles","descriptor","viewDescriptor","sizing","addView","r","saveProportions","orthogonalSize","proportions","tmp","HORIZONTAL","startSnappingEnabled","updateSashEnablement","endSnappingEnabled","separatorBorder","removeProperty","setProperty","isViewVisible","setViewVisible","viewItem","distributeEmptySpace","layoutViews","getViewSize","resizeView","indexes","Low","High","round","relayout","getViews","onDidChange","skipLayout","viewSize","newSize","removeChild","insertBefore","sash","onStart","iframes","iframe","start","clientX","clientY","sashIndex","array","fn","firstIndex","s","snapBeforeIndex","findFirstSnapIndex","snapAfterIndex","snappedViewItem","halfSize","floor","mousemove","mousemoveEvent","end","sashItem","distributeViewSizes","flexibleViewItems","flexibleSize","removeView","getViewCachedVisibleSize","moveView","layout","previousSize","lowPriorityIndex","emptyDelta","sum","offset","left","top","VERTICAL","width","height","previous","collapsesDown","expandsDown","reverseViews","reverse","collapsesUp","expandsUp","position","snappedBefore","snappedAfter","updateSash","MINIMUM","MAXIMUM","DISABLED","ENABLED","state","orientationClassname","Paneview","paneItems","skipAnimation","_onDidChange","splitview","getPanes","pane","onDidChangeExpansionState","setupAnimation","paneItem","addPane","removePane","skipDispose","animationTimer","LeafNode","minimumWidth","maximumWidth","minimumHeight","maximumHeight","minimumOrthogonalSize","maximumOrthogonalSize","BranchNode","childDescriptors","_childrenDisposable","childDescriptor","node","c","setupChildrenEvents","Normal","priorities","some","p","isChildVisible","setChildVisible","moveChild","_removeChild","_addChild","getChildSize","resizeChild","addChild","getChildCachedVisibleSize","findLeaf","candiateNode","last","flipNode","orthogonal","totalSize","childSize","getGridLocation","parentElement","test","el","firstElementChild","lastElementChild","nextElementSibling","indexInParent","getRelativeLocation","rootOrientation","location","direction","getLocationOrientation","directionOrientation","getDirectionOrientation","rest","_index","serializeBranchNode","box","isGridBranchNode","toJSON","Gridview","root","_root","serialize","getView","clear","deserialize","json","deserializer","_deserialize","_deserializeNode","isRoot","serializedChild","fromJSON","oldRoot","insertOrthogonalSplitviewAtRoot","childReference","progmaticSelect","getNode","_getViews","nodeCachedVisibleSize","path","n","l","parent","parentLocation","pathToParent","grandParent","parentIndex","__","newSiblingSize","newSiblingCachedVisibleSize","newParent","newSibling","sibling","isSiblingVisible","siblingSizing","SplitviewApi","component","panels","onDidLayoutFromJSON","onDidLayoutChange","updateOptions","removePanel","panel","focus","getPanel","id","addPanel","movePanel","PaneviewApi","onDidDrop","emitter","assign","api","GridviewApi","onDidAddPanel","onDidAddGroup","onDidRemovePanel","onDidRemoveGroup","onDidActivePanelChange","onDidActiveGroupChange","groups","force","DockviewApi","totalPanels","activePanel","activeGroup","getTabHeight","tabHeight","setTabHeight","getGroupPanel","addGroup","moveToNext","moveToPrevious","closeAllGroups","removeGroup","group","getGroup","DragAndDropObserver","callbacks","registerListeners","onDragEnter","preventDefault","onDragOver","onDragLeave","onDragEnd","onDrop","directionToPosition","Droptarget","_onDrop","acceptedTargetZonesSet","Set","acceptedTargetZones","clientWidth","clientHeight","rect","currentTarget","getBoundingClientRect","y","quadrant","calculateQuadrant","canDisplayOverlay","overlay","_state","append","toggleClasses","setState","removeDropTarget","stopPropagation","nativeEvent","_b","_c","_d","isSmallX","isSmallY","isLeft","isRight","isTop","isBottom","rightClass","leftClass","topClass","bottomClass","overlayModel","translate","transform","overlayType","_e","_f","isPercentage","activationSize","maybeNumber","fallback","threshold","xp","yp","has","calculateQuadrantAsPercentage","calculateQuadrantAsPixels","ContentContainer","_element","tabIndex","show","display","hide","openPanel","content","_width","_height","closePanel","DockviewDropTargets","DragHandler","_onDragStart","onDragStart","configure","dataTransfer","effectAllowed","Tab","accessor","_onChanged","onChanged","_onDropped","draggable","defaultPrevented","droptarget","locked","model","setActive","isActive","setContent","part","GroupDragHandler","accessorId","getComputedStyle","bgColor","getPropertyValue","color","ghostElement","backgroundColor","padding","fontSize","lineHeight","borderRadius","textContent","body","setDragImage","addGhostImage","VoidContainer","doSetGroupActive","handler","voidDropTarget","Panel","TabsContainer","tabs","selectedIndex","_hidden","singleTabMode","actionContainer","tabContainer","voidContainer","button","hidden","setActionElement","actions","tab","at","findIndex","_isGroupActive","addTab","delete","tabToRemove","setActivePanel","isActivePanel","find","tabToAdd","alreadyFocused","isContentFocused","skipFocus","Groupview","groupPanel","_locked","mostRecentlyUsed","_panels","_onMove","onMove","_onDidDrop","_onDidAddPanel","_onDidRemovePanel","_onDidActivePanelChange","tabsContainer","contentContainer","dropTarget","header","hideHeader","handleDropEvent","_activePanel","isEmpty","MAX_SAFE_INTEGER","hasWatermark","watermark","initialize","doAddPanel","updateContainer","createGroupControlElement","_control","init","containerApi","activeView","normalizedIndex","suppressRoll","containsPanel","includes","_params","update","skipSetPanelActive","skipSetGroupActive","updateParentGroup","doSetActivePanel","groupItemOrId","panelToRemove","_removePanel","closeAllPanels","arrPanelCpy","doClose","isPanelActive","updateActions","isGroupActive","doRemovePanel","nextPanel","skipSetActive","hasExistingPanel","updateMru","createWatermarkComponent","params","title","showDndOverlay","itemId","nextLayoutId","toTarget","BaseGrid","_id","_groups","Map","_onDidLayoutChange","_onDidRemoveGroup","_onDidAddGroup","_onDidActiveGroupChange","_bufferOnDidLayoutChange","gridview","values","_activeGroup","isVisible","doAddGroup","doRemoveGroup","get","skipActive","forceResize","PanelApiImpl","_isFocused","_isActive","_isVisible","panelUpdatesDisposable","_onDidDimensionChange","onDidDimensionsChange","_onDidChangeFocus","onDidFocusChange","_onFocusEvent","onFocusEvent","_onDidVisibilityChange","onDidVisibilityChange","_onVisibilityChange","onVisibilityChange","_onDidActiveChange","onDidActiveChange","_onActiveChange","onActiveChange","_onUpdateParameters","onUpdateParameters","isFocused","parameters","updateParameters","GridviewPanelApiImpl","_onDidConstraintsChangeInternal","onDidConstraintsChangeInternal","_onDidConstraintsChange","onDidConstraintsChange","_onDidSizeChange","onDidSizeChange","setConstraints","setSize","DockviewPanelApiImpl","_onDidTitleChange","onDidTitleChange","_onDidGroupChange","onDidGroupChange","_group","isOldGroupActive","setTitle","close","DockviewPanel","mutableDisposable","_title","_view","isPanelVisible","ActionContainer","_list","createSvgElementFromPath","svg","createElementNS","setAttributeNS","viewbox","createCloseButton","Watermark","emptySpace","flexGrow","closeAnchor","ev","render","_visible","isOneGroup","createComponent","componentName","frameworkComponents","createFrameworkComponent","FrameworkComponent","DEFAULT_TAB_IDENTIFIER","DefaultTab","_isPanelVisible","_content","_actionContainer","action","changed","BasePanelView","outline","overflow","getComponent","GridviewPanel","_evaluatedMinimumWidth","_evaluatedMaximumWidth","_evaluatedMinimumHeight","_evaluatedMaximumHeight","_minimumWidth","_minimumHeight","_maximumWidth","_maximumHeight","_snap","_priority","updateConstraints","maximum","minimum","GroupviewApi","GroupPanel","_model","DefaultGroupPanelView","renderers","_tab","DockviewComponent","nextGroupId","_onDidLayoutFromJSON","_options","frameworkTabComponents","tabComponents","watermarkComponent","watermarkFrameworkComponent","Edge","moveGroupOrPanel","orthogonalize","_api","flatMap","_deserializer","createGroupAtLocation","hasOrientationChanged","includePanel","grid","collection","createGroup","hasActiveGroup","hasActivePanel","entry","entries","referenceGroup","referencePanel","findGroup","isPanelOptionsWithGroup","createPanel","relativeLocation","removeEmptyGroup","frameworkComponentFactory","isGroupOptionsWithGroup","sourceGroup","referenceLocation","targetLocation","targetParentLocation","sourceLocation","sourceParentLocation","targetGroup","updatedReferenceLocation","groupItem","dropLocation","moveGroup","isGroupAlreadyFocused","console","warn","set","createContentComponent","createTabComponent","tabComponent","defaultTabComponent","GridviewComponent","_onDidLayoutfromJSON","_key","serializedGridview","queue","registerPanel","f","removedPanel","reference","SplitviewComponent","_splitview","v","frameworkWrapper","doAddView","serializedSplitview","SplitviewPanelApiImpl","PaneviewPanelApiImpl","_onDidExpansionChange","onDidExpansionChange","_onMouseEnter","onMouseEnter","_onMouseLeave","onMouseLeave","_pane","setExpanded","isExpanded","PaneviewPanel","headerComponent","isHeaderVisible","_onDidChangeExpansionState","headerSize","_minimumBodySize","_maximumBodySize","_isExpanded","expandedSize","_headerVisible","isPanelExpanded","renderOnce","minimumBodySize","maximumBodySize","headerVisible","expanded","bodyPart","getBodyComponent","headerPart","getHeaderComponent","minHeight","maxHeight","DraggablePaneviewPanel","disableDnd","initDragFeatures","existingPanel","allPanels","fromIndex","toIndex","DefaultHeader","_expandedIcon","_collapsedIcon","apiRef","_expander","updateIcon","PaneFramework","PaneviewComponent","_viewDisposables","paneview","_paneview","headerComponents","headerframeworkComponents","serializedPaneview","SplitviewPanel","_evaluatedMinimumSize","_evaluatedMaximumSize","_minimumSize","_maximumSize","ReactComponentBridge","triggerRender","React","_props","componentProps","current","Date","now","uniquePortalKeyGenerator","ReactPartContext","ReactPart","portalStore","context","_initialProps","disposed","createPortal","componentInstance","bridgeComponent","portal","ReactDOM","addPortal","usePortalsLifecycle","portals","setPortals","existingPortals","ReactPanelContentPart","reactPortalStore","ReactPanelHeaderPart","ReactPanelDeserialzier","panelData","viewData","ReactWatermarkPart","_groupRef","ReactGroupControlsRendererPart","_part","updatePanels","updateActivePanel","updateGroupActive","store","DockviewReact","domRef","dockviewRef","disableAutoResizing","watcher","contentRect","factory","componentId","dockview","hideBorders","groupControlComponent","onReady","CloseButton","viewBox","focusable","__rest","t","DockviewDefaultTab","_containerApi","onClose","onClick","iconClassname","join","ReactPanelView","reactComponent","SplitviewReact","splitviewRef","ReactGridPanelView","GridviewReact","gridviewRef","PanePanelSection","PaneviewReact","paneviewRef","_componentId"],"sourceRoot":""}