{"version":3,"file":"assets/js/common.5a8dc74d.js","mappings":"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","sources":["webpack://dockview-docs/../../node_modules/@mdx-js/react/dist/esm.js","webpack://dockview-docs/../dockview-core/dist/esm/events.js","webpack://dockview-docs/../dockview-core/dist/esm/lifecycle.js","webpack://dockview-docs/../dockview-core/dist/esm/dom.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/dataTransfer.js","webpack://dockview-docs/../dockview-core/dist/esm/math.js","webpack://dockview-docs/../dockview-core/dist/esm/array.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/core/viewItem.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/core/splitview.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/paneview.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/leafNode.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/branchNode.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/gridview.js","webpack://dockview-docs/../dockview-core/dist/esm/api/component.api.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/dnd.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/droptarget.js","webpack://dockview-docs/../dockview-core/dist/esm/types.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/panel/content.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/types.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/abstractDragHandler.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/tab/tab.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/groupDragHandler.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/ghost.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/titlebar/voidContainer.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/titlebar/tabsContainer.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewGroupPanelModel.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/baseComponentGridview.js","webpack://dockview-docs/../dockview-core/dist/esm/api/panelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/api/splitviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/api/paneviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/basePanelView.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/paneviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/draggablePaneviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/api/gridviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/gridviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewGroupPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/api/dockviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/svg.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/tab/defaultTab.js","webpack://dockview-docs/../dockview-core/dist/esm/panel/componentFactory.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewPanelModel.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/deserializer.js","webpack://dockview-docs/../dockview-core/dist/esm/actionbar/actionsContainer.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/watermark/watermark.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/options.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/gridviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/splitviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/defaultPaneviewHeader.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/paneviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/splitviewPanel.js","webpack://dockview-docs/../dockview/dist/esm/react.js","webpack://dockview-docs/../dockview/dist/esm/dockview/reactContentPart.js","webpack://dockview-docs/../dockview/dist/esm/dockview/reactHeaderPart.js","webpack://dockview-docs/../dockview/dist/esm/dockview/reactWatermarkPart.js","webpack://dockview-docs/../dockview/dist/esm/dockview/groupControlsRenderer.js","webpack://dockview-docs/../dockview/dist/esm/dockview/dockview.js","webpack://dockview-docs/../dockview/dist/esm/svg.js","webpack://dockview-docs/../dockview/dist/esm/dockview/defaultTab.js","webpack://dockview-docs/../dockview/dist/esm/splitview/view.js","webpack://dockview-docs/../dockview/dist/esm/splitview/splitview.js","webpack://dockview-docs/../dockview/dist/esm/gridview/view.js","webpack://dockview-docs/../dockview/dist/esm/gridview/gridview.js","webpack://dockview-docs/../dockview/dist/esm/paneview/view.js","webpack://dockview-docs/../dockview/dist/esm/paneview/paneview.js"],"sourcesContent":["import React from 'react';\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nvar isFunction = function isFunction(obj) {\n  return typeof obj === 'function';\n};\n\nvar MDXContext = /*#__PURE__*/React.createContext({});\nvar withMDXComponents = function withMDXComponents(Component) {\n  return function (props) {\n    var allComponents = useMDXComponents(props.components);\n    return /*#__PURE__*/React.createElement(Component, _extends({}, props, {\n      components: allComponents\n    }));\n  };\n};\nvar useMDXComponents = function useMDXComponents(components) {\n  var contextComponents = React.useContext(MDXContext);\n  var allComponents = contextComponents;\n\n  if (components) {\n    allComponents = isFunction(components) ? components(contextComponents) : _objectSpread2(_objectSpread2({}, contextComponents), components);\n  }\n\n  return allComponents;\n};\nvar MDXProvider = function MDXProvider(props) {\n  var allComponents = useMDXComponents(props.components);\n  return /*#__PURE__*/React.createElement(MDXContext.Provider, {\n    value: allComponents\n  }, props.children);\n};\n\nvar TYPE_PROP_NAME = 'mdxType';\nvar DEFAULTS = {\n  inlineCode: 'code',\n  wrapper: function wrapper(_ref) {\n    var children = _ref.children;\n    return /*#__PURE__*/React.createElement(React.Fragment, {}, children);\n  }\n};\nvar MDXCreateElement = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var propComponents = props.components,\n      mdxType = props.mdxType,\n      originalType = props.originalType,\n      parentName = props.parentName,\n      etc = _objectWithoutProperties(props, [\"components\", \"mdxType\", \"originalType\", \"parentName\"]);\n\n  var components = useMDXComponents(propComponents);\n  var type = mdxType;\n  var Component = components[\"\".concat(parentName, \".\").concat(type)] || components[type] || DEFAULTS[type] || originalType;\n\n  if (propComponents) {\n    return /*#__PURE__*/React.createElement(Component, _objectSpread2(_objectSpread2({\n      ref: ref\n    }, etc), {}, {\n      components: propComponents\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _objectSpread2({\n    ref: ref\n  }, etc));\n});\nMDXCreateElement.displayName = 'MDXCreateElement';\nfunction createElement (type, props) {\n  var args = arguments;\n  var mdxType = props && props.mdxType;\n\n  if (typeof type === 'string' || mdxType) {\n    var argsLength = args.length;\n    var createElementArgArray = new Array(argsLength);\n    createElementArgArray[0] = MDXCreateElement;\n    var newProps = {};\n\n    for (var key in props) {\n      if (hasOwnProperty.call(props, key)) {\n        newProps[key] = props[key];\n      }\n    }\n\n    newProps.originalType = type;\n    newProps[TYPE_PROP_NAME] = typeof type === 'string' ? type : mdxType;\n    createElementArgArray[1] = newProps;\n\n    for (var i = 2; i < argsLength; i++) {\n      createElementArgArray[i] = args[i];\n    }\n\n    return React.createElement.apply(null, createElementArgArray);\n  }\n\n  return React.createElement.apply(null, args);\n}\n\nexport { MDXContext, MDXProvider, createElement as mdx, useMDXComponents, withMDXComponents };\n","export var Event;\n(function (Event) {\n    Event.any = (...children) => {\n        return (listener) => {\n            const disposables = children.map((child) => child(listener));\n            return {\n                dispose: () => {\n                    disposables.forEach((d) => {\n                        d.dispose();\n                    });\n                },\n            };\n        };\n    };\n})(Event || (Event = {}));\n// dumb event emitter with better typings than nodes event emitter\n// https://github.com/microsoft/vscode/blob/master/src/vs/base/common/event.ts\nexport class Emitter {\n    constructor(options) {\n        this.options = options;\n        this._listeners = [];\n        this._disposed = false;\n    }\n    get event() {\n        if (!this._event) {\n            this._event = (listener) => {\n                var _a;\n                if (((_a = this.options) === null || _a === void 0 ? void 0 : _a.replay) && this._last !== undefined) {\n                    listener(this._last);\n                }\n                this._listeners.push(listener);\n                return {\n                    dispose: () => {\n                        const index = this._listeners.indexOf(listener);\n                        if (index > -1) {\n                            this._listeners.splice(index, 1);\n                        }\n                    },\n                };\n            };\n        }\n        return this._event;\n    }\n    fire(e) {\n        this._last = e;\n        for (const listener of this._listeners) {\n            listener(e);\n        }\n    }\n    dispose() {\n        this._listeners = [];\n        this._disposed = true;\n    }\n}\nexport function addDisposableWindowListener(element, type, listener, options) {\n    element.addEventListener(type, listener, options);\n    return {\n        dispose: () => {\n            element.removeEventListener(type, listener);\n        },\n    };\n}\nexport function addDisposableListener(element, type, listener, options) {\n    element.addEventListener(type, listener, options);\n    return {\n        dispose: () => {\n            element.removeEventListener(type, listener);\n        },\n    };\n}\nexport class TickDelayedEvent {\n    constructor() {\n        this._onFired = new Emitter();\n        this.onEvent = this._onFired.event;\n    }\n    fire() {\n        if (this.timer) {\n            clearTimeout(this.timer);\n        }\n        this.timer = setTimeout(() => {\n            this._onFired.fire();\n            clearTimeout(this.timer);\n        });\n    }\n    dispose() {\n        this._onFired.dispose();\n    }\n}\n","export var Disposable;\n(function (Disposable) {\n    Disposable.NONE = {\n        dispose: () => {\n            // noop\n        },\n    };\n})(Disposable || (Disposable = {}));\nexport class CompositeDisposable {\n    static from(...args) {\n        return new CompositeDisposable(...args);\n    }\n    constructor(...args) {\n        this.disposables = args;\n    }\n    addDisposables(...args) {\n        args.forEach((arg) => this.disposables.push(arg));\n    }\n    dispose() {\n        this.disposables.forEach((arg) => arg.dispose());\n    }\n}\nexport class MutableDisposable {\n    constructor() {\n        this._disposable = Disposable.NONE;\n    }\n    set value(disposable) {\n        if (this._disposable) {\n            this._disposable.dispose();\n        }\n        this._disposable = disposable;\n    }\n    dispose() {\n        if (this._disposable) {\n            this._disposable.dispose();\n            this._disposable = Disposable.NONE;\n        }\n    }\n}\n","import { Emitter, addDisposableListener, addDisposableWindowListener, } from './events';\nimport { CompositeDisposable } from './lifecycle';\nexport function watchElementResize(element, cb) {\n    const observer = new ResizeObserver((entires) => {\n        const firstEntry = entires[0];\n        cb(firstEntry);\n    });\n    observer.observe(element);\n    return {\n        dispose: () => {\n            observer.unobserve(element);\n            observer.disconnect();\n        },\n    };\n}\nexport const removeClasses = (element, ...classes) => {\n    for (const classname of classes) {\n        if (element.classList.contains(classname)) {\n            element.classList.remove(classname);\n        }\n    }\n};\nexport const addClasses = (element, ...classes) => {\n    for (const classname of classes) {\n        if (!element.classList.contains(classname)) {\n            element.classList.add(classname);\n        }\n    }\n};\nexport const toggleClass = (element, className, isToggled) => {\n    const hasClass = element.classList.contains(className);\n    if (isToggled && !hasClass) {\n        element.classList.add(className);\n    }\n    if (!isToggled && hasClass) {\n        element.classList.remove(className);\n    }\n};\nexport function isAncestor(testChild, testAncestor) {\n    while (testChild) {\n        if (testChild === testAncestor) {\n            return true;\n        }\n        testChild = testChild.parentNode;\n    }\n    return false;\n}\nexport function getElementsByTagName(tag) {\n    return Array.prototype.slice.call(document.getElementsByTagName(tag), 0);\n}\nexport function trackFocus(element) {\n    return new FocusTracker(element);\n}\n/**\n * Track focus on an element. Ensure tabIndex is set when an HTMLElement is not focusable by default\n */\nclass FocusTracker extends CompositeDisposable {\n    constructor(element) {\n        super();\n        this._onDidFocus = new Emitter();\n        this.onDidFocus = this._onDidFocus.event;\n        this._onDidBlur = new Emitter();\n        this.onDidBlur = this._onDidBlur.event;\n        let hasFocus = isAncestor(document.activeElement, element);\n        let loosingFocus = false;\n        const onFocus = () => {\n            loosingFocus = false;\n            if (!hasFocus) {\n                hasFocus = true;\n                this._onDidFocus.fire();\n            }\n        };\n        const onBlur = () => {\n            if (hasFocus) {\n                loosingFocus = true;\n                window.setTimeout(() => {\n                    if (loosingFocus) {\n                        loosingFocus = false;\n                        hasFocus = false;\n                        this._onDidBlur.fire();\n                    }\n                }, 0);\n            }\n        };\n        this._refreshStateHandler = () => {\n            const currentNodeHasFocus = isAncestor(document.activeElement, element);\n            if (currentNodeHasFocus !== hasFocus) {\n                if (hasFocus) {\n                    onBlur();\n                }\n                else {\n                    onFocus();\n                }\n            }\n        };\n        if (element instanceof HTMLElement) {\n            this.addDisposables(addDisposableListener(element, 'focus', onFocus, true));\n            this.addDisposables(addDisposableListener(element, 'blur', onBlur, true));\n        }\n        else {\n            this.addDisposables(addDisposableWindowListener(element, 'focus', onFocus, true));\n            this.addDisposables(addDisposableWindowListener(element, 'blur', onBlur, true));\n        }\n    }\n    refreshState() {\n        this._refreshStateHandler();\n    }\n    dispose() {\n        super.dispose();\n        this._onDidBlur.dispose();\n        this._onDidFocus.dispose();\n    }\n}\n","class TransferObject {\n    constructor() {\n        //\n    }\n}\nexport class PanelTransfer extends TransferObject {\n    constructor(viewId, groupId, panelId) {\n        super();\n        this.viewId = viewId;\n        this.groupId = groupId;\n        this.panelId = panelId;\n    }\n}\nexport class PaneTransfer extends TransferObject {\n    constructor(viewId, paneId) {\n        super();\n        this.viewId = viewId;\n        this.paneId = paneId;\n    }\n}\n/**\n * A singleton to store transfer data during drag & drop operations that are only valid within the application.\n */\nexport class LocalSelectionTransfer {\n    constructor() {\n        // protect against external instantiation\n    }\n    static getInstance() {\n        return LocalSelectionTransfer.INSTANCE;\n    }\n    hasData(proto) {\n        return proto && proto === this.proto;\n    }\n    clearData(proto) {\n        if (this.hasData(proto)) {\n            this.proto = undefined;\n            this.data = undefined;\n        }\n    }\n    getData(proto) {\n        if (this.hasData(proto)) {\n            return this.data;\n        }\n        return undefined;\n    }\n    setData(data, proto) {\n        if (proto) {\n            this.data = data;\n            this.proto = proto;\n        }\n    }\n}\nLocalSelectionTransfer.INSTANCE = new LocalSelectionTransfer();\nexport function getPanelData() {\n    const panelTransfer = LocalSelectionTransfer.getInstance();\n    const isPanelEvent = panelTransfer.hasData(PanelTransfer.prototype);\n    if (!isPanelEvent) {\n        return undefined;\n    }\n    return panelTransfer.getData(PanelTransfer.prototype)[0];\n}\nexport function getPaneData() {\n    const paneTransfer = LocalSelectionTransfer.getInstance();\n    const isPanelEvent = paneTransfer.hasData(PaneTransfer.prototype);\n    if (!isPanelEvent) {\n        return undefined;\n    }\n    return paneTransfer.getData(PaneTransfer.prototype)[0];\n}\n","export const clamp = (value, min, max) => {\n    if (min > max) {\n        throw new Error(`${min} > ${max} is an invalid condition`);\n    }\n    return Math.min(max, Math.max(value, min));\n};\nexport const sequentialNumberGenerator = () => {\n    let value = 1;\n    return { next: () => (value++).toString() };\n};\n","export function tail(arr) {\n    if (arr.length === 0) {\n        throw new Error('Invalid tail call');\n    }\n    return [arr.slice(0, arr.length - 1), arr[arr.length - 1]];\n}\nexport function last(arr) {\n    return arr.length > 0 ? arr[arr.length - 1] : undefined;\n}\nexport function sequenceEquals(arr1, arr2) {\n    if (arr1.length !== arr2.length) {\n        return false;\n    }\n    for (let i = 0; i < arr1.length; i++) {\n        if (arr1[i] !== arr2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Pushes an element to the start of the array, if found.\n */\nexport function pushToStart(arr, value) {\n    const index = arr.indexOf(value);\n    if (index > -1) {\n        arr.splice(index, 1);\n        arr.unshift(value);\n    }\n}\n/**\n * Pushes an element to the end of the array, if found.\n */\nexport function pushToEnd(arr, value) {\n    const index = arr.indexOf(value);\n    if (index > -1) {\n        arr.splice(index, 1);\n        arr.push(value);\n    }\n}\nexport const range = (from, to) => {\n    const result = [];\n    if (typeof to !== 'number') {\n        to = from;\n        from = 0;\n    }\n    if (from <= to) {\n        for (let i = from; i < to; i++) {\n            result.push(i);\n        }\n    }\n    else {\n        for (let i = from; i > to; i--) {\n            result.push(i);\n        }\n    }\n    return result;\n};\nexport function firstIndex(array, fn) {\n    for (let i = 0; i < array.length; i++) {\n        const element = array[i];\n        if (fn(element)) {\n            return i;\n        }\n    }\n    return -1;\n}\n","import { clamp } from '../../math';\nexport class ViewItem {\n    set size(size) {\n        this._size = size;\n    }\n    get size() {\n        return this._size;\n    }\n    get cachedVisibleSize() {\n        return this._cachedVisibleSize;\n    }\n    get visible() {\n        return typeof this._cachedVisibleSize === 'undefined';\n    }\n    get minimumSize() {\n        return this.visible ? this.view.minimumSize : 0;\n    }\n    get viewMinimumSize() {\n        return this.view.minimumSize;\n    }\n    get maximumSize() {\n        return this.visible ? this.view.maximumSize : 0;\n    }\n    get viewMaximumSize() {\n        return this.view.maximumSize;\n    }\n    get priority() {\n        return this.view.priority;\n    }\n    get snap() {\n        return !!this.view.snap;\n    }\n    set enabled(enabled) {\n        this.container.style.pointerEvents = enabled ? '' : 'none';\n    }\n    constructor(container, view, size, disposable) {\n        this.container = container;\n        this.view = view;\n        this.disposable = disposable;\n        this._cachedVisibleSize = undefined;\n        if (typeof size === 'number') {\n            this._size = size;\n            this._cachedVisibleSize = undefined;\n            container.classList.add('visible');\n        }\n        else {\n            this._size = 0;\n            this._cachedVisibleSize = size.cachedVisibleSize;\n        }\n    }\n    setVisible(visible, size) {\n        var _a;\n        if (visible === this.visible) {\n            return;\n        }\n        if (visible) {\n            this.size = clamp((_a = this._cachedVisibleSize) !== null && _a !== void 0 ? _a : 0, this.viewMinimumSize, this.viewMaximumSize);\n            this._cachedVisibleSize = undefined;\n        }\n        else {\n            this._cachedVisibleSize =\n                typeof size === 'number' ? size : this.size;\n            this.size = 0;\n        }\n        this.container.classList.toggle('visible', visible);\n        if (this.view.setVisible) {\n            this.view.setVisible(visible);\n        }\n    }\n    dispose() {\n        this.disposable.dispose();\n        return this.view;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/splitview\n *--------------------------------------------------------------------------------------------*/\nimport { removeClasses, addClasses, toggleClass, getElementsByTagName, } from '../../dom';\nimport { clamp } from '../../math';\nimport { Emitter } from '../../events';\nimport { pushToStart, pushToEnd, range, firstIndex } from '../../array';\nimport { ViewItem } from './viewItem';\nexport var Orientation;\n(function (Orientation) {\n    Orientation[\"HORIZONTAL\"] = \"HORIZONTAL\";\n    Orientation[\"VERTICAL\"] = \"VERTICAL\";\n})(Orientation || (Orientation = {}));\nexport var SashState;\n(function (SashState) {\n    SashState[SashState[\"MAXIMUM\"] = 0] = \"MAXIMUM\";\n    SashState[SashState[\"MINIMUM\"] = 1] = \"MINIMUM\";\n    SashState[SashState[\"DISABLED\"] = 2] = \"DISABLED\";\n    SashState[SashState[\"ENABLED\"] = 3] = \"ENABLED\";\n})(SashState || (SashState = {}));\nexport var LayoutPriority;\n(function (LayoutPriority) {\n    LayoutPriority[\"Low\"] = \"low\";\n    LayoutPriority[\"High\"] = \"high\";\n    LayoutPriority[\"Normal\"] = \"normal\";\n})(LayoutPriority || (LayoutPriority = {}));\nexport var Sizing;\n(function (Sizing) {\n    Sizing.Distribute = { type: 'distribute' };\n    function Split(index) {\n        return { type: 'split', index };\n    }\n    Sizing.Split = Split;\n    function Invisible(cachedVisibleSize) {\n        return { type: 'invisible', cachedVisibleSize };\n    }\n    Sizing.Invisible = Invisible;\n})(Sizing || (Sizing = {}));\nexport class Splitview {\n    get size() {\n        return this._size;\n    }\n    set size(value) {\n        this._size = value;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    set orthogonalSize(value) {\n        this._orthogonalSize = value;\n    }\n    get length() {\n        return this.views.length;\n    }\n    get proportions() {\n        return this._proportions ? [...this._proportions] : undefined;\n    }\n    get orientation() {\n        return this._orientation;\n    }\n    set orientation(value) {\n        this._orientation = value;\n        const tmp = this.size;\n        this.size = this.orthogonalSize;\n        this.orthogonalSize = tmp;\n        removeClasses(this.element, 'horizontal', 'vertical');\n        this.element.classList.add(this.orientation == Orientation.HORIZONTAL\n            ? 'horizontal'\n            : 'vertical');\n    }\n    get minimumSize() {\n        return this.views.reduce((r, item) => r + item.minimumSize, 0);\n    }\n    get maximumSize() {\n        return this.length === 0\n            ? Number.POSITIVE_INFINITY\n            : this.views.reduce((r, item) => r + item.maximumSize, 0);\n    }\n    get startSnappingEnabled() {\n        return this._startSnappingEnabled;\n    }\n    set startSnappingEnabled(startSnappingEnabled) {\n        if (this._startSnappingEnabled === startSnappingEnabled) {\n            return;\n        }\n        this._startSnappingEnabled = startSnappingEnabled;\n        this.updateSashEnablement();\n    }\n    get endSnappingEnabled() {\n        return this._endSnappingEnabled;\n    }\n    set endSnappingEnabled(endSnappingEnabled) {\n        if (this._endSnappingEnabled === endSnappingEnabled) {\n            return;\n        }\n        this._endSnappingEnabled = endSnappingEnabled;\n        this.updateSashEnablement();\n    }\n    constructor(container, options) {\n        this.container = container;\n        this.views = [];\n        this.sashes = [];\n        this._size = 0;\n        this._orthogonalSize = 0;\n        this.contentSize = 0;\n        this._proportions = undefined;\n        this._startSnappingEnabled = true;\n        this._endSnappingEnabled = true;\n        this._onDidSashEnd = new Emitter();\n        this.onDidSashEnd = this._onDidSashEnd.event;\n        this._onDidAddView = new Emitter();\n        this.onDidAddView = this._onDidAddView.event;\n        this._onDidRemoveView = new Emitter();\n        this.onDidRemoveView = this._onDidRemoveView.event;\n        this.resize = (index, delta, sizes = this.views.map((x) => x.size), lowPriorityIndexes, highPriorityIndexes, overloadMinDelta = Number.NEGATIVE_INFINITY, overloadMaxDelta = Number.POSITIVE_INFINITY, snapBefore, snapAfter) => {\n            if (index < 0 || index > this.views.length) {\n                return 0;\n            }\n            const upIndexes = range(index, -1);\n            const downIndexes = range(index + 1, this.views.length);\n            //\n            if (highPriorityIndexes) {\n                for (const i of highPriorityIndexes) {\n                    pushToStart(upIndexes, i);\n                    pushToStart(downIndexes, i);\n                }\n            }\n            if (lowPriorityIndexes) {\n                for (const i of lowPriorityIndexes) {\n                    pushToEnd(upIndexes, i);\n                    pushToEnd(downIndexes, i);\n                }\n            }\n            //\n            const upItems = upIndexes.map((i) => this.views[i]);\n            const upSizes = upIndexes.map((i) => sizes[i]);\n            //\n            const downItems = downIndexes.map((i) => this.views[i]);\n            const downSizes = downIndexes.map((i) => sizes[i]);\n            //\n            const minDeltaUp = upIndexes.reduce((_, i) => _ + this.views[i].minimumSize - sizes[i], 0);\n            const maxDeltaUp = upIndexes.reduce((_, i) => _ + this.views[i].maximumSize - sizes[i], 0);\n            //\n            const maxDeltaDown = downIndexes.length === 0\n                ? Number.POSITIVE_INFINITY\n                : downIndexes.reduce((_, i) => _ + sizes[i] - this.views[i].minimumSize, 0);\n            const minDeltaDown = downIndexes.length === 0\n                ? Number.NEGATIVE_INFINITY\n                : downIndexes.reduce((_, i) => _ + sizes[i] - this.views[i].maximumSize, 0);\n            //\n            const minDelta = Math.max(minDeltaUp, minDeltaDown);\n            const maxDelta = Math.min(maxDeltaDown, maxDeltaUp);\n            //\n            let snapped = false;\n            if (snapBefore) {\n                const snapView = this.views[snapBefore.index];\n                const visible = delta >= snapBefore.limitDelta;\n                snapped = visible !== snapView.visible;\n                snapView.setVisible(visible, snapBefore.size);\n            }\n            if (!snapped && snapAfter) {\n                const snapView = this.views[snapAfter.index];\n                const visible = delta < snapAfter.limitDelta;\n                snapped = visible !== snapView.visible;\n                snapView.setVisible(visible, snapAfter.size);\n            }\n            if (snapped) {\n                return this.resize(index, delta, sizes, lowPriorityIndexes, highPriorityIndexes, overloadMinDelta, overloadMaxDelta);\n            }\n            //\n            const tentativeDelta = clamp(delta, minDelta, maxDelta);\n            let actualDelta = 0;\n            //\n            let deltaUp = tentativeDelta;\n            for (let i = 0; i < upItems.length; i++) {\n                const item = upItems[i];\n                const size = clamp(upSizes[i] + deltaUp, item.minimumSize, item.maximumSize);\n                const viewDelta = size - upSizes[i];\n                actualDelta += viewDelta;\n                deltaUp -= viewDelta;\n                item.size = size;\n            }\n            //\n            let deltaDown = actualDelta;\n            for (let i = 0; i < downItems.length; i++) {\n                const item = downItems[i];\n                const size = clamp(downSizes[i] - deltaDown, item.minimumSize, item.maximumSize);\n                const viewDelta = size - downSizes[i];\n                deltaDown += viewDelta;\n                item.size = size;\n            }\n            //\n            return delta;\n        };\n        this._orientation = options.orientation;\n        this.element = this.createContainer();\n        this.proportionalLayout =\n            options.proportionalLayout === undefined\n                ? true\n                : !!options.proportionalLayout;\n        this.viewContainer = this.createViewContainer();\n        this.sashContainer = this.createSashContainer();\n        this.element.appendChild(this.sashContainer);\n        this.element.appendChild(this.viewContainer);\n        this.container.appendChild(this.element);\n        this.style(options.styles);\n        // We have an existing set of view, add them now\n        if (options.descriptor) {\n            this._size = options.descriptor.size;\n            options.descriptor.views.forEach((viewDescriptor, index) => {\n                const sizing = viewDescriptor.visible === undefined ||\n                    viewDescriptor.visible\n                    ? viewDescriptor.size\n                    : {\n                        type: 'invisible',\n                        cachedVisibleSize: viewDescriptor.size,\n                    };\n                const view = viewDescriptor.view;\n                this.addView(view, sizing, index, true\n                // true skip layout\n                );\n            });\n            // Initialize content size and proportions for first layout\n            this.contentSize = this.views.reduce((r, i) => r + i.size, 0);\n            this.saveProportions();\n        }\n    }\n    style(styles) {\n        if ((styles === null || styles === void 0 ? void 0 : styles.separatorBorder) === 'transparent') {\n            removeClasses(this.element, 'separator-border');\n            this.element.style.removeProperty('--dv-separator-border');\n        }\n        else {\n            addClasses(this.element, 'separator-border');\n            if (styles === null || styles === void 0 ? void 0 : styles.separatorBorder) {\n                this.element.style.setProperty('--dv-separator-border', styles.separatorBorder);\n            }\n        }\n    }\n    isViewVisible(index) {\n        if (index < 0 || index >= this.views.length) {\n            throw new Error('Index out of bounds');\n        }\n        const viewItem = this.views[index];\n        return viewItem.visible;\n    }\n    setViewVisible(index, visible) {\n        if (index < 0 || index >= this.views.length) {\n            throw new Error('Index out of bounds');\n        }\n        toggleClass(this.container, 'visible', visible);\n        const viewItem = this.views[index];\n        toggleClass(this.container, 'visible', visible);\n        viewItem.setVisible(visible, viewItem.size);\n        this.distributeEmptySpace(index);\n        this.layoutViews();\n        this.saveProportions();\n    }\n    getViewSize(index) {\n        if (index < 0 || index >= this.views.length) {\n            return -1;\n        }\n        return this.views[index].size;\n    }\n    resizeView(index, size) {\n        if (index < 0 || index >= this.views.length) {\n            return;\n        }\n        const indexes = range(this.views.length).filter((i) => i !== index);\n        const lowPriorityIndexes = [\n            ...indexes.filter((i) => this.views[i].priority === LayoutPriority.Low),\n            index,\n        ];\n        const highPriorityIndexes = indexes.filter((i) => this.views[i].priority === LayoutPriority.High);\n        const item = this.views[index];\n        size = Math.round(size);\n        size = clamp(size, item.minimumSize, Math.min(item.maximumSize, this._size));\n        item.size = size;\n        this.relayout(lowPriorityIndexes, highPriorityIndexes);\n    }\n    getViews() {\n        return this.views.map((x) => x.view);\n    }\n    onDidChange(item, size) {\n        const index = this.views.indexOf(item);\n        if (index < 0 || index >= this.views.length) {\n            return;\n        }\n        size = typeof size === 'number' ? size : item.size;\n        size = clamp(size, item.minimumSize, item.maximumSize);\n        item.size = size;\n        this.relayout([index]);\n    }\n    addView(view, size = { type: 'distribute' }, index = this.views.length, skipLayout) {\n        const container = document.createElement('div');\n        container.className = 'view';\n        container.appendChild(view.element);\n        let viewSize;\n        if (typeof size === 'number') {\n            viewSize = size;\n        }\n        else if (size.type === 'split') {\n            viewSize = this.getViewSize(size.index) / 2;\n        }\n        else if (size.type === 'invisible') {\n            viewSize = { cachedVisibleSize: size.cachedVisibleSize };\n        }\n        else {\n            viewSize = view.minimumSize;\n        }\n        const disposable = view.onDidChange((newSize) => this.onDidChange(viewItem, newSize.size));\n        const dispose = () => {\n            disposable === null || disposable === void 0 ? void 0 : disposable.dispose();\n            this.viewContainer.removeChild(container);\n        };\n        const viewItem = new ViewItem(container, view, viewSize, { dispose });\n        if (index === this.views.length) {\n            this.viewContainer.appendChild(container);\n        }\n        else {\n            this.viewContainer.insertBefore(container, this.viewContainer.children.item(index));\n        }\n        this.views.splice(index, 0, viewItem);\n        if (this.views.length > 1) {\n            //add sash\n            const sash = document.createElement('div');\n            sash.className = 'sash';\n            const onStart = (event) => {\n                for (const item of this.views) {\n                    item.enabled = false;\n                }\n                const iframes = [\n                    ...getElementsByTagName('iframe'),\n                    ...getElementsByTagName('webview'),\n                ];\n                for (const iframe of iframes) {\n                    iframe.style.pointerEvents = 'none';\n                }\n                const start = this._orientation === Orientation.HORIZONTAL\n                    ? event.clientX\n                    : event.clientY;\n                const sashIndex = firstIndex(this.sashes, (s) => s.container === sash);\n                //\n                const sizes = this.views.map((x) => x.size);\n                //\n                let snapBefore;\n                let snapAfter;\n                const upIndexes = range(sashIndex, -1);\n                const downIndexes = range(sashIndex + 1, this.views.length);\n                const minDeltaUp = upIndexes.reduce((r, i) => r + (this.views[i].minimumSize - sizes[i]), 0);\n                const maxDeltaUp = upIndexes.reduce((r, i) => r + (this.views[i].viewMaximumSize - sizes[i]), 0);\n                const maxDeltaDown = downIndexes.length === 0\n                    ? Number.POSITIVE_INFINITY\n                    : downIndexes.reduce((r, i) => r + (sizes[i] - this.views[i].minimumSize), 0);\n                const minDeltaDown = downIndexes.length === 0\n                    ? Number.NEGATIVE_INFINITY\n                    : downIndexes.reduce((r, i) => r +\n                        (sizes[i] - this.views[i].viewMaximumSize), 0);\n                const minDelta = Math.max(minDeltaUp, minDeltaDown);\n                const maxDelta = Math.min(maxDeltaDown, maxDeltaUp);\n                const snapBeforeIndex = this.findFirstSnapIndex(upIndexes);\n                const snapAfterIndex = this.findFirstSnapIndex(downIndexes);\n                if (typeof snapBeforeIndex === 'number') {\n                    const snappedViewItem = this.views[snapBeforeIndex];\n                    const halfSize = Math.floor(snappedViewItem.viewMinimumSize / 2);\n                    snapBefore = {\n                        index: snapBeforeIndex,\n                        limitDelta: snappedViewItem.visible\n                            ? minDelta - halfSize\n                            : minDelta + halfSize,\n                        size: snappedViewItem.size,\n                    };\n                }\n                if (typeof snapAfterIndex === 'number') {\n                    const snappedViewItem = this.views[snapAfterIndex];\n                    const halfSize = Math.floor(snappedViewItem.viewMinimumSize / 2);\n                    snapAfter = {\n                        index: snapAfterIndex,\n                        limitDelta: snappedViewItem.visible\n                            ? maxDelta + halfSize\n                            : maxDelta - halfSize,\n                        size: snappedViewItem.size,\n                    };\n                }\n                //\n                const mousemove = (mousemoveEvent) => {\n                    const current = this._orientation === Orientation.HORIZONTAL\n                        ? mousemoveEvent.clientX\n                        : mousemoveEvent.clientY;\n                    const delta = current - start;\n                    this.resize(sashIndex, delta, sizes, undefined, undefined, minDelta, maxDelta, snapBefore, snapAfter);\n                    this.distributeEmptySpace();\n                    this.layoutViews();\n                };\n                const end = () => {\n                    for (const item of this.views) {\n                        item.enabled = true;\n                    }\n                    for (const iframe of iframes) {\n                        iframe.style.pointerEvents = 'auto';\n                    }\n                    this.saveProportions();\n                    document.removeEventListener('mousemove', mousemove);\n                    document.removeEventListener('mouseup', end);\n                    document.removeEventListener('mouseend', end);\n                    this._onDidSashEnd.fire(undefined);\n                };\n                document.addEventListener('mousemove', mousemove);\n                document.addEventListener('mouseup', end);\n                document.addEventListener('mouseend', end);\n            };\n            sash.addEventListener('mousedown', onStart);\n            const sashItem = {\n                container: sash,\n                disposable: () => {\n                    sash.removeEventListener('mousedown', onStart);\n                    this.sashContainer.removeChild(sash);\n                },\n            };\n            this.sashContainer.appendChild(sash);\n            this.sashes.push(sashItem);\n        }\n        if (!skipLayout) {\n            this.relayout([index]);\n        }\n        if (!skipLayout &&\n            typeof size !== 'number' &&\n            size.type === 'distribute') {\n            this.distributeViewSizes();\n        }\n        this._onDidAddView.fire(view);\n    }\n    distributeViewSizes() {\n        const flexibleViewItems = [];\n        let flexibleSize = 0;\n        for (const item of this.views) {\n            if (item.maximumSize - item.minimumSize > 0) {\n                flexibleViewItems.push(item);\n                flexibleSize += item.size;\n            }\n        }\n        const size = Math.floor(flexibleSize / flexibleViewItems.length);\n        for (const item of flexibleViewItems) {\n            item.size = clamp(size, item.minimumSize, item.maximumSize);\n        }\n        const indexes = range(this.views.length);\n        const lowPriorityIndexes = indexes.filter((i) => this.views[i].priority === LayoutPriority.Low);\n        const highPriorityIndexes = indexes.filter((i) => this.views[i].priority === LayoutPriority.High);\n        this.relayout(lowPriorityIndexes, highPriorityIndexes);\n    }\n    removeView(index, sizing, skipLayout = false) {\n        // Remove view\n        const viewItem = this.views.splice(index, 1)[0];\n        viewItem.dispose();\n        // Remove sash\n        if (this.views.length >= 1) {\n            const sashIndex = Math.max(index - 1, 0);\n            const sashItem = this.sashes.splice(sashIndex, 1)[0];\n            sashItem.disposable();\n        }\n        if (!skipLayout) {\n            this.relayout();\n        }\n        if (sizing && sizing.type === 'distribute') {\n            this.distributeViewSizes();\n        }\n        this._onDidRemoveView.fire(viewItem.view);\n        return viewItem.view;\n    }\n    getViewCachedVisibleSize(index) {\n        if (index < 0 || index >= this.views.length) {\n            throw new Error('Index out of bounds');\n        }\n        const viewItem = this.views[index];\n        return viewItem.cachedVisibleSize;\n    }\n    moveView(from, to) {\n        const cachedVisibleSize = this.getViewCachedVisibleSize(from);\n        const sizing = typeof cachedVisibleSize === 'undefined'\n            ? this.getViewSize(from)\n            : Sizing.Invisible(cachedVisibleSize);\n        const view = this.removeView(from, undefined, true);\n        this.addView(view, sizing, to);\n    }\n    layout(size, orthogonalSize) {\n        const previousSize = Math.max(this.size, this.contentSize);\n        this.size = size;\n        this.orthogonalSize = orthogonalSize;\n        if (!this.proportions) {\n            const indexes = range(this.views.length);\n            const lowPriorityIndexes = indexes.filter((i) => this.views[i].priority === LayoutPriority.Low);\n            const highPriorityIndexes = indexes.filter((i) => this.views[i].priority === LayoutPriority.High);\n            this.resize(this.views.length - 1, size - previousSize, undefined, lowPriorityIndexes, highPriorityIndexes);\n        }\n        else {\n            for (let i = 0; i < this.views.length; i++) {\n                const item = this.views[i];\n                item.size = clamp(Math.round(this.proportions[i] * size), item.minimumSize, item.maximumSize);\n            }\n        }\n        this.distributeEmptySpace();\n        this.layoutViews();\n    }\n    relayout(lowPriorityIndexes, highPriorityIndexes) {\n        const contentSize = this.views.reduce((r, i) => r + i.size, 0);\n        this.resize(this.views.length - 1, this._size - contentSize, undefined, lowPriorityIndexes, highPriorityIndexes);\n        this.distributeEmptySpace();\n        this.layoutViews();\n        this.saveProportions();\n    }\n    distributeEmptySpace(lowPriorityIndex) {\n        const contentSize = this.views.reduce((r, i) => r + i.size, 0);\n        let emptyDelta = this.size - contentSize;\n        const indexes = range(this.views.length - 1, -1);\n        const lowPriorityIndexes = indexes.filter((i) => this.views[i].priority === LayoutPriority.Low);\n        const highPriorityIndexes = indexes.filter((i) => this.views[i].priority === LayoutPriority.High);\n        for (const index of highPriorityIndexes) {\n            pushToStart(indexes, index);\n        }\n        for (const index of lowPriorityIndexes) {\n            pushToEnd(indexes, index);\n        }\n        if (typeof lowPriorityIndex === 'number') {\n            pushToEnd(indexes, lowPriorityIndex);\n        }\n        for (let i = 0; emptyDelta !== 0 && i < indexes.length; i++) {\n            const item = this.views[indexes[i]];\n            const size = clamp(item.size + emptyDelta, item.minimumSize, item.maximumSize);\n            const viewDelta = size - item.size;\n            emptyDelta -= viewDelta;\n            item.size = size;\n        }\n    }\n    saveProportions() {\n        if (this.proportionalLayout && this.contentSize > 0) {\n            this._proportions = this.views.map((i) => i.size / this.contentSize);\n        }\n    }\n    layoutViews() {\n        this.contentSize = this.views.reduce((r, i) => r + i.size, 0);\n        let sum = 0;\n        const x = [];\n        this.updateSashEnablement();\n        for (let i = 0; i < this.views.length - 1; i++) {\n            sum += this.views[i].size;\n            x.push(sum);\n            const offset = Math.min(Math.max(0, sum - 2), this.size - 4);\n            if (this._orientation === Orientation.HORIZONTAL) {\n                this.sashes[i].container.style.left = `${offset}px`;\n                this.sashes[i].container.style.top = `0px`;\n            }\n            if (this._orientation === Orientation.VERTICAL) {\n                this.sashes[i].container.style.left = `0px`;\n                this.sashes[i].container.style.top = `${offset}px`;\n            }\n        }\n        this.views.forEach((view, i) => {\n            if (this._orientation === Orientation.HORIZONTAL) {\n                view.container.style.width = `${view.size}px`;\n                view.container.style.left = i == 0 ? '0px' : `${x[i - 1]}px`;\n                view.container.style.top = '';\n                view.container.style.height = '';\n            }\n            if (this._orientation === Orientation.VERTICAL) {\n                view.container.style.height = `${view.size}px`;\n                view.container.style.top = i == 0 ? '0px' : `${x[i - 1]}px`;\n                view.container.style.width = '';\n                view.container.style.left = '';\n            }\n            view.view.layout(view.size, this._orthogonalSize);\n        });\n    }\n    findFirstSnapIndex(indexes) {\n        // visible views first\n        for (const index of indexes) {\n            const viewItem = this.views[index];\n            if (!viewItem.visible) {\n                continue;\n            }\n            if (viewItem.snap) {\n                return index;\n            }\n        }\n        // then, hidden views\n        for (const index of indexes) {\n            const viewItem = this.views[index];\n            if (viewItem.visible &&\n                viewItem.maximumSize - viewItem.minimumSize > 0) {\n                return undefined;\n            }\n            if (!viewItem.visible && viewItem.snap) {\n                return index;\n            }\n        }\n        return undefined;\n    }\n    updateSashEnablement() {\n        let previous = false;\n        const collapsesDown = this.views.map((i) => (previous = i.size - i.minimumSize > 0 || previous));\n        previous = false;\n        const expandsDown = this.views.map((i) => (previous = i.maximumSize - i.size > 0 || previous));\n        const reverseViews = [...this.views].reverse();\n        previous = false;\n        const collapsesUp = reverseViews\n            .map((i) => (previous = i.size - i.minimumSize > 0 || previous))\n            .reverse();\n        previous = false;\n        const expandsUp = reverseViews\n            .map((i) => (previous = i.maximumSize - i.size > 0 || previous))\n            .reverse();\n        let position = 0;\n        for (let index = 0; index < this.sashes.length; index++) {\n            const sash = this.sashes[index];\n            const viewItem = this.views[index];\n            position += viewItem.size;\n            const min = !(collapsesDown[index] && expandsUp[index + 1]);\n            const max = !(expandsDown[index] && collapsesUp[index + 1]);\n            if (min && max) {\n                const upIndexes = range(index, -1);\n                const downIndexes = range(index + 1, this.views.length);\n                const snapBeforeIndex = this.findFirstSnapIndex(upIndexes);\n                const snapAfterIndex = this.findFirstSnapIndex(downIndexes);\n                const snappedBefore = typeof snapBeforeIndex === 'number' &&\n                    !this.views[snapBeforeIndex].visible;\n                const snappedAfter = typeof snapAfterIndex === 'number' &&\n                    !this.views[snapAfterIndex].visible;\n                if (snappedBefore &&\n                    collapsesUp[index] &&\n                    (position > 0 || this.startSnappingEnabled)) {\n                    this.updateSash(sash, SashState.MINIMUM);\n                }\n                else if (snappedAfter &&\n                    collapsesDown[index] &&\n                    (position < this.contentSize || this.endSnappingEnabled)) {\n                    this.updateSash(sash, SashState.MAXIMUM);\n                }\n                else {\n                    this.updateSash(sash, SashState.DISABLED);\n                }\n            }\n            else if (min && !max) {\n                this.updateSash(sash, SashState.MINIMUM);\n            }\n            else if (!min && max) {\n                this.updateSash(sash, SashState.MAXIMUM);\n            }\n            else {\n                this.updateSash(sash, SashState.ENABLED);\n            }\n        }\n    }\n    updateSash(sash, state) {\n        toggleClass(sash.container, 'disabled', state === SashState.DISABLED);\n        toggleClass(sash.container, 'enabled', state === SashState.ENABLED);\n        toggleClass(sash.container, 'maximum', state === SashState.MAXIMUM);\n        toggleClass(sash.container, 'minimum', state === SashState.MINIMUM);\n    }\n    createViewContainer() {\n        const element = document.createElement('div');\n        element.className = 'view-container';\n        return element;\n    }\n    createSashContainer() {\n        const element = document.createElement('div');\n        element.className = 'sash-container';\n        return element;\n    }\n    createContainer() {\n        const element = document.createElement('div');\n        const orientationClassname = this._orientation === Orientation.HORIZONTAL\n            ? 'horizontal'\n            : 'vertical';\n        element.className = `split-view-container ${orientationClassname}`;\n        return element;\n    }\n    dispose() {\n        this._onDidSashEnd.dispose();\n        this._onDidAddView.dispose();\n        this._onDidRemoveView.dispose();\n        for (let i = 0; i < this.element.children.length; i++) {\n            if (this.element.children.item(i) === this.element) {\n                this.element.removeChild(this.element);\n                break;\n            }\n        }\n        this.element.remove();\n    }\n}\n","import { Splitview, Orientation, } from '../splitview/core/splitview';\nimport { CompositeDisposable } from '../lifecycle';\nimport { Emitter } from '../events';\nimport { addClasses, removeClasses } from '../dom';\nexport class Paneview extends CompositeDisposable {\n    get onDidAddView() {\n        return this.splitview.onDidAddView;\n    }\n    get onDidRemoveView() {\n        return this.splitview.onDidRemoveView;\n    }\n    get minimumSize() {\n        return this.splitview.minimumSize;\n    }\n    get maximumSize() {\n        return this.splitview.maximumSize;\n    }\n    get orientation() {\n        return this.splitview.orientation;\n    }\n    get size() {\n        return this.splitview.size;\n    }\n    get orthogonalSize() {\n        return this.splitview.orthogonalSize;\n    }\n    constructor(container, options) {\n        var _a;\n        super();\n        this.paneItems = [];\n        this.skipAnimation = false;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._orientation = (_a = options.orientation) !== null && _a !== void 0 ? _a : Orientation.VERTICAL;\n        this.element = document.createElement('div');\n        this.element.className = 'pane-container';\n        container.appendChild(this.element);\n        this.splitview = new Splitview(this.element, {\n            orientation: this._orientation,\n            proportionalLayout: false,\n            descriptor: options.descriptor,\n        });\n        // if we've added views from the descriptor we need to\n        // add the panes to our Pane array and setup animation\n        this.getPanes().forEach((pane) => {\n            const disposable = new CompositeDisposable(pane.onDidChangeExpansionState(() => {\n                this.setupAnimation();\n                this._onDidChange.fire(undefined);\n            }));\n            const paneItem = {\n                pane,\n                disposable: {\n                    dispose: () => {\n                        disposable.dispose();\n                    },\n                },\n            };\n            this.paneItems.push(paneItem);\n            pane.orthogonalSize = this.splitview.orthogonalSize;\n        });\n        this.addDisposables(this._onDidChange, this.splitview.onDidSashEnd(() => {\n            this._onDidChange.fire(undefined);\n        }), this.splitview.onDidAddView(() => {\n            this._onDidChange.fire();\n        }), this.splitview.onDidRemoveView(() => {\n            this._onDidChange.fire();\n        }));\n    }\n    addPane(pane, size, index = this.splitview.length, skipLayout = false) {\n        const disposable = pane.onDidChangeExpansionState(() => {\n            this.setupAnimation();\n            this._onDidChange.fire(undefined);\n        });\n        const paneItem = {\n            pane,\n            disposable: {\n                dispose: () => {\n                    disposable.dispose();\n                },\n            },\n        };\n        this.paneItems.splice(index, 0, paneItem);\n        pane.orthogonalSize = this.splitview.orthogonalSize;\n        this.splitview.addView(pane, size, index, skipLayout);\n    }\n    getViewSize(index) {\n        return this.splitview.getViewSize(index);\n    }\n    getPanes() {\n        return this.splitview.getViews();\n    }\n    removePane(index, options = { skipDispose: false }) {\n        const paneItem = this.paneItems.splice(index, 1)[0];\n        this.splitview.removeView(index);\n        if (!options.skipDispose) {\n            paneItem.disposable.dispose();\n            paneItem.pane.dispose();\n        }\n        return paneItem;\n    }\n    moveView(from, to) {\n        if (from === to) {\n            return;\n        }\n        const view = this.removePane(from, { skipDispose: true });\n        this.skipAnimation = true;\n        try {\n            this.addPane(view.pane, view.pane.size, to, false);\n        }\n        finally {\n            this.skipAnimation = false;\n        }\n    }\n    layout(size, orthogonalSize) {\n        this.splitview.layout(size, orthogonalSize);\n    }\n    setupAnimation() {\n        if (this.skipAnimation) {\n            return;\n        }\n        if (this.animationTimer) {\n            clearTimeout(this.animationTimer);\n            this.animationTimer = undefined;\n        }\n        addClasses(this.element, 'animated');\n        this.animationTimer = setTimeout(() => {\n            this.animationTimer = undefined;\n            removeClasses(this.element, 'animated');\n        }, 200);\n    }\n    dispose() {\n        super.dispose();\n        if (this.animationTimer) {\n            clearTimeout(this.animationTimer);\n            this.animationTimer = undefined;\n        }\n        this.paneItems.forEach((paneItem) => {\n            paneItem.disposable.dispose();\n            paneItem.pane.dispose();\n        });\n        this.paneItems = [];\n        this.splitview.dispose();\n        this.element.remove();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/grid\n *--------------------------------------------------------------------------------------------*/\nimport { Orientation, } from '../splitview/core/splitview';\nimport { Emitter } from '../events';\nexport class LeafNode {\n    get minimumWidth() {\n        return this.view.minimumWidth;\n    }\n    get maximumWidth() {\n        return this.view.maximumWidth;\n    }\n    get minimumHeight() {\n        return this.view.minimumHeight;\n    }\n    get maximumHeight() {\n        return this.view.maximumHeight;\n    }\n    get priority() {\n        return this.view.priority;\n    }\n    get snap() {\n        return this.view.snap;\n    }\n    get minimumSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumHeight\n            : this.minimumWidth;\n    }\n    get maximumSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumHeight\n            : this.maximumWidth;\n    }\n    get minimumOrthogonalSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumWidth\n            : this.minimumHeight;\n    }\n    get maximumOrthogonalSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumWidth\n            : this.maximumHeight;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    get size() {\n        return this._size;\n    }\n    get element() {\n        return this.view.element;\n    }\n    get width() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.orthogonalSize\n            : this.size;\n    }\n    get height() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.size\n            : this.orthogonalSize;\n    }\n    constructor(view, orientation, orthogonalSize, size = 0) {\n        this.view = view;\n        this.orientation = orientation;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._orthogonalSize = orthogonalSize;\n        this._size = size;\n        this._disposable = this.view.onDidChange((event) => {\n            if (event) {\n                this._onDidChange.fire({\n                    size: this.orientation === Orientation.VERTICAL\n                        ? event.width\n                        : event.height,\n                    orthogonalSize: this.orientation === Orientation.VERTICAL\n                        ? event.height\n                        : event.width,\n                });\n            }\n            else {\n                this._onDidChange.fire({});\n            }\n        });\n    }\n    setVisible(visible) {\n        if (this.view.setVisible) {\n            this.view.setVisible(visible);\n            this._onDidChange.fire({});\n        }\n    }\n    layout(size, orthogonalSize) {\n        this._size = size;\n        this._orthogonalSize = orthogonalSize;\n        this.view.layout(this.width, this.height);\n    }\n    dispose() {\n        this._onDidChange.dispose();\n        this._disposable.dispose();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/grid\n *--------------------------------------------------------------------------------------------*/\nimport { Splitview, Orientation, LayoutPriority, } from '../splitview/core/splitview';\nimport { Emitter, Event } from '../events';\nimport { LeafNode } from './leafNode';\nimport { CompositeDisposable, Disposable } from '../lifecycle';\nexport class BranchNode extends CompositeDisposable {\n    get width() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.size\n            : this.orthogonalSize;\n    }\n    get height() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.orthogonalSize\n            : this.size;\n    }\n    get minimumSize() {\n        return this.children.length === 0\n            ? 0\n            : Math.max(...this.children.map((c) => c.minimumOrthogonalSize));\n    }\n    get maximumSize() {\n        return Math.min(...this.children.map((c) => c.maximumOrthogonalSize));\n    }\n    get minimumOrthogonalSize() {\n        return this.splitview.minimumSize;\n    }\n    get maximumOrthogonalSize() {\n        return this.splitview.maximumSize;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    get size() {\n        return this._size;\n    }\n    get minimumWidth() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumOrthogonalSize\n            : this.minimumSize;\n    }\n    get minimumHeight() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumSize\n            : this.minimumOrthogonalSize;\n    }\n    get maximumWidth() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumOrthogonalSize\n            : this.maximumSize;\n    }\n    get maximumHeight() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumSize\n            : this.maximumOrthogonalSize;\n    }\n    get priority() {\n        if (this.children.length === 0) {\n            return LayoutPriority.Normal;\n        }\n        const priorities = this.children.map((c) => typeof c.priority === 'undefined'\n            ? LayoutPriority.Normal\n            : c.priority);\n        if (priorities.some((p) => p === LayoutPriority.High)) {\n            return LayoutPriority.High;\n        }\n        else if (priorities.some((p) => p === LayoutPriority.Low)) {\n            return LayoutPriority.Low;\n        }\n        return LayoutPriority.Normal;\n    }\n    constructor(orientation, proportionalLayout, styles, size, orthogonalSize, childDescriptors) {\n        super();\n        this.orientation = orientation;\n        this.proportionalLayout = proportionalLayout;\n        this.styles = styles;\n        this._childrenDisposable = Disposable.NONE;\n        this.children = [];\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._orthogonalSize = orthogonalSize;\n        this._size = size;\n        this.element = document.createElement('div');\n        this.element.className = 'branch-node';\n        if (!childDescriptors) {\n            this.splitview = new Splitview(this.element, {\n                orientation: this.orientation,\n                proportionalLayout,\n                styles,\n            });\n            this.splitview.layout(this.size, this.orthogonalSize);\n        }\n        else {\n            const descriptor = {\n                views: childDescriptors.map((childDescriptor) => {\n                    return {\n                        view: childDescriptor.node,\n                        size: childDescriptor.node.size,\n                        visible: childDescriptor.node instanceof LeafNode &&\n                            childDescriptor.visible !== undefined\n                            ? childDescriptor.visible\n                            : true,\n                    };\n                }),\n                size: this.size,\n            };\n            this.children = childDescriptors.map((c) => c.node);\n            this.splitview = new Splitview(this.element, {\n                orientation: this.orientation,\n                descriptor,\n                proportionalLayout,\n            });\n        }\n        this.addDisposables(this._onDidChange, this.splitview.onDidSashEnd(() => {\n            this._onDidChange.fire({});\n        }));\n        this.setupChildrenEvents();\n    }\n    setVisible(visible) {\n        for (const child of this.children) {\n            child.setVisible(visible);\n        }\n    }\n    isChildVisible(index) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        return this.splitview.isViewVisible(index);\n    }\n    setChildVisible(index, visible) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        if (this.splitview.isViewVisible(index) === visible) {\n            return;\n        }\n        this.splitview.setViewVisible(index, visible);\n    }\n    moveChild(from, to) {\n        if (from === to) {\n            return;\n        }\n        if (from < 0 || from >= this.children.length) {\n            throw new Error('Invalid from index');\n        }\n        if (from < to) {\n            to--;\n        }\n        this.splitview.moveView(from, to);\n        const child = this._removeChild(from);\n        this._addChild(child, to);\n    }\n    getChildSize(index) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        return this.splitview.getViewSize(index);\n    }\n    resizeChild(index, size) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        this.splitview.resizeView(index, size);\n    }\n    layout(size, orthogonalSize) {\n        this._size = orthogonalSize;\n        this._orthogonalSize = size;\n        this.splitview.layout(this.size, this.orthogonalSize);\n    }\n    addChild(node, size, index, skipLayout) {\n        if (index < 0 || index > this.children.length) {\n            throw new Error('Invalid index');\n        }\n        this.splitview.addView(node, size, index, skipLayout);\n        this._addChild(node, index);\n    }\n    getChildCachedVisibleSize(index) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        return this.splitview.getViewCachedVisibleSize(index);\n    }\n    removeChild(index, sizing) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        this.splitview.removeView(index, sizing);\n        this._removeChild(index);\n    }\n    _addChild(node, index) {\n        this.children.splice(index, 0, node);\n        this.setupChildrenEvents();\n    }\n    _removeChild(index) {\n        const [child] = this.children.splice(index, 1);\n        this.setupChildrenEvents();\n        return child;\n    }\n    setupChildrenEvents() {\n        this._childrenDisposable.dispose();\n        this._childrenDisposable = Event.any(...this.children.map((c) => c.onDidChange))((e) => {\n            /**\n             * indicate a change has occured to allows any re-rendering but don't bubble\n             * event because that was specific to this branch\n             */\n            this._onDidChange.fire({ size: e.orthogonalSize });\n        });\n    }\n    dispose() {\n        super.dispose();\n        this._childrenDisposable.dispose();\n        this.children.forEach((child) => child.dispose());\n        this.splitview.dispose();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/grid\n *--------------------------------------------------------------------------------------------*/\nimport { Orientation, Sizing, } from '../splitview/core/splitview';\nimport { tail } from '../array';\nimport { LeafNode } from './leafNode';\nimport { BranchNode } from './branchNode';\nimport { Emitter } from '../events';\nimport { MutableDisposable } from '../lifecycle';\nfunction findLeaf(candiateNode, last) {\n    if (candiateNode instanceof LeafNode) {\n        return candiateNode;\n    }\n    if (candiateNode instanceof BranchNode) {\n        return findLeaf(candiateNode.children[last ? candiateNode.children.length - 1 : 0], last);\n    }\n    throw new Error('invalid node');\n}\nfunction flipNode(node, size, orthogonalSize) {\n    if (node instanceof BranchNode) {\n        const result = new BranchNode(orthogonal(node.orientation), node.proportionalLayout, node.styles, size, orthogonalSize);\n        let totalSize = 0;\n        for (let i = node.children.length - 1; i >= 0; i--) {\n            const child = node.children[i];\n            const childSize = child instanceof BranchNode ? child.orthogonalSize : child.size;\n            let newSize = node.size === 0\n                ? 0\n                : Math.round((size * childSize) / node.size);\n            totalSize += newSize;\n            // The last view to add should adjust to rounding errors\n            if (i === 0) {\n                newSize += size - totalSize;\n            }\n            result.addChild(flipNode(child, orthogonalSize, newSize), newSize, 0, true);\n        }\n        return result;\n    }\n    else {\n        return new LeafNode(node.view, orthogonal(node.orientation), orthogonalSize);\n    }\n}\nexport function indexInParent(element) {\n    const parentElement = element.parentElement;\n    if (!parentElement) {\n        throw new Error('Invalid grid element');\n    }\n    let el = parentElement.firstElementChild;\n    let index = 0;\n    while (el !== element && el !== parentElement.lastElementChild && el) {\n        el = el.nextElementSibling;\n        index++;\n    }\n    return index;\n}\n/**\n * Find the grid location of a specific DOM element by traversing the parent\n * chain and finding each child index on the way.\n *\n * This will break as soon as DOM structures of the Splitview or Gridview change.\n */\nexport function getGridLocation(element) {\n    const parentElement = element.parentElement;\n    if (!parentElement) {\n        throw new Error('Invalid grid element');\n    }\n    if (/\\bgrid-view\\b/.test(parentElement.className)) {\n        return [];\n    }\n    const index = indexInParent(parentElement);\n    const ancestor = parentElement.parentElement.parentElement.parentElement;\n    return [...getGridLocation(ancestor), index];\n}\nexport function getRelativeLocation(rootOrientation, location, direction) {\n    const orientation = getLocationOrientation(rootOrientation, location);\n    const directionOrientation = getDirectionOrientation(direction);\n    if (orientation === directionOrientation) {\n        const [rest, _index] = tail(location);\n        let index = _index;\n        if (direction === 'right' || direction === 'bottom') {\n            index += 1;\n        }\n        return [...rest, index];\n    }\n    else {\n        const index = direction === 'right' || direction === 'bottom' ? 1 : 0;\n        return [...location, index];\n    }\n}\nexport function getDirectionOrientation(direction) {\n    return direction === 'top' || direction === 'bottom'\n        ? Orientation.VERTICAL\n        : Orientation.HORIZONTAL;\n}\nexport function getLocationOrientation(rootOrientation, location) {\n    return location.length % 2 === 0\n        ? orthogonal(rootOrientation)\n        : rootOrientation;\n}\nexport const orthogonal = (orientation) => orientation === Orientation.HORIZONTAL\n    ? Orientation.VERTICAL\n    : Orientation.HORIZONTAL;\nexport function isGridBranchNode(node) {\n    return !!node.children;\n}\nconst serializeBranchNode = (node, orientation) => {\n    const size = orientation === Orientation.VERTICAL ? node.box.width : node.box.height;\n    if (!isGridBranchNode(node)) {\n        if (typeof node.cachedVisibleSize === 'number') {\n            return {\n                type: 'leaf',\n                data: node.view.toJSON(),\n                size: node.cachedVisibleSize,\n                visible: false,\n            };\n        }\n        return { type: 'leaf', data: node.view.toJSON(), size };\n    }\n    return {\n        type: 'branch',\n        data: node.children.map((c) => serializeBranchNode(c, orthogonal(orientation))),\n        size,\n    };\n};\nexport class Gridview {\n    get length() {\n        return this._root ? this._root.children.length : 0;\n    }\n    get orientation() {\n        return this.root.orientation;\n    }\n    set orientation(orientation) {\n        if (this.root.orientation === orientation) {\n            return;\n        }\n        const { size, orthogonalSize } = this.root;\n        this.root = flipNode(this.root, orthogonalSize, size);\n        this.root.layout(size, orthogonalSize);\n    }\n    get width() {\n        return this.root.width;\n    }\n    get height() {\n        return this.root.height;\n    }\n    get minimumWidth() {\n        return this.root.minimumWidth;\n    }\n    get minimumHeight() {\n        return this.root.minimumHeight;\n    }\n    get maximumWidth() {\n        return this.root.maximumHeight;\n    }\n    get maximumHeight() {\n        return this.root.maximumHeight;\n    }\n    serialize() {\n        const root = serializeBranchNode(this.getView(), this.orientation);\n        return {\n            root,\n            width: this.width,\n            height: this.height,\n            orientation: this.orientation,\n        };\n    }\n    dispose() {\n        this.disposable.dispose();\n        this._onDidChange.dispose();\n        this.root.dispose();\n        this.element.remove();\n    }\n    clear() {\n        const orientation = this.root.orientation;\n        this.root = new BranchNode(orientation, this.proportionalLayout, this.styles, this.root.size, this.root.orthogonalSize);\n    }\n    deserialize(json, deserializer) {\n        const orientation = json.orientation;\n        const height = orientation === Orientation.VERTICAL ? json.height : json.width;\n        this._deserialize(json.root, orientation, deserializer, height);\n    }\n    _deserialize(root, orientation, deserializer, orthogonalSize) {\n        this.root = this._deserializeNode(root, orientation, deserializer, orthogonalSize, true);\n    }\n    _deserializeNode(node, orientation, deserializer, orthogonalSize, isRoot = false) {\n        let result;\n        if (node.type === 'branch') {\n            const serializedChildren = node.data;\n            const children = serializedChildren.map((serializedChild) => {\n                return {\n                    node: this._deserializeNode(serializedChild, orthogonal(orientation), deserializer, node.size),\n                    visible: serializedChild.visible,\n                };\n            });\n            // HORIZONTAL => height=orthogonalsize width=size\n            // VERTICAL => height=size width=orthogonalsize\n            result = new BranchNode(orientation, this.proportionalLayout, this.styles, isRoot ? orthogonalSize : node.size, isRoot ? node.size : orthogonalSize, children);\n        }\n        else {\n            result = new LeafNode(deserializer.fromJSON(node), orientation, orthogonalSize, node.size);\n        }\n        return result;\n    }\n    get root() {\n        return this._root;\n    }\n    set root(root) {\n        const oldRoot = this._root;\n        if (oldRoot) {\n            oldRoot.dispose();\n            this.element.removeChild(oldRoot.element);\n        }\n        this._root = root;\n        this.element.appendChild(this._root.element);\n        this.disposable.value = this._root.onDidChange((e) => {\n            this._onDidChange.fire(e);\n        });\n    }\n    /**\n     * If the root is orientated as a VERTICAL node then nest the existing root within a new HORIZIONTAL root node\n     * If the root is orientated as a HORIZONTAL node then nest the existing root within a new VERITCAL root node\n     */\n    insertOrthogonalSplitviewAtRoot() {\n        if (!this._root) {\n            return;\n        }\n        const oldRoot = this.root;\n        oldRoot.element.remove();\n        this._root = new BranchNode(orthogonal(oldRoot.orientation), this.proportionalLayout, this.styles, this.root.orthogonalSize, this.root.size);\n        if (oldRoot.children.length === 1) {\n            // can remove one level of redundant branching if there is only a single child\n            const childReference = oldRoot.children[0];\n            oldRoot.removeChild(0); // remove to prevent disposal when disposing of unwanted root\n            oldRoot.dispose();\n            this._root.addChild(childReference, Sizing.Distribute, 0);\n        }\n        else {\n            this._root.addChild(oldRoot, Sizing.Distribute, 0);\n        }\n        this.element.appendChild(this._root.element);\n        this.disposable.value = this._root.onDidChange((e) => {\n            this._onDidChange.fire(e);\n        });\n    }\n    next(location) {\n        return this.progmaticSelect(location);\n    }\n    previous(location) {\n        return this.progmaticSelect(location, true);\n    }\n    getView(location) {\n        const node = location ? this.getNode(location)[1] : this.root;\n        return this._getViews(node, this.orientation);\n    }\n    _getViews(node, orientation, cachedVisibleSize) {\n        const box = { height: node.height, width: node.width };\n        if (node instanceof LeafNode) {\n            return { box, view: node.view, cachedVisibleSize };\n        }\n        const children = [];\n        for (let i = 0; i < node.children.length; i++) {\n            const child = node.children[i];\n            const nodeCachedVisibleSize = node.getChildCachedVisibleSize(i);\n            children.push(this._getViews(child, orthogonal(orientation), nodeCachedVisibleSize));\n        }\n        return { box, children };\n    }\n    progmaticSelect(location, reverse = false) {\n        const [path, node] = this.getNode(location);\n        if (!(node instanceof LeafNode)) {\n            throw new Error('invalid location');\n        }\n        for (let i = path.length - 1; i > -1; i--) {\n            const n = path[i];\n            const l = location[i] || 0;\n            const canProgressInCurrentLevel = reverse\n                ? l - 1 > -1\n                : l + 1 < n.children.length;\n            if (canProgressInCurrentLevel) {\n                return findLeaf(n.children[reverse ? l - 1 : l + 1], reverse);\n            }\n        }\n        return findLeaf(this.root, reverse);\n    }\n    constructor(proportionalLayout, styles, orientation) {\n        this.proportionalLayout = proportionalLayout;\n        this.styles = styles;\n        this.disposable = new MutableDisposable();\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this.element = document.createElement('div');\n        this.element.className = 'grid-view';\n        this.root = new BranchNode(orientation, proportionalLayout, styles, 0, 0);\n    }\n    isViewVisible(location) {\n        const [rest, index] = tail(location);\n        const [, parent] = this.getNode(rest);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid from location');\n        }\n        return parent.isChildVisible(index);\n    }\n    setViewVisible(location, visible) {\n        const [rest, index] = tail(location);\n        const [, parent] = this.getNode(rest);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid from location');\n        }\n        parent.setChildVisible(index, visible);\n    }\n    moveView(parentLocation, from, to) {\n        const [, parent] = this.getNode(parentLocation);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid location');\n        }\n        parent.moveChild(from, to);\n    }\n    addView(view, size, location) {\n        const [rest, index] = tail(location);\n        const [pathToParent, parent] = this.getNode(rest);\n        if (parent instanceof BranchNode) {\n            const node = new LeafNode(view, orthogonal(parent.orientation), parent.orthogonalSize);\n            parent.addChild(node, size, index);\n        }\n        else {\n            const [grandParent, ..._] = [...pathToParent].reverse();\n            const [parentIndex, ...__] = [...rest].reverse();\n            let newSiblingSize = 0;\n            const newSiblingCachedVisibleSize = grandParent.getChildCachedVisibleSize(parentIndex);\n            if (typeof newSiblingCachedVisibleSize === 'number') {\n                newSiblingSize = Sizing.Invisible(newSiblingCachedVisibleSize);\n            }\n            grandParent.removeChild(parentIndex);\n            const newParent = new BranchNode(parent.orientation, this.proportionalLayout, this.styles, parent.size, parent.orthogonalSize);\n            grandParent.addChild(newParent, parent.size, parentIndex);\n            const newSibling = new LeafNode(parent.view, grandParent.orientation, parent.size);\n            newParent.addChild(newSibling, newSiblingSize, 0);\n            if (typeof size !== 'number' && size.type === 'split') {\n                size = { type: 'split', index: 0 };\n            }\n            const node = new LeafNode(view, grandParent.orientation, parent.size);\n            newParent.addChild(node, size, index);\n        }\n    }\n    remove(view, sizing) {\n        const location = getGridLocation(view.element);\n        return this.removeView(location, sizing);\n    }\n    removeView(location, sizing) {\n        const [rest, index] = tail(location);\n        const [pathToParent, parent] = this.getNode(rest);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid location');\n        }\n        const node = parent.children[index];\n        if (!(node instanceof LeafNode)) {\n            throw new Error('Invalid location');\n        }\n        parent.removeChild(index, sizing);\n        if (parent.children.length === 0) {\n            return node.view;\n        }\n        if (parent.children.length > 1) {\n            return node.view;\n        }\n        const sibling = parent.children[0];\n        if (pathToParent.length === 0) {\n            // parent is root\n            if (sibling instanceof LeafNode) {\n                return node.view;\n            }\n            // we must promote sibling to be the new root\n            parent.removeChild(0, sizing);\n            this.root = sibling;\n            return node.view;\n        }\n        const [grandParent, ..._] = [...pathToParent].reverse();\n        const [parentIndex, ...__] = [...rest].reverse();\n        const isSiblingVisible = parent.isChildVisible(0);\n        parent.removeChild(0, sizing);\n        const sizes = grandParent.children.map((_size, i) => grandParent.getChildSize(i));\n        grandParent.removeChild(parentIndex, sizing);\n        if (sibling instanceof BranchNode) {\n            sizes.splice(parentIndex, 1, ...sibling.children.map((c) => c.size));\n            for (let i = 0; i < sibling.children.length; i++) {\n                const child = sibling.children[i];\n                grandParent.addChild(child, child.size, parentIndex + i);\n            }\n        }\n        else {\n            const newSibling = new LeafNode(sibling.view, orthogonal(sibling.orientation), sibling.size);\n            const siblingSizing = isSiblingVisible\n                ? sibling.orthogonalSize\n                : Sizing.Invisible(sibling.orthogonalSize);\n            grandParent.addChild(newSibling, siblingSizing, parentIndex);\n        }\n        for (let i = 0; i < sizes.length; i++) {\n            grandParent.resizeChild(i, sizes[i]);\n        }\n        return node.view;\n    }\n    layout(width, height) {\n        const [size, orthogonalSize] = this.root.orientation === Orientation.HORIZONTAL\n            ? [height, width]\n            : [width, height];\n        this.root.layout(size, orthogonalSize);\n    }\n    getNode(location, node = this.root, path = []) {\n        if (location.length === 0) {\n            return [path, node];\n        }\n        if (!(node instanceof BranchNode)) {\n            throw new Error('Invalid location');\n        }\n        const [index, ...rest] = location;\n        if (index < 0 || index >= node.children.length) {\n            throw new Error('Invalid location');\n        }\n        const child = node.children[index];\n        path.push(node);\n        return this.getNode(rest, child, path);\n    }\n}\n","import { Emitter } from '../events';\nexport class SplitviewApi {\n    get minimumSize() {\n        return this.component.minimumSize;\n    }\n    get maximumSize() {\n        return this.component.maximumSize;\n    }\n    get height() {\n        return this.component.height;\n    }\n    get width() {\n        return this.component.width;\n    }\n    get length() {\n        return this.component.length;\n    }\n    get orientation() {\n        return this.component.orientation;\n    }\n    get panels() {\n        return this.component.panels;\n    }\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    get onDidAddView() {\n        return this.component.onDidAddView;\n    }\n    get onDidRemoveView() {\n        return this.component.onDidRemoveView;\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    updateOptions(options) {\n        this.component.updateOptions(options);\n    }\n    removePanel(panel, sizing) {\n        this.component.removePanel(panel, sizing);\n    }\n    focus() {\n        this.component.focus();\n    }\n    getPanel(id) {\n        return this.component.getPanel(id);\n    }\n    layout(width, height) {\n        return this.component.layout(width, height);\n    }\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    movePanel(from, to) {\n        this.component.movePanel(from, to);\n    }\n    fromJSON(data) {\n        this.component.fromJSON(data);\n    }\n    toJSON() {\n        return this.component.toJSON();\n    }\n    clear() {\n        this.component.clear();\n    }\n}\nexport class PaneviewApi {\n    get minimumSize() {\n        return this.component.minimumSize;\n    }\n    get maximumSize() {\n        return this.component.maximumSize;\n    }\n    get height() {\n        return this.component.height;\n    }\n    get width() {\n        return this.component.width;\n    }\n    get panels() {\n        return this.component.panels;\n    }\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    get onDidAddView() {\n        return this.component.onDidAddView;\n    }\n    get onDidRemoveView() {\n        return this.component.onDidRemoveView;\n    }\n    get onDidDrop() {\n        const emitter = new Emitter();\n        const disposable = this.component.onDidDrop((e) => {\n            emitter.fire(Object.assign(Object.assign({}, e), { api: this }));\n        });\n        emitter.dispose = () => {\n            disposable.dispose();\n            emitter.dispose();\n        };\n        return emitter.event;\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    removePanel(panel) {\n        this.component.removePanel(panel);\n    }\n    getPanel(id) {\n        return this.component.getPanel(id);\n    }\n    movePanel(from, to) {\n        this.component.movePanel(from, to);\n    }\n    focus() {\n        this.component.focus();\n    }\n    layout(width, height) {\n        this.component.layout(width, height);\n    }\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    fromJSON(data) {\n        this.component.fromJSON(data);\n    }\n    toJSON() {\n        return this.component.toJSON();\n    }\n    clear() {\n        this.component.clear();\n    }\n}\nexport class GridviewApi {\n    get minimumHeight() {\n        return this.component.minimumHeight;\n    }\n    get maximumHeight() {\n        return this.component.maximumHeight;\n    }\n    get minimumWidth() {\n        return this.component.minimumWidth;\n    }\n    get maximumWidth() {\n        return this.component.maximumWidth;\n    }\n    get width() {\n        return this.component.width;\n    }\n    get height() {\n        return this.component.height;\n    }\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    get onDidAddPanel() {\n        return this.component.onDidAddGroup;\n    }\n    get onDidRemovePanel() {\n        return this.component.onDidRemoveGroup;\n    }\n    get onDidActivePanelChange() {\n        return this.component.onDidActiveGroupChange;\n    }\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    get panels() {\n        return this.component.groups;\n    }\n    get orientation() {\n        return this.component.orientation;\n    }\n    set orientation(value) {\n        this.component.updateOptions({ orientation: value });\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    focus() {\n        this.component.focus();\n    }\n    layout(width, height, force = false) {\n        this.component.layout(width, height, force);\n    }\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    removePanel(panel, sizing) {\n        this.component.removePanel(panel, sizing);\n    }\n    movePanel(panel, options) {\n        this.component.movePanel(panel, options);\n    }\n    getPanel(id) {\n        return this.component.getPanel(id);\n    }\n    fromJSON(data) {\n        return this.component.fromJSON(data);\n    }\n    toJSON() {\n        return this.component.toJSON();\n    }\n    clear() {\n        this.component.clear();\n    }\n}\nexport class DockviewApi {\n    get id() {\n        return this.component.id;\n    }\n    get width() {\n        return this.component.width;\n    }\n    get height() {\n        return this.component.height;\n    }\n    get minimumHeight() {\n        return this.component.minimumHeight;\n    }\n    get maximumHeight() {\n        return this.component.maximumHeight;\n    }\n    get minimumWidth() {\n        return this.component.minimumWidth;\n    }\n    get maximumWidth() {\n        return this.component.maximumWidth;\n    }\n    get size() {\n        return this.component.size;\n    }\n    get totalPanels() {\n        return this.component.totalPanels;\n    }\n    get onDidActiveGroupChange() {\n        return this.component.onDidActiveGroupChange;\n    }\n    get onDidAddGroup() {\n        return this.component.onDidAddGroup;\n    }\n    get onDidRemoveGroup() {\n        return this.component.onDidRemoveGroup;\n    }\n    get onDidActivePanelChange() {\n        return this.component.onDidActivePanelChange;\n    }\n    get onDidAddPanel() {\n        return this.component.onDidAddPanel;\n    }\n    get onDidRemovePanel() {\n        return this.component.onDidRemovePanel;\n    }\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    get onDidDrop() {\n        return this.component.onDidDrop;\n    }\n    get panels() {\n        return this.component.panels;\n    }\n    get groups() {\n        return this.component.groups;\n    }\n    get activePanel() {\n        return this.component.activePanel;\n    }\n    get activeGroup() {\n        return this.component.activeGroup;\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    getTabHeight() {\n        return this.component.tabHeight;\n    }\n    setTabHeight(height) {\n        this.component.tabHeight = height;\n    }\n    focus() {\n        this.component.focus();\n    }\n    getPanel(id) {\n        return this.component.getGroupPanel(id);\n    }\n    layout(width, height, force = false) {\n        this.component.layout(width, height, force);\n    }\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    addGroup(options) {\n        return this.component.addGroup(options);\n    }\n    moveToNext(options) {\n        this.component.moveToNext(options);\n    }\n    moveToPrevious(options) {\n        this.component.moveToPrevious(options);\n    }\n    closeAllGroups() {\n        return this.component.closeAllGroups();\n    }\n    removeGroup(group) {\n        this.component.removeGroup(group);\n    }\n    getGroup(id) {\n        return this.component.getPanel(id);\n    }\n    fromJSON(data) {\n        this.component.fromJSON(data);\n    }\n    toJSON() {\n        return this.component.toJSON();\n    }\n    clear() {\n        this.component.clear();\n    }\n}\n","import { addDisposableListener } from '../events';\nimport { CompositeDisposable } from '../lifecycle';\nexport class DragAndDropObserver extends CompositeDisposable {\n    constructor(element, callbacks) {\n        super();\n        this.element = element;\n        this.callbacks = callbacks;\n        this.target = null;\n        this.registerListeners();\n    }\n    registerListeners() {\n        this.addDisposables(addDisposableListener(this.element, 'dragenter', (e) => {\n            this.target = e.target;\n            this.callbacks.onDragEnter(e);\n        }, true));\n        this.addDisposables(addDisposableListener(this.element, 'dragover', (e) => {\n            e.preventDefault(); // needed so that the drop event fires (https://stackoverflow.com/questions/21339924/drop-event-not-firing-in-chrome)\n            if (this.callbacks.onDragOver) {\n                this.callbacks.onDragOver(e);\n            }\n        }, true));\n        this.addDisposables(addDisposableListener(this.element, 'dragleave', (e) => {\n            if (this.target === e.target) {\n                this.target = null;\n                this.callbacks.onDragLeave(e);\n            }\n        }));\n        this.addDisposables(addDisposableListener(this.element, 'dragend', (e) => {\n            this.target = null;\n            this.callbacks.onDragEnd(e);\n        }));\n        this.addDisposables(addDisposableListener(this.element, 'drop', (e) => {\n            this.callbacks.onDrop(e);\n        }));\n    }\n}\n","import { toggleClass } from '../dom';\nimport { Emitter } from '../events';\nimport { CompositeDisposable } from '../lifecycle';\nimport { DragAndDropObserver } from './dnd';\nimport { clamp } from '../math';\nimport { isBooleanValue } from '../types';\nfunction numberOrFallback(maybeNumber, fallback) {\n    return typeof maybeNumber === 'number' ? maybeNumber : fallback;\n}\nexport function directionToPosition(direction) {\n    switch (direction) {\n        case 'above':\n            return 'top';\n        case 'below':\n            return 'bottom';\n        case 'left':\n            return 'left';\n        case 'right':\n            return 'right';\n        case 'within':\n            return 'center';\n        default:\n            throw new Error(`invalid direction '${direction}'`);\n    }\n}\nexport function positionToDirection(position) {\n    switch (position) {\n        case 'top':\n            return 'above';\n        case 'bottom':\n            return 'below';\n        case 'left':\n            return 'left';\n        case 'right':\n            return 'right';\n        case 'center':\n            return 'within';\n        default:\n            throw new Error(`invalid position '${position}'`);\n    }\n}\nexport class Droptarget extends CompositeDisposable {\n    get state() {\n        return this._state;\n    }\n    constructor(element, options) {\n        super();\n        this.element = element;\n        this.options = options;\n        this._onDrop = new Emitter();\n        this.onDrop = this._onDrop.event;\n        // use a set to take advantage of #<set>.has\n        const acceptedTargetZonesSet = new Set(this.options.acceptedTargetZones);\n        this.addDisposables(this._onDrop, new DragAndDropObserver(this.element, {\n            onDragEnter: () => undefined,\n            onDragOver: (e) => {\n                const width = this.element.clientWidth;\n                const height = this.element.clientHeight;\n                if (width === 0 || height === 0) {\n                    return; // avoid div!0\n                }\n                const rect = e.currentTarget.getBoundingClientRect();\n                const x = e.clientX - rect.left;\n                const y = e.clientY - rect.top;\n                const quadrant = this.calculateQuadrant(acceptedTargetZonesSet, x, y, width, height);\n                if (quadrant === null) {\n                    // no drop target should be displayed\n                    this.removeDropTarget();\n                    return;\n                }\n                if (isBooleanValue(this.options.canDisplayOverlay)) {\n                    if (!this.options.canDisplayOverlay) {\n                        return;\n                    }\n                }\n                else if (!this.options.canDisplayOverlay(e, quadrant)) {\n                    return;\n                }\n                if (!this.target) {\n                    this.target = document.createElement('div');\n                    this.target.className = 'drop-target-dropzone';\n                    this.overlay = document.createElement('div');\n                    this.overlay.className = 'drop-target-selection';\n                    this._state = 'center';\n                    this.target.appendChild(this.overlay);\n                    this.element.classList.add('drop-target');\n                    this.element.append(this.target);\n                }\n                if (this.options.acceptedTargetZones.length === 0) {\n                    return;\n                }\n                if (!this.target || !this.overlay) {\n                    return;\n                }\n                this.toggleClasses(quadrant, width, height);\n                this.setState(quadrant);\n            },\n            onDragLeave: () => {\n                this.removeDropTarget();\n            },\n            onDragEnd: () => {\n                this.removeDropTarget();\n            },\n            onDrop: (e) => {\n                e.preventDefault();\n                e.stopPropagation();\n                const state = this._state;\n                this.removeDropTarget();\n                if (state) {\n                    this._onDrop.fire({ position: state, nativeEvent: e });\n                }\n            },\n        }));\n    }\n    dispose() {\n        this.removeDropTarget();\n    }\n    toggleClasses(quadrant, width, height) {\n        var _a, _b, _c, _d;\n        if (!this.overlay) {\n            return;\n        }\n        const isSmallX = width < 100;\n        const isSmallY = height < 100;\n        const isLeft = quadrant === 'left';\n        const isRight = quadrant === 'right';\n        const isTop = quadrant === 'top';\n        const isBottom = quadrant === 'bottom';\n        const rightClass = !isSmallX && isRight;\n        const leftClass = !isSmallX && isLeft;\n        const topClass = !isSmallY && isTop;\n        const bottomClass = !isSmallY && isBottom;\n        let size = 0.5;\n        if (((_b = (_a = this.options.overlayModel) === null || _a === void 0 ? void 0 : _a.size) === null || _b === void 0 ? void 0 : _b.type) === 'percentage') {\n            size = clamp(this.options.overlayModel.size.value, 0, 100) / 100;\n        }\n        if (((_d = (_c = this.options.overlayModel) === null || _c === void 0 ? void 0 : _c.size) === null || _d === void 0 ? void 0 : _d.type) === 'pixels') {\n            if (rightClass || leftClass) {\n                size =\n                    clamp(0, this.options.overlayModel.size.value, width) /\n                        width;\n            }\n            if (topClass || bottomClass) {\n                size =\n                    clamp(0, this.options.overlayModel.size.value, height) /\n                        height;\n            }\n        }\n        const translate = (1 - size) / 2;\n        const scale = size;\n        let transform;\n        if (rightClass) {\n            transform = `translateX(${100 * translate}%) scaleX(${scale})`;\n        }\n        else if (leftClass) {\n            transform = `translateX(-${100 * translate}%) scaleX(${scale})`;\n        }\n        else if (topClass) {\n            transform = `translateY(-${100 * translate}%) scaleY(${scale})`;\n        }\n        else if (bottomClass) {\n            transform = `translateY(${100 * translate}%) scaleY(${scale})`;\n        }\n        else {\n            transform = '';\n        }\n        this.overlay.style.transform = transform;\n        toggleClass(this.overlay, 'small-right', isSmallX && isRight);\n        toggleClass(this.overlay, 'small-left', isSmallX && isLeft);\n        toggleClass(this.overlay, 'small-top', isSmallY && isTop);\n        toggleClass(this.overlay, 'small-bottom', isSmallY && isBottom);\n    }\n    setState(quadrant) {\n        switch (quadrant) {\n            case 'top':\n                this._state = 'top';\n                break;\n            case 'left':\n                this._state = 'left';\n                break;\n            case 'bottom':\n                this._state = 'bottom';\n                break;\n            case 'right':\n                this._state = 'right';\n                break;\n            case 'center':\n                this._state = 'center';\n                break;\n        }\n    }\n    calculateQuadrant(overlayType, x, y, width, height) {\n        var _a, _b, _c, _d, _e, _f;\n        const isPercentage = ((_a = this.options.overlayModel) === null || _a === void 0 ? void 0 : _a.activationSize) === undefined ||\n            ((_c = (_b = this.options.overlayModel) === null || _b === void 0 ? void 0 : _b.activationSize) === null || _c === void 0 ? void 0 : _c.type) === 'percentage';\n        const value = numberOrFallback((_f = (_e = (_d = this.options) === null || _d === void 0 ? void 0 : _d.overlayModel) === null || _e === void 0 ? void 0 : _e.activationSize) === null || _f === void 0 ? void 0 : _f.value, 20);\n        if (isPercentage) {\n            return calculateQuadrantAsPercentage(overlayType, x, y, width, height, value);\n        }\n        return calculateQuadrantAsPixels(overlayType, x, y, width, height, value);\n    }\n    removeDropTarget() {\n        if (this.target) {\n            this._state = undefined;\n            this.element.removeChild(this.target);\n            this.target = undefined;\n            this.overlay = undefined;\n            this.element.classList.remove('drop-target');\n        }\n    }\n}\nexport function calculateQuadrantAsPercentage(overlayType, x, y, width, height, threshold) {\n    const xp = (100 * x) / width;\n    const yp = (100 * y) / height;\n    if (overlayType.has('left') && xp < threshold) {\n        return 'left';\n    }\n    if (overlayType.has('right') && xp > 100 - threshold) {\n        return 'right';\n    }\n    if (overlayType.has('top') && yp < threshold) {\n        return 'top';\n    }\n    if (overlayType.has('bottom') && yp > 100 - threshold) {\n        return 'bottom';\n    }\n    if (!overlayType.has('center')) {\n        return null;\n    }\n    return 'center';\n}\nexport function calculateQuadrantAsPixels(overlayType, x, y, width, height, threshold) {\n    if (overlayType.has('left') && x < threshold) {\n        return 'left';\n    }\n    if (overlayType.has('right') && x > width - threshold) {\n        return 'right';\n    }\n    if (overlayType.has('top') && y < threshold) {\n        return 'top';\n    }\n    if (overlayType.has('bottom') && y > height - threshold) {\n        return 'bottom';\n    }\n    if (!overlayType.has('center')) {\n        return null;\n    }\n    return 'center';\n}\n","export function isBooleanValue(value) {\n    return typeof value === 'boolean';\n}\n","import { CompositeDisposable, MutableDisposable, } from '../../../lifecycle';\nimport { Emitter } from '../../../events';\nimport { trackFocus } from '../../../dom';\nexport class ContentContainer extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor() {\n        super();\n        this.disposable = new MutableDisposable();\n        this._onDidFocus = new Emitter();\n        this.onDidFocus = this._onDidFocus.event;\n        this._onDidBlur = new Emitter();\n        this.onDidBlur = this._onDidBlur.event;\n        this._element = document.createElement('div');\n        this._element.className = 'content-container';\n        this._element.tabIndex = -1;\n        this.addDisposables(this._onDidFocus, this._onDidBlur);\n        // for hosted containers\n        // 1) register a drop target on the host\n        // 2) register window dragStart events to disable pointer events\n        // 3) register dragEnd events\n        // 4) register mouseMove events (if no buttons are present we take this as a dragEnd event)\n    }\n    show() {\n        this.element.style.display = '';\n    }\n    hide() {\n        this.element.style.display = 'none';\n    }\n    openPanel(panel) {\n        var _a;\n        if (this.panel === panel) {\n            return;\n        }\n        if (this.panel) {\n            if ((_a = this.panel.view) === null || _a === void 0 ? void 0 : _a.content) {\n                this._element.removeChild(this.panel.view.content.element);\n            }\n            this.panel = undefined;\n        }\n        this.panel = panel;\n        const disposable = new CompositeDisposable();\n        if (this.panel.view) {\n            const _onDidFocus = this.panel.view.content.onDidFocus;\n            const _onDidBlur = this.panel.view.content.onDidBlur;\n            const { onDidFocus, onDidBlur } = trackFocus(this._element);\n            disposable.addDisposables(onDidFocus(() => this._onDidFocus.fire()), onDidBlur(() => this._onDidBlur.fire()));\n            if (_onDidFocus) {\n                disposable.addDisposables(_onDidFocus(() => this._onDidFocus.fire()));\n            }\n            if (_onDidBlur) {\n                disposable.addDisposables(_onDidBlur(() => this._onDidBlur.fire()));\n            }\n            this._element.appendChild(this.panel.view.content.element);\n        }\n        this.disposable.value = disposable;\n    }\n    layout(_width, _height) {\n        // noop\n    }\n    closePanel() {\n        var _a, _b, _c;\n        if ((_c = (_b = (_a = this.panel) === null || _a === void 0 ? void 0 : _a.view) === null || _b === void 0 ? void 0 : _b.content) === null || _c === void 0 ? void 0 : _c.element) {\n            this._element.removeChild(this.panel.view.content.element);\n            this.panel = undefined;\n        }\n    }\n    dispose() {\n        this.disposable.dispose();\n        super.dispose();\n    }\n}\n","export var DockviewDropTargets;\n(function (DockviewDropTargets) {\n    DockviewDropTargets[DockviewDropTargets[\"Tab\"] = 0] = \"Tab\";\n    DockviewDropTargets[DockviewDropTargets[\"Panel\"] = 1] = \"Panel\";\n    DockviewDropTargets[DockviewDropTargets[\"TabContainer\"] = 2] = \"TabContainer\";\n    DockviewDropTargets[DockviewDropTargets[\"Edge\"] = 3] = \"Edge\";\n})(DockviewDropTargets || (DockviewDropTargets = {}));\n","import { getElementsByTagName } from '../dom';\nimport { addDisposableListener, Emitter } from '../events';\nimport { CompositeDisposable, MutableDisposable, } from '../lifecycle';\nexport class DragHandler extends CompositeDisposable {\n    constructor(el) {\n        super();\n        this.el = el;\n        this.disposable = new MutableDisposable();\n        this._onDragStart = new Emitter();\n        this.onDragStart = this._onDragStart.event;\n        this.iframes = [];\n        this.configure();\n    }\n    configure() {\n        this.addDisposables(this._onDragStart, addDisposableListener(this.el, 'dragstart', (event) => {\n            this.iframes = [\n                ...getElementsByTagName('iframe'),\n                ...getElementsByTagName('webview'),\n            ];\n            for (const iframe of this.iframes) {\n                iframe.style.pointerEvents = 'none';\n            }\n            this.el.classList.add('dv-dragged');\n            setTimeout(() => this.el.classList.remove('dv-dragged'), 0);\n            this.disposable.value = this.getData(event.dataTransfer);\n            if (event.dataTransfer) {\n                event.dataTransfer.effectAllowed = 'move';\n            }\n        }), addDisposableListener(this.el, 'dragend', () => {\n            for (const iframe of this.iframes) {\n                iframe.style.pointerEvents = 'auto';\n            }\n            this.iframes = [];\n            this.disposable.dispose();\n        }));\n    }\n}\n","import { addDisposableListener, Emitter } from '../../../events';\nimport { CompositeDisposable } from '../../../lifecycle';\nimport { getPanelData, LocalSelectionTransfer, PanelTransfer, } from '../../../dnd/dataTransfer';\nimport { toggleClass } from '../../../dom';\nimport { DockviewDropTargets } from '../../types';\nimport { Droptarget } from '../../../dnd/droptarget';\nimport { DragHandler } from '../../../dnd/abstractDragHandler';\nexport class Tab extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor(panelId, accessor, group) {\n        super();\n        this.panelId = panelId;\n        this.accessor = accessor;\n        this.group = group;\n        this._onChanged = new Emitter();\n        this.onChanged = this._onChanged.event;\n        this._onDropped = new Emitter();\n        this.onDrop = this._onDropped.event;\n        this.addDisposables(this._onChanged, this._onDropped);\n        this._element = document.createElement('div');\n        this._element.className = 'tab';\n        this._element.tabIndex = 0;\n        this._element.draggable = true;\n        toggleClass(this.element, 'inactive-tab', true);\n        this.addDisposables(new (class Handler extends DragHandler {\n            constructor() {\n                super(...arguments);\n                this.panelTransfer = LocalSelectionTransfer.getInstance();\n            }\n            getData() {\n                this.panelTransfer.setData([new PanelTransfer(accessor.id, group.id, panelId)], PanelTransfer.prototype);\n                return {\n                    dispose: () => {\n                        this.panelTransfer.clearData(PanelTransfer.prototype);\n                    },\n                };\n            }\n            dispose() {\n                //\n            }\n        })(this._element));\n        this.addDisposables(addDisposableListener(this._element, 'mousedown', (event) => {\n            if (event.defaultPrevented) {\n                return;\n            }\n            /**\n             * TODO: alternative to stopPropagation\n             *\n             * I need to stop the event propagation here since otherwise it'll be intercepted by event handlers\n             * on the tabs-container. I cannot use event.preventDefault() since I need the on DragStart event to occur\n             */\n            event.stopPropagation();\n            this._onChanged.fire(event);\n        }));\n        this.droptarget = new Droptarget(this._element, {\n            acceptedTargetZones: ['center'],\n            canDisplayOverlay: (event, position) => {\n                if (this.group.locked) {\n                    return false;\n                }\n                const data = getPanelData();\n                if (data && this.accessor.id === data.viewId) {\n                    if (data.panelId === null &&\n                        data.groupId === this.group.id) {\n                        // don't allow group move to drop on self\n                        return false;\n                    }\n                    return this.panelId !== data.panelId;\n                }\n                return this.group.model.canDisplayOverlay(event, position, DockviewDropTargets.Tab);\n            },\n        });\n        this.addDisposables(this.droptarget.onDrop((event) => {\n            this._onDropped.fire(event);\n        }));\n    }\n    setActive(isActive) {\n        toggleClass(this.element, 'active-tab', isActive);\n        toggleClass(this.element, 'inactive-tab', !isActive);\n    }\n    setContent(part) {\n        if (this.content) {\n            this._element.removeChild(this.content.element);\n        }\n        this.content = part;\n        this._element.appendChild(this.content.element);\n    }\n    dispose() {\n        super.dispose();\n        this.droptarget.dispose();\n    }\n}\n","import { DragHandler } from './abstractDragHandler';\nimport { LocalSelectionTransfer, PanelTransfer } from './dataTransfer';\nimport { addGhostImage } from './ghost';\nexport class GroupDragHandler extends DragHandler {\n    constructor(element, accessorId, group) {\n        super(element);\n        this.accessorId = accessorId;\n        this.group = group;\n        this.panelTransfer = LocalSelectionTransfer.getInstance();\n    }\n    getData(dataTransfer) {\n        this.panelTransfer.setData([new PanelTransfer(this.accessorId, this.group.id, null)], PanelTransfer.prototype);\n        const style = window.getComputedStyle(this.el);\n        const bgColor = style.getPropertyValue('--dv-activegroup-visiblepanel-tab-background-color');\n        const color = style.getPropertyValue('--dv-activegroup-visiblepanel-tab-color');\n        if (dataTransfer) {\n            const ghostElement = document.createElement('div');\n            ghostElement.style.backgroundColor = bgColor;\n            ghostElement.style.color = color;\n            ghostElement.style.padding = '2px 8px';\n            ghostElement.style.height = '24px';\n            ghostElement.style.fontSize = '11px';\n            ghostElement.style.lineHeight = '20px';\n            ghostElement.style.borderRadius = '12px';\n            ghostElement.style.position = 'absolute';\n            ghostElement.textContent = `Multiple Panels (${this.group.size})`;\n            addGhostImage(dataTransfer, ghostElement);\n        }\n        return {\n            dispose: () => {\n                this.panelTransfer.clearData(PanelTransfer.prototype);\n            },\n        };\n    }\n    dispose() {\n        //\n    }\n}\n","import { addClasses, removeClasses } from '../dom';\nexport function addGhostImage(dataTransfer, ghostElement) {\n    // class dockview provides to force ghost image to be drawn on a different layer and prevent weird rendering issues\n    addClasses(ghostElement, 'dv-dragged');\n    document.body.appendChild(ghostElement);\n    dataTransfer.setDragImage(ghostElement, 0, 0);\n    setTimeout(() => {\n        removeClasses(ghostElement, 'dv-dragged');\n        ghostElement.remove();\n    }, 0);\n}\n","import { last } from '../../../array';\nimport { getPanelData } from '../../../dnd/dataTransfer';\nimport { Droptarget } from '../../../dnd/droptarget';\nimport { GroupDragHandler } from '../../../dnd/groupDragHandler';\nimport { addDisposableListener, Emitter } from '../../../events';\nimport { CompositeDisposable } from '../../../lifecycle';\nimport { DockviewDropTargets } from '../../types';\nexport class VoidContainer extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor(accessor, group) {\n        super();\n        this.accessor = accessor;\n        this.group = group;\n        this._onDrop = new Emitter();\n        this.onDrop = this._onDrop.event;\n        this._element = document.createElement('div');\n        this._element.className = 'void-container';\n        this._element.tabIndex = 0;\n        this._element.draggable = true;\n        this.addDisposables(this._onDrop, addDisposableListener(this._element, 'click', () => {\n            this.accessor.doSetGroupActive(this.group);\n        }));\n        const handler = new GroupDragHandler(this._element, accessor.id, group);\n        this.voidDropTarget = new Droptarget(this._element, {\n            acceptedTargetZones: ['center'],\n            canDisplayOverlay: (event, position) => {\n                var _a;\n                const data = getPanelData();\n                if (data && this.accessor.id === data.viewId) {\n                    if (data.panelId === null &&\n                        data.groupId === this.group.id) {\n                        // don't allow group move to drop on self\n                        return false;\n                    }\n                    // don't show the overlay if the tab being dragged is the last panel of this group\n                    return ((_a = last(this.group.panels)) === null || _a === void 0 ? void 0 : _a.id) !== data.panelId;\n                }\n                return group.model.canDisplayOverlay(event, position, DockviewDropTargets.Panel);\n            },\n        });\n        this.addDisposables(handler, this.voidDropTarget.onDrop((event) => {\n            this._onDrop.fire(event);\n        }), this.voidDropTarget);\n    }\n}\n","import { CompositeDisposable, } from '../../../lifecycle';\nimport { addDisposableListener, Emitter } from '../../../events';\nimport { Tab } from '../tab/tab';\nimport { VoidContainer } from './voidContainer';\nimport { toggleClass } from '../../../dom';\nexport class TabsContainer extends CompositeDisposable {\n    get panels() {\n        return this.tabs.map((_) => _.value.panelId);\n    }\n    get size() {\n        return this.tabs.length;\n    }\n    get height() {\n        return this._height;\n    }\n    set height(value) {\n        this._height = value;\n        if (typeof value !== 'number') {\n            this.element.style.removeProperty('--dv-tabs-and-actions-container-height');\n        }\n        else {\n            this.element.style.setProperty('--dv-tabs-and-actions-container-height', `${value}px`);\n        }\n    }\n    get hidden() {\n        return this._hidden;\n    }\n    set hidden(value) {\n        this._hidden = value;\n        this.element.style.display = value ? 'none' : '';\n    }\n    show() {\n        if (!this.hidden) {\n            this.element.style.display = '';\n        }\n    }\n    hide() {\n        this._element.style.display = 'none';\n    }\n    setActionElement(element) {\n        if (this.actions === element) {\n            return;\n        }\n        if (this.actions) {\n            this.actions.remove();\n            this.actions = undefined;\n        }\n        if (element) {\n            this.actionContainer.appendChild(element);\n            this.actions = element;\n        }\n    }\n    get element() {\n        return this._element;\n    }\n    isActive(tab) {\n        return (this.selectedIndex > -1 &&\n            this.tabs[this.selectedIndex].value === tab);\n    }\n    at(index) {\n        var _a;\n        return (_a = this.tabs[index]) === null || _a === void 0 ? void 0 : _a.value;\n    }\n    indexOf(id) {\n        return this.tabs.findIndex((tab) => tab.value.panelId === id);\n    }\n    constructor(accessor, group) {\n        super();\n        this.accessor = accessor;\n        this.group = group;\n        this.tabs = [];\n        this.selectedIndex = -1;\n        this._hidden = false;\n        this._onDrop = new Emitter();\n        this.onDrop = this._onDrop.event;\n        this.addDisposables(this._onDrop);\n        this._element = document.createElement('div');\n        this._element.className = 'tabs-and-actions-container';\n        this.height = accessor.options.tabHeight;\n        toggleClass(this._element, 'dv-full-width-single-tab', this.accessor.options.singleTabMode === 'fullwidth');\n        this.addDisposables(this.accessor.onDidAddPanel((e) => {\n            if (e.api.group === this.group) {\n                toggleClass(this._element, 'dv-single-tab', this.size === 1);\n            }\n        }), this.accessor.onDidRemovePanel((e) => {\n            if (e.api.group === this.group) {\n                toggleClass(this._element, 'dv-single-tab', this.size === 1);\n            }\n        }));\n        this.actionContainer = document.createElement('div');\n        this.actionContainer.className = 'action-container';\n        this.tabContainer = document.createElement('div');\n        this.tabContainer.className = 'tabs-container';\n        this.voidContainer = new VoidContainer(this.accessor, this.group);\n        this._element.appendChild(this.tabContainer);\n        this._element.appendChild(this.voidContainer.element);\n        this._element.appendChild(this.actionContainer);\n        this.addDisposables(this.voidContainer, this.voidContainer.onDrop((event) => {\n            this._onDrop.fire({\n                event: event.nativeEvent,\n                index: this.tabs.length,\n            });\n        }), addDisposableListener(this.tabContainer, 'mousedown', (event) => {\n            if (event.defaultPrevented) {\n                return;\n            }\n            const isLeftClick = event.button === 0;\n            if (isLeftClick) {\n                this.accessor.doSetGroupActive(this.group);\n            }\n        }));\n    }\n    setActive(_isGroupActive) {\n        // noop\n    }\n    addTab(tab, index = this.tabs.length) {\n        if (index < 0 || index > this.tabs.length) {\n            throw new Error('invalid location');\n        }\n        this.tabContainer.insertBefore(tab.value.element, this.tabContainer.children[index]);\n        this.tabs = [\n            ...this.tabs.slice(0, index),\n            tab,\n            ...this.tabs.slice(index),\n        ];\n        if (this.selectedIndex < 0) {\n            this.selectedIndex = index;\n        }\n    }\n    delete(id) {\n        const index = this.tabs.findIndex((tab) => tab.value.panelId === id);\n        const tabToRemove = this.tabs.splice(index, 1)[0];\n        const { value, disposable } = tabToRemove;\n        disposable.dispose();\n        value.element.remove();\n    }\n    setActivePanel(panel) {\n        this.tabs.forEach((tab) => {\n            const isActivePanel = panel.id === tab.value.panelId;\n            tab.value.setActive(isActivePanel);\n        });\n    }\n    openPanel(panel, index = this.tabs.length) {\n        var _a;\n        if (this.tabs.find((tab) => tab.value.panelId === panel.id)) {\n            return;\n        }\n        const tabToAdd = new Tab(panel.id, this.accessor, this.group);\n        if (!((_a = panel.view) === null || _a === void 0 ? void 0 : _a.tab)) {\n            throw new Error('invalid header component');\n        }\n        tabToAdd.setContent(panel.view.tab);\n        const disposable = CompositeDisposable.from(tabToAdd.onChanged((event) => {\n            var _a;\n            const alreadyFocused = panel.id === ((_a = this.group.model.activePanel) === null || _a === void 0 ? void 0 : _a.id) &&\n                this.group.model.isContentFocused;\n            const isLeftClick = event.button === 0;\n            if (!isLeftClick || event.defaultPrevented) {\n                return;\n            }\n            this.group.model.openPanel(panel, {\n                skipFocus: alreadyFocused,\n            });\n        }), tabToAdd.onDrop((event) => {\n            this._onDrop.fire({\n                event: event.nativeEvent,\n                index: this.tabs.findIndex((x) => x.value === tabToAdd),\n            });\n        }));\n        const value = { value: tabToAdd, disposable };\n        this.addTab(value, index);\n    }\n    closePanel(panel) {\n        this.delete(panel.id);\n    }\n    dispose() {\n        super.dispose();\n        this.tabs.forEach((tab) => {\n            tab.disposable.dispose();\n        });\n        this.tabs = [];\n    }\n}\n","import { DockviewApi } from '../api/component.api';\nimport { getPanelData } from '../dnd/dataTransfer';\nimport { Droptarget } from '../dnd/droptarget';\nimport { isAncestor, toggleClass } from '../dom';\nimport { addDisposableListener, Emitter } from '../events';\nimport { CompositeDisposable } from '../lifecycle';\nimport { ContentContainer, } from './components/panel/content';\nimport { TabsContainer, } from './components/titlebar/tabsContainer';\nimport { DockviewDropTargets } from './types';\nexport class DockviewGroupPanelModel extends CompositeDisposable {\n    get element() {\n        throw new Error('not supported');\n    }\n    get activePanel() {\n        return this._activePanel;\n    }\n    get locked() {\n        return this._locked;\n    }\n    set locked(value) {\n        this._locked = value;\n        toggleClass(this.container, 'locked-groupview', value);\n    }\n    get isActive() {\n        return this._isGroupActive;\n    }\n    get panels() {\n        return this._panels;\n    }\n    get size() {\n        return this._panels.length;\n    }\n    get isEmpty() {\n        return this._panels.length === 0;\n    }\n    get minimumHeight() {\n        return 100;\n    }\n    get maximumHeight() {\n        return Number.MAX_SAFE_INTEGER;\n    }\n    get minimumWidth() {\n        return 100;\n    }\n    get maximumWidth() {\n        return Number.MAX_SAFE_INTEGER;\n    }\n    get hasWatermark() {\n        return !!(this.watermark && this.container.contains(this.watermark.element));\n    }\n    get header() {\n        return this.tabsContainer;\n    }\n    get isContentFocused() {\n        if (!document.activeElement) {\n            return false;\n        }\n        return isAncestor(document.activeElement, this.contentContainer.element);\n    }\n    constructor(container, accessor, id, options, groupPanel) {\n        super();\n        this.container = container;\n        this.accessor = accessor;\n        this.id = id;\n        this.options = options;\n        this.groupPanel = groupPanel;\n        this._isGroupActive = false;\n        this._locked = false;\n        this.mostRecentlyUsed = [];\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._width = 0;\n        this._height = 0;\n        this._panels = [];\n        this._onMove = new Emitter();\n        this.onMove = this._onMove.event;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onDidAddPanel = new Emitter();\n        this.onDidAddPanel = this._onDidAddPanel.event;\n        this._onDidRemovePanel = new Emitter();\n        this.onDidRemovePanel = this._onDidRemovePanel.event;\n        this._onDidActivePanelChange = new Emitter();\n        this.onDidActivePanelChange = this._onDidActivePanelChange.event;\n        this.container.classList.add('groupview');\n        this.tabsContainer = new TabsContainer(this.accessor, this.groupPanel);\n        this.contentContainer = new ContentContainer();\n        this.dropTarget = new Droptarget(this.contentContainer.element, {\n            acceptedTargetZones: ['top', 'bottom', 'left', 'right', 'center'],\n            canDisplayOverlay: (event, position) => {\n                if (this.locked && position === 'center') {\n                    return false;\n                }\n                const data = getPanelData();\n                if (data && data.viewId === this.accessor.id) {\n                    if (data.groupId === this.id) {\n                        if (position === 'center') {\n                            // don't allow to drop on self for center position\n                            return false;\n                        }\n                        if (data.panelId === null) {\n                            // don't allow group move to drop anywhere on self\n                            return false;\n                        }\n                    }\n                    const groupHasOnePanelAndIsActiveDragElement = this._panels.length === 1 && data.groupId === this.id;\n                    return !groupHasOnePanelAndIsActiveDragElement;\n                }\n                return this.canDisplayOverlay(event, position, DockviewDropTargets.Panel);\n            },\n        });\n        container.append(this.tabsContainer.element, this.contentContainer.element);\n        this.header.hidden = !!options.hideHeader;\n        this.locked = !!options.locked;\n        this.addDisposables(this._onMove, this._onDidChange, this._onDidDrop, this._onDidAddPanel, this._onDidRemovePanel, this._onDidActivePanelChange, this.tabsContainer.onDrop((event) => {\n            this.handleDropEvent(event.event, 'center', event.index);\n        }), this.contentContainer.onDidFocus(() => {\n            this.accessor.doSetGroupActive(this.groupPanel, true);\n        }), this.contentContainer.onDidBlur(() => {\n            // noop\n        }), this.dropTarget.onDrop((event) => {\n            this.handleDropEvent(event.nativeEvent, event.position);\n        }));\n    }\n    initialize() {\n        var _a, _b;\n        if ((_a = this.options) === null || _a === void 0 ? void 0 : _a.panels) {\n            this.options.panels.forEach((panel) => {\n                this.doAddPanel(panel);\n            });\n        }\n        if ((_b = this.options) === null || _b === void 0 ? void 0 : _b.activePanel) {\n            this.openPanel(this.options.activePanel);\n        }\n        // must be run after the constructor otherwise this.parent may not be\n        // correctly initialized\n        this.setActive(this.isActive, true, true);\n        this.updateContainer();\n        if (this.accessor.options.createGroupControlElement) {\n            this._control = this.accessor.options.createGroupControlElement(this.groupPanel);\n            this.addDisposables(this._control);\n            this._control.init({\n                containerApi: new DockviewApi(this.accessor),\n                api: this.groupPanel.api,\n            });\n            this.tabsContainer.setActionElement(this._control.element);\n        }\n    }\n    indexOf(panel) {\n        return this.tabsContainer.indexOf(panel.id);\n    }\n    toJSON() {\n        var _a;\n        const result = {\n            views: this.tabsContainer.panels,\n            activeView: (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.id,\n            id: this.id,\n        };\n        if (this.locked) {\n            result.locked = true;\n        }\n        if (this.header.hidden) {\n            result.hideHeader = true;\n        }\n        return result;\n    }\n    moveToNext(options) {\n        if (!options) {\n            options = {};\n        }\n        if (!options.panel) {\n            options.panel = this.activePanel;\n        }\n        const index = options.panel ? this.panels.indexOf(options.panel) : -1;\n        let normalizedIndex;\n        if (index < this.panels.length - 1) {\n            normalizedIndex = index + 1;\n        }\n        else if (!options.suppressRoll) {\n            normalizedIndex = 0;\n        }\n        else {\n            return;\n        }\n        this.openPanel(this.panels[normalizedIndex]);\n    }\n    moveToPrevious(options) {\n        if (!options) {\n            options = {};\n        }\n        if (!options.panel) {\n            options.panel = this.activePanel;\n        }\n        if (!options.panel) {\n            return;\n        }\n        const index = this.panels.indexOf(options.panel);\n        let normalizedIndex;\n        if (index > 0) {\n            normalizedIndex = index - 1;\n        }\n        else if (!options.suppressRoll) {\n            normalizedIndex = this.panels.length - 1;\n        }\n        else {\n            return;\n        }\n        this.openPanel(this.panels[normalizedIndex]);\n    }\n    containsPanel(panel) {\n        return this.panels.includes(panel);\n    }\n    init(_params) {\n        //noop\n    }\n    update(_params) {\n        //noop\n    }\n    focus() {\n        var _a, _b;\n        (_b = (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.focus) === null || _b === void 0 ? void 0 : _b.call(_a);\n    }\n    openPanel(panel, options = {}) {\n        if (typeof options.index !== 'number' ||\n            options.index > this.panels.length) {\n            options.index = this.panels.length;\n        }\n        const skipSetPanelActive = !!options.skipSetPanelActive;\n        const skipSetGroupActive = !!options.skipSetGroupActive;\n        // ensure the group is updated before we fire any events\n        panel.updateParentGroup(this.groupPanel, true);\n        if (this._activePanel === panel) {\n            if (!skipSetGroupActive) {\n                this.accessor.doSetGroupActive(this.groupPanel);\n            }\n            return;\n        }\n        this.doAddPanel(panel, options.index, skipSetPanelActive);\n        if (!skipSetPanelActive) {\n            this.doSetActivePanel(panel);\n        }\n        if (!skipSetGroupActive) {\n            this.accessor.doSetGroupActive(this.groupPanel, !!options.skipFocus);\n        }\n        this.updateContainer();\n    }\n    removePanel(groupItemOrId) {\n        const id = typeof groupItemOrId === 'string'\n            ? groupItemOrId\n            : groupItemOrId.id;\n        const panelToRemove = this._panels.find((panel) => panel.id === id);\n        if (!panelToRemove) {\n            throw new Error('invalid operation');\n        }\n        return this._removePanel(panelToRemove);\n    }\n    closeAllPanels() {\n        if (this.panels.length > 0) {\n            // take a copy since we will be edting the array as we iterate through\n            const arrPanelCpy = [...this.panels];\n            for (const panel of arrPanelCpy) {\n                this.doClose(panel);\n            }\n        }\n        else {\n            this.accessor.removeGroup(this.groupPanel);\n        }\n    }\n    closePanel(panel) {\n        this.doClose(panel);\n    }\n    doClose(panel) {\n        this.accessor.removePanel(panel);\n    }\n    isPanelActive(panel) {\n        return this._activePanel === panel;\n    }\n    updateActions(element) {\n        this.tabsContainer.setActionElement(element);\n    }\n    setActive(isGroupActive, skipFocus = false, force = false) {\n        var _a, _b, _c, _d;\n        if (!force && this.isActive === isGroupActive) {\n            if (!skipFocus) {\n                (_b = (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.focus) === null || _b === void 0 ? void 0 : _b.call(_a);\n            }\n            return;\n        }\n        this._isGroupActive = isGroupActive;\n        toggleClass(this.container, 'active-group', isGroupActive);\n        toggleClass(this.container, 'inactive-group', !isGroupActive);\n        this.tabsContainer.setActive(this.isActive);\n        if (!this._activePanel && this.panels.length > 0) {\n            this.doSetActivePanel(this.panels[0]);\n        }\n        this.updateContainer();\n        if (isGroupActive) {\n            if (!skipFocus) {\n                (_d = (_c = this._activePanel) === null || _c === void 0 ? void 0 : _c.focus) === null || _d === void 0 ? void 0 : _d.call(_c);\n            }\n        }\n    }\n    layout(width, height) {\n        var _a;\n        this._width = width;\n        this._height = height;\n        this.contentContainer.layout(this._width, this._height);\n        if ((_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.layout) {\n            this._activePanel.layout(this._width, this._height);\n        }\n    }\n    _removePanel(panel) {\n        const isActivePanel = this._activePanel === panel;\n        this.doRemovePanel(panel);\n        if (isActivePanel && this.panels.length > 0) {\n            const nextPanel = this.mostRecentlyUsed[0];\n            this.openPanel(nextPanel);\n        }\n        if (this._activePanel && this.panels.length === 0) {\n            this.doSetActivePanel(undefined);\n        }\n        this.updateContainer();\n        return panel;\n    }\n    doRemovePanel(panel) {\n        const index = this.panels.indexOf(panel);\n        if (this._activePanel === panel) {\n            this.contentContainer.closePanel();\n        }\n        this.tabsContainer.delete(panel.id);\n        this._panels.splice(index, 1);\n        if (this.mostRecentlyUsed.includes(panel)) {\n            this.mostRecentlyUsed.splice(this.mostRecentlyUsed.indexOf(panel), 1);\n        }\n        this._onDidRemovePanel.fire({ panel });\n    }\n    doAddPanel(panel, index = this.panels.length, skipSetActive = false) {\n        const existingPanel = this._panels.indexOf(panel);\n        const hasExistingPanel = existingPanel > -1;\n        this.tabsContainer.openPanel(panel, index);\n        if (!skipSetActive) {\n            this.contentContainer.openPanel(panel);\n        }\n        this.tabsContainer.show();\n        this.contentContainer.show();\n        if (hasExistingPanel) {\n            // TODO - need to ensure ordering hasn't changed and if it has need to re-order this.panels\n            return;\n        }\n        this.updateMru(panel);\n        this.panels.splice(index, 0, panel);\n        this._onDidAddPanel.fire({ panel });\n    }\n    doSetActivePanel(panel) {\n        this._activePanel = panel;\n        if (panel) {\n            this.tabsContainer.setActivePanel(panel);\n            panel.layout(this._width, this._height);\n            this.updateMru(panel);\n            this._onDidActivePanelChange.fire({ panel });\n        }\n    }\n    updateMru(panel) {\n        if (this.mostRecentlyUsed.includes(panel)) {\n            this.mostRecentlyUsed.splice(this.mostRecentlyUsed.indexOf(panel), 1);\n        }\n        this.mostRecentlyUsed = [panel, ...this.mostRecentlyUsed];\n    }\n    updateContainer() {\n        var _a, _b;\n        toggleClass(this.container, 'empty', this.isEmpty);\n        this.panels.forEach((panel) => panel.updateParentGroup(this.groupPanel, this.isActive));\n        if (this.isEmpty && !this.watermark) {\n            const watermark = this.accessor.createWatermarkComponent();\n            watermark.init({\n                containerApi: new DockviewApi(this.accessor),\n                params: {},\n                title: '',\n                api: null,\n            });\n            this.watermark = watermark;\n            addDisposableListener(this.watermark.element, 'click', () => {\n                if (!this.isActive) {\n                    this.accessor.doSetGroupActive(this.groupPanel);\n                }\n            });\n            this.tabsContainer.hide();\n            this.contentContainer.element.appendChild(this.watermark.element);\n            this.watermark.updateParentGroup(this.groupPanel, true);\n        }\n        if (!this.isEmpty && this.watermark) {\n            this.watermark.element.remove();\n            (_b = (_a = this.watermark).dispose) === null || _b === void 0 ? void 0 : _b.call(_a);\n            this.watermark = undefined;\n            this.tabsContainer.show();\n        }\n    }\n    canDisplayOverlay(event, position, target) {\n        // custom overlay handler\n        if (this.accessor.options.showDndOverlay) {\n            return this.accessor.options.showDndOverlay({\n                nativeEvent: event,\n                target,\n                group: this.accessor.getPanel(this.id),\n                position,\n                getData: getPanelData,\n            });\n        }\n        return false;\n    }\n    handleDropEvent(event, position, index) {\n        const data = getPanelData();\n        if (data && data.viewId === this.accessor.id) {\n            if (data.panelId === null) {\n                // this is a group move dnd event\n                const { groupId } = data;\n                this._onMove.fire({\n                    target: position,\n                    groupId: groupId,\n                    index,\n                });\n                return;\n            }\n            const fromSameGroup = this.tabsContainer.indexOf(data.panelId) !== -1;\n            if (fromSameGroup && this.tabsContainer.size === 1) {\n                return;\n            }\n            const { groupId, panelId } = data;\n            const isSameGroup = this.id === groupId;\n            if (isSameGroup && !position) {\n                const oldIndex = this.tabsContainer.indexOf(panelId);\n                if (oldIndex === index) {\n                    return;\n                }\n            }\n            this._onMove.fire({\n                target: position,\n                groupId: data.groupId,\n                itemId: data.panelId,\n                index,\n            });\n        }\n        else {\n            this._onDidDrop.fire({\n                nativeEvent: event,\n                position,\n                index,\n                getData: () => getPanelData(),\n            });\n        }\n    }\n    dispose() {\n        var _a, _b;\n        super.dispose();\n        (_b = (_a = this.watermark) === null || _a === void 0 ? void 0 : _a.dispose) === null || _b === void 0 ? void 0 : _b.call(_a);\n        for (const panel of this.panels) {\n            panel.dispose();\n        }\n        this.dropTarget.dispose();\n        this.tabsContainer.dispose();\n        this.contentContainer.dispose();\n    }\n}\n","import { Emitter, Event, TickDelayedEvent } from '../events';\nimport { getGridLocation, Gridview } from './gridview';\nimport { CompositeDisposable } from '../lifecycle';\nimport { sequentialNumberGenerator } from '../math';\nimport { Sizing, } from '../splitview/core/splitview';\nconst nextLayoutId = sequentialNumberGenerator();\nexport function toTarget(direction) {\n    switch (direction) {\n        case 'left':\n            return 'left';\n        case 'right':\n            return 'right';\n        case 'above':\n            return 'top';\n        case 'below':\n            return 'bottom';\n        case 'within':\n        default:\n            return 'center';\n    }\n}\nexport class BaseGrid extends CompositeDisposable {\n    get id() {\n        return this._id;\n    }\n    get element() {\n        return this._element;\n    }\n    get size() {\n        return this._groups.size;\n    }\n    get groups() {\n        return Array.from(this._groups.values()).map((_) => _.value);\n    }\n    get width() {\n        return this.gridview.width;\n    }\n    get height() {\n        return this.gridview.height;\n    }\n    get minimumHeight() {\n        return this.gridview.minimumHeight;\n    }\n    get maximumHeight() {\n        return this.gridview.maximumHeight;\n    }\n    get minimumWidth() {\n        return this.gridview.minimumWidth;\n    }\n    get maximumWidth() {\n        return this.gridview.maximumWidth;\n    }\n    get activeGroup() {\n        return this._activeGroup;\n    }\n    constructor(_element, options) {\n        super();\n        this._element = _element;\n        this._id = nextLayoutId.next();\n        this._groups = new Map();\n        this._onDidLayoutChange = new Emitter();\n        this.onDidLayoutChange = this._onDidLayoutChange.event;\n        this._onDidRemoveGroup = new Emitter();\n        this.onDidRemoveGroup = this._onDidRemoveGroup.event;\n        this._onDidAddGroup = new Emitter();\n        this.onDidAddGroup = this._onDidAddGroup.event;\n        this._onDidActiveGroupChange = new Emitter();\n        this.onDidActiveGroupChange = this._onDidActiveGroupChange.event;\n        this._bufferOnDidLayoutChange = new TickDelayedEvent();\n        this.gridview = new Gridview(!!options.proportionalLayout, options.styles, options.orientation);\n        this.element.appendChild(this.gridview.element);\n        this.layout(0, 0, true); // set some elements height/widths\n        this.addDisposables(this.gridview.onDidChange(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }));\n        this.addDisposables(Event.any(this.onDidAddGroup, this.onDidRemoveGroup, this.onDidActiveGroupChange)(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), this._bufferOnDidLayoutChange.onEvent(() => {\n            this._onDidLayoutChange.fire();\n        }), this._bufferOnDidLayoutChange);\n    }\n    setVisible(panel, visible) {\n        this.gridview.setViewVisible(getGridLocation(panel.element), visible);\n        this._onDidLayoutChange.fire();\n    }\n    isVisible(panel) {\n        return this.gridview.isViewVisible(getGridLocation(panel.element));\n    }\n    doAddGroup(group, location = [0], size) {\n        this.gridview.addView(group, size !== null && size !== void 0 ? size : Sizing.Distribute, location);\n        this._onDidAddGroup.fire(group);\n        this.doSetGroupActive(group);\n    }\n    doRemoveGroup(group, options) {\n        if (!this._groups.has(group.id)) {\n            throw new Error('invalid operation');\n        }\n        const item = this._groups.get(group.id);\n        const view = this.gridview.remove(group, Sizing.Distribute);\n        if (item && !(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n            item.disposable.dispose();\n            item.value.dispose();\n            this._groups.delete(group.id);\n        }\n        this._onDidRemoveGroup.fire(group);\n        if (!(options === null || options === void 0 ? void 0 : options.skipActive) && this._activeGroup === group) {\n            const groups = Array.from(this._groups.values());\n            this.doSetGroupActive(groups.length > 0 ? groups[0].value : undefined);\n        }\n        return view;\n    }\n    getPanel(id) {\n        var _a;\n        return (_a = this._groups.get(id)) === null || _a === void 0 ? void 0 : _a.value;\n    }\n    doSetGroupActive(group, skipFocus) {\n        var _a, _b, _c;\n        if (this._activeGroup === group) {\n            return;\n        }\n        if (this._activeGroup) {\n            this._activeGroup.setActive(false);\n            if (!skipFocus) {\n                (_b = (_a = this._activeGroup).focus) === null || _b === void 0 ? void 0 : _b.call(_a);\n            }\n        }\n        if (group) {\n            group.setActive(true);\n            if (!skipFocus) {\n                (_c = group.focus) === null || _c === void 0 ? void 0 : _c.call(group);\n            }\n        }\n        this._activeGroup = group;\n        this._onDidActiveGroupChange.fire(group);\n    }\n    removeGroup(group) {\n        this.doRemoveGroup(group);\n    }\n    moveToNext(options) {\n        var _a;\n        if (!options) {\n            options = {};\n        }\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.next(location)) === null || _a === void 0 ? void 0 : _a.view;\n        this.doSetGroupActive(next);\n    }\n    moveToPrevious(options) {\n        var _a;\n        if (!options) {\n            options = {};\n        }\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.previous(location)) === null || _a === void 0 ? void 0 : _a.view;\n        this.doSetGroupActive(next);\n    }\n    layout(width, height, forceResize) {\n        const different = forceResize || width !== this.width || height !== this.height;\n        if (!different) {\n            return;\n        }\n        this.element.style.height = `${height}px`;\n        this.element.style.width = `${width}px`;\n        this.gridview.layout(width, height);\n    }\n    dispose() {\n        super.dispose();\n        this._onDidActiveGroupChange.dispose();\n        this._onDidAddGroup.dispose();\n        this._onDidRemoveGroup.dispose();\n        this._onDidLayoutChange.dispose();\n        for (const group of this.groups) {\n            group.dispose();\n        }\n        this.gridview.dispose();\n    }\n}\n","import { Emitter } from '../events';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\n/**\n * A core api implementation that should be used across all panel-like objects\n */\nexport class PanelApiImpl extends CompositeDisposable {\n    //\n    get isFocused() {\n        return this._isFocused;\n    }\n    get isActive() {\n        return this._isActive;\n    }\n    get isVisible() {\n        return this._isVisible;\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    constructor(id) {\n        super();\n        this.id = id;\n        this._isFocused = false;\n        this._isActive = false;\n        this._isVisible = true;\n        this._width = 0;\n        this._height = 0;\n        this.panelUpdatesDisposable = new MutableDisposable();\n        this._onDidDimensionChange = new Emitter({\n            replay: true,\n        });\n        this.onDidDimensionsChange = this._onDidDimensionChange.event;\n        //\n        this._onDidChangeFocus = new Emitter({\n            replay: true,\n        });\n        this.onDidFocusChange = this._onDidChangeFocus.event;\n        //\n        this._onFocusEvent = new Emitter();\n        this.onFocusEvent = this._onFocusEvent.event;\n        //\n        this._onDidVisibilityChange = new Emitter({\n            replay: true,\n        });\n        this.onDidVisibilityChange = this._onDidVisibilityChange.event;\n        //\n        this._onVisibilityChange = new Emitter();\n        this.onVisibilityChange = this._onVisibilityChange.event;\n        //\n        this._onDidActiveChange = new Emitter({\n            replay: true,\n        });\n        this.onDidActiveChange = this._onDidActiveChange.event;\n        //\n        this._onActiveChange = new Emitter();\n        this.onActiveChange = this._onActiveChange.event;\n        //\n        this._onUpdateParameters = new Emitter();\n        this.onUpdateParameters = this._onUpdateParameters.event;\n        this.addDisposables(this.panelUpdatesDisposable, this._onDidDimensionChange, this._onDidChangeFocus, this._onDidVisibilityChange, this._onDidActiveChange, this._onFocusEvent, this._onActiveChange, this._onVisibilityChange, this._onUpdateParameters, this.onDidFocusChange((event) => {\n            this._isFocused = event.isFocused;\n        }), this.onDidActiveChange((event) => {\n            this._isActive = event.isActive;\n        }), this.onDidVisibilityChange((event) => {\n            this._isVisible = event.isVisible;\n        }), this.onDidDimensionsChange((event) => {\n            this._width = event.width;\n            this._height = event.height;\n        }));\n    }\n    initialize(panel) {\n        this.panelUpdatesDisposable.value = this._onUpdateParameters.event((parameters) => {\n            panel.update({\n                params: {\n                    params: parameters,\n                },\n            });\n        });\n    }\n    setVisible(isVisible) {\n        this._onVisibilityChange.fire({ isVisible });\n    }\n    setActive() {\n        this._onActiveChange.fire();\n    }\n    updateParameters(parameters) {\n        this._onUpdateParameters.fire(parameters);\n    }\n    dispose() {\n        super.dispose();\n    }\n}\n","import { Emitter } from '../events';\nimport { PanelApiImpl } from './panelApi';\nexport class SplitviewPanelApiImpl extends PanelApiImpl {\n    //\n    constructor(id) {\n        super(id);\n        this._onDidConstraintsChangeInternal = new Emitter();\n        this.onDidConstraintsChangeInternal = this._onDidConstraintsChangeInternal.event;\n        //\n        this._onDidConstraintsChange = new Emitter({\n            replay: true,\n        });\n        this.onDidConstraintsChange = this._onDidConstraintsChange.event;\n        //\n        this._onDidSizeChange = new Emitter();\n        this.onDidSizeChange = this._onDidSizeChange.event;\n        this.addDisposables(this._onDidConstraintsChangeInternal, this._onDidConstraintsChange, this._onDidSizeChange);\n    }\n    setConstraints(value) {\n        this._onDidConstraintsChangeInternal.fire(value);\n    }\n    setSize(event) {\n        this._onDidSizeChange.fire(event);\n    }\n}\n","import { Emitter } from '../events';\nimport { SplitviewPanelApiImpl } from './splitviewPanelApi';\nexport class PaneviewPanelApiImpl extends SplitviewPanelApiImpl {\n    set pane(pane) {\n        this._pane = pane;\n    }\n    constructor(id) {\n        super(id);\n        this._onDidExpansionChange = new Emitter({\n            replay: true,\n        });\n        this.onDidExpansionChange = this._onDidExpansionChange.event;\n        this._onMouseEnter = new Emitter({});\n        this.onMouseEnter = this._onMouseEnter.event;\n        this._onMouseLeave = new Emitter({});\n        this.onMouseLeave = this._onMouseLeave.event;\n        this.addDisposables(this._onDidExpansionChange, this._onMouseEnter, this._onMouseLeave);\n    }\n    setExpanded(isExpanded) {\n        var _a;\n        (_a = this._pane) === null || _a === void 0 ? void 0 : _a.setExpanded(isExpanded);\n    }\n    get isExpanded() {\n        var _a;\n        return !!((_a = this._pane) === null || _a === void 0 ? void 0 : _a.isExpanded());\n    }\n}\n","import { trackFocus } from '../dom';\nimport { CompositeDisposable } from '../lifecycle';\nexport class BasePanelView extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    get params() {\n        var _a;\n        return (_a = this._params) === null || _a === void 0 ? void 0 : _a.params;\n    }\n    constructor(id, component, api) {\n        super();\n        this.id = id;\n        this.component = component;\n        this.api = api;\n        this._height = 0;\n        this._width = 0;\n        this._element = document.createElement('div');\n        this._element.tabIndex = -1;\n        this._element.style.outline = 'none';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n        this._element.style.overflow = 'hidden';\n        const { onDidFocus, onDidBlur } = trackFocus(this._element);\n        this.addDisposables(this.api, onDidFocus(() => {\n            this.api._onDidChangeFocus.fire({ isFocused: true });\n        }), onDidBlur(() => {\n            this.api._onDidChangeFocus.fire({ isFocused: false });\n        }));\n    }\n    focus() {\n        this.api._onFocusEvent.fire();\n    }\n    layout(width, height) {\n        this._width = width;\n        this._height = height;\n        this.api._onDidDimensionChange.fire({ width, height });\n        if (this.part) {\n            if (this._params) {\n                this.part.update(this._params.params);\n            }\n        }\n    }\n    init(parameters) {\n        this._params = parameters;\n        this.part = this.getComponent();\n    }\n    update(event) {\n        var _a, _b;\n        this._params = Object.assign(Object.assign({}, this._params), { params: Object.assign(Object.assign({}, (_a = this._params) === null || _a === void 0 ? void 0 : _a.params), event.params) });\n        (_b = this.part) === null || _b === void 0 ? void 0 : _b.update({ params: this._params.params });\n    }\n    toJSON() {\n        var _a, _b;\n        const params = (_b = (_a = this._params) === null || _a === void 0 ? void 0 : _a.params) !== null && _b !== void 0 ? _b : {};\n        return {\n            id: this.id,\n            component: this.component,\n            params: Object.keys(params).length > 0 ? params : undefined,\n        };\n    }\n    dispose() {\n        var _a;\n        super.dispose();\n        this.api.dispose();\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import { PaneviewPanelApiImpl } from '../api/paneviewPanelApi';\nimport { addClasses, removeClasses } from '../dom';\nimport { addDisposableListener, Emitter } from '../events';\nimport { BasePanelView, } from '../gridview/basePanelView';\nimport { Orientation } from '../splitview/core/splitview';\nexport class PaneviewPanel extends BasePanelView {\n    set orientation(value) {\n        this._orientation = value;\n    }\n    get orientation() {\n        return this._orientation;\n    }\n    get minimumSize() {\n        const headerSize = this.headerSize;\n        const expanded = this.isExpanded();\n        const minimumBodySize = expanded ? this._minimumBodySize : 0;\n        return headerSize + minimumBodySize;\n    }\n    get maximumSize() {\n        const headerSize = this.headerSize;\n        const expanded = this.isExpanded();\n        const maximumBodySize = expanded ? this._maximumBodySize : 0;\n        return headerSize + maximumBodySize;\n    }\n    get size() {\n        return this._size;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    set orthogonalSize(size) {\n        this._orthogonalSize = size;\n    }\n    get minimumBodySize() {\n        return this._minimumBodySize;\n    }\n    set minimumBodySize(value) {\n        this._minimumBodySize = typeof value === 'number' ? value : 0;\n    }\n    get maximumBodySize() {\n        return this._maximumBodySize;\n    }\n    set maximumBodySize(value) {\n        this._maximumBodySize =\n            typeof value === 'number' ? value : Number.POSITIVE_INFINITY;\n    }\n    get headerVisible() {\n        return this._headerVisible;\n    }\n    set headerVisible(value) {\n        this._headerVisible = value;\n        this.header.style.display = value ? '' : 'none';\n    }\n    constructor(id, component, headerComponent, orientation, isExpanded, isHeaderVisible) {\n        super(id, component, new PaneviewPanelApiImpl(id));\n        this.headerComponent = headerComponent;\n        this._onDidChangeExpansionState = new Emitter({ replay: true });\n        this.onDidChangeExpansionState = this._onDidChangeExpansionState.event;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this.headerSize = 22;\n        this._orthogonalSize = 0;\n        this._size = 0;\n        this._minimumBodySize = 100;\n        this._maximumBodySize = Number.POSITIVE_INFINITY;\n        this._isExpanded = false;\n        this.expandedSize = 0;\n        this.api.pane = this; // TODO cannot use 'this' before 'super'\n        this.api.initialize(this);\n        this._isExpanded = isExpanded;\n        this._headerVisible = isHeaderVisible;\n        this._onDidChangeExpansionState.fire(this.isExpanded()); // initialize value\n        this._orientation = orientation;\n        this.element.classList.add('pane');\n        this.addDisposables(this.api.onDidSizeChange((event) => {\n            this._onDidChange.fire({ size: event.size });\n        }), addDisposableListener(this.element, 'mouseenter', (ev) => {\n            this.api._onMouseEnter.fire(ev);\n        }), addDisposableListener(this.element, 'mouseleave', (ev) => {\n            this.api._onMouseLeave.fire(ev);\n        }));\n        this.addDisposables(this._onDidChangeExpansionState, this.onDidChangeExpansionState((isPanelExpanded) => {\n            this.api._onDidExpansionChange.fire({\n                isExpanded: isPanelExpanded,\n            });\n        }), this.api.onDidFocusChange((e) => {\n            if (!this.header) {\n                return;\n            }\n            if (e.isFocused) {\n                addClasses(this.header, 'focused');\n            }\n            else {\n                removeClasses(this.header, 'focused');\n            }\n        }));\n        this.renderOnce();\n    }\n    setVisible(isVisible) {\n        this.api._onDidVisibilityChange.fire({ isVisible });\n    }\n    setActive(isActive) {\n        this.api._onDidActiveChange.fire({ isActive });\n    }\n    isExpanded() {\n        return this._isExpanded;\n    }\n    setExpanded(expanded) {\n        if (this._isExpanded === expanded) {\n            return;\n        }\n        this._isExpanded = expanded;\n        if (expanded) {\n            if (this.animationTimer) {\n                clearTimeout(this.animationTimer);\n            }\n            if (this.body) {\n                this.element.appendChild(this.body);\n            }\n        }\n        else {\n            this.animationTimer = setTimeout(() => {\n                var _a;\n                (_a = this.body) === null || _a === void 0 ? void 0 : _a.remove();\n            }, 200);\n        }\n        this._onDidChange.fire(expanded ? { size: this.width } : {});\n        this._onDidChangeExpansionState.fire(expanded);\n    }\n    layout(size, orthogonalSize) {\n        this._size = size;\n        this._orthogonalSize = orthogonalSize;\n        const [width, height] = this.orientation === Orientation.HORIZONTAL\n            ? [size, orthogonalSize]\n            : [orthogonalSize, size];\n        if (this.isExpanded()) {\n            this.expandedSize = width;\n        }\n        super.layout(width, height);\n    }\n    init(parameters) {\n        var _a, _b;\n        super.init(parameters);\n        if (typeof parameters.minimumBodySize === 'number') {\n            this.minimumBodySize = parameters.minimumBodySize;\n        }\n        if (typeof parameters.maximumBodySize === 'number') {\n            this.maximumBodySize = parameters.maximumBodySize;\n        }\n        this.bodyPart = this.getBodyComponent();\n        this.headerPart = this.getHeaderComponent();\n        this.bodyPart.init(Object.assign(Object.assign({}, parameters), { api: this.api }));\n        this.headerPart.init(Object.assign(Object.assign({}, parameters), { api: this.api }));\n        (_a = this.body) === null || _a === void 0 ? void 0 : _a.append(this.bodyPart.element);\n        (_b = this.header) === null || _b === void 0 ? void 0 : _b.append(this.headerPart.element);\n        if (typeof parameters.isExpanded === 'boolean') {\n            this.setExpanded(parameters.isExpanded);\n        }\n    }\n    toJSON() {\n        const params = this._params;\n        return Object.assign(Object.assign({}, super.toJSON()), { headerComponent: this.headerComponent, title: params.title });\n    }\n    renderOnce() {\n        this.header = document.createElement('div');\n        this.header.tabIndex = 0;\n        this.header.className = 'pane-header';\n        this.header.style.height = `${this.headerSize}px`;\n        this.header.style.lineHeight = `${this.headerSize}px`;\n        this.header.style.minHeight = `${this.headerSize}px`;\n        this.header.style.maxHeight = `${this.headerSize}px`;\n        this.element.appendChild(this.header);\n        this.body = document.createElement('div');\n        this.body.className = 'pane-body';\n        this.element.appendChild(this.body);\n    }\n    // TODO slightly hacky by-pass of the component to create a body and header component\n    getComponent() {\n        return {\n            update: (params) => {\n                var _a, _b;\n                (_a = this.bodyPart) === null || _a === void 0 ? void 0 : _a.update({ params });\n                (_b = this.headerPart) === null || _b === void 0 ? void 0 : _b.update({ params });\n            },\n            dispose: () => {\n                var _a, _b;\n                (_a = this.bodyPart) === null || _a === void 0 ? void 0 : _a.dispose();\n                (_b = this.headerPart) === null || _b === void 0 ? void 0 : _b.dispose();\n            },\n        };\n    }\n}\n","import { PaneviewApi } from '../api/component.api';\nimport { DragHandler } from '../dnd/abstractDragHandler';\nimport { getPaneData, LocalSelectionTransfer, PaneTransfer, } from '../dnd/dataTransfer';\nimport { Droptarget } from '../dnd/droptarget';\nimport { Emitter } from '../events';\nimport { PaneviewPanel, } from './paneviewPanel';\nexport class DraggablePaneviewPanel extends PaneviewPanel {\n    constructor(accessor, id, component, headerComponent, orientation, isExpanded, disableDnd) {\n        super(id, component, headerComponent, orientation, isExpanded, true);\n        this.accessor = accessor;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        if (!disableDnd) {\n            this.initDragFeatures();\n        }\n    }\n    initDragFeatures() {\n        if (!this.header) {\n            return;\n        }\n        const id = this.id;\n        const accessorId = this.accessor.id;\n        this.header.draggable = true;\n        this.handler = new (class PaneDragHandler extends DragHandler {\n            getData() {\n                LocalSelectionTransfer.getInstance().setData([new PaneTransfer(accessorId, id)], PaneTransfer.prototype);\n                return {\n                    dispose: () => {\n                        LocalSelectionTransfer.getInstance().clearData(PaneTransfer.prototype);\n                    },\n                };\n            }\n        })(this.header);\n        this.target = new Droptarget(this.element, {\n            acceptedTargetZones: ['top', 'bottom'],\n            overlayModel: {\n                activationSize: { type: 'percentage', value: 50 },\n            },\n            canDisplayOverlay: (event) => {\n                const data = getPaneData();\n                if (data) {\n                    if (data.paneId !== this.id &&\n                        data.viewId === this.accessor.id) {\n                        return true;\n                    }\n                }\n                if (this.accessor.options.showDndOverlay) {\n                    return this.accessor.options.showDndOverlay({\n                        nativeEvent: event,\n                        getData: getPaneData,\n                        panel: this,\n                    });\n                }\n                return false;\n            },\n        });\n        this.addDisposables(this._onDidDrop, this.handler, this.target, this.target.onDrop((event) => {\n            this.onDrop(event);\n        }));\n    }\n    onDrop(event) {\n        const data = getPaneData();\n        if (!data || data.viewId !== this.accessor.id) {\n            // if there is no local drag event for this panel\n            // or if the drag event was creating by another Paneview instance\n            this._onDidDrop.fire(Object.assign(Object.assign({}, event), { panel: this, api: new PaneviewApi(this.accessor), getData: getPaneData }));\n            return;\n        }\n        const containerApi = this._params\n            .containerApi;\n        const panelId = data.paneId;\n        const existingPanel = containerApi.getPanel(panelId);\n        if (!existingPanel) {\n            // if the panel doesn't exist\n            this._onDidDrop.fire(Object.assign(Object.assign({}, event), { panel: this, getData: getPaneData, api: new PaneviewApi(this.accessor) }));\n            return;\n        }\n        const allPanels = containerApi.panels;\n        const fromIndex = allPanels.indexOf(existingPanel);\n        let toIndex = containerApi.panels.indexOf(this);\n        if (event.position === 'left' || event.position === 'top') {\n            toIndex = Math.max(0, toIndex - 1);\n        }\n        if (event.position === 'right' || event.position === 'bottom') {\n            if (fromIndex > toIndex) {\n                toIndex++;\n            }\n            toIndex = Math.min(allPanels.length - 1, toIndex);\n        }\n        containerApi.movePanel(fromIndex, toIndex);\n    }\n}\n","import { Emitter } from '../events';\nimport { PanelApiImpl } from './panelApi';\nexport class GridviewPanelApiImpl extends PanelApiImpl {\n    constructor(id, panel) {\n        super(id);\n        this._onDidConstraintsChangeInternal = new Emitter();\n        this.onDidConstraintsChangeInternal = this._onDidConstraintsChangeInternal.event;\n        this._onDidConstraintsChange = new Emitter({\n            replay: true,\n        });\n        this.onDidConstraintsChange = this._onDidConstraintsChange.event;\n        this._onDidSizeChange = new Emitter();\n        this.onDidSizeChange = this._onDidSizeChange.event;\n        this.addDisposables(this._onDidConstraintsChangeInternal, this._onDidConstraintsChange, this._onDidSizeChange);\n        if (panel) {\n            this.initialize(panel);\n        }\n    }\n    setConstraints(value) {\n        this._onDidConstraintsChangeInternal.fire(value);\n    }\n    setSize(event) {\n        this._onDidSizeChange.fire(event);\n    }\n}\n","import { BasePanelView, } from './basePanelView';\nimport { GridviewPanelApiImpl, } from '../api/gridviewPanelApi';\nimport { Emitter } from '../events';\nexport class GridviewPanel extends BasePanelView {\n    get priority() {\n        return this._priority;\n    }\n    get snap() {\n        return this._snap;\n    }\n    get minimumWidth() {\n        const width = typeof this._minimumWidth === 'function'\n            ? this._minimumWidth()\n            : this._minimumWidth;\n        if (width !== this._evaluatedMinimumWidth) {\n            this._evaluatedMinimumWidth = width;\n            this.updateConstraints();\n        }\n        return width;\n    }\n    get minimumHeight() {\n        const height = typeof this._minimumHeight === 'function'\n            ? this._minimumHeight()\n            : this._minimumHeight;\n        if (height !== this._evaluatedMinimumHeight) {\n            this._evaluatedMinimumHeight = height;\n            this.updateConstraints();\n        }\n        return height;\n    }\n    get maximumHeight() {\n        const height = typeof this._maximumHeight === 'function'\n            ? this._maximumHeight()\n            : this._maximumHeight;\n        if (height !== this._evaluatedMaximumHeight) {\n            this._evaluatedMaximumHeight = height;\n            this.updateConstraints();\n        }\n        return height;\n    }\n    get maximumWidth() {\n        const width = typeof this._maximumWidth === 'function'\n            ? this._maximumWidth()\n            : this._maximumWidth;\n        if (width !== this._evaluatedMaximumWidth) {\n            this._evaluatedMaximumWidth = width;\n            this.updateConstraints();\n        }\n        return width;\n    }\n    get isActive() {\n        return this.api.isActive;\n    }\n    constructor(id, component) {\n        super(id, component, new GridviewPanelApiImpl(id));\n        this._evaluatedMinimumWidth = 0;\n        this._evaluatedMaximumWidth = Number.MAX_SAFE_INTEGER;\n        this._evaluatedMinimumHeight = 0;\n        this._evaluatedMaximumHeight = Number.MAX_SAFE_INTEGER;\n        this._minimumWidth = 0;\n        this._minimumHeight = 0;\n        this._maximumWidth = Number.MAX_SAFE_INTEGER;\n        this._maximumHeight = Number.MAX_SAFE_INTEGER;\n        this._snap = false;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this.api.initialize(this); // TODO: required to by-pass 'super before this' requirement\n        this.addDisposables(this._onDidChange, this.api.onVisibilityChange((event) => {\n            const { isVisible } = event;\n            const { accessor } = this._params;\n            accessor.setVisible(this, isVisible);\n        }), this.api.onActiveChange(() => {\n            const { accessor } = this._params;\n            accessor.setActive(this);\n        }), this.api.onDidConstraintsChangeInternal((event) => {\n            if (typeof event.minimumWidth === 'number' ||\n                typeof event.minimumWidth === 'function') {\n                this._minimumWidth = event.minimumWidth;\n            }\n            if (typeof event.minimumHeight === 'number' ||\n                typeof event.minimumHeight === 'function') {\n                this._minimumHeight = event.minimumHeight;\n            }\n            if (typeof event.maximumWidth === 'number' ||\n                typeof event.maximumWidth === 'function') {\n                this._maximumWidth = event.maximumWidth;\n            }\n            if (typeof event.maximumHeight === 'number' ||\n                typeof event.maximumHeight === 'function') {\n                this._maximumHeight = event.maximumHeight;\n            }\n        }), this.api.onDidSizeChange((event) => {\n            this._onDidChange.fire({\n                height: event.height,\n                width: event.width,\n            });\n        }));\n    }\n    setVisible(isVisible) {\n        this.api._onDidVisibilityChange.fire({ isVisible });\n    }\n    setActive(isActive) {\n        this.api._onDidActiveChange.fire({ isActive });\n    }\n    init(parameters) {\n        if (parameters.maximumHeight) {\n            this._maximumHeight = parameters.maximumHeight;\n        }\n        if (parameters.minimumHeight) {\n            this._minimumHeight = parameters.minimumHeight;\n        }\n        if (parameters.maximumWidth) {\n            this._maximumWidth = parameters.maximumWidth;\n        }\n        if (parameters.minimumWidth) {\n            this._minimumWidth = parameters.minimumWidth;\n        }\n        this._priority = parameters.priority;\n        this._snap = !!parameters.snap;\n        super.init(parameters);\n        if (typeof parameters.isVisible === 'boolean') {\n            this.setVisible(parameters.isVisible);\n        }\n    }\n    updateConstraints() {\n        this.api._onDidConstraintsChange.fire({\n            minimumWidth: this._evaluatedMinimumWidth,\n            maximumWidth: this._evaluatedMaximumWidth,\n            minimumHeight: this._evaluatedMinimumHeight,\n            maximumHeight: this._evaluatedMaximumHeight,\n        });\n    }\n    toJSON() {\n        const state = super.toJSON();\n        const maximum = (value) => value === Number.MAX_SAFE_INTEGER ? undefined : value;\n        const minimum = (value) => (value <= 0 ? undefined : value);\n        return Object.assign(Object.assign({}, state), { minimumHeight: minimum(this.minimumHeight), maximumHeight: maximum(this.maximumHeight), minimumWidth: minimum(this.minimumWidth), maximumWidth: maximum(this.maximumWidth), snap: this.snap, priority: this.priority });\n    }\n}\n","import { DockviewGroupPanelModel, } from './dockviewGroupPanelModel';\nimport { GridviewPanel } from '../gridview/gridviewPanel';\nexport class DockviewGroupPanel extends GridviewPanel {\n    get panels() {\n        return this._model.panels;\n    }\n    get activePanel() {\n        return this._model.activePanel;\n    }\n    get size() {\n        return this._model.size;\n    }\n    get model() {\n        return this._model;\n    }\n    get minimumHeight() {\n        return this._model.minimumHeight;\n    }\n    get maximumHeight() {\n        return this._model.maximumHeight;\n    }\n    get minimumWidth() {\n        return this._model.minimumWidth;\n    }\n    get maximumWidth() {\n        return this._model.maximumWidth;\n    }\n    get locked() {\n        return this._model.locked;\n    }\n    set locked(value) {\n        this._model.locked = value;\n    }\n    get header() {\n        return this._model.header;\n    }\n    constructor(accessor, id, options) {\n        super(id, 'groupview_default');\n        this._model = new DockviewGroupPanelModel(this.element, accessor, id, options, this);\n    }\n    initialize() {\n        this._model.initialize();\n    }\n    setActive(isActive) {\n        super.setActive(isActive);\n        this.model.setActive(isActive);\n    }\n    layout(width, height) {\n        super.layout(width, height);\n        this.model.layout(width, height);\n    }\n    getComponent() {\n        return this._model;\n    }\n    toJSON() {\n        // TODO fix typing\n        return this.model.toJSON();\n    }\n}\n","import { Emitter } from '../events';\nimport { GridviewPanelApiImpl } from './gridviewPanelApi';\nimport { MutableDisposable } from '../lifecycle';\nexport class DockviewPanelApiImpl extends GridviewPanelApiImpl {\n    get title() {\n        return this.panel.title;\n    }\n    get isGroupActive() {\n        var _a;\n        return !!((_a = this.group) === null || _a === void 0 ? void 0 : _a.isActive);\n    }\n    set group(value) {\n        const isOldGroupActive = this.isGroupActive;\n        this._group = value;\n        this._onDidGroupChange.fire();\n        if (this._group) {\n            this.disposable.value = this._group.api.onDidActiveChange(() => {\n                this._onDidActiveGroupChange.fire();\n            });\n            if (this.isGroupActive !== isOldGroupActive) {\n                this._onDidActiveGroupChange.fire();\n            }\n        }\n    }\n    get group() {\n        return this._group;\n    }\n    constructor(panel, group) {\n        super(panel.id);\n        this.panel = panel;\n        this._onDidTitleChange = new Emitter();\n        this.onDidTitleChange = this._onDidTitleChange.event;\n        this._onDidActiveGroupChange = new Emitter();\n        this.onDidActiveGroupChange = this._onDidActiveGroupChange.event;\n        this._onDidGroupChange = new Emitter();\n        this.onDidGroupChange = this._onDidGroupChange.event;\n        this.disposable = new MutableDisposable();\n        this.initialize(panel);\n        this._group = group;\n        this.addDisposables(this.disposable, this._onDidTitleChange, this._onDidGroupChange, this._onDidActiveGroupChange);\n    }\n    setTitle(title) {\n        this.panel.update({ params: { title } });\n    }\n    close() {\n        this.group.model.closePanel(this.panel);\n    }\n}\n","import { DockviewPanelApiImpl, } from '../api/dockviewPanelApi';\nimport { CompositeDisposable } from '../lifecycle';\nexport class DockviewPanel extends CompositeDisposable {\n    get params() {\n        return this._params;\n    }\n    get title() {\n        return this._title;\n    }\n    get group() {\n        return this._group;\n    }\n    constructor(id, accessor, containerApi, group, view) {\n        super();\n        this.id = id;\n        this.containerApi = containerApi;\n        this.view = view;\n        this._title = '';\n        this._group = group;\n        this.api = new DockviewPanelApiImpl(this, this._group);\n        this.addDisposables(this.api.onActiveChange(() => {\n            accessor.setActivePanel(this);\n        }), this.api.onDidSizeChange((event) => {\n            // forward the resize event to the group since if you want to resize a panel\n            // you are actually just resizing the panels parent which is the group\n            this.group.api.setSize(event);\n        }));\n    }\n    init(params) {\n        var _a;\n        this._params = params.params;\n        this.setTitle(params.title);\n        (_a = this.view) === null || _a === void 0 ? void 0 : _a.init(Object.assign(Object.assign({}, params), { api: this.api, containerApi: this.containerApi }));\n    }\n    focus() {\n        this.api._onFocusEvent.fire();\n    }\n    toJSON() {\n        return {\n            id: this.id,\n            contentComponent: this.view.contentComponent,\n            tabComponent: this.view.tabComponent,\n            params: Object.keys(this._params || {}).length > 0\n                ? this._params\n                : undefined,\n            title: this.title,\n        };\n    }\n    setTitle(title) {\n        var _a, _b;\n        const didTitleChange = title !== ((_a = this._params) === null || _a === void 0 ? void 0 : _a.title);\n        if (didTitleChange) {\n            this._title = title;\n            (_b = this.view) === null || _b === void 0 ? void 0 : _b.update({\n                params: {\n                    params: this._params,\n                    title: this.title,\n                },\n            });\n            this.api._onDidTitleChange.fire({ title });\n        }\n    }\n    update(event) {\n        var _a;\n        const params = event.params;\n        this._params = Object.assign(Object.assign({}, (this._params || {})), event.params.params);\n        if (params.title !== this.title) {\n            this._title = params.title;\n            this.api._onDidTitleChange.fire({ title: this.title });\n        }\n        (_a = this.view) === null || _a === void 0 ? void 0 : _a.update({\n            params: {\n                params: this._params,\n                title: this.title,\n            },\n        });\n    }\n    updateParentGroup(group, isGroupActive) {\n        var _a;\n        this._group = group;\n        this.api.group = group;\n        const isPanelVisible = this._group.model.isPanelActive(this);\n        this.api._onDidActiveChange.fire({\n            isActive: isGroupActive && isPanelVisible,\n        });\n        this.api._onDidVisibilityChange.fire({\n            isVisible: isPanelVisible,\n        });\n        (_a = this.view) === null || _a === void 0 ? void 0 : _a.updateParentGroup(this._group, this._group.model.isPanelActive(this));\n    }\n    layout(width, height) {\n        var _a;\n        // the obtain the correct dimensions of the content panel we must deduct the tab height\n        this.api._onDidDimensionChange.fire({\n            width,\n            height: height - (this.group.model.header.height || 0),\n        });\n        (_a = this.view) === null || _a === void 0 ? void 0 : _a.layout(width, height);\n    }\n    dispose() {\n        var _a;\n        this.api.dispose();\n        (_a = this.view) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","const createSvgElementFromPath = (params) => {\n    const svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n    svg.setAttributeNS(null, 'height', params.height);\n    svg.setAttributeNS(null, 'width', params.width);\n    svg.setAttributeNS(null, 'viewBox', params.viewbox);\n    svg.setAttributeNS(null, 'aria-hidden', 'false');\n    svg.setAttributeNS(null, 'focusable', 'false');\n    svg.classList.add('dockview-svg');\n    const path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n    path.setAttributeNS(null, 'd', params.path);\n    svg.appendChild(path);\n    return svg;\n};\nexport const createCloseButton = () => createSvgElementFromPath({\n    width: '11',\n    height: '11',\n    viewbox: '0 0 28 28',\n    path: 'M2.1 27.3L0 25.2L11.55 13.65L0 2.1L2.1 0L13.65 11.55L25.2 0L27.3 2.1L15.75 13.65L27.3 25.2L25.2 27.3L13.65 15.75L2.1 27.3Z',\n});\nexport const createExpandMoreButton = () => createSvgElementFromPath({\n    width: '11',\n    height: '11',\n    viewbox: '0 0 24 15',\n    path: 'M12 14.15L0 2.15L2.15 0L12 9.9L21.85 0.0499992L24 2.2L12 14.15Z',\n});\nexport const createChevronRightButton = () => createSvgElementFromPath({\n    width: '11',\n    height: '11',\n    viewbox: '0 0 15 25',\n    path: 'M2.15 24.1L0 21.95L9.9 12.05L0 2.15L2.15 0L14.2 12.05L2.15 24.1Z',\n});\n","import { CompositeDisposable } from '../../../lifecycle';\nimport { addDisposableListener } from '../../../events';\nimport { createCloseButton } from '../../../svg';\nexport class DefaultTab extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor() {\n        super();\n        this._isPanelVisible = false;\n        this._isGroupActive = false;\n        //\n        this.params = {};\n        this._element = document.createElement('div');\n        this._element.className = 'default-tab';\n        //\n        this._content = document.createElement('div');\n        this._content.className = 'tab-content';\n        //\n        this._actionContainer = document.createElement('div');\n        this._actionContainer.className = 'action-container';\n        //\n        this._list = document.createElement('ul');\n        this._list.className = 'tab-list';\n        //\n        this.action = document.createElement('div');\n        this.action.className = 'tab-action';\n        this.action.appendChild(createCloseButton());\n        //\n        this._element.appendChild(this._content);\n        this._element.appendChild(this._actionContainer);\n        this._actionContainer.appendChild(this._list);\n        this._list.appendChild(this.action);\n        //\n        this.addDisposables(addDisposableListener(this._actionContainer, 'mousedown', (ev) => {\n            ev.preventDefault();\n        }));\n        this.render();\n    }\n    update(event) {\n        this.params = Object.assign(Object.assign({}, this.params), event.params);\n        this.render();\n    }\n    focus() {\n        //noop\n    }\n    init(params) {\n        this.params = params;\n        this._content.textContent = params.title;\n        addDisposableListener(this.action, 'click', (ev) => {\n            ev.preventDefault(); //\n            this.params.api.close();\n        });\n    }\n    updateParentGroup(group, isPanelVisible) {\n        const changed = this._isPanelVisible !== isPanelVisible ||\n            this._isGroupActive !== group.isActive;\n        this._isPanelVisible = isPanelVisible;\n        this._isGroupActive = group.isActive;\n        if (changed) {\n            this.render();\n        }\n    }\n    layout(_width, _height) {\n        // noop\n    }\n    render() {\n        if (this._content.textContent !== this.params.title) {\n            this._content.textContent = this.params.title;\n        }\n    }\n}\n","export function createComponent(id, componentName, components = {}, frameworkComponents = {}, createFrameworkComponent, fallback) {\n    const Component = typeof componentName === 'string'\n        ? components[componentName]\n        : undefined;\n    const FrameworkComponent = typeof componentName === 'string'\n        ? frameworkComponents[componentName]\n        : undefined;\n    if (Component && FrameworkComponent) {\n        throw new Error(`Cannot create '${id}'. component '${componentName}' registered as both a component and frameworkComponent`);\n    }\n    if (FrameworkComponent) {\n        if (!createFrameworkComponent) {\n            throw new Error(`Cannot create '${id}' for framework component '${componentName}'. you must register a frameworkPanelWrapper to use framework components`);\n        }\n        return createFrameworkComponent.createComponent(id, componentName, FrameworkComponent);\n    }\n    if (!Component) {\n        if (fallback) {\n            return fallback();\n        }\n        throw new Error(`Cannot create '${id}', no component '${componentName}' provided`);\n    }\n    return new Component(id, componentName);\n}\n","import { DefaultTab } from './components/tab/defaultTab';\nimport { createComponent } from '../panel/componentFactory';\nexport class DockviewPanelModel {\n    get content() {\n        return this._content;\n    }\n    get tab() {\n        return this._tab;\n    }\n    constructor(accessor, id, contentComponent, tabComponent) {\n        var _a;\n        this.accessor = accessor;\n        this.id = id;\n        this.contentComponent = contentComponent;\n        this.tabComponent = tabComponent;\n        this._group = null;\n        this._isPanelVisible = null;\n        this._content = this.createContentComponent(this.id, contentComponent);\n        this._tab =\n            (_a = this.createTabComponent(this.id, tabComponent)) !== null && _a !== void 0 ? _a : new DefaultTab();\n    }\n    init(params) {\n        this.content.init(Object.assign(Object.assign({}, params), { tab: this.tab }));\n        this.tab.init(params);\n    }\n    updateParentGroup(group, isPanelVisible) {\n        if (group !== this._group) {\n            this._group = group;\n            if (this._content.onGroupChange) {\n                this._content.onGroupChange(group);\n            }\n            if (this._tab.onGroupChange) {\n                this._tab.onGroupChange(group);\n            }\n        }\n        if (isPanelVisible !== this._isPanelVisible) {\n            this._isPanelVisible = isPanelVisible;\n            if (this._content.onPanelVisibleChange) {\n                this._content.onPanelVisibleChange(isPanelVisible);\n            }\n            if (this._tab.onPanelVisibleChange) {\n                this._tab.onPanelVisibleChange(isPanelVisible);\n            }\n        }\n    }\n    layout(width, height) {\n        var _a, _b;\n        (_b = (_a = this.content).layout) === null || _b === void 0 ? void 0 : _b.call(_a, width, height);\n    }\n    update(event) {\n        var _a, _b, _c, _d;\n        (_b = (_a = this.content).update) === null || _b === void 0 ? void 0 : _b.call(_a, event);\n        (_d = (_c = this.tab).update) === null || _d === void 0 ? void 0 : _d.call(_c, event);\n    }\n    dispose() {\n        var _a, _b, _c, _d;\n        (_b = (_a = this.content).dispose) === null || _b === void 0 ? void 0 : _b.call(_a);\n        (_d = (_c = this.tab).dispose) === null || _d === void 0 ? void 0 : _d.call(_c);\n    }\n    createContentComponent(id, componentName) {\n        var _a;\n        return createComponent(id, componentName, this.accessor.options.components || {}, this.accessor.options.frameworkComponents, (_a = this.accessor.options.frameworkComponentFactory) === null || _a === void 0 ? void 0 : _a.content);\n    }\n    createTabComponent(id, componentName) {\n        var _a;\n        return createComponent(id, componentName, this.accessor.options.tabComponents || {}, this.accessor.options.frameworkTabComponents, (_a = this.accessor.options.frameworkComponentFactory) === null || _a === void 0 ? void 0 : _a.tab, () => new DefaultTab());\n    }\n}\n","import { DockviewPanel } from './dockviewPanel';\nimport { createComponent } from '../panel/componentFactory';\nimport { DefaultTab } from './components/tab/defaultTab';\nimport { DockviewPanelModel } from './dockviewPanelModel';\nimport { DockviewApi } from '../api/component.api';\nexport class DefaultDockviewDeserialzier {\n    constructor(layout) {\n        this.layout = layout;\n    }\n    fromJSON(panelData, group) {\n        var _a, _b, _c;\n        const panelId = panelData.id;\n        const params = panelData.params;\n        const title = panelData.title;\n        const viewData = panelData.view;\n        const contentComponent = viewData\n            ? viewData.content.id\n            : panelData.contentComponent || 'unknown';\n        const tabComponent = viewData\n            ? (_a = viewData.tab) === null || _a === void 0 ? void 0 : _a.id\n            : panelData.tabComponent;\n        let tab;\n        if (tabComponent) {\n            tab = createComponent(panelId, tabComponent, this.layout.options.tabComponents, this.layout.options.frameworkTabComponents, (_b = this.layout.options.frameworkComponentFactory) === null || _b === void 0 ? void 0 : _b.tab, () => new DefaultTab());\n        }\n        else if (this.layout.options.defaultTabComponent) {\n            tab = createComponent(panelId, this.layout.options.defaultTabComponent, this.layout.options.tabComponents, this.layout.options.frameworkTabComponents, (_c = this.layout.options.frameworkComponentFactory) === null || _c === void 0 ? void 0 : _c.tab, () => new DefaultTab());\n        }\n        else {\n            tab = new DefaultTab();\n        }\n        const view = new DockviewPanelModel(this.layout, panelId, contentComponent, tabComponent);\n        const panel = new DockviewPanel(panelId, this.layout, new DockviewApi(this.layout), group, view);\n        panel.init({\n            title: title || panelId,\n            params: params || {},\n        });\n        return panel;\n    }\n}\n","export class ActionContainer {\n    get element() {\n        return this._element;\n    }\n    constructor() {\n        this._element = document.createElement('div');\n        this._element.className = 'actions-bar';\n        this._list = document.createElement('ul');\n        this._list.className = 'actions-container';\n        this._element.appendChild(this._list);\n    }\n    add(element) {\n        const listItem = document.createElement('li');\n        listItem.className = 'action-item';\n        this._list.appendChild(element);\n    }\n}\n","import { ActionContainer } from '../../../actionbar/actionsContainer';\nimport { addDisposableListener } from '../../../events';\nimport { toggleClass } from '../../../dom';\nimport { CompositeDisposable } from '../../../lifecycle';\nimport { createCloseButton } from '../../../svg';\nexport class Watermark extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor() {\n        super();\n        this._element = document.createElement('div');\n        this._element.className = 'watermark';\n        const title = document.createElement('div');\n        title.className = 'watermark-title';\n        const emptySpace = document.createElement('span');\n        emptySpace.style.flexGrow = '1';\n        const content = document.createElement('div');\n        content.className = 'watermark-content';\n        this._element.appendChild(title);\n        this._element.appendChild(content);\n        const actions = new ActionContainer();\n        title.appendChild(emptySpace);\n        title.appendChild(actions.element);\n        const closeAnchor = document.createElement('div');\n        closeAnchor.className = 'close-action';\n        closeAnchor.appendChild(createCloseButton());\n        actions.add(closeAnchor);\n        this.addDisposables(addDisposableListener(closeAnchor, 'click', (ev) => {\n            var _a;\n            ev.preventDefault();\n            if (this.group) {\n                (_a = this.params) === null || _a === void 0 ? void 0 : _a.containerApi.removeGroup(this.group);\n            }\n        }));\n    }\n    update(_event) {\n        // noop\n    }\n    focus() {\n        // noop\n    }\n    layout(_width, _height) {\n        // noop\n    }\n    init(params) {\n        this.params = params;\n        this.addDisposables(this.params.containerApi.onDidLayoutChange(() => {\n            this.render();\n        }));\n        this.render();\n    }\n    updateParentGroup(group, _visible) {\n        this.group = group;\n        this.render();\n    }\n    dispose() {\n        super.dispose();\n    }\n    render() {\n        const isOneGroup = !!(this.params && this.params.containerApi.size <= 1);\n        toggleClass(this.element, 'has-actions', isOneGroup);\n    }\n}\n","import { getRelativeLocation, getGridLocation, } from '../gridview/gridview';\nimport { directionToPosition, Droptarget } from '../dnd/droptarget';\nimport { tail, sequenceEquals } from '../array';\nimport { DockviewPanel } from './dockviewPanel';\nimport { CompositeDisposable } from '../lifecycle';\nimport { Event, Emitter } from '../events';\nimport { Watermark } from './components/watermark/watermark';\nimport { DockviewDropTargets, } from './types';\nimport { sequentialNumberGenerator } from '../math';\nimport { DefaultDockviewDeserialzier } from './deserializer';\nimport { createComponent } from '../panel/componentFactory';\nimport { isGroupOptionsWithGroup, isGroupOptionsWithPanel, isPanelOptionsWithGroup, isPanelOptionsWithPanel, } from './options';\nimport { BaseGrid, toTarget, } from '../gridview/baseComponentGridview';\nimport { DockviewApi } from '../api/component.api';\nimport { Orientation, Sizing } from '../splitview/core/splitview';\nimport { DockviewGroupPanel } from './dockviewGroupPanel';\nimport { DockviewPanelModel } from './dockviewPanelModel';\nimport { getPanelData } from '../dnd/dataTransfer';\nexport class DockviewComponent extends BaseGrid {\n    get orientation() {\n        return this.gridview.orientation;\n    }\n    get totalPanels() {\n        return this.panels.length;\n    }\n    get panels() {\n        return this.groups.flatMap((group) => group.panels);\n    }\n    get options() {\n        return this._options;\n    }\n    get activePanel() {\n        const activeGroup = this.activeGroup;\n        if (!activeGroup) {\n            return undefined;\n        }\n        return activeGroup.activePanel;\n    }\n    set tabHeight(height) {\n        this.options.tabHeight = height;\n        this._groups.forEach((value) => {\n            value.value.model.header.height = height;\n        });\n    }\n    get tabHeight() {\n        return this.options.tabHeight;\n    }\n    constructor(element, options) {\n        super(element, {\n            proportionalLayout: true,\n            orientation: options.orientation || Orientation.HORIZONTAL,\n            styles: options.styles,\n        });\n        this.nextGroupId = sequentialNumberGenerator();\n        this._deserializer = new DefaultDockviewDeserialzier(this);\n        this.watermark = null;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onDidRemovePanel = new Emitter();\n        this.onDidRemovePanel = this._onDidRemovePanel.event;\n        this._onDidAddPanel = new Emitter();\n        this.onDidAddPanel = this._onDidAddPanel.event;\n        this._onDidLayoutFromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutFromJSON.event;\n        this._onDidActivePanelChange = new Emitter();\n        this.onDidActivePanelChange = this._onDidActivePanelChange.event;\n        this.element.classList.add('dv-dockview');\n        this.addDisposables(this._onDidDrop, Event.any(this.onDidAddGroup, this.onDidRemoveGroup)(() => {\n            this.updateWatermark();\n        }), Event.any(this.onDidAddPanel, this.onDidRemovePanel, this.onDidActivePanelChange)(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }));\n        this._options = options;\n        if (!this.options.components) {\n            this.options.components = {};\n        }\n        if (!this.options.frameworkComponents) {\n            this.options.frameworkComponents = {};\n        }\n        if (!this.options.frameworkTabComponents) {\n            this.options.frameworkTabComponents = {};\n        }\n        if (!this.options.tabComponents) {\n            this.options.tabComponents = {};\n        }\n        if (!this.options.watermarkComponent &&\n            !this.options.watermarkFrameworkComponent) {\n            this.options.watermarkComponent = Watermark;\n        }\n        const dropTarget = new Droptarget(this.element, {\n            canDisplayOverlay: (event, position) => {\n                const data = getPanelData();\n                if (data) {\n                    if (data.viewId !== this.id) {\n                        return false;\n                    }\n                    return true;\n                }\n                if (this.options.showDndOverlay) {\n                    return this.options.showDndOverlay({\n                        nativeEvent: event,\n                        position: position,\n                        target: DockviewDropTargets.Edge,\n                        getData: getPanelData,\n                    });\n                }\n                return false;\n            },\n            acceptedTargetZones: ['top', 'bottom', 'left', 'right'],\n            overlayModel: {\n                activationSize: { type: 'pixels', value: 10 },\n                size: { type: 'pixels', value: 20 },\n            },\n        });\n        this.addDisposables(dropTarget, dropTarget.onDrop((event) => {\n            const data = getPanelData();\n            if (data) {\n                this.moveGroupOrPanel(this.orthogonalize(event.position), data.groupId, data.panelId || undefined, 'center');\n            }\n            else {\n                this._onDidDrop.fire(Object.assign(Object.assign({}, event), { api: this._api, group: null, getData: getPanelData }));\n            }\n        }));\n        this._api = new DockviewApi(this);\n        this.updateWatermark();\n    }\n    orthogonalize(position) {\n        switch (position) {\n            case 'top':\n            case 'bottom':\n                if (this.gridview.orientation === Orientation.HORIZONTAL) {\n                    // we need to add to a vertical splitview but the current root is a horizontal splitview.\n                    // insert a vertical splitview at the root level and add the existing view as a child\n                    this.gridview.insertOrthogonalSplitviewAtRoot();\n                }\n                break;\n            case 'left':\n            case 'right':\n                if (this.gridview.orientation === Orientation.VERTICAL) {\n                    // we need to add to a horizontal splitview but the current root is a vertical splitview.\n                    // insert a horiziontal splitview at the root level and add the existing view as a child\n                    this.gridview.insertOrthogonalSplitviewAtRoot();\n                }\n                break;\n            default:\n                break;\n        }\n        switch (position) {\n            case 'top':\n            case 'left':\n                return this.createGroupAtLocation([0]); // insert into first position\n            case 'bottom':\n            case 'right':\n                return this.createGroupAtLocation([this.gridview.length]); // insert into last position\n            default:\n                throw new Error(`unsupported position ${position}`);\n        }\n    }\n    updateOptions(options) {\n        const hasOrientationChanged = typeof options.orientation === 'string' &&\n            this.gridview.orientation !== options.orientation;\n        this._options = Object.assign(Object.assign({}, this.options), options);\n        if (hasOrientationChanged) {\n            this.gridview.orientation = options.orientation;\n        }\n        this.layout(this.gridview.width, this.gridview.height, true);\n    }\n    focus() {\n        var _a;\n        (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    getGroupPanel(id) {\n        return this.panels.find((panel) => panel.id === id);\n    }\n    setActivePanel(panel) {\n        this.doSetGroupActive(panel.group);\n        panel.group.model.openPanel(panel);\n    }\n    moveToNext(options = {}) {\n        var _a;\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        if (options.includePanel && options.group) {\n            if (options.group.activePanel !==\n                options.group.panels[options.group.panels.length - 1]) {\n                options.group.model.moveToNext({ suppressRoll: true });\n                return;\n            }\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.next(location)) === null || _a === void 0 ? void 0 : _a.view;\n        this.doSetGroupActive(next);\n    }\n    moveToPrevious(options = {}) {\n        var _a;\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        if (options.includePanel && options.group) {\n            if (options.group.activePanel !== options.group.panels[0]) {\n                options.group.model.moveToPrevious({ suppressRoll: true });\n                return;\n            }\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.previous(location)) === null || _a === void 0 ? void 0 : _a.view;\n        if (next) {\n            this.doSetGroupActive(next);\n        }\n    }\n    /**\n     * Serialize the current state of the layout\n     *\n     * @returns A JSON respresentation of the layout\n     */\n    toJSON() {\n        var _a;\n        const data = this.gridview.serialize();\n        const panels = this.panels.reduce((collection, panel) => {\n            collection[panel.id] = panel.toJSON();\n            return collection;\n        }, {});\n        return {\n            grid: data,\n            panels,\n            activeGroup: (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.id,\n            options: { tabHeight: this.tabHeight },\n        };\n    }\n    fromJSON(data) {\n        this.clear();\n        const { grid, panels, options, activeGroup } = data;\n        if (typeof (options === null || options === void 0 ? void 0 : options.tabHeight) === 'number') {\n            this.tabHeight = options.tabHeight;\n        }\n        if (grid.root.type !== 'branch' || !Array.isArray(grid.root.data)) {\n            throw new Error('root must be of type branch');\n        }\n        this.gridview.deserialize(grid, {\n            fromJSON: (node) => {\n                const { id, locked, hideHeader, views, activeView } = node.data;\n                const group = this.createGroup({\n                    id,\n                    locked: !!locked,\n                    hideHeader: !!hideHeader,\n                });\n                this._onDidAddGroup.fire(group);\n                for (const child of views) {\n                    const panel = this._deserializer.fromJSON(panels[child], group);\n                    const isActive = typeof activeView === 'string' &&\n                        activeView === panel.id;\n                    group.model.openPanel(panel, {\n                        skipSetPanelActive: !isActive,\n                        skipSetGroupActive: true,\n                    });\n                }\n                if (!group.activePanel && group.panels.length > 0) {\n                    group.model.openPanel(group.panels[group.panels.length - 1], {\n                        skipSetGroupActive: true,\n                    });\n                }\n                return group;\n            },\n        });\n        if (typeof activeGroup === 'string') {\n            const panel = this.getPanel(activeGroup);\n            if (panel) {\n                this.doSetGroupActive(panel);\n            }\n        }\n        this.gridview.layout(this.width, this.height);\n        this._onDidLayoutFromJSON.fire();\n    }\n    clear() {\n        const groups = Array.from(this._groups.values()).map((_) => _.value);\n        const hasActiveGroup = !!this.activeGroup;\n        const hasActivePanel = !!this.activePanel;\n        for (const group of groups) {\n            // remove the group will automatically remove the panels\n            this.removeGroup(group, true);\n        }\n        if (hasActiveGroup) {\n            this.doSetGroupActive(undefined);\n        }\n        if (hasActivePanel) {\n            this._onDidActivePanelChange.fire(undefined);\n        }\n        this.gridview.clear();\n    }\n    closeAllGroups() {\n        for (const entry of this._groups.entries()) {\n            const [_, group] = entry;\n            group.value.model.closeAllPanels();\n        }\n    }\n    addPanel(options) {\n        var _a, _b;\n        if (this.panels.find((_) => _.id === options.id)) {\n            throw new Error(`panel with id ${options.id} already exists`);\n        }\n        let referenceGroup;\n        if (options.position) {\n            if (isPanelOptionsWithPanel(options.position)) {\n                const referencePanel = typeof options.position.referencePanel === 'string'\n                    ? this.getGroupPanel(options.position.referencePanel)\n                    : options.position.referencePanel;\n                if (!referencePanel) {\n                    throw new Error(`referencePanel ${options.position.referencePanel} does not exist`);\n                }\n                referenceGroup = this.findGroup(referencePanel);\n            }\n            else if (isPanelOptionsWithGroup(options.position)) {\n                referenceGroup =\n                    typeof options.position.referenceGroup === 'string'\n                        ? (_a = this._groups.get(options.position.referenceGroup)) === null || _a === void 0 ? void 0 : _a.value\n                        : options.position.referenceGroup;\n                if (!referenceGroup) {\n                    throw new Error(`referencePanel ${options.position.referenceGroup} does not exist`);\n                }\n            }\n            else {\n                const group = this.orthogonalize(directionToPosition(options.position.direction));\n                const panel = this.createPanel(options, group);\n                group.model.openPanel(panel);\n                return panel;\n            }\n        }\n        else {\n            referenceGroup = this.activeGroup;\n        }\n        let panel;\n        if (referenceGroup) {\n            const target = toTarget(((_b = options.position) === null || _b === void 0 ? void 0 : _b.direction) || 'within');\n            if (target === 'center') {\n                panel = this.createPanel(options, referenceGroup);\n                referenceGroup.model.openPanel(panel);\n            }\n            else {\n                const location = getGridLocation(referenceGroup.element);\n                const relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n                const group = this.createGroupAtLocation(relativeLocation);\n                panel = this.createPanel(options, group);\n                group.model.openPanel(panel);\n            }\n        }\n        else {\n            const group = this.createGroupAtLocation();\n            panel = this.createPanel(options, group);\n            group.model.openPanel(panel);\n        }\n        return panel;\n    }\n    removePanel(panel, options = {\n        removeEmptyGroup: true,\n        skipDispose: false,\n    }) {\n        const group = panel.group;\n        if (!group) {\n            throw new Error(`cannot remove panel ${panel.id}. it's missing a group.`);\n        }\n        group.model.removePanel(panel);\n        panel.dispose();\n        if (group.size === 0 && options.removeEmptyGroup) {\n            this.removeGroup(group);\n        }\n    }\n    createWatermarkComponent() {\n        var _a;\n        return createComponent('watermark-id', 'watermark-name', this.options.watermarkComponent\n            ? { 'watermark-name': this.options.watermarkComponent }\n            : {}, this.options.watermarkFrameworkComponent\n            ? { 'watermark-name': this.options.watermarkFrameworkComponent }\n            : {}, (_a = this.options.frameworkComponentFactory) === null || _a === void 0 ? void 0 : _a.watermark);\n    }\n    updateWatermark() {\n        var _a, _b;\n        if (this.groups.length === 0) {\n            if (!this.watermark) {\n                this.watermark = this.createWatermarkComponent();\n                this.watermark.init({\n                    containerApi: new DockviewApi(this),\n                    params: {},\n                    title: '',\n                    api: null,\n                });\n                const watermarkContainer = document.createElement('div');\n                watermarkContainer.className = 'dv-watermark-container';\n                watermarkContainer.appendChild(this.watermark.element);\n                this.element.appendChild(watermarkContainer);\n            }\n        }\n        else if (this.watermark) {\n            this.watermark.element.parentElement.remove();\n            (_b = (_a = this.watermark).dispose) === null || _b === void 0 ? void 0 : _b.call(_a);\n            this.watermark = null;\n        }\n    }\n    addGroup(options) {\n        var _a;\n        const group = this.createGroup();\n        if (options) {\n            let referenceGroup;\n            if (isGroupOptionsWithPanel(options)) {\n                const referencePanel = typeof options.referencePanel === 'string'\n                    ? this.panels.find((panel) => panel.id === options.referencePanel)\n                    : options.referencePanel;\n                if (!referencePanel) {\n                    throw new Error(`reference panel ${options.referencePanel} does not exist`);\n                }\n                referenceGroup = this.findGroup(referencePanel);\n                if (!referenceGroup) {\n                    throw new Error(`reference group for reference panel ${options.referencePanel} does not exist`);\n                }\n            }\n            else if (isGroupOptionsWithGroup(options)) {\n                referenceGroup =\n                    typeof options.referenceGroup === 'string'\n                        ? (_a = this._groups.get(options.referenceGroup)) === null || _a === void 0 ? void 0 : _a.value\n                        : options.referenceGroup;\n                if (!referenceGroup) {\n                    throw new Error(`reference group ${options.referenceGroup} does not exist`);\n                }\n            }\n            else {\n                const group = this.orthogonalize(directionToPosition(options.direction));\n                return group;\n            }\n            const target = toTarget(options.direction || 'within');\n            const location = getGridLocation(referenceGroup.element);\n            const relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n            this.doAddGroup(group, relativeLocation);\n            return group;\n        }\n        else {\n            this.doAddGroup(group);\n            return group;\n        }\n    }\n    removeGroup(group, skipActive = false) {\n        const panels = [...group.panels]; // reassign since group panels will mutate\n        for (const panel of panels) {\n            this.removePanel(panel, {\n                removeEmptyGroup: false,\n                skipDispose: false,\n            });\n        }\n        super.doRemoveGroup(group, { skipActive });\n    }\n    moveGroupOrPanel(referenceGroup, groupId, itemId, target, index) {\n        var _a;\n        const sourceGroup = groupId\n            ? (_a = this._groups.get(groupId)) === null || _a === void 0 ? void 0 : _a.value\n            : undefined;\n        if (itemId === undefined) {\n            if (sourceGroup) {\n                this.moveGroup(sourceGroup, referenceGroup, target);\n            }\n            return;\n        }\n        if (!target || target === 'center') {\n            const groupItem = (sourceGroup === null || sourceGroup === void 0 ? void 0 : sourceGroup.model.removePanel(itemId)) ||\n                this.panels.find((panel) => panel.id === itemId);\n            if (!groupItem) {\n                throw new Error(`No panel with id ${itemId}`);\n            }\n            if ((sourceGroup === null || sourceGroup === void 0 ? void 0 : sourceGroup.model.size) === 0) {\n                this.doRemoveGroup(sourceGroup);\n            }\n            referenceGroup.model.openPanel(groupItem, { index });\n        }\n        else {\n            const referenceLocation = getGridLocation(referenceGroup.element);\n            const targetLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, target);\n            if (sourceGroup && sourceGroup.size < 2) {\n                const [targetParentLocation, to] = tail(targetLocation);\n                const sourceLocation = getGridLocation(sourceGroup.element);\n                const [sourceParentLocation, from] = tail(sourceLocation);\n                if (sequenceEquals(sourceParentLocation, targetParentLocation)) {\n                    // special case when 'swapping' two views within same grid location\n                    // if a group has one tab - we are essentially moving the 'group'\n                    // which is equivalent to swapping two views in this case\n                    this.gridview.moveView(sourceParentLocation, from, to);\n                }\n                else {\n                    // source group will become empty so delete the group\n                    const targetGroup = this.doRemoveGroup(sourceGroup, {\n                        skipActive: true,\n                        skipDispose: true,\n                    });\n                    // after deleting the group we need to re-evaulate the ref location\n                    const updatedReferenceLocation = getGridLocation(referenceGroup.element);\n                    const location = getRelativeLocation(this.gridview.orientation, updatedReferenceLocation, target);\n                    this.doAddGroup(targetGroup, location);\n                }\n            }\n            else {\n                const groupItem = (sourceGroup === null || sourceGroup === void 0 ? void 0 : sourceGroup.model.removePanel(itemId)) ||\n                    this.panels.find((panel) => panel.id === itemId);\n                if (!groupItem) {\n                    throw new Error(`No panel with id ${itemId}`);\n                }\n                const dropLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, target);\n                const group = this.createGroupAtLocation(dropLocation);\n                group.model.openPanel(groupItem);\n            }\n        }\n    }\n    moveGroup(sourceGroup, referenceGroup, target) {\n        if (sourceGroup) {\n            if (!target || target === 'center') {\n                const activePanel = sourceGroup.activePanel;\n                const panels = [...sourceGroup.panels].map((p) => sourceGroup.model.removePanel(p.id));\n                if ((sourceGroup === null || sourceGroup === void 0 ? void 0 : sourceGroup.model.size) === 0) {\n                    this.doRemoveGroup(sourceGroup);\n                }\n                for (const panel of panels) {\n                    referenceGroup.model.openPanel(panel, {\n                        skipSetPanelActive: panel !== activePanel,\n                    });\n                }\n            }\n            else {\n                this.gridview.removeView(getGridLocation(sourceGroup.element));\n                const referenceLocation = getGridLocation(referenceGroup.element);\n                const dropLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, target);\n                this.gridview.addView(sourceGroup, Sizing.Distribute, dropLocation);\n            }\n        }\n    }\n    doSetGroupActive(group, skipFocus) {\n        var _a, _b;\n        const isGroupAlreadyFocused = this._activeGroup === group;\n        super.doSetGroupActive(group, skipFocus);\n        if (!isGroupAlreadyFocused && ((_a = this._activeGroup) === null || _a === void 0 ? void 0 : _a.activePanel)) {\n            this._onDidActivePanelChange.fire((_b = this._activeGroup) === null || _b === void 0 ? void 0 : _b.activePanel);\n        }\n    }\n    createGroup(options) {\n        if (!options) {\n            options = { tabHeight: this.tabHeight };\n        }\n        if (typeof options.tabHeight !== 'number') {\n            options.tabHeight = this.tabHeight;\n        }\n        let id = options === null || options === void 0 ? void 0 : options.id;\n        if (id && this._groups.has(options.id)) {\n            console.warn(`Duplicate group id ${options === null || options === void 0 ? void 0 : options.id}. reassigning group id to avoid errors`);\n            id = undefined;\n        }\n        if (!id) {\n            id = this.nextGroupId.next();\n            while (this._groups.has(id)) {\n                id = this.nextGroupId.next();\n            }\n        }\n        const view = new DockviewGroupPanel(this, id, options);\n        view.init({ params: {}, accessor: null }); // required to initialized .part and allow for correct disposal of group\n        if (!this._groups.has(view.id)) {\n            const disposable = new CompositeDisposable(view.model.onMove((event) => {\n                const { groupId, itemId, target, index } = event;\n                this.moveGroupOrPanel(view, groupId, itemId, target, index);\n            }), view.model.onDidDrop((event) => {\n                this._onDidDrop.fire(Object.assign(Object.assign({}, event), { api: this._api, group: view }));\n            }), view.model.onDidAddPanel((event) => {\n                this._onDidAddPanel.fire(event.panel);\n            }), view.model.onDidRemovePanel((event) => {\n                this._onDidRemovePanel.fire(event.panel);\n            }), view.model.onDidActivePanelChange((event) => {\n                this._onDidActivePanelChange.fire(event.panel);\n            }));\n            this._groups.set(view.id, { value: view, disposable });\n        }\n        // TODO: must be called after the above listeners have been setup,\n        // not an ideal pattern\n        view.initialize();\n        if (typeof this.options.tabHeight === 'number') {\n            view.model.header.height = this.options.tabHeight;\n        }\n        return view;\n    }\n    createPanel(options, group) {\n        const contentComponent = options.component;\n        const tabComponent = options.tabComponent || this.options.defaultTabComponent;\n        const view = new DockviewPanelModel(this, options.id, contentComponent, tabComponent);\n        const panel = new DockviewPanel(options.id, this, this._api, group, view);\n        panel.init({\n            title: options.title || options.id,\n            params: (options === null || options === void 0 ? void 0 : options.params) || {},\n        });\n        return panel;\n    }\n    createGroupAtLocation(location = [0]) {\n        const group = this.createGroup();\n        this.doAddGroup(group, location);\n        return group;\n    }\n    findGroup(panel) {\n        var _a;\n        return (_a = Array.from(this._groups.values()).find((group) => group.value.model.containsPanel(panel))) === null || _a === void 0 ? void 0 : _a.value;\n    }\n    dispose() {\n        super.dispose();\n        this._onDidActivePanelChange.dispose();\n        this._onDidAddPanel.dispose();\n        this._onDidRemovePanel.dispose();\n        this._onDidLayoutFromJSON.dispose();\n    }\n}\n","export function isPanelOptionsWithPanel(data) {\n    if (data.referencePanel) {\n        return true;\n    }\n    return false;\n}\nexport function isPanelOptionsWithGroup(data) {\n    if (data.referenceGroup) {\n        return true;\n    }\n    return false;\n}\nexport function isGroupOptionsWithPanel(data) {\n    if (data.referencePanel) {\n        return true;\n    }\n    return false;\n}\nexport function isGroupOptionsWithGroup(data) {\n    if (data.referenceGroup) {\n        return true;\n    }\n    return false;\n}\n","import { getRelativeLocation, getGridLocation, } from './gridview';\nimport { tail, sequenceEquals } from '../array';\nimport { CompositeDisposable } from '../lifecycle';\nimport { BaseGrid, toTarget, } from './baseComponentGridview';\nimport { createComponent } from '../panel/componentFactory';\nimport { Emitter } from '../events';\nexport class GridviewComponent extends BaseGrid {\n    get orientation() {\n        return this.gridview.orientation;\n    }\n    set orientation(value) {\n        this.gridview.orientation = value;\n    }\n    get options() {\n        return this._options;\n    }\n    get deserializer() {\n        return this._deserializer;\n    }\n    set deserializer(value) {\n        this._deserializer = value;\n    }\n    constructor(element, options) {\n        super(element, {\n            proportionalLayout: options.proportionalLayout,\n            orientation: options.orientation,\n            styles: options.styles,\n        });\n        this._onDidLayoutfromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutfromJSON.event;\n        this._options = options;\n        if (!this.options.components) {\n            this.options.components = {};\n        }\n        if (!this.options.frameworkComponents) {\n            this.options.frameworkComponents = {};\n        }\n    }\n    updateOptions(options) {\n        const hasOrientationChanged = typeof options.orientation === 'string' &&\n            this.gridview.orientation !== options.orientation;\n        this._options = Object.assign(Object.assign({}, this.options), options);\n        if (hasOrientationChanged) {\n            this.gridview.orientation = options.orientation;\n        }\n        this.layout(this.gridview.width, this.gridview.height, true);\n    }\n    removePanel(panel) {\n        this.removeGroup(panel);\n    }\n    /**\n     * Serialize the current state of the layout\n     *\n     * @returns A JSON respresentation of the layout\n     */\n    toJSON() {\n        var _a;\n        const data = this.gridview.serialize();\n        return {\n            grid: data,\n            activePanel: (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.id,\n        };\n    }\n    setVisible(panel, visible) {\n        this.gridview.setViewVisible(getGridLocation(panel.element), visible);\n    }\n    setActive(panel) {\n        this._groups.forEach((value, _key) => {\n            value.value.setActive(panel === value.value);\n        });\n    }\n    focus() {\n        var _a;\n        (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    fromJSON(serializedGridview) {\n        this.clear();\n        const { grid, activePanel } = serializedGridview;\n        const queue = [];\n        this.gridview.deserialize(grid, {\n            fromJSON: (node) => {\n                const { data } = node;\n                const view = createComponent(data.id, data.component, this.options.components || {}, this.options.frameworkComponents || {}, this.options.frameworkComponentFactory\n                    ? {\n                        createComponent: this.options.frameworkComponentFactory\n                            .createComponent,\n                    }\n                    : undefined);\n                queue.push(() => view.init({\n                    params: data.params,\n                    minimumWidth: data.minimumWidth,\n                    maximumWidth: data.maximumWidth,\n                    minimumHeight: data.minimumHeight,\n                    maximumHeight: data.maximumHeight,\n                    priority: data.priority,\n                    snap: !!data.snap,\n                    accessor: this,\n                    isVisible: node.visible,\n                }));\n                this._onDidAddGroup.fire(view);\n                this.registerPanel(view);\n                return view;\n            },\n        });\n        this.layout(this.width, this.height, true);\n        queue.forEach((f) => f());\n        if (typeof activePanel === 'string') {\n            const panel = this.getPanel(activePanel);\n            if (panel) {\n                this.doSetGroupActive(panel);\n            }\n        }\n        this._onDidLayoutfromJSON.fire();\n    }\n    clear() {\n        const hasActiveGroup = this.activeGroup;\n        const groups = Array.from(this._groups.values()); // reassign since group panels will mutate\n        for (const group of groups) {\n            group.disposable.dispose();\n            this.doRemoveGroup(group.value, { skipActive: true });\n        }\n        if (hasActiveGroup) {\n            this.doSetGroupActive(undefined);\n        }\n        this.gridview.clear();\n    }\n    movePanel(panel, options) {\n        var _a;\n        let relativeLocation;\n        const removedPanel = this.gridview.remove(panel);\n        const referenceGroup = (_a = this._groups.get(options.reference)) === null || _a === void 0 ? void 0 : _a.value;\n        if (!referenceGroup) {\n            throw new Error(`reference group ${options.reference} does not exist`);\n        }\n        const target = toTarget(options.direction);\n        if (target === 'center') {\n            throw new Error(`${target} not supported as an option`);\n        }\n        else {\n            const location = getGridLocation(referenceGroup.element);\n            relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n        }\n        this.doAddGroup(removedPanel, relativeLocation, options.size);\n    }\n    addPanel(options) {\n        var _a, _b;\n        let relativeLocation = options.location || [0];\n        if ((_a = options.position) === null || _a === void 0 ? void 0 : _a.referencePanel) {\n            const referenceGroup = (_b = this._groups.get(options.position.referencePanel)) === null || _b === void 0 ? void 0 : _b.value;\n            if (!referenceGroup) {\n                throw new Error(`reference group ${options.position.referencePanel} does not exist`);\n            }\n            const target = toTarget(options.position.direction);\n            if (target === 'center') {\n                throw new Error(`${target} not supported as an option`);\n            }\n            else {\n                const location = getGridLocation(referenceGroup.element);\n                relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n            }\n        }\n        const view = createComponent(options.id, options.component, this.options.components || {}, this.options.frameworkComponents || {}, this.options.frameworkComponentFactory\n            ? {\n                createComponent: this.options.frameworkComponentFactory\n                    .createComponent,\n            }\n            : undefined);\n        view.init({\n            params: options.params || {},\n            minimumWidth: options.minimumWidth,\n            maximumWidth: options.maximumWidth,\n            minimumHeight: options.minimumHeight,\n            maximumHeight: options.maximumHeight,\n            priority: options.priority,\n            snap: !!options.snap,\n            accessor: this,\n            isVisible: true,\n        });\n        this.registerPanel(view);\n        this.doAddGroup(view, relativeLocation, options.size);\n        return view;\n    }\n    registerPanel(panel) {\n        const disposable = new CompositeDisposable(panel.api.onDidFocusChange((event) => {\n            if (!event.isFocused) {\n                return;\n            }\n            this._groups.forEach((groupItem) => {\n                const group = groupItem.value;\n                if (group !== panel) {\n                    group.setActive(false);\n                }\n                else {\n                    group.setActive(true);\n                }\n            });\n        }));\n        this._groups.set(panel.id, {\n            value: panel,\n            disposable,\n        });\n    }\n    moveGroup(referenceGroup, groupId, target) {\n        const sourceGroup = this.getPanel(groupId);\n        if (!sourceGroup) {\n            throw new Error('invalid operation');\n        }\n        const referenceLocation = getGridLocation(referenceGroup.element);\n        const targetLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, target);\n        const [targetParentLocation, to] = tail(targetLocation);\n        const sourceLocation = getGridLocation(sourceGroup.element);\n        const [sourceParentLocation, from] = tail(sourceLocation);\n        if (sequenceEquals(sourceParentLocation, targetParentLocation)) {\n            // special case when 'swapping' two views within same grid location\n            // if a group has one tab - we are essentially moving the 'group'\n            // which is equivalent to swapping two views in this case\n            this.gridview.moveView(sourceParentLocation, from, to);\n            return;\n        }\n        // source group will become empty so delete the group\n        const targetGroup = this.doRemoveGroup(sourceGroup, {\n            skipActive: true,\n            skipDispose: true,\n        });\n        // after deleting the group we need to re-evaulate the ref location\n        const updatedReferenceLocation = getGridLocation(referenceGroup.element);\n        const location = getRelativeLocation(this.gridview.orientation, updatedReferenceLocation, target);\n        this.doAddGroup(targetGroup, location);\n    }\n    removeGroup(group) {\n        super.removeGroup(group);\n    }\n    dispose() {\n        super.dispose();\n        this._onDidLayoutfromJSON.dispose();\n    }\n}\n","import { CompositeDisposable, MutableDisposable, } from '../lifecycle';\nimport { Orientation, Sizing, Splitview, } from './core/splitview';\nimport { Emitter } from '../events';\nimport { createComponent } from '../panel/componentFactory';\n/**\n * A high-level implementation of splitview that works using 'panels'\n */\nexport class SplitviewComponent extends CompositeDisposable {\n    get panels() {\n        return this.splitview.getViews();\n    }\n    get options() {\n        return this._options;\n    }\n    get length() {\n        return this._panels.size;\n    }\n    get orientation() {\n        return this.splitview.orientation;\n    }\n    get splitview() {\n        return this._splitview;\n    }\n    set splitview(value) {\n        this._splitview = value;\n        this._disposable.value = new CompositeDisposable(this._splitview.onDidSashEnd(() => {\n            this._onDidLayoutChange.fire(undefined);\n        }), this._splitview.onDidAddView((e) => this._onDidAddView.fire(e)), this._splitview.onDidRemoveView((e) => this._onDidRemoveView.fire(e)));\n    }\n    get minimumSize() {\n        return this.splitview.minimumSize;\n    }\n    get maximumSize() {\n        return this.splitview.maximumSize;\n    }\n    get height() {\n        return this.splitview.orientation === Orientation.HORIZONTAL\n            ? this.splitview.orthogonalSize\n            : this.splitview.size;\n    }\n    get width() {\n        return this.splitview.orientation === Orientation.HORIZONTAL\n            ? this.splitview.size\n            : this.splitview.orthogonalSize;\n    }\n    constructor(element, options) {\n        super();\n        this.element = element;\n        this._disposable = new MutableDisposable();\n        this._panels = new Map();\n        this._onDidLayoutfromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutfromJSON.event;\n        this._onDidAddView = new Emitter();\n        this.onDidAddView = this._onDidAddView.event;\n        this._onDidRemoveView = new Emitter();\n        this.onDidRemoveView = this._onDidRemoveView.event;\n        this._onDidLayoutChange = new Emitter();\n        this.onDidLayoutChange = this._onDidLayoutChange.event;\n        this._options = options;\n        if (!options.components) {\n            options.components = {};\n        }\n        if (!options.frameworkComponents) {\n            options.frameworkComponents = {};\n        }\n        this.splitview = new Splitview(this.element, options);\n        this.addDisposables(this._disposable, this._onDidAddView, this._onDidLayoutfromJSON, this._onDidRemoveView, this._onDidLayoutChange);\n    }\n    updateOptions(options) {\n        const hasOrientationChanged = typeof options.orientation === 'string' &&\n            this.options.orientation !== options.orientation;\n        this._options = Object.assign(Object.assign({}, this.options), options);\n        if (hasOrientationChanged) {\n            this.splitview.orientation = options.orientation;\n        }\n        this.splitview.layout(this.splitview.size, this.splitview.orthogonalSize);\n    }\n    focus() {\n        var _a;\n        (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    movePanel(from, to) {\n        this.splitview.moveView(from, to);\n    }\n    setVisible(panel, visible) {\n        const index = this.panels.indexOf(panel);\n        this.splitview.setViewVisible(index, visible);\n    }\n    setActive(view, skipFocus) {\n        this._activePanel = view;\n        this.panels\n            .filter((v) => v !== view)\n            .forEach((v) => {\n            v.api._onDidActiveChange.fire({ isActive: false });\n            if (!skipFocus) {\n                v.focus();\n            }\n        });\n        view.api._onDidActiveChange.fire({ isActive: true });\n        if (!skipFocus) {\n            view.focus();\n        }\n    }\n    removePanel(panel, sizing) {\n        const disposable = this._panels.get(panel.id);\n        if (!disposable) {\n            throw new Error(`unknown splitview panel ${panel.id}`);\n        }\n        disposable.disposable.dispose();\n        disposable.value.dispose();\n        this._panels.delete(panel.id);\n        const index = this.panels.findIndex((_) => _ === panel);\n        this.splitview.removeView(index, sizing);\n        const panels = this.panels;\n        if (panels.length > 0) {\n            this.setActive(panels[panels.length - 1]);\n        }\n    }\n    getPanel(id) {\n        return this.panels.find((view) => view.id === id);\n    }\n    addPanel(options) {\n        if (this._panels.has(options.id)) {\n            throw new Error(`panel ${options.id} already exists`);\n        }\n        const view = createComponent(options.id, options.component, this.options.components || {}, this.options.frameworkComponents || {}, this.options.frameworkWrapper\n            ? {\n                createComponent: this.options.frameworkWrapper.createComponent,\n            }\n            : undefined);\n        view.orientation = this.splitview.orientation;\n        view.init({\n            params: options.params || {},\n            minimumSize: options.minimumSize,\n            maximumSize: options.maximumSize,\n            snap: options.snap,\n            priority: options.priority,\n            accessor: this,\n        });\n        const size = typeof options.size === 'number' ? options.size : Sizing.Distribute;\n        const index = typeof options.index === 'number' ? options.index : undefined;\n        this.splitview.addView(view, size, index);\n        this.doAddView(view);\n        this.setActive(view);\n        return view;\n    }\n    layout(width, height) {\n        const [size, orthogonalSize] = this.splitview.orientation === Orientation.HORIZONTAL\n            ? [width, height]\n            : [height, width];\n        this.splitview.layout(size, orthogonalSize);\n    }\n    doAddView(view) {\n        const disposable = view.api.onDidFocusChange((event) => {\n            if (!event.isFocused) {\n                return;\n            }\n            this.setActive(view, true);\n        });\n        this._panels.set(view.id, { disposable, value: view });\n    }\n    toJSON() {\n        var _a;\n        const views = this.splitview\n            .getViews()\n            .map((view, i) => {\n            const size = this.splitview.getViewSize(i);\n            return {\n                size,\n                data: view.toJSON(),\n                snap: !!view.snap,\n                priority: view.priority,\n            };\n        });\n        return {\n            views,\n            activeView: (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.id,\n            size: this.splitview.size,\n            orientation: this.splitview.orientation,\n        };\n    }\n    fromJSON(serializedSplitview) {\n        this.clear();\n        const { views, orientation, size, activeView } = serializedSplitview;\n        const queue = [];\n        this.splitview = new Splitview(this.element, {\n            orientation,\n            proportionalLayout: this.options.proportionalLayout,\n            descriptor: {\n                size,\n                views: views.map((view) => {\n                    const data = view.data;\n                    if (this._panels.has(data.id)) {\n                        throw new Error(`panel ${data.id} already exists`);\n                    }\n                    const panel = createComponent(data.id, data.component, this.options.components || {}, this.options.frameworkComponents || {}, this.options.frameworkWrapper\n                        ? {\n                            createComponent: this.options.frameworkWrapper\n                                .createComponent,\n                        }\n                        : undefined);\n                    queue.push(() => {\n                        panel.init({\n                            params: data.params || {},\n                            minimumSize: data.minimumSize,\n                            maximumSize: data.maximumSize,\n                            snap: view.snap,\n                            priority: view.priority,\n                            accessor: this,\n                        });\n                    });\n                    panel.orientation = orientation;\n                    this.doAddView(panel);\n                    setTimeout(() => {\n                        // the original onDidAddView events are missed since they are fired before we can subcribe to them\n                        this._onDidAddView.fire(panel);\n                    }, 0);\n                    return { size: view.size, view: panel };\n                }),\n            },\n        });\n        this.layout(this.width, this.height);\n        queue.forEach((f) => f());\n        if (typeof activeView === 'string') {\n            const panel = this.getPanel(activeView);\n            if (panel) {\n                this.setActive(panel);\n            }\n        }\n        this._onDidLayoutfromJSON.fire();\n    }\n    clear() {\n        for (const [_, value] of this._panels.entries()) {\n            value.disposable.dispose();\n            value.value.dispose();\n        }\n        this._panels.clear();\n        this.splitview.dispose();\n    }\n    dispose() {\n        for (const [_, value] of this._panels.entries()) {\n            value.disposable.dispose();\n            value.value.dispose();\n        }\n        this._panels.clear();\n        this.splitview.dispose();\n        super.dispose();\n    }\n}\n","import { addDisposableListener } from '../events';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nimport { toggleClass } from '../dom';\nimport { createChevronRightButton, createExpandMoreButton } from '../svg';\nexport class DefaultHeader extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor() {\n        super();\n        this._expandedIcon = createExpandMoreButton();\n        this._collapsedIcon = createChevronRightButton();\n        this.disposable = new MutableDisposable();\n        this.apiRef = { api: null };\n        this._element = document.createElement('div');\n        this.element.className = 'default-header';\n        this._content = document.createElement('span');\n        this._expander = document.createElement('div');\n        this._expander.className = 'dockview-pane-header-icon';\n        this.element.appendChild(this._expander);\n        this.element.appendChild(this._content);\n        this.addDisposables(addDisposableListener(this._element, 'click', () => {\n            var _a;\n            (_a = this.apiRef.api) === null || _a === void 0 ? void 0 : _a.setExpanded(!this.apiRef.api.isExpanded);\n        }));\n    }\n    init(params) {\n        this.apiRef.api = params.api;\n        this._content.textContent = params.title;\n        this.updateIcon();\n        this.disposable.value = params.api.onDidExpansionChange(() => {\n            this.updateIcon();\n        });\n    }\n    updateIcon() {\n        var _a;\n        const isExpanded = !!((_a = this.apiRef.api) === null || _a === void 0 ? void 0 : _a.isExpanded);\n        toggleClass(this._expander, 'collapsed', !isExpanded);\n        if (isExpanded) {\n            if (this._expander.contains(this._collapsedIcon)) {\n                this._collapsedIcon.remove();\n            }\n            if (!this._expander.contains(this._expandedIcon)) {\n                this._expander.appendChild(this._expandedIcon);\n            }\n        }\n        else {\n            if (this._expander.contains(this._expandedIcon)) {\n                this._expandedIcon.remove();\n            }\n            if (!this._expander.contains(this._collapsedIcon)) {\n                this._expander.appendChild(this._collapsedIcon);\n            }\n        }\n    }\n    update(_params) {\n        //\n    }\n    dispose() {\n        this.disposable.dispose();\n        super.dispose();\n    }\n}\n","import { PaneviewApi } from '../api/component.api';\nimport { createComponent } from '../panel/componentFactory';\nimport { Emitter } from '../events';\nimport { CompositeDisposable, MutableDisposable, } from '../lifecycle';\nimport { Orientation, Sizing, } from '../splitview/core/splitview';\nimport { Paneview } from './paneview';\nimport { DraggablePaneviewPanel, } from './draggablePaneviewPanel';\nimport { DefaultHeader } from './defaultPaneviewHeader';\nimport { sequentialNumberGenerator } from '../math';\nconst nextLayoutId = sequentialNumberGenerator();\nexport class PaneFramework extends DraggablePaneviewPanel {\n    constructor(options) {\n        super(options.accessor, options.id, options.component, options.headerComponent, options.orientation, options.isExpanded, options.disableDnd);\n        this.options = options;\n    }\n    getBodyComponent() {\n        return this.options.body;\n    }\n    getHeaderComponent() {\n        return this.options.header;\n    }\n}\nexport class PaneviewComponent extends CompositeDisposable {\n    get id() {\n        return this._id;\n    }\n    get panels() {\n        return this.paneview.getPanes();\n    }\n    set paneview(value) {\n        this._paneview = value;\n        this._disposable.value = new CompositeDisposable(this._paneview.onDidChange(() => {\n            this._onDidLayoutChange.fire(undefined);\n        }), this._paneview.onDidAddView((e) => this._onDidAddView.fire(e)), this._paneview.onDidRemoveView((e) => this._onDidRemoveView.fire(e)));\n    }\n    get paneview() {\n        return this._paneview;\n    }\n    get minimumSize() {\n        return this.paneview.minimumSize;\n    }\n    get maximumSize() {\n        return this.paneview.maximumSize;\n    }\n    get height() {\n        return this.paneview.orientation === Orientation.HORIZONTAL\n            ? this.paneview.orthogonalSize\n            : this.paneview.size;\n    }\n    get width() {\n        return this.paneview.orientation === Orientation.HORIZONTAL\n            ? this.paneview.size\n            : this.paneview.orthogonalSize;\n    }\n    get options() {\n        return this._options;\n    }\n    constructor(element, options) {\n        super();\n        this.element = element;\n        this._id = nextLayoutId.next();\n        this._disposable = new MutableDisposable();\n        this._viewDisposables = new Map();\n        this._onDidLayoutfromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutfromJSON.event;\n        this._onDidLayoutChange = new Emitter();\n        this.onDidLayoutChange = this._onDidLayoutChange.event;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onDidAddView = new Emitter();\n        this.onDidAddView = this._onDidAddView.event;\n        this._onDidRemoveView = new Emitter();\n        this.onDidRemoveView = this._onDidRemoveView.event;\n        this.addDisposables(this._onDidLayoutChange, this._onDidLayoutfromJSON, this._onDidDrop, this._onDidAddView, this._onDidRemoveView);\n        this._options = options;\n        if (!options.components) {\n            options.components = {};\n        }\n        if (!options.frameworkComponents) {\n            options.frameworkComponents = {};\n        }\n        this.paneview = new Paneview(this.element, {\n            // only allow paneview in the vertical orientation for now\n            orientation: Orientation.VERTICAL,\n        });\n        this.addDisposables(this._disposable);\n    }\n    focus() {\n        //noop\n    }\n    updateOptions(options) {\n        this._options = Object.assign(Object.assign({}, this.options), options);\n    }\n    addPanel(options) {\n        const body = createComponent(options.id, options.component, this.options.components || {}, this.options.frameworkComponents || {}, this.options.frameworkWrapper\n            ? {\n                createComponent: this.options.frameworkWrapper.body.createComponent,\n            }\n            : undefined);\n        let header;\n        if (options.headerComponent) {\n            header = createComponent(options.id, options.headerComponent, this.options.headerComponents || {}, this.options.headerframeworkComponents, this.options.frameworkWrapper\n                ? {\n                    createComponent: this.options.frameworkWrapper.header\n                        .createComponent,\n                }\n                : undefined);\n        }\n        else {\n            header = new DefaultHeader();\n        }\n        const view = new PaneFramework({\n            id: options.id,\n            component: options.component,\n            headerComponent: options.headerComponent,\n            header,\n            body,\n            orientation: Orientation.VERTICAL,\n            isExpanded: !!options.isExpanded,\n            disableDnd: !!this.options.disableDnd,\n            accessor: this,\n        });\n        this.doAddPanel(view);\n        const size = typeof options.size === 'number' ? options.size : Sizing.Distribute;\n        const index = typeof options.index === 'number' ? options.index : undefined;\n        view.init({\n            params: options.params || {},\n            minimumBodySize: options.minimumBodySize,\n            maximumBodySize: options.maximumBodySize,\n            isExpanded: options.isExpanded,\n            title: options.title,\n            containerApi: new PaneviewApi(this),\n        });\n        this.paneview.addPane(view, size, index);\n        view.orientation = this.paneview.orientation;\n        return view;\n    }\n    removePanel(panel) {\n        const views = this.panels;\n        const index = views.findIndex((_) => _ === panel);\n        this.paneview.removePane(index);\n        this.doRemovePanel(panel);\n    }\n    movePanel(from, to) {\n        this.paneview.moveView(from, to);\n    }\n    getPanel(id) {\n        return this.panels.find((view) => view.id === id);\n    }\n    layout(width, height) {\n        const [size, orthogonalSize] = this.paneview.orientation === Orientation.HORIZONTAL\n            ? [width, height]\n            : [height, width];\n        this.paneview.layout(size, orthogonalSize);\n    }\n    toJSON() {\n        const maximum = (value) => value === Number.MAX_SAFE_INTEGER ||\n            value === Number.POSITIVE_INFINITY\n            ? undefined\n            : value;\n        const minimum = (value) => (value <= 0 ? undefined : value);\n        const views = this.paneview\n            .getPanes()\n            .map((view, i) => {\n            const size = this.paneview.getViewSize(i);\n            return {\n                size,\n                data: view.toJSON(),\n                minimumSize: minimum(view.minimumBodySize),\n                maximumSize: maximum(view.maximumBodySize),\n                expanded: view.isExpanded(),\n            };\n        });\n        return {\n            views,\n            size: this.paneview.size,\n        };\n    }\n    fromJSON(serializedPaneview) {\n        this.clear();\n        const { views, size } = serializedPaneview;\n        const queue = [];\n        this.paneview = new Paneview(this.element, {\n            orientation: Orientation.VERTICAL,\n            descriptor: {\n                size,\n                views: views.map((view) => {\n                    const data = view.data;\n                    const body = createComponent(data.id, data.component, this.options.components || {}, this.options.frameworkComponents || {}, this.options.frameworkWrapper\n                        ? {\n                            createComponent: this.options.frameworkWrapper.body\n                                .createComponent,\n                        }\n                        : undefined);\n                    let header;\n                    if (data.headerComponent) {\n                        header = createComponent(data.id, data.headerComponent, this.options.headerComponents || {}, this.options.headerframeworkComponents || {}, this.options.frameworkWrapper\n                            ? {\n                                createComponent: this.options.frameworkWrapper.header\n                                    .createComponent,\n                            }\n                            : undefined);\n                    }\n                    else {\n                        header = new DefaultHeader();\n                    }\n                    const panel = new PaneFramework({\n                        id: data.id,\n                        component: data.component,\n                        headerComponent: data.headerComponent,\n                        header,\n                        body,\n                        orientation: Orientation.VERTICAL,\n                        isExpanded: !!view.expanded,\n                        disableDnd: !!this.options.disableDnd,\n                        accessor: this,\n                    });\n                    this.doAddPanel(panel);\n                    queue.push(() => {\n                        panel.init({\n                            params: data.params || {},\n                            minimumBodySize: view.minimumSize,\n                            maximumBodySize: view.maximumSize,\n                            title: data.title,\n                            isExpanded: !!view.expanded,\n                            containerApi: new PaneviewApi(this),\n                        });\n                        panel.orientation = this.paneview.orientation;\n                    });\n                    setTimeout(() => {\n                        // the original onDidAddView events are missed since they are fired before we can subcribe to them\n                        this._onDidAddView.fire(panel);\n                    }, 0);\n                    return { size: view.size, view: panel };\n                }),\n            },\n        });\n        this.layout(this.width, this.height);\n        queue.forEach((f) => f());\n        this._onDidLayoutfromJSON.fire();\n    }\n    clear() {\n        for (const [_, value] of this._viewDisposables.entries()) {\n            value.dispose();\n        }\n        this._viewDisposables.clear();\n        this.paneview.dispose();\n    }\n    doAddPanel(panel) {\n        const disposable = panel.onDidDrop((event) => {\n            this._onDidDrop.fire(event);\n        });\n        this._viewDisposables.set(panel.id, disposable);\n    }\n    doRemovePanel(panel) {\n        const disposable = this._viewDisposables.get(panel.id);\n        if (disposable) {\n            disposable.dispose();\n            this._viewDisposables.delete(panel.id);\n        }\n    }\n    dispose() {\n        super.dispose();\n        for (const [_, value] of this._viewDisposables.entries()) {\n            value.dispose();\n        }\n        this._viewDisposables.clear();\n        this.paneview.dispose();\n    }\n}\n","import { BasePanelView, } from '../gridview/basePanelView';\nimport { SplitviewPanelApiImpl } from '../api/splitviewPanelApi';\nimport { Orientation } from './core/splitview';\nimport { Emitter } from '../events';\nexport class SplitviewPanel extends BasePanelView {\n    get priority() {\n        return this._priority;\n    }\n    set orientation(value) {\n        this._orientation = value;\n    }\n    get orientation() {\n        return this._orientation;\n    }\n    get minimumSize() {\n        const size = typeof this._minimumSize === 'function'\n            ? this._minimumSize()\n            : this._minimumSize;\n        if (size !== this._evaluatedMinimumSize) {\n            this._evaluatedMinimumSize = size;\n            this.updateConstraints();\n        }\n        return size;\n    }\n    get maximumSize() {\n        const size = typeof this._maximumSize === 'function'\n            ? this._maximumSize()\n            : this._maximumSize;\n        if (size !== this._evaluatedMaximumSize) {\n            this._evaluatedMaximumSize = size;\n            this.updateConstraints();\n        }\n        return size;\n    }\n    get snap() {\n        return this._snap;\n    }\n    constructor(id, componentName) {\n        super(id, componentName, new SplitviewPanelApiImpl(id));\n        this._evaluatedMinimumSize = 0;\n        this._evaluatedMaximumSize = Number.POSITIVE_INFINITY;\n        this._minimumSize = 0;\n        this._maximumSize = Number.POSITIVE_INFINITY;\n        this._snap = false;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this.api.initialize(this);\n        this.addDisposables(this._onDidChange, this.api.onVisibilityChange((event) => {\n            const { isVisible } = event;\n            const { accessor } = this._params;\n            accessor.setVisible(this, isVisible);\n        }), this.api.onActiveChange(() => {\n            const { accessor } = this._params;\n            accessor.setActive(this);\n        }), this.api.onDidConstraintsChangeInternal((event) => {\n            if (typeof event.minimumSize === 'number' ||\n                typeof event.minimumSize === 'function') {\n                this._minimumSize = event.minimumSize;\n            }\n            if (typeof event.maximumSize === 'number' ||\n                typeof event.maximumSize === 'function') {\n                this._maximumSize = event.maximumSize;\n            }\n            this.updateConstraints();\n        }), this.api.onDidSizeChange((event) => {\n            this._onDidChange.fire({ size: event.size });\n        }));\n    }\n    setVisible(isVisible) {\n        this.api._onDidVisibilityChange.fire({ isVisible });\n    }\n    setActive(isActive) {\n        this.api._onDidActiveChange.fire({ isActive });\n    }\n    layout(size, orthogonalSize) {\n        const [width, height] = this.orientation === Orientation.HORIZONTAL\n            ? [size, orthogonalSize]\n            : [orthogonalSize, size];\n        super.layout(width, height);\n    }\n    init(parameters) {\n        super.init(parameters);\n        this._priority = parameters.priority;\n        if (parameters.minimumSize) {\n            this._minimumSize = parameters.minimumSize;\n        }\n        if (parameters.maximumSize) {\n            this._maximumSize = parameters.maximumSize;\n        }\n        if (parameters.snap) {\n            this._snap = parameters.snap;\n        }\n    }\n    toJSON() {\n        const maximum = (value) => value === Number.MAX_SAFE_INTEGER ||\n            value === Number.POSITIVE_INFINITY\n            ? undefined\n            : value;\n        const minimum = (value) => (value <= 0 ? undefined : value);\n        return Object.assign(Object.assign({}, super.toJSON()), { minimumSize: minimum(this.minimumSize), maximumSize: maximum(this.maximumSize) });\n    }\n    updateConstraints() {\n        this.api._onDidConstraintsChange.fire({\n            maximumSize: this._evaluatedMaximumSize,\n            minimumSize: this._evaluatedMinimumSize,\n        });\n    }\n}\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\n/**\n * This component is intended to interface between vanilla-js and React hence we need to be\n * creative in how we update props.\n * A ref of the component is exposed with an update method; which when called stores the props\n * as a ref within this component and forcefully triggers a re-render of the component using\n * the ref of props we just set on the renderered component as the props passed to the inner\n * component\n */\nconst ReactComponentBridge = (props, ref) => {\n    const [_, triggerRender] = React.useState();\n    const _props = React.useRef(props.componentProps);\n    React.useImperativeHandle(ref, () => ({\n        update: (componentProps) => {\n            _props.current = Object.assign(Object.assign({}, _props.current), componentProps);\n            /**\n             * setting a arbitrary piece of state within this component will\n             * trigger a re-render.\n             * we use this rather than updating through a prop since we can\n             * pass a ref into the vanilla-js world.\n             */\n            triggerRender(Date.now());\n        },\n    }), []);\n    return React.createElement(props.component, _props.current);\n};\nReactComponentBridge.displayName = 'DockviewReactJsBridge';\n/**\n * Since we are storing the React.Portal references in a rendered array they\n * require a key property like any other React element rendered in an array\n * to prevent excessive re-rendering\n */\nconst uniquePortalKeyGenerator = (() => {\n    let value = 1;\n    return { next: () => `dockview_react_portal_key_${(value++).toString()}` };\n})();\nexport const ReactPartContext = React.createContext({});\nexport class ReactPart {\n    constructor(parent, portalStore, component, parameters, context) {\n        this.parent = parent;\n        this.portalStore = portalStore;\n        this.component = component;\n        this.parameters = parameters;\n        this.context = context;\n        this._initialProps = {};\n        this.disposed = false;\n        this.createPortal();\n    }\n    update(props) {\n        if (this.disposed) {\n            throw new Error('invalid operation: resource is already disposed');\n        }\n        if (!this.componentInstance) {\n            // if the component is yet to be mounted store the props\n            this._initialProps = Object.assign(Object.assign({}, this._initialProps), props);\n        }\n        else {\n            this.componentInstance.update(props);\n        }\n    }\n    createPortal() {\n        if (this.disposed) {\n            throw new Error('invalid operation: resource is already disposed');\n        }\n        if (typeof this.component !== 'function') {\n            /**\n             * we know this isn't a React.FunctionComponent so throw an error here.\n             * if we do not intercept this the React library will throw a very obsure error\n             * for the same reason, at least at this point we will emit a sensible stacktrace.\n             */\n            throw new Error('Invalid Operation. dockview only supports React Functional Components.');\n        }\n        const bridgeComponent = React.createElement(React.forwardRef(ReactComponentBridge), {\n            component: this\n                .component,\n            componentProps: this.parameters,\n            ref: (element) => {\n                this.componentInstance = element;\n                if (Object.keys(this._initialProps).length > 0) {\n                    this.componentInstance.update(this._initialProps);\n                    this._initialProps = {}; // don't keep a reference to the users object once no longer required\n                }\n            },\n        });\n        const node = this.context\n            ? React.createElement(ReactPartContext.Provider, { value: this.context }, bridgeComponent)\n            : bridgeComponent;\n        const portal = ReactDOM.createPortal(node, this.parent, uniquePortalKeyGenerator.next());\n        this.ref = {\n            portal,\n            disposable: this.portalStore.addPortal(portal),\n        };\n    }\n    dispose() {\n        var _a;\n        (_a = this.ref) === null || _a === void 0 ? void 0 : _a.disposable.dispose();\n        this.disposed = true;\n    }\n}\n/**\n * A React Hook that returns an array of portals to be rendered by the user of this hook\n * and a disposable function to add a portal. Calling dispose removes this portal from the\n * portal array\n */\nexport const usePortalsLifecycle = () => {\n    const [portals, setPortals] = React.useState([]);\n    React.useDebugValue(`Portal count: ${portals.length}`);\n    const addPortal = React.useCallback((portal) => {\n        setPortals((existingPortals) => [...existingPortals, portal]);\n        let disposed = false;\n        return {\n            dispose: () => {\n                if (disposed) {\n                    throw new Error('invalid operation: resource already disposed');\n                }\n                disposed = true;\n                setPortals((existingPortals) => existingPortals.filter((p) => p !== portal));\n            },\n        };\n    }, []);\n    return [portals, addPortal];\n};\n// it does the job...\nexport function isReactElement(element) {\n    return element === null || element === void 0 ? void 0 : element.type;\n}\n","import { ReactPart } from '../react';\nimport { DockviewEmitter, } from 'dockview-core';\nexport class ReactPanelContentPart {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._onDidFocus = new DockviewEmitter();\n        this.onDidFocus = this._onDidFocus.event;\n        this._onDidBlur = new DockviewEmitter();\n        this.onDidBlur = this._onDidBlur.event;\n        this._element = document.createElement('div');\n        this._element.className = 'dockview-react-part';\n    }\n    focus() {\n        // TODO\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            params: parameters.params,\n            api: parameters.api,\n            containerApi: parameters.containerApi,\n        });\n    }\n    update(event) {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update(event.params);\n    }\n    updateParentGroup(group, _isPanelVisible) {\n        this._group = group;\n    }\n    layout(_width, _height) {\n        // noop\n    }\n    dispose() {\n        var _a;\n        this._onDidFocus.dispose();\n        this._onDidBlur.dispose();\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import { ReactPart } from '../react';\nexport class ReactPanelHeaderPart {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._element = document.createElement('div');\n        this._element.className = 'dockview-react-part';\n    }\n    focus() {\n        //noop\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            params: parameters.params,\n            api: parameters.api,\n            containerApi: parameters.containerApi,\n        });\n    }\n    update(event) {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update(event.params);\n    }\n    layout(_width, _height) {\n        // noop - retrieval from api\n    }\n    updateParentGroup(_group, _isPanelVisible) {\n        // noop - retrieval from api\n    }\n    dispose() {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import { ReactPart } from '../react';\nexport class ReactWatermarkPart {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._groupRef = {\n            value: undefined,\n        };\n        this._element = document.createElement('div');\n        this._element.className = 'dockview-react-part';\n    }\n    init(parameters) {\n        this.parameters = parameters;\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            params: parameters.params,\n            api: parameters.api,\n            containerApi: parameters.containerApi,\n            close: () => {\n                if (this._groupRef.value) {\n                    parameters.containerApi.removeGroup(this._groupRef.value);\n                }\n            },\n        });\n    }\n    focus() {\n        // noop\n    }\n    update(params) {\n        var _a, _b;\n        if (this.parameters) {\n            this.parameters.params = params.params;\n        }\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update({ params: ((_b = this.parameters) === null || _b === void 0 ? void 0 : _b.params) || {} });\n    }\n    layout(_width, _height) {\n        // noop - retrieval from api\n    }\n    updateParentGroup(group, _isPanelVisible) {\n        // noop - retrieval from api\n        this._groupRef.value = group;\n    }\n    dispose() {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import { ReactPart } from '../react';\nimport { DockviewCompositeDisposable, DockviewMutableDisposable, } from 'dockview-core';\nexport class ReactGroupControlsRendererPart {\n    get element() {\n        return this._element;\n    }\n    get part() {\n        return this._part;\n    }\n    get group() {\n        return this._group;\n    }\n    constructor(component, reactPortalStore, _group) {\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._group = _group;\n        this.mutableDisposable = new DockviewMutableDisposable();\n        this._element = document.createElement('div');\n        this._element.className = 'dockview-react-part';\n    }\n    focus() {\n        // TODO\n    }\n    init(parameters) {\n        this.mutableDisposable.value = new DockviewCompositeDisposable(this._group.model.onDidAddPanel(() => {\n            this.updatePanels();\n        }), this._group.model.onDidRemovePanel(() => {\n            this.updatePanels();\n        }), this._group.model.onDidActivePanelChange(() => {\n            this.updateActivePanel();\n        }), parameters.api.onDidActiveChange(() => {\n            this.updateGroupActive();\n        }));\n        this._part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            api: parameters.api,\n            containerApi: parameters.containerApi,\n            panels: this._group.model.panels,\n            activePanel: this._group.model.activePanel,\n            isGroupActive: this._group.api.isActive,\n        });\n    }\n    update(event) {\n        var _a;\n        (_a = this._part) === null || _a === void 0 ? void 0 : _a.update(event.params);\n    }\n    dispose() {\n        var _a;\n        this.mutableDisposable.dispose();\n        (_a = this._part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n    updatePanels() {\n        this.update({ params: { panels: this._group.model.panels } });\n    }\n    updateActivePanel() {\n        this.update({\n            params: {\n                activePanel: this._group.model.activePanel,\n            },\n        });\n    }\n    updateGroupActive() {\n        this.update({\n            params: {\n                isGroupActive: this._group.api.isActive,\n            },\n        });\n    }\n}\n","import * as React from 'react';\nimport { DockviewComponent, DockviewApi, watchElementResize, } from 'dockview-core';\nimport { ReactPanelContentPart } from './reactContentPart';\nimport { ReactPanelHeaderPart } from './reactHeaderPart';\nimport { usePortalsLifecycle } from '../react';\nimport { ReactWatermarkPart } from './reactWatermarkPart';\nimport { ReactGroupControlsRendererPart, } from './groupControlsRenderer';\nfunction createGroupControlElement(component, store) {\n    return component\n        ? (groupPanel) => {\n            return new ReactGroupControlsRendererPart(component, store, groupPanel);\n        }\n        : undefined;\n}\nconst DEFAULT_REACT_TAB = 'props.defaultTabComponent';\nexport const DockviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const dockviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    React.useEffect(() => {\n        if (props.disableAutoResizing) {\n            return () => {\n                //\n            };\n        }\n        const watcher = watchElementResize(domRef.current, (entry) => {\n            var _a;\n            const { width, height } = entry.contentRect;\n            (_a = dockviewRef.current) === null || _a === void 0 ? void 0 : _a.layout(width, height);\n        });\n        return () => {\n            watcher.dispose();\n        };\n    }, [props.disableAutoResizing]);\n    React.useEffect(() => {\n        var _a;\n        const factory = {\n            content: {\n                createComponent: (_id, componentId, component) => {\n                    return new ReactPanelContentPart(componentId, component, {\n                        addPortal,\n                    });\n                },\n            },\n            tab: {\n                createComponent: (_id, componentId, component) => {\n                    return new ReactPanelHeaderPart(componentId, component, {\n                        addPortal,\n                    });\n                },\n            },\n            watermark: {\n                createComponent: (_id, componentId, component) => {\n                    return new ReactWatermarkPart(componentId, component, {\n                        addPortal,\n                    });\n                },\n            },\n        };\n        const element = document.createElement('div');\n        const frameworkTabComponents = props.tabComponents || {};\n        if (props.defaultTabComponent) {\n            frameworkTabComponents[DEFAULT_REACT_TAB] =\n                props.defaultTabComponent;\n        }\n        const dockview = new DockviewComponent(element, {\n            frameworkComponentFactory: factory,\n            frameworkComponents: props.components,\n            frameworkTabComponents,\n            tabHeight: props.tabHeight,\n            watermarkFrameworkComponent: props.watermarkComponent,\n            defaultTabComponent: props.defaultTabComponent\n                ? DEFAULT_REACT_TAB\n                : undefined,\n            styles: props.hideBorders\n                ? { separatorBorder: 'transparent' }\n                : undefined,\n            showDndOverlay: props.showDndOverlay,\n            createGroupControlElement: createGroupControlElement(props.groupControlComponent, { addPortal }),\n            singleTabMode: props.singleTabMode,\n        });\n        (_a = domRef.current) === null || _a === void 0 ? void 0 : _a.appendChild(dockview.element);\n        const { clientWidth, clientHeight } = domRef.current;\n        dockview.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api: new DockviewApi(dockview) });\n        }\n        dockviewRef.current = dockview;\n        return () => {\n            dockview.dispose();\n            element.remove();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const disposable = dockviewRef.current.onDidDrop((event) => {\n            if (props.onDidDrop) {\n                props.onDidDrop(event);\n            }\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.onDidDrop]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            frameworkComponents: props.components,\n        });\n    }, [props.components]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            watermarkFrameworkComponent: props.watermarkComponent,\n        });\n    }, [props.watermarkComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            showDndOverlay: props.showDndOverlay,\n        });\n    }, [props.showDndOverlay]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            frameworkTabComponents: props.tabComponents,\n        });\n    }, [props.tabComponents]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        const frameworkTabComponents = props.tabComponents || {};\n        if (props.defaultTabComponent) {\n            frameworkTabComponents[DEFAULT_REACT_TAB] =\n                props.defaultTabComponent;\n        }\n        dockviewRef.current.updateOptions({\n            defaultTabComponent: props.defaultTabComponent\n                ? DEFAULT_REACT_TAB\n                : undefined,\n            frameworkTabComponents,\n        });\n    }, [props.defaultTabComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createGroupControlElement: createGroupControlElement(props.groupControlComponent, { addPortal }),\n        });\n    }, [props.groupControlComponent]);\n    return (React.createElement(\"div\", { className: props.className, style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nDockviewReact.displayName = 'DockviewComponent';\n","import * as React from 'react';\nexport const CloseButton = () => (React.createElement(\"svg\", { height: \"11\", width: \"11\", viewBox: \"0 0 28 28\", \"aria-hidden\": 'false', focusable: false, className: \"dockview-svg\" },\n    React.createElement(\"path\", { d: \"M2.1 27.3L0 25.2L11.55 13.65L0 2.1L2.1 0L13.65 11.55L25.2 0L27.3 2.1L15.75 13.65L27.3 25.2L25.2 27.3L13.65 15.75L2.1 27.3Z\" })));\nexport const ExpandMore = () => {\n    return (React.createElement(\"svg\", { width: \"11\", height: \"11\", viewBox: \"0 0 24 15\", \"aria-hidden\": 'false', focusable: false, className: \"dockview-svg\" },\n        React.createElement(\"path\", { d: \"M12 14.15L0 2.15L2.15 0L12 9.9L21.85 0.0499992L24 2.2L12 14.15Z\" })));\n};\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from 'react';\nimport { CloseButton } from '../svg';\nexport const DockviewDefaultTab = (_a) => {\n    var { api, containerApi: _containerApi, params: _params } = _a, rest = __rest(_a, [\"api\", \"containerApi\", \"params\"]);\n    const onClose = React.useCallback((event) => {\n        event.stopPropagation();\n        api.close();\n    }, [api]);\n    const onClick = React.useCallback((event) => {\n        api.setActive();\n        if (rest.onClick) {\n            rest.onClick(event);\n        }\n    }, [api, rest.onClick]);\n    const iconClassname = React.useMemo(() => {\n        const cn = ['dockview-react-tab-action'];\n        return cn.join(',');\n    }, []);\n    return (React.createElement(\"div\", Object.assign({}, rest, { onClick: onClick, className: \"dockview-react-tab\" }),\n        React.createElement(\"span\", { className: \"dockview-react-tab-title\" }, api.title),\n        React.createElement(\"div\", { className: iconClassname, onClick: onClose },\n            React.createElement(CloseButton, null))));\n};\n","import { SplitviewApi, SplitviewPanel, } from 'dockview-core';\nimport { ReactPart } from '../react';\nexport class ReactPanelView extends SplitviewPanel {\n    constructor(id, component, reactComponent, reactPortalStore) {\n        super(id, component);\n        this.reactComponent = reactComponent;\n        this.reactPortalStore = reactPortalStore;\n    }\n    getComponent() {\n        var _a;\n        return new ReactPart(this.element, this.reactPortalStore, this.reactComponent, {\n            params: ((_a = this._params) === null || _a === void 0 ? void 0 : _a.params) || {},\n            api: this.api,\n            containerApi: new SplitviewApi(this._params.accessor),\n        });\n    }\n}\n","import * as React from 'react';\nimport { SplitviewApi, SplitviewComponent, Orientation, watchElementResize, } from 'dockview-core';\nimport { usePortalsLifecycle } from '../react';\nimport { ReactPanelView } from './view';\nexport const SplitviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const splitviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    React.useEffect(() => {\n        if (props.disableAutoResizing) {\n            return () => {\n                //\n            };\n        }\n        const watcher = watchElementResize(domRef.current, (entry) => {\n            var _a;\n            const { width, height } = entry.contentRect;\n            (_a = splitviewRef.current) === null || _a === void 0 ? void 0 : _a.layout(width, height);\n        });\n        return () => {\n            watcher.dispose();\n        };\n    }, [props.disableAutoResizing]);\n    React.useEffect(() => {\n        const splitview = new SplitviewComponent(domRef.current, {\n            orientation: props.orientation || Orientation.HORIZONTAL,\n            frameworkComponents: props.components,\n            frameworkWrapper: {\n                createComponent: (id, componentId, component) => {\n                    return new ReactPanelView(id, componentId, component, {\n                        addPortal,\n                    });\n                },\n            },\n            proportionalLayout: typeof props.proportionalLayout === 'boolean'\n                ? props.proportionalLayout\n                : true,\n            styles: props.hideBorders\n                ? { separatorBorder: 'transparent' }\n                : undefined,\n        });\n        const { clientWidth, clientHeight } = domRef.current;\n        splitview.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api: new SplitviewApi(splitview) });\n        }\n        splitviewRef.current = splitview;\n        return () => {\n            splitview.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!splitviewRef.current) {\n            return;\n        }\n        splitviewRef.current.updateOptions({\n            frameworkComponents: props.components,\n        });\n    }, [props.components]);\n    return (React.createElement(\"div\", { className: props.className, style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nSplitviewReact.displayName = 'SplitviewComponent';\n","import { GridviewApi, GridviewPanel, } from 'dockview-core';\nimport { ReactPart } from '../react';\nexport class ReactGridPanelView extends GridviewPanel {\n    constructor(id, component, reactComponent, reactPortalStore) {\n        super(id, component);\n        this.reactComponent = reactComponent;\n        this.reactPortalStore = reactPortalStore;\n    }\n    getComponent() {\n        var _a;\n        return new ReactPart(this.element, this.reactPortalStore, this.reactComponent, {\n            params: ((_a = this._params) === null || _a === void 0 ? void 0 : _a.params) || {},\n            api: this.api,\n            containerApi: new GridviewApi(this._params.accessor),\n        });\n    }\n}\n","import * as React from 'react';\nimport { GridviewComponent, Orientation, GridviewApi, watchElementResize, } from 'dockview-core';\nimport { ReactGridPanelView } from './view';\nimport { usePortalsLifecycle } from '../react';\nexport const GridviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const gridviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    React.useEffect(() => {\n        if (props.disableAutoResizing) {\n            return () => {\n                //\n            };\n        }\n        const watcher = watchElementResize(domRef.current, (entry) => {\n            var _a;\n            const { width, height } = entry.contentRect;\n            (_a = gridviewRef.current) === null || _a === void 0 ? void 0 : _a.layout(width, height);\n        });\n        return () => {\n            watcher.dispose();\n        };\n    }, [props.disableAutoResizing]);\n    React.useEffect(() => {\n        var _a;\n        const element = document.createElement('div');\n        const gridview = new GridviewComponent(element, {\n            proportionalLayout: typeof props.proportionalLayout === 'boolean'\n                ? props.proportionalLayout\n                : true,\n            orientation: props.orientation || Orientation.HORIZONTAL,\n            frameworkComponents: props.components,\n            frameworkComponentFactory: {\n                createComponent: (id, componentId, component) => {\n                    return new ReactGridPanelView(id, componentId, component, {\n                        addPortal,\n                    });\n                },\n            },\n            styles: props.hideBorders\n                ? { separatorBorder: 'transparent' }\n                : undefined,\n        });\n        (_a = domRef.current) === null || _a === void 0 ? void 0 : _a.appendChild(gridview.element);\n        const { clientWidth, clientHeight } = domRef.current;\n        gridview.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api: new GridviewApi(gridview) });\n        }\n        gridviewRef.current = gridview;\n        return () => {\n            gridview.dispose();\n            element.remove();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!gridviewRef.current) {\n            return;\n        }\n        gridviewRef.current.updateOptions({\n            frameworkComponents: props.components,\n        });\n    }, [props.components]);\n    return (React.createElement(\"div\", { className: props.className, style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nGridviewReact.displayName = 'GridviewComponent';\n","import { ReactPart } from '../react';\nexport class PanePanelSection {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._element = document.createElement('div');\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            params: parameters.params,\n            api: parameters.api,\n            title: parameters.title,\n            containerApi: parameters.containerApi,\n        });\n    }\n    toJSON() {\n        return {\n            id: this.id,\n        };\n    }\n    update(params) {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update(params.params);\n    }\n    dispose() {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import * as React from 'react';\nimport { PaneviewComponent, PaneviewApi, watchElementResize, } from 'dockview-core';\nimport { usePortalsLifecycle } from '../react';\nimport { PanePanelSection } from './view';\nexport const PaneviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const paneviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    React.useEffect(() => {\n        if (props.disableAutoResizing) {\n            return () => {\n                //\n            };\n        }\n        const watcher = watchElementResize(domRef.current, (entry) => {\n            var _a;\n            const { width, height } = entry.contentRect;\n            (_a = paneviewRef.current) === null || _a === void 0 ? void 0 : _a.layout(width, height);\n        });\n        return () => {\n            watcher.dispose();\n        };\n    }, [props.disableAutoResizing]);\n    React.useEffect(() => {\n        const createComponent = (id, _componentId, component) => new PanePanelSection(id, component, {\n            addPortal,\n        });\n        const paneview = new PaneviewComponent(domRef.current, {\n            frameworkComponents: props.components,\n            components: {},\n            headerComponents: {},\n            disableDnd: props.disableDnd,\n            headerframeworkComponents: props.headerComponents,\n            frameworkWrapper: {\n                header: {\n                    createComponent,\n                },\n                body: {\n                    createComponent,\n                },\n            },\n            showDndOverlay: props.showDndOverlay,\n        });\n        const api = new PaneviewApi(paneview);\n        const { clientWidth, clientHeight } = domRef.current;\n        paneview.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api });\n        }\n        paneviewRef.current = paneview;\n        return () => {\n            paneview.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return;\n        }\n        paneviewRef.current.updateOptions({\n            frameworkComponents: props.components,\n        });\n    }, [props.components]);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return;\n        }\n        paneviewRef.current.updateOptions({\n            headerframeworkComponents: props.headerComponents,\n        });\n    }, [props.headerComponents]);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return () => {\n                //\n            };\n        }\n        const paneview = paneviewRef.current;\n        const disposable = paneview.onDidDrop((event) => {\n            if (props.onDidDrop) {\n                props.onDidDrop(Object.assign(Object.assign({}, event), { api: new PaneviewApi(paneview) }));\n            }\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.onDidDrop]);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return;\n        }\n        paneviewRef.current.updateOptions({\n            showDndOverlay: props.showDndOverlay,\n        });\n    }, [props.showDndOverlay]);\n    return (React.createElement(\"div\", { className: props.className, style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nPaneviewReact.displayName = 'PaneviewComponent';\n"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","sourceSymbolKeys","prototype","propertyIsEnumerable","call","MDXContext","useMDXComponents","components","contextComponents","allComponents","MDXProvider","props","Provider","children","TYPE_PROP_NAME","DEFAULTS","inlineCode","wrapper","_ref","MDXCreateElement","ref","propComponents","mdxType","originalType","parentName","etc","type","Component","concat","createElement","args","argsLength","createElementArgArray","Array","newProps","hasOwnProperty","displayName","Event","Disposable","any","listener","disposables","map","child","dispose","d","Emitter","constructor","options","this","_listeners","_disposed","event","_event","_a","replay","undefined","_last","index","splice","fire","e","addDisposableWindowListener","element","addEventListener","removeEventListener","addDisposableListener","TickDelayedEvent","_onFired","onEvent","timer","clearTimeout","setTimeout","NONE","CompositeDisposable","static","addDisposables","arg","MutableDisposable","_disposable","disposable","watchElementResize","cb","observer","ResizeObserver","entires","firstEntry","observe","unobserve","disconnect","removeClasses","classes","classname","classList","contains","remove","addClasses","add","toggleClass","className","isToggled","hasClass","isAncestor","testChild","testAncestor","parentNode","getElementsByTagName","tag","slice","document","trackFocus","FocusTracker","super","_onDidFocus","onDidFocus","_onDidBlur","onDidBlur","hasFocus","activeElement","loosingFocus","onFocus","onBlur","window","_refreshStateHandler","HTMLElement","refreshState","TransferObject","PanelTransfer","viewId","groupId","panelId","PaneTransfer","paneId","LocalSelectionTransfer","INSTANCE","hasData","proto","clearData","data","getData","setData","getPanelData","panelTransfer","getInstance","getPaneData","paneTransfer","clamp","min","max","Error","Math","sequentialNumberGenerator","next","toString","tail","arr","sequenceEquals","arr1","arr2","pushToStart","unshift","pushToEnd","range","from","to","result","ViewItem","size","_size","cachedVisibleSize","_cachedVisibleSize","visible","minimumSize","view","viewMinimumSize","maximumSize","viewMaximumSize","priority","snap","enabled","container","style","pointerEvents","setVisible","toggle","Orientation","SashState","LayoutPriority","Sizing","Distribute","Split","Invisible","Splitview","orthogonalSize","_orthogonalSize","views","proportions","_proportions","orientation","_orientation","tmp","HORIZONTAL","reduce","r","item","Number","POSITIVE_INFINITY","startSnappingEnabled","_startSnappingEnabled","updateSashEnablement","endSnappingEnabled","_endSnappingEnabled","sashes","contentSize","_onDidSashEnd","onDidSashEnd","_onDidAddView","onDidAddView","_onDidRemoveView","onDidRemoveView","resize","delta","sizes","lowPriorityIndexes","highPriorityIndexes","overloadMinDelta","overloadMaxDelta","snapBefore","snapAfter","x","NEGATIVE_INFINITY","upIndexes","downIndexes","upItems","upSizes","downItems","downSizes","minDeltaUp","_","maxDeltaUp","maxDeltaDown","minDeltaDown","minDelta","maxDelta","snapped","snapView","limitDelta","actualDelta","deltaUp","viewDelta","deltaDown","createContainer","proportionalLayout","viewContainer","createViewContainer","sashContainer","createSashContainer","appendChild","styles","descriptor","viewDescriptor","sizing","addView","saveProportions","separatorBorder","removeProperty","setProperty","isViewVisible","setViewVisible","viewItem","distributeEmptySpace","layoutViews","getViewSize","resizeView","indexes","Low","High","round","relayout","getViews","onDidChange","skipLayout","viewSize","newSize","removeChild","insertBefore","sash","onStart","iframes","iframe","start","clientX","clientY","sashIndex","array","fn","firstIndex","s","snapBeforeIndex","findFirstSnapIndex","snapAfterIndex","snappedViewItem","halfSize","floor","mousemove","mousemoveEvent","end","sashItem","distributeViewSizes","flexibleViewItems","flexibleSize","removeView","getViewCachedVisibleSize","moveView","layout","previousSize","lowPriorityIndex","emptyDelta","sum","offset","left","top","VERTICAL","width","height","previous","collapsesDown","expandsDown","reverseViews","reverse","collapsesUp","expandsUp","position","snappedBefore","snappedAfter","updateSash","MINIMUM","MAXIMUM","DISABLED","ENABLED","state","orientationClassname","Paneview","splitview","paneItems","skipAnimation","_onDidChange","getPanes","pane","onDidChangeExpansionState","setupAnimation","paneItem","addPane","removePane","skipDispose","animationTimer","LeafNode","minimumWidth","maximumWidth","minimumHeight","maximumHeight","minimumOrthogonalSize","maximumOrthogonalSize","BranchNode","c","Normal","priorities","some","p","childDescriptors","_childrenDisposable","childDescriptor","node","setupChildrenEvents","isChildVisible","setChildVisible","moveChild","_removeChild","_addChild","getChildSize","resizeChild","addChild","getChildCachedVisibleSize","findLeaf","candiateNode","last","flipNode","orthogonal","totalSize","childSize","getGridLocation","parentElement","test","el","firstElementChild","lastElementChild","nextElementSibling","indexInParent","getRelativeLocation","rootOrientation","location","direction","getLocationOrientation","directionOrientation","getDirectionOrientation","rest","_index","serializeBranchNode","box","isGridBranchNode","toJSON","Gridview","_root","root","serialize","getView","clear","deserialize","json","deserializer","_deserialize","_deserializeNode","isRoot","serializedChild","fromJSON","oldRoot","insertOrthogonalSplitviewAtRoot","childReference","progmaticSelect","getNode","_getViews","nodeCachedVisibleSize","path","n","l","parent","parentLocation","pathToParent","grandParent","parentIndex","__","newSiblingSize","newSiblingCachedVisibleSize","newParent","newSibling","sibling","isSiblingVisible","siblingSizing","SplitviewApi","component","panels","onDidLayoutFromJSON","onDidLayoutChange","updateOptions","removePanel","panel","focus","getPanel","id","addPanel","movePanel","PaneviewApi","onDidDrop","emitter","assign","api","GridviewApi","onDidAddPanel","onDidAddGroup","onDidRemovePanel","onDidRemoveGroup","onDidActivePanelChange","onDidActiveGroupChange","groups","force","DockviewApi","totalPanels","activePanel","activeGroup","getTabHeight","tabHeight","setTabHeight","getGroupPanel","addGroup","moveToNext","moveToPrevious","closeAllGroups","removeGroup","group","getGroup","DragAndDropObserver","callbacks","registerListeners","onDragEnter","preventDefault","onDragOver","onDragLeave","onDragEnd","onDrop","directionToPosition","positionToDirection","Droptarget","_state","_onDrop","acceptedTargetZonesSet","Set","acceptedTargetZones","clientWidth","clientHeight","rect","currentTarget","getBoundingClientRect","y","quadrant","calculateQuadrant","canDisplayOverlay","overlay","append","toggleClasses","setState","removeDropTarget","stopPropagation","nativeEvent","_b","_c","_d","isSmallX","isSmallY","isLeft","isRight","isTop","isBottom","rightClass","leftClass","topClass","bottomClass","overlayModel","translate","transform","overlayType","_e","_f","isPercentage","activationSize","maybeNumber","fallback","threshold","xp","yp","has","calculateQuadrantAsPercentage","calculateQuadrantAsPixels","ContentContainer","_element","tabIndex","show","display","hide","openPanel","content","_width","_height","closePanel","DockviewDropTargets","DragHandler","_onDragStart","onDragStart","configure","dataTransfer","effectAllowed","Tab","accessor","_onChanged","onChanged","_onDropped","draggable","defaultPrevented","droptarget","locked","model","setActive","isActive","setContent","part","GroupDragHandler","accessorId","getComputedStyle","bgColor","getPropertyValue","color","ghostElement","backgroundColor","padding","fontSize","lineHeight","borderRadius","textContent","body","setDragImage","addGhostImage","VoidContainer","doSetGroupActive","handler","voidDropTarget","Panel","TabsContainer","tabs","hidden","_hidden","setActionElement","actions","actionContainer","tab","selectedIndex","at","findIndex","singleTabMode","tabContainer","voidContainer","button","_isGroupActive","addTab","delete","tabToRemove","setActivePanel","isActivePanel","find","tabToAdd","alreadyFocused","isContentFocused","skipFocus","DockviewGroupPanelModel","_activePanel","_locked","_panels","isEmpty","MAX_SAFE_INTEGER","hasWatermark","watermark","header","tabsContainer","contentContainer","groupPanel","mostRecentlyUsed","_onMove","onMove","_onDidDrop","_onDidAddPanel","_onDidRemovePanel","_onDidActivePanelChange","dropTarget","hideHeader","handleDropEvent","initialize","doAddPanel","updateContainer","createGroupControlElement","_control","init","containerApi","activeView","normalizedIndex","suppressRoll","containsPanel","includes","_params","update","skipSetPanelActive","skipSetGroupActive","updateParentGroup","doSetActivePanel","groupItemOrId","panelToRemove","_removePanel","closeAllPanels","arrPanelCpy","doClose","isPanelActive","updateActions","isGroupActive","doRemovePanel","nextPanel","skipSetActive","hasExistingPanel","updateMru","createWatermarkComponent","params","title","showDndOverlay","itemId","nextLayoutId","toTarget","BaseGrid","_id","_groups","values","gridview","_activeGroup","Map","_onDidLayoutChange","_onDidRemoveGroup","_onDidAddGroup","_onDidActiveGroupChange","_bufferOnDidLayoutChange","isVisible","doAddGroup","doRemoveGroup","get","skipActive","forceResize","PanelApiImpl","isFocused","_isFocused","_isActive","_isVisible","panelUpdatesDisposable","_onDidDimensionChange","onDidDimensionsChange","_onDidChangeFocus","onDidFocusChange","_onFocusEvent","onFocusEvent","_onDidVisibilityChange","onDidVisibilityChange","_onVisibilityChange","onVisibilityChange","_onDidActiveChange","onDidActiveChange","_onActiveChange","onActiveChange","_onUpdateParameters","onUpdateParameters","parameters","updateParameters","SplitviewPanelApiImpl","_onDidConstraintsChangeInternal","onDidConstraintsChangeInternal","_onDidConstraintsChange","onDidConstraintsChange","_onDidSizeChange","onDidSizeChange","setConstraints","setSize","PaneviewPanelApiImpl","_pane","_onDidExpansionChange","onDidExpansionChange","_onMouseEnter","onMouseEnter","_onMouseLeave","onMouseLeave","setExpanded","isExpanded","BasePanelView","outline","overflow","getComponent","PaneviewPanel","headerSize","_minimumBodySize","_maximumBodySize","minimumBodySize","maximumBodySize","headerVisible","_headerVisible","headerComponent","isHeaderVisible","_onDidChangeExpansionState","_isExpanded","expandedSize","ev","isPanelExpanded","renderOnce","expanded","bodyPart","getBodyComponent","headerPart","getHeaderComponent","minHeight","maxHeight","DraggablePaneviewPanel","disableDnd","initDragFeatures","existingPanel","allPanels","fromIndex","toIndex","GridviewPanelApiImpl","GridviewPanel","_priority","_snap","_minimumWidth","_evaluatedMinimumWidth","updateConstraints","_minimumHeight","_evaluatedMinimumHeight","_maximumHeight","_evaluatedMaximumHeight","_maximumWidth","_evaluatedMaximumWidth","maximum","minimum","DockviewGroupPanel","_model","DockviewPanelApiImpl","isOldGroupActive","_group","_onDidGroupChange","_onDidTitleChange","onDidTitleChange","onDidGroupChange","setTitle","close","DockviewPanel","_title","contentComponent","tabComponent","isPanelVisible","createSvgElementFromPath","svg","createElementNS","setAttributeNS","viewbox","createCloseButton","DefaultTab","_isPanelVisible","_content","_actionContainer","_list","action","render","changed","createComponent","componentName","frameworkComponents","createFrameworkComponent","FrameworkComponent","DockviewPanelModel","_tab","createContentComponent","createTabComponent","onGroupChange","onPanelVisibleChange","frameworkComponentFactory","tabComponents","frameworkTabComponents","DefaultDockviewDeserialzier","panelData","viewData","defaultTabComponent","ActionContainer","Watermark","emptySpace","flexGrow","closeAnchor","_visible","isOneGroup","DockviewComponent","flatMap","_options","nextGroupId","_deserializer","_onDidLayoutFromJSON","updateWatermark","watermarkComponent","watermarkFrameworkComponent","Edge","moveGroupOrPanel","orthogonalize","_api","createGroupAtLocation","hasOrientationChanged","includePanel","grid","collection","isArray","createGroup","hasActiveGroup","hasActivePanel","entry","entries","referenceGroup","referencePanel","findGroup","isPanelOptionsWithGroup","createPanel","relativeLocation","removeEmptyGroup","watermarkContainer","isGroupOptionsWithGroup","sourceGroup","referenceLocation","targetLocation","targetParentLocation","sourceLocation","sourceParentLocation","targetGroup","updatedReferenceLocation","groupItem","dropLocation","moveGroup","isGroupAlreadyFocused","console","warn","set","GridviewComponent","_onDidLayoutfromJSON","_key","serializedGridview","queue","registerPanel","f","removedPanel","reference","SplitviewComponent","_splitview","v","frameworkWrapper","doAddView","serializedSplitview","DefaultHeader","_expandedIcon","_collapsedIcon","apiRef","_expander","updateIcon","PaneFramework","PaneviewComponent","paneview","_paneview","_viewDisposables","headerComponents","headerframeworkComponents","serializedPaneview","SplitviewPanel","_minimumSize","_evaluatedMinimumSize","_maximumSize","_evaluatedMaximumSize","ReactComponentBridge","triggerRender","React","_props","componentProps","current","Date","now","uniquePortalKeyGenerator","ReactPartContext","ReactPart","portalStore","context","_initialProps","disposed","createPortal","componentInstance","bridgeComponent","portal","ReactDOM","addPortal","usePortalsLifecycle","portals","setPortals","existingPortals","ReactPanelContentPart","reactPortalStore","DockviewEmitter","ReactPanelHeaderPart","ReactWatermarkPart","_groupRef","ReactGroupControlsRendererPart","_part","mutableDisposable","DockviewMutableDisposable","DockviewCompositeDisposable","updatePanels","updateActivePanel","updateGroupActive","store","DEFAULT_REACT_TAB","DockviewReact","domRef","dockviewRef","disableAutoResizing","watcher","contentRect","factory","componentId","dockview","hideBorders","groupControlComponent","onReady","CloseButton","viewBox","focusable","__rest","t","DockviewDefaultTab","_containerApi","onClose","onClick","iconClassname","join","ReactPanelView","reactComponent","SplitviewReact","splitviewRef","ReactGridPanelView","GridviewReact","gridviewRef","PanePanelSection","PaneviewReact","paneviewRef","_componentId"],"sourceRoot":""}