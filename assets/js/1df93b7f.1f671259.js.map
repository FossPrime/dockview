{"version":3,"file":"assets/js/1df93b7f.1f671259.js","mappings":"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","sources":["webpack://dockview-docs/../dockview/dist/esm/dnd/dataTransfer.js","webpack://dockview-docs/../dockview/dist/esm/events.js","webpack://dockview-docs/./node_modules/@babel/runtime/helpers/esm/createClass.js","webpack://dockview-docs/../dockview/dist/esm/lifecycle.js","webpack://dockview-docs/../dockview/dist/esm/dom.js","webpack://dockview-docs/../dockview/dist/esm/math.js","webpack://dockview-docs/../dockview/dist/esm/array.js","webpack://dockview-docs/../dockview/dist/esm/splitview/core/viewItem.js","webpack://dockview-docs/../dockview/dist/esm/splitview/core/splitview.js","webpack://dockview-docs/../dockview/dist/esm/dnd/droptarget.js","webpack://dockview-docs/../dockview/dist/esm/paneview/paneview.js","webpack://dockview-docs/../dockview/dist/esm/dnd/dnd.js","webpack://dockview-docs/../dockview/dist/esm/gridview/leafNode.js","webpack://dockview-docs/../dockview/dist/esm/gridview/branchNode.js","webpack://dockview-docs/../dockview/dist/esm/gridview/gridview.js","webpack://dockview-docs/../dockview/dist/esm/groupview/dnd.js","webpack://dockview-docs/../dockview/dist/esm/api/component.api.js","webpack://dockview-docs/../dockview/dist/esm/groupview/panel/content.js","webpack://dockview-docs/../dockview/dist/esm/dnd/abstractDragHandler.js","webpack://dockview-docs/../dockview/dist/esm/groupview/tab.js","webpack://dockview-docs/../dockview/dist/esm/groupview/groupview.js","webpack://dockview-docs/../dockview/dist/esm/groupview/titlebar/tabsContainer.js","webpack://dockview-docs/../dockview/dist/esm/gridview/baseComponentGridview.js","webpack://dockview-docs/./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","webpack://dockview-docs/../dockview/dist/esm/api/panelApi.js","webpack://dockview-docs/../dockview/dist/esm/api/gridviewPanelApi.js","webpack://dockview-docs/../dockview/dist/esm/api/groupPanelApi.js","webpack://dockview-docs/../dockview/dist/esm/dockview/dockviewGroupPanel.js","webpack://dockview-docs/../dockview/dist/esm/actionbar/actionsContainer.js","webpack://dockview-docs/../dockview/dist/esm/dockview/components/watermark/watermark.js","webpack://dockview-docs/../dockview/dist/esm/panel/componentFactory.js","webpack://dockview-docs/../dockview/dist/esm/dockview/components/tab/defaultTab.js","webpack://dockview-docs/../dockview/dist/esm/gridview/basePanelView.js","webpack://dockview-docs/../dockview/dist/esm/gridview/gridviewPanel.js","webpack://dockview-docs/../dockview/dist/esm/groupview/groupviewPanel.js","webpack://dockview-docs/../dockview/dist/esm/dockview/defaultGroupPanelView.js","webpack://dockview-docs/../dockview/dist/esm/dockview/dockviewComponent.js","webpack://dockview-docs/../dockview/dist/esm/gridview/gridviewComponent.js","webpack://dockview-docs/../dockview/dist/esm/splitview/splitviewComponent.js","webpack://dockview-docs/../dockview/dist/esm/api/splitviewPanelApi.js","webpack://dockview-docs/../dockview/dist/esm/api/paneviewPanelApi.js","webpack://dockview-docs/../dockview/dist/esm/paneview/draggablePaneviewPanel.js","webpack://dockview-docs/../dockview/dist/esm/paneview/paneviewPanel.js","webpack://dockview-docs/../dockview/dist/esm/paneview/defaultPaneviewHeader.js","webpack://dockview-docs/../dockview/dist/esm/paneview/paneviewComponent.js","webpack://dockview-docs/../dockview/dist/esm/splitview/splitviewPanel.js","webpack://dockview-docs/../dockview/dist/esm/react/react.js","webpack://dockview-docs/../dockview/dist/esm/react/dockview/reactContentPart.js","webpack://dockview-docs/../dockview/dist/esm/react/dockview/reactHeaderPart.js","webpack://dockview-docs/../dockview/dist/esm/react/deserializer.js","webpack://dockview-docs/../dockview/dist/esm/react/dockview/reactWatermarkPart.js","webpack://dockview-docs/../dockview/dist/esm/react/dockview/dockview.js","webpack://dockview-docs/../dockview/dist/esm/react/splitview/view.js","webpack://dockview-docs/../dockview/dist/esm/react/splitview/splitview.js","webpack://dockview-docs/../dockview/dist/esm/react/gridview/view.js","webpack://dockview-docs/../dockview/dist/esm/react/gridview/gridview.js","webpack://dockview-docs/../dockview/dist/esm/react/paneview/view.js","webpack://dockview-docs/../dockview/dist/esm/react/paneview/paneview.js","webpack://dockview-docs/./src/components/simpleDockview.tsx","webpack://dockview-docs/./src/pages/index.module.css","webpack://dockview-docs/./src/pages/index.tsx"],"sourcesContent":["class TransferObject {\n    constructor() {\n        //\n    }\n}\nexport class PanelTransfer extends TransferObject {\n    constructor(viewId, groupId, panelId) {\n        super();\n        this.viewId = viewId;\n        this.groupId = groupId;\n        this.panelId = panelId;\n    }\n}\nexport class PaneTransfer extends TransferObject {\n    constructor(viewId, paneId) {\n        super();\n        this.viewId = viewId;\n        this.paneId = paneId;\n    }\n}\n/**\n * A singleton to store transfer data during drag & drop operations that are only valid within the application.\n */\nexport class LocalSelectionTransfer {\n    constructor() {\n        // protect against external instantiation\n    }\n    static getInstance() {\n        return LocalSelectionTransfer.INSTANCE;\n    }\n    hasData(proto) {\n        return proto && proto === this.proto;\n    }\n    clearData(proto) {\n        if (this.hasData(proto)) {\n            this.proto = undefined;\n            this.data = undefined;\n        }\n    }\n    getData(proto) {\n        if (this.hasData(proto)) {\n            return this.data;\n        }\n        return undefined;\n    }\n    setData(data, proto) {\n        if (proto) {\n            this.data = data;\n            this.proto = proto;\n        }\n    }\n}\nLocalSelectionTransfer.INSTANCE = new LocalSelectionTransfer();\nexport function getPanelData() {\n    const panelTransfer = LocalSelectionTransfer.getInstance();\n    const isPanelEvent = panelTransfer.hasData(PanelTransfer.prototype);\n    if (!isPanelEvent) {\n        return undefined;\n    }\n    return panelTransfer.getData(PanelTransfer.prototype)[0];\n}\nexport function getPaneData() {\n    const paneTransfer = LocalSelectionTransfer.getInstance();\n    const isPanelEvent = paneTransfer.hasData(PaneTransfer.prototype);\n    if (!isPanelEvent) {\n        return undefined;\n    }\n    return paneTransfer.getData(PaneTransfer.prototype)[0];\n}\n","export var Event;\n(function (Event) {\n    Event.any = (...children) => {\n        return (listener) => {\n            const disposables = children.map((child) => child(listener));\n            return {\n                dispose: () => {\n                    disposables.forEach((d) => {\n                        d.dispose();\n                    });\n                },\n            };\n        };\n    };\n})(Event || (Event = {}));\n// dumb event emitter with better typings than nodes event emitter\n// https://github.com/microsoft/vscode/blob/master/src/vs/base/common/event.ts\nexport class Emitter {\n    constructor(options) {\n        this.options = options;\n        this._listeners = [];\n        this._disposed = false;\n    }\n    get event() {\n        if (!this._event) {\n            this._event = (listener) => {\n                var _a;\n                if (((_a = this.options) === null || _a === void 0 ? void 0 : _a.replay) && this._last !== undefined) {\n                    listener(this._last);\n                }\n                this._listeners.push(listener);\n                return {\n                    dispose: () => {\n                        const index = this._listeners.indexOf(listener);\n                        if (index > -1) {\n                            this._listeners.splice(index, 1);\n                        }\n                    },\n                };\n            };\n        }\n        return this._event;\n    }\n    fire(e) {\n        this._last = e;\n        for (const listener of this._listeners) {\n            listener(e);\n        }\n    }\n    dispose() {\n        this._listeners = [];\n        this._disposed = true;\n    }\n}\nexport function addDisposableWindowListener(element, type, listener, options) {\n    element.addEventListener(type, listener, options);\n    return {\n        dispose: () => {\n            element.removeEventListener(type, listener);\n        },\n    };\n}\nexport function addDisposableListener(element, type, listener, options) {\n    element.addEventListener(type, listener, options);\n    return {\n        dispose: () => {\n            element.removeEventListener(type, listener);\n        },\n    };\n}\nexport class TickDelayedEvent {\n    constructor() {\n        this._onFired = new Emitter();\n        this.onEvent = this._onFired.event;\n    }\n    fire() {\n        if (this.timer) {\n            clearTimeout(this.timer);\n        }\n        this.timer = setTimeout(() => {\n            this._onFired.fire();\n            clearTimeout(this.timer);\n        });\n    }\n    dispose() {\n        this._onFired.dispose();\n    }\n}\n","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}","export var Disposable;\n(function (Disposable) {\n    Disposable.NONE = {\n        dispose: () => {\n            // noop\n        },\n    };\n})(Disposable || (Disposable = {}));\nexport class CompositeDisposable {\n    constructor(...args) {\n        this.disposables = args;\n    }\n    static from(...args) {\n        return new CompositeDisposable(...args);\n    }\n    addDisposables(...args) {\n        args.forEach((arg) => this.disposables.push(arg));\n    }\n    dispose() {\n        this.disposables.forEach((arg) => arg.dispose());\n    }\n}\nexport class MutableDisposable {\n    constructor() {\n        this._disposable = Disposable.NONE;\n    }\n    set value(disposable) {\n        if (this._disposable) {\n            this._disposable.dispose();\n        }\n        this._disposable = disposable;\n    }\n    dispose() {\n        if (this._disposable) {\n            this._disposable.dispose();\n            this._disposable = Disposable.NONE;\n        }\n    }\n}\n","import { Emitter, addDisposableListener, addDisposableWindowListener, } from './events';\nimport { CompositeDisposable } from './lifecycle';\nexport function watchElementResize(element, cb) {\n    const observer = new ResizeObserver((entires) => {\n        const firstEntry = entires[0];\n        cb(firstEntry);\n    });\n    observer.observe(element);\n    return {\n        dispose: () => {\n            observer.unobserve(element);\n            observer.disconnect();\n        },\n    };\n}\nexport const removeClasses = (element, ...classes) => {\n    for (const classname of classes) {\n        if (element.classList.contains(classname)) {\n            element.classList.remove(classname);\n        }\n    }\n};\nexport const addClasses = (element, ...classes) => {\n    for (const classname of classes) {\n        if (!element.classList.contains(classname)) {\n            element.classList.add(classname);\n        }\n    }\n};\nexport const toggleClass = (element, className, isToggled) => {\n    const hasClass = element.classList.contains(className);\n    if (isToggled && !hasClass) {\n        element.classList.add(className);\n    }\n    if (!isToggled && hasClass) {\n        element.classList.remove(className);\n    }\n};\nexport function isAncestor(testChild, testAncestor) {\n    while (testChild) {\n        if (testChild === testAncestor) {\n            return true;\n        }\n        testChild = testChild.parentNode;\n    }\n    return false;\n}\nexport function getElementsByTagName(tag) {\n    return Array.prototype.slice.call(document.getElementsByTagName(tag), 0);\n}\nexport function trackFocus(element) {\n    return new FocusTracker(element);\n}\n/**\n * Track focus on an element. Ensure tabIndex is set when an HTMLElement is not focusable by default\n */\nclass FocusTracker extends CompositeDisposable {\n    constructor(element) {\n        super();\n        this._onDidFocus = new Emitter();\n        this.onDidFocus = this._onDidFocus.event;\n        this._onDidBlur = new Emitter();\n        this.onDidBlur = this._onDidBlur.event;\n        let hasFocus = isAncestor(document.activeElement, element);\n        let loosingFocus = false;\n        const onFocus = () => {\n            loosingFocus = false;\n            if (!hasFocus) {\n                hasFocus = true;\n                this._onDidFocus.fire();\n            }\n        };\n        const onBlur = () => {\n            if (hasFocus) {\n                loosingFocus = true;\n                window.setTimeout(() => {\n                    if (loosingFocus) {\n                        loosingFocus = false;\n                        hasFocus = false;\n                        this._onDidBlur.fire();\n                    }\n                }, 0);\n            }\n        };\n        this._refreshStateHandler = () => {\n            const currentNodeHasFocus = isAncestor(document.activeElement, element);\n            if (currentNodeHasFocus !== hasFocus) {\n                if (hasFocus) {\n                    onBlur();\n                }\n                else {\n                    onFocus();\n                }\n            }\n        };\n        if (element instanceof HTMLElement) {\n            this.addDisposables(addDisposableListener(element, 'focus', onFocus, true));\n            this.addDisposables(addDisposableListener(element, 'blur', onBlur, true));\n        }\n        else {\n            this.addDisposables(addDisposableWindowListener(element, 'focus', onFocus, true));\n            this.addDisposables(addDisposableWindowListener(element, 'blur', onBlur, true));\n        }\n    }\n    refreshState() {\n        this._refreshStateHandler();\n    }\n    dispose() {\n        super.dispose();\n        this._onDidBlur.dispose();\n        this._onDidFocus.dispose();\n    }\n}\n","export const clamp = (value, min, max) => {\n    if (min > max) {\n        throw new Error(`${min} > ${max} is an invalid condition`);\n    }\n    return Math.min(max, Math.max(value, min));\n};\nexport const sequentialNumberGenerator = () => {\n    let value = 1;\n    return { next: () => (value++).toString() };\n};\n","export function tail(arr) {\n    if (arr.length === 0) {\n        throw new Error('Invalid tail call');\n    }\n    return [arr.slice(0, arr.length - 1), arr[arr.length - 1]];\n}\nexport function last(arr) {\n    return arr.length > 0 ? arr[arr.length - 1] : undefined;\n}\nexport function sequenceEquals(arr1, arr2) {\n    if (arr1.length !== arr2.length) {\n        return false;\n    }\n    for (let i = 0; i < arr1.length; i++) {\n        if (arr1[i] !== arr2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Pushes an element to the start of the array, if found.\n */\nexport function pushToStart(arr, value) {\n    const index = arr.indexOf(value);\n    if (index > -1) {\n        arr.splice(index, 1);\n        arr.unshift(value);\n    }\n}\n/**\n * Pushes an element to the end of the array, if found.\n */\nexport function pushToEnd(arr, value) {\n    const index = arr.indexOf(value);\n    if (index > -1) {\n        arr.splice(index, 1);\n        arr.push(value);\n    }\n}\nexport const range = (from, to) => {\n    const result = [];\n    if (typeof to !== 'number') {\n        to = from;\n        from = 0;\n    }\n    if (from <= to) {\n        for (let i = from; i < to; i++) {\n            result.push(i);\n        }\n    }\n    else {\n        for (let i = from; i > to; i--) {\n            result.push(i);\n        }\n    }\n    return result;\n};\nexport function firstIndex(array, fn) {\n    for (let i = 0; i < array.length; i++) {\n        const element = array[i];\n        if (fn(element)) {\n            return i;\n        }\n    }\n    return -1;\n}\n","import { clamp } from '../../math';\nexport class ViewItem {\n    constructor(container, view, size, disposable) {\n        this.container = container;\n        this.view = view;\n        this.disposable = disposable;\n        this._cachedVisibleSize = undefined;\n        if (typeof size === 'number') {\n            this._size = size;\n            this._cachedVisibleSize = undefined;\n            container.classList.add('visible');\n        }\n        else {\n            this._size = 0;\n            this._cachedVisibleSize = size.cachedVisibleSize;\n        }\n    }\n    set size(size) {\n        this._size = size;\n    }\n    get size() {\n        return this._size;\n    }\n    get cachedVisibleSize() {\n        return this._cachedVisibleSize;\n    }\n    get visible() {\n        return typeof this._cachedVisibleSize === 'undefined';\n    }\n    setVisible(visible, size) {\n        var _a;\n        if (visible === this.visible) {\n            return;\n        }\n        if (visible) {\n            this.size = clamp((_a = this._cachedVisibleSize) !== null && _a !== void 0 ? _a : 0, this.viewMinimumSize, this.viewMaximumSize);\n            this._cachedVisibleSize = undefined;\n        }\n        else {\n            this._cachedVisibleSize =\n                typeof size === 'number' ? size : this.size;\n            this.size = 0;\n        }\n        this.container.classList.toggle('visible', visible);\n        if (this.view.setVisible) {\n            this.view.setVisible(visible);\n        }\n    }\n    get minimumSize() {\n        return this.visible ? this.view.minimumSize : 0;\n    }\n    get viewMinimumSize() {\n        return this.view.minimumSize;\n    }\n    get maximumSize() {\n        return this.visible ? this.view.maximumSize : 0;\n    }\n    get viewMaximumSize() {\n        return this.view.maximumSize;\n    }\n    get priority() {\n        return this.view.priority;\n    }\n    get snap() {\n        return !!this.view.snap;\n    }\n    set enabled(enabled) {\n        this.container.style.pointerEvents = enabled ? '' : 'none';\n    }\n    // layout(offset: number, layoutContext: TLayoutContext | undefined): void {\n    //     this.layoutContainer(offset);\n    //     this.view.layout(this.size, offset, layoutContext);\n    // }\n    // abstract layoutContainer(offset: number): void;\n    dispose() {\n        this.disposable.dispose();\n        return this.view;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/splitview\n *--------------------------------------------------------------------------------------------*/\nimport { removeClasses, addClasses, toggleClass, getElementsByTagName, } from '../../dom';\nimport { clamp } from '../../math';\nimport { Emitter } from '../../events';\nimport { pushToStart, pushToEnd, range, firstIndex } from '../../array';\nimport { ViewItem } from './viewItem';\nexport var Orientation;\n(function (Orientation) {\n    Orientation[\"HORIZONTAL\"] = \"HORIZONTAL\";\n    Orientation[\"VERTICAL\"] = \"VERTICAL\";\n})(Orientation || (Orientation = {}));\nexport var SashState;\n(function (SashState) {\n    SashState[SashState[\"MAXIMUM\"] = 0] = \"MAXIMUM\";\n    SashState[SashState[\"MINIMUM\"] = 1] = \"MINIMUM\";\n    SashState[SashState[\"DISABLED\"] = 2] = \"DISABLED\";\n    SashState[SashState[\"ENABLED\"] = 3] = \"ENABLED\";\n})(SashState || (SashState = {}));\nexport var LayoutPriority;\n(function (LayoutPriority) {\n    LayoutPriority[\"Low\"] = \"low\";\n    LayoutPriority[\"High\"] = \"high\";\n    LayoutPriority[\"Normal\"] = \"normal\";\n})(LayoutPriority || (LayoutPriority = {}));\nexport var Sizing;\n(function (Sizing) {\n    Sizing.Distribute = { type: 'distribute' };\n    function Split(index) {\n        return { type: 'split', index };\n    }\n    Sizing.Split = Split;\n    function Invisible(cachedVisibleSize) {\n        return { type: 'invisible', cachedVisibleSize };\n    }\n    Sizing.Invisible = Invisible;\n})(Sizing || (Sizing = {}));\nexport class Splitview {\n    constructor(container, options) {\n        this.container = container;\n        this.views = [];\n        this.sashes = [];\n        this._size = 0;\n        this._orthogonalSize = 0;\n        this.contentSize = 0;\n        this._proportions = undefined;\n        this._onDidSashEnd = new Emitter();\n        this.onDidSashEnd = this._onDidSashEnd.event;\n        this._onDidAddView = new Emitter();\n        this.onDidAddView = this._onDidAddView.event;\n        this._onDidRemoveView = new Emitter();\n        this.onDidRemoveView = this._onDidRemoveView.event;\n        this._startSnappingEnabled = true;\n        this._endSnappingEnabled = true;\n        this.resize = (index, delta, sizes = this.views.map((x) => x.size), lowPriorityIndexes, highPriorityIndexes, overloadMinDelta = Number.NEGATIVE_INFINITY, overloadMaxDelta = Number.POSITIVE_INFINITY, snapBefore, snapAfter) => {\n            if (index < 0 || index > this.views.length) {\n                return 0;\n            }\n            const upIndexes = range(index, -1);\n            const downIndexes = range(index + 1, this.views.length);\n            //\n            if (highPriorityIndexes) {\n                for (const i of highPriorityIndexes) {\n                    pushToStart(upIndexes, i);\n                    pushToStart(downIndexes, i);\n                }\n            }\n            if (lowPriorityIndexes) {\n                for (const i of lowPriorityIndexes) {\n                    pushToEnd(upIndexes, i);\n                    pushToEnd(downIndexes, i);\n                }\n            }\n            //\n            const upItems = upIndexes.map((i) => this.views[i]);\n            const upSizes = upIndexes.map((i) => sizes[i]);\n            //\n            const downItems = downIndexes.map((i) => this.views[i]);\n            const downSizes = downIndexes.map((i) => sizes[i]);\n            //\n            const minDeltaUp = upIndexes.reduce((_, i) => _ + this.views[i].minimumSize - sizes[i], 0);\n            const maxDeltaUp = upIndexes.reduce((_, i) => _ + this.views[i].maximumSize - sizes[i], 0);\n            //\n            const maxDeltaDown = downIndexes.length === 0\n                ? Number.POSITIVE_INFINITY\n                : downIndexes.reduce((_, i) => _ + sizes[i] - this.views[i].minimumSize, 0);\n            const minDeltaDown = downIndexes.length === 0\n                ? Number.NEGATIVE_INFINITY\n                : downIndexes.reduce((_, i) => _ + sizes[i] - this.views[i].maximumSize, 0);\n            //\n            const minDelta = Math.max(minDeltaUp, minDeltaDown);\n            const maxDelta = Math.min(maxDeltaDown, maxDeltaUp);\n            //\n            let snapped = false;\n            if (snapBefore) {\n                const snapView = this.views[snapBefore.index];\n                const visible = delta >= snapBefore.limitDelta;\n                snapped = visible !== snapView.visible;\n                snapView.setVisible(visible, snapBefore.size);\n            }\n            if (!snapped && snapAfter) {\n                const snapView = this.views[snapAfter.index];\n                const visible = delta < snapAfter.limitDelta;\n                snapped = visible !== snapView.visible;\n                snapView.setVisible(visible, snapAfter.size);\n            }\n            if (snapped) {\n                return this.resize(index, delta, sizes, lowPriorityIndexes, highPriorityIndexes, overloadMinDelta, overloadMaxDelta);\n            }\n            //\n            const tentativeDelta = clamp(delta, minDelta, maxDelta);\n            let actualDelta = 0;\n            //\n            let deltaUp = tentativeDelta;\n            for (let i = 0; i < upItems.length; i++) {\n                const item = upItems[i];\n                const size = clamp(upSizes[i] + deltaUp, item.minimumSize, item.maximumSize);\n                const viewDelta = size - upSizes[i];\n                actualDelta += viewDelta;\n                deltaUp -= viewDelta;\n                item.size = size;\n            }\n            //\n            let deltaDown = actualDelta;\n            for (let i = 0; i < downItems.length; i++) {\n                const item = downItems[i];\n                const size = clamp(downSizes[i] - deltaDown, item.minimumSize, item.maximumSize);\n                const viewDelta = size - downSizes[i];\n                deltaDown += viewDelta;\n                item.size = size;\n            }\n            //\n            return delta;\n        };\n        this._orientation = options.orientation;\n        this.element = this.createContainer();\n        this.proportionalLayout =\n            options.proportionalLayout === undefined\n                ? true\n                : !!options.proportionalLayout;\n        this.viewContainer = this.createViewContainer();\n        this.sashContainer = this.createSashContainer();\n        this.element.appendChild(this.sashContainer);\n        this.element.appendChild(this.viewContainer);\n        this.container.appendChild(this.element);\n        this.style(options.styles);\n        // We have an existing set of view, add them now\n        if (options.descriptor) {\n            this._size = options.descriptor.size;\n            options.descriptor.views.forEach((viewDescriptor, index) => {\n                const sizing = viewDescriptor.visible === undefined ||\n                    viewDescriptor.visible\n                    ? viewDescriptor.size\n                    : {\n                        type: 'invisible',\n                        cachedVisibleSize: viewDescriptor.size,\n                    };\n                const view = viewDescriptor.view;\n                this.addView(view, sizing, index, true\n                // true skip layout\n                );\n            });\n            // Initialize content size and proportions for first layout\n            this.contentSize = this.views.reduce((r, i) => r + i.size, 0);\n            this.saveProportions();\n        }\n    }\n    get size() {\n        return this._size;\n    }\n    set size(value) {\n        this._size = value;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    set orthogonalSize(value) {\n        this._orthogonalSize = value;\n    }\n    get length() {\n        return this.views.length;\n    }\n    get proportions() {\n        return this._proportions ? [...this._proportions] : undefined;\n    }\n    get orientation() {\n        return this._orientation;\n    }\n    set orientation(value) {\n        this._orientation = value;\n        const tmp = this.size;\n        this.size = this.orthogonalSize;\n        this.orthogonalSize = tmp;\n        removeClasses(this.element, 'horizontal', 'vertical');\n        this.element.classList.add(this.orientation == Orientation.HORIZONTAL\n            ? 'horizontal'\n            : 'vertical');\n    }\n    get minimumSize() {\n        return this.views.reduce((r, item) => r + item.minimumSize, 0);\n    }\n    get maximumSize() {\n        return this.length === 0\n            ? Number.POSITIVE_INFINITY\n            : this.views.reduce((r, item) => r + item.maximumSize, 0);\n    }\n    get startSnappingEnabled() {\n        return this._startSnappingEnabled;\n    }\n    set startSnappingEnabled(startSnappingEnabled) {\n        if (this._startSnappingEnabled === startSnappingEnabled) {\n            return;\n        }\n        this._startSnappingEnabled = startSnappingEnabled;\n        this.updateSashEnablement();\n    }\n    get endSnappingEnabled() {\n        return this._endSnappingEnabled;\n    }\n    set endSnappingEnabled(endSnappingEnabled) {\n        if (this._endSnappingEnabled === endSnappingEnabled) {\n            return;\n        }\n        this._endSnappingEnabled = endSnappingEnabled;\n        this.updateSashEnablement();\n    }\n    style(styles) {\n        if ((styles === null || styles === void 0 ? void 0 : styles.separatorBorder) === 'transparent') {\n            removeClasses(this.element, 'separator-border');\n            this.element.style.removeProperty('--dv-separator-border');\n        }\n        else {\n            addClasses(this.element, 'separator-border');\n            if (styles === null || styles === void 0 ? void 0 : styles.separatorBorder) {\n                this.element.style.setProperty('--dv-separator-border', styles.separatorBorder);\n            }\n        }\n    }\n    isViewVisible(index) {\n        if (index < 0 || index >= this.views.length) {\n            throw new Error('Index out of bounds');\n        }\n        const viewItem = this.views[index];\n        return viewItem.visible;\n    }\n    setViewVisible(index, visible) {\n        if (index < 0 || index >= this.views.length) {\n            throw new Error('Index out of bounds');\n        }\n        toggleClass(this.container, 'visible', visible);\n        const viewItem = this.views[index];\n        toggleClass(this.container, 'visible', visible);\n        viewItem.setVisible(visible, viewItem.size);\n        this.distributeEmptySpace(index);\n        this.layoutViews();\n        this.saveProportions();\n    }\n    getViewSize(index) {\n        if (index < 0 || index >= this.views.length) {\n            return -1;\n        }\n        return this.views[index].size;\n    }\n    resizeView(index, size) {\n        if (index < 0 || index >= this.views.length) {\n            return;\n        }\n        const indexes = range(this.views.length).filter((i) => i !== index);\n        const lowPriorityIndexes = [\n            ...indexes.filter((i) => this.views[i].priority === LayoutPriority.Low),\n            index,\n        ];\n        const highPriorityIndexes = indexes.filter((i) => this.views[i].priority === LayoutPriority.High);\n        const item = this.views[index];\n        size = Math.round(size);\n        size = clamp(size, item.minimumSize, Math.min(item.maximumSize, this._size));\n        item.size = size;\n        this.relayout(lowPriorityIndexes, highPriorityIndexes);\n    }\n    getViews() {\n        return this.views.map((x) => x.view);\n    }\n    onDidChange(item, size) {\n        const index = this.views.indexOf(item);\n        if (index < 0 || index >= this.views.length) {\n            return;\n        }\n        size = typeof size === 'number' ? size : item.size;\n        size = clamp(size, item.minimumSize, item.maximumSize);\n        item.size = size;\n        this.relayout([index]);\n    }\n    addView(view, size = { type: 'distribute' }, index = this.views.length, skipLayout) {\n        const container = document.createElement('div');\n        container.className = 'view';\n        container.appendChild(view.element);\n        let viewSize;\n        if (typeof size === 'number') {\n            viewSize = size;\n        }\n        else if (size.type === 'split') {\n            viewSize = this.getViewSize(size.index) / 2;\n        }\n        else if (size.type === 'invisible') {\n            viewSize = { cachedVisibleSize: size.cachedVisibleSize };\n        }\n        else {\n            viewSize = view.minimumSize;\n        }\n        const disposable = view.onDidChange((newSize) => this.onDidChange(viewItem, newSize));\n        const dispose = () => {\n            disposable === null || disposable === void 0 ? void 0 : disposable.dispose();\n            this.viewContainer.removeChild(container);\n        };\n        const viewItem = new ViewItem(container, view, viewSize, { dispose });\n        if (index === this.views.length) {\n            this.viewContainer.appendChild(container);\n        }\n        else {\n            this.viewContainer.insertBefore(container, this.viewContainer.children.item(index));\n        }\n        this.views.splice(index, 0, viewItem);\n        if (this.views.length > 1) {\n            //add sash\n            const sash = document.createElement('div');\n            sash.className = 'sash';\n            const onStart = (event) => {\n                for (const item of this.views) {\n                    item.enabled = false;\n                }\n                const iframes = [\n                    ...getElementsByTagName('iframe'),\n                    ...getElementsByTagName('webview'),\n                ];\n                for (const iframe of iframes) {\n                    iframe.style.pointerEvents = 'none';\n                }\n                const start = this._orientation === Orientation.HORIZONTAL\n                    ? event.clientX\n                    : event.clientY;\n                const sashIndex = firstIndex(this.sashes, (s) => s.container === sash);\n                //\n                const sizes = this.views.map((x) => x.size);\n                //\n                let snapBefore;\n                let snapAfter;\n                const upIndexes = range(sashIndex, -1);\n                const downIndexes = range(sashIndex + 1, this.views.length);\n                const minDeltaUp = upIndexes.reduce((r, i) => r + (this.views[i].minimumSize - sizes[i]), 0);\n                const maxDeltaUp = upIndexes.reduce((r, i) => r + (this.views[i].viewMaximumSize - sizes[i]), 0);\n                const maxDeltaDown = downIndexes.length === 0\n                    ? Number.POSITIVE_INFINITY\n                    : downIndexes.reduce((r, i) => r + (sizes[i] - this.views[i].minimumSize), 0);\n                const minDeltaDown = downIndexes.length === 0\n                    ? Number.NEGATIVE_INFINITY\n                    : downIndexes.reduce((r, i) => r +\n                        (sizes[i] - this.views[i].viewMaximumSize), 0);\n                const minDelta = Math.max(minDeltaUp, minDeltaDown);\n                const maxDelta = Math.min(maxDeltaDown, maxDeltaUp);\n                const snapBeforeIndex = this.findFirstSnapIndex(upIndexes);\n                const snapAfterIndex = this.findFirstSnapIndex(downIndexes);\n                if (typeof snapBeforeIndex === 'number') {\n                    const snappedViewItem = this.views[snapBeforeIndex];\n                    const halfSize = Math.floor(snappedViewItem.viewMinimumSize / 2);\n                    snapBefore = {\n                        index: snapBeforeIndex,\n                        limitDelta: snappedViewItem.visible\n                            ? minDelta - halfSize\n                            : minDelta + halfSize,\n                        size: snappedViewItem.size,\n                    };\n                }\n                if (typeof snapAfterIndex === 'number') {\n                    const snappedViewItem = this.views[snapAfterIndex];\n                    const halfSize = Math.floor(snappedViewItem.viewMinimumSize / 2);\n                    snapAfter = {\n                        index: snapAfterIndex,\n                        limitDelta: snappedViewItem.visible\n                            ? maxDelta + halfSize\n                            : maxDelta - halfSize,\n                        size: snappedViewItem.size,\n                    };\n                }\n                //\n                const mousemove = (mousemoveEvent) => {\n                    const current = this._orientation === Orientation.HORIZONTAL\n                        ? mousemoveEvent.clientX\n                        : mousemoveEvent.clientY;\n                    const delta = current - start;\n                    this.resize(sashIndex, delta, sizes, undefined, undefined, minDelta, maxDelta, snapBefore, snapAfter);\n                    this.distributeEmptySpace();\n                    this.layoutViews();\n                };\n                const end = () => {\n                    for (const item of this.views) {\n                        item.enabled = true;\n                    }\n                    for (const iframe of iframes) {\n                        iframe.style.pointerEvents = 'auto';\n                    }\n                    this.saveProportions();\n                    document.removeEventListener('mousemove', mousemove);\n                    document.removeEventListener('mouseup', end);\n                    document.removeEventListener('mouseend', end);\n                    this._onDidSashEnd.fire(undefined);\n                };\n                document.addEventListener('mousemove', mousemove);\n                document.addEventListener('mouseup', end);\n                document.addEventListener('mouseend', end);\n            };\n            sash.addEventListener('mousedown', onStart);\n            const sashItem = {\n                container: sash,\n                disposable: () => {\n                    sash.removeEventListener('mousedown', onStart);\n                    this.sashContainer.removeChild(sash);\n                },\n            };\n            this.sashContainer.appendChild(sash);\n            this.sashes.push(sashItem);\n        }\n        if (!skipLayout) {\n            this.relayout([index]);\n        }\n        if (!skipLayout &&\n            typeof size !== 'number' &&\n            size.type === 'distribute') {\n            this.distributeViewSizes();\n        }\n        this._onDidAddView.fire(view);\n    }\n    distributeViewSizes() {\n        const flexibleViewItems = [];\n        let flexibleSize = 0;\n        for (const item of this.views) {\n            if (item.maximumSize - item.minimumSize > 0) {\n                flexibleViewItems.push(item);\n                flexibleSize += item.size;\n            }\n        }\n        const size = Math.floor(flexibleSize / flexibleViewItems.length);\n        for (const item of flexibleViewItems) {\n            item.size = clamp(size, item.minimumSize, item.maximumSize);\n        }\n        const indexes = range(this.views.length);\n        const lowPriorityIndexes = indexes.filter((i) => this.views[i].priority === LayoutPriority.Low);\n        const highPriorityIndexes = indexes.filter((i) => this.views[i].priority === LayoutPriority.High);\n        this.relayout(lowPriorityIndexes, highPriorityIndexes);\n    }\n    removeView(index, sizing, skipLayout = false) {\n        // Remove view\n        const viewItem = this.views.splice(index, 1)[0];\n        viewItem.dispose();\n        // Remove sash\n        if (this.views.length >= 1) {\n            const sashIndex = Math.max(index - 1, 0);\n            const sashItem = this.sashes.splice(sashIndex, 1)[0];\n            sashItem.disposable();\n        }\n        if (!skipLayout) {\n            this.relayout();\n        }\n        if (sizing && sizing.type === 'distribute') {\n            this.distributeViewSizes();\n        }\n        this._onDidRemoveView.fire(viewItem.view);\n        return viewItem.view;\n    }\n    getViewCachedVisibleSize(index) {\n        if (index < 0 || index >= this.views.length) {\n            throw new Error('Index out of bounds');\n        }\n        const viewItem = this.views[index];\n        return viewItem.cachedVisibleSize;\n    }\n    moveView(from, to) {\n        const cachedVisibleSize = this.getViewCachedVisibleSize(from);\n        const sizing = typeof cachedVisibleSize === 'undefined'\n            ? this.getViewSize(from)\n            : Sizing.Invisible(cachedVisibleSize);\n        const view = this.removeView(from, undefined, true);\n        this.addView(view, sizing, to);\n    }\n    layout(size, orthogonalSize) {\n        const previousSize = Math.max(this.size, this.contentSize);\n        this.size = size;\n        this.orthogonalSize = orthogonalSize;\n        if (!this.proportions) {\n            const indexes = range(this.views.length);\n            const lowPriorityIndexes = indexes.filter((i) => this.views[i].priority === LayoutPriority.Low);\n            const highPriorityIndexes = indexes.filter((i) => this.views[i].priority === LayoutPriority.High);\n            this.resize(this.views.length - 1, size - previousSize, undefined, lowPriorityIndexes, highPriorityIndexes);\n        }\n        else {\n            for (let i = 0; i < this.views.length; i++) {\n                const item = this.views[i];\n                item.size = clamp(Math.round(this.proportions[i] * size), item.minimumSize, item.maximumSize);\n            }\n        }\n        this.distributeEmptySpace();\n        this.layoutViews();\n    }\n    relayout(lowPriorityIndexes, highPriorityIndexes) {\n        const contentSize = this.views.reduce((r, i) => r + i.size, 0);\n        this.resize(this.views.length - 1, this._size - contentSize, undefined, lowPriorityIndexes, highPriorityIndexes);\n        this.distributeEmptySpace();\n        this.layoutViews();\n        this.saveProportions();\n    }\n    distributeEmptySpace(lowPriorityIndex) {\n        const contentSize = this.views.reduce((r, i) => r + i.size, 0);\n        let emptyDelta = this.size - contentSize;\n        const indexes = range(this.views.length - 1, -1);\n        const lowPriorityIndexes = indexes.filter((i) => this.views[i].priority === LayoutPriority.Low);\n        const highPriorityIndexes = indexes.filter((i) => this.views[i].priority === LayoutPriority.High);\n        for (const index of highPriorityIndexes) {\n            pushToStart(indexes, index);\n        }\n        for (const index of lowPriorityIndexes) {\n            pushToEnd(indexes, index);\n        }\n        if (typeof lowPriorityIndex === 'number') {\n            pushToEnd(indexes, lowPriorityIndex);\n        }\n        for (let i = 0; emptyDelta !== 0 && i < indexes.length; i++) {\n            const item = this.views[indexes[i]];\n            const size = clamp(item.size + emptyDelta, item.minimumSize, item.maximumSize);\n            const viewDelta = size - item.size;\n            emptyDelta -= viewDelta;\n            item.size = size;\n        }\n    }\n    saveProportions() {\n        if (this.proportionalLayout && this.contentSize > 0) {\n            this._proportions = this.views.map((i) => i.size / this.contentSize);\n        }\n    }\n    layoutViews() {\n        this.contentSize = this.views.reduce((r, i) => r + i.size, 0);\n        let sum = 0;\n        const x = [];\n        this.updateSashEnablement();\n        for (let i = 0; i < this.views.length - 1; i++) {\n            sum += this.views[i].size;\n            x.push(sum);\n            const offset = Math.min(Math.max(0, sum - 2), this.size - 4);\n            if (this._orientation === Orientation.HORIZONTAL) {\n                this.sashes[i].container.style.left = `${offset}px`;\n                this.sashes[i].container.style.top = `0px`;\n            }\n            if (this._orientation === Orientation.VERTICAL) {\n                this.sashes[i].container.style.left = `0px`;\n                this.sashes[i].container.style.top = `${offset}px`;\n            }\n        }\n        this.views.forEach((view, i) => {\n            if (this._orientation === Orientation.HORIZONTAL) {\n                view.container.style.width = `${view.size}px`;\n                view.container.style.left = i == 0 ? '0px' : `${x[i - 1]}px`;\n                view.container.style.top = '';\n                view.container.style.height = '';\n            }\n            if (this._orientation === Orientation.VERTICAL) {\n                view.container.style.height = `${view.size}px`;\n                view.container.style.top = i == 0 ? '0px' : `${x[i - 1]}px`;\n                view.container.style.width = '';\n                view.container.style.left = '';\n            }\n            view.view.layout(view.size, this._orthogonalSize);\n        });\n    }\n    findFirstSnapIndex(indexes) {\n        // visible views first\n        for (const index of indexes) {\n            const viewItem = this.views[index];\n            if (!viewItem.visible) {\n                continue;\n            }\n            if (viewItem.snap) {\n                return index;\n            }\n        }\n        // then, hidden views\n        for (const index of indexes) {\n            const viewItem = this.views[index];\n            if (viewItem.visible &&\n                viewItem.maximumSize - viewItem.minimumSize > 0) {\n                return undefined;\n            }\n            if (!viewItem.visible && viewItem.snap) {\n                return index;\n            }\n        }\n        return undefined;\n    }\n    updateSashEnablement() {\n        let previous = false;\n        const collapsesDown = this.views.map((i) => (previous = i.size - i.minimumSize > 0 || previous));\n        previous = false;\n        const expandsDown = this.views.map((i) => (previous = i.maximumSize - i.size > 0 || previous));\n        const reverseViews = [...this.views].reverse();\n        previous = false;\n        const collapsesUp = reverseViews\n            .map((i) => (previous = i.size - i.minimumSize > 0 || previous))\n            .reverse();\n        previous = false;\n        const expandsUp = reverseViews\n            .map((i) => (previous = i.maximumSize - i.size > 0 || previous))\n            .reverse();\n        let position = 0;\n        for (let index = 0; index < this.sashes.length; index++) {\n            const sash = this.sashes[index];\n            const viewItem = this.views[index];\n            position += viewItem.size;\n            const min = !(collapsesDown[index] && expandsUp[index + 1]);\n            const max = !(expandsDown[index] && collapsesUp[index + 1]);\n            if (min && max) {\n                const upIndexes = range(index, -1);\n                const downIndexes = range(index + 1, this.views.length);\n                const snapBeforeIndex = this.findFirstSnapIndex(upIndexes);\n                const snapAfterIndex = this.findFirstSnapIndex(downIndexes);\n                const snappedBefore = typeof snapBeforeIndex === 'number' &&\n                    !this.views[snapBeforeIndex].visible;\n                const snappedAfter = typeof snapAfterIndex === 'number' &&\n                    !this.views[snapAfterIndex].visible;\n                if (snappedBefore &&\n                    collapsesUp[index] &&\n                    (position > 0 || this.startSnappingEnabled)) {\n                    this.updateSash(sash, SashState.MINIMUM);\n                }\n                else if (snappedAfter &&\n                    collapsesDown[index] &&\n                    (position < this.contentSize || this.endSnappingEnabled)) {\n                    this.updateSash(sash, SashState.MAXIMUM);\n                }\n                else {\n                    this.updateSash(sash, SashState.DISABLED);\n                }\n            }\n            else if (min && !max) {\n                this.updateSash(sash, SashState.MINIMUM);\n            }\n            else if (!min && max) {\n                this.updateSash(sash, SashState.MAXIMUM);\n            }\n            else {\n                this.updateSash(sash, SashState.ENABLED);\n            }\n        }\n    }\n    updateSash(sash, state) {\n        toggleClass(sash.container, 'disabled', state === SashState.DISABLED);\n        toggleClass(sash.container, 'enabled', state === SashState.ENABLED);\n        toggleClass(sash.container, 'maximum', state === SashState.MAXIMUM);\n        toggleClass(sash.container, 'minimum', state === SashState.MINIMUM);\n    }\n    createViewContainer() {\n        const element = document.createElement('div');\n        element.className = 'view-container';\n        return element;\n    }\n    createSashContainer() {\n        const element = document.createElement('div');\n        element.className = 'sash-container';\n        return element;\n    }\n    createContainer() {\n        const element = document.createElement('div');\n        const orientationClassname = this._orientation === Orientation.HORIZONTAL\n            ? 'horizontal'\n            : 'vertical';\n        element.className = `split-view-container ${orientationClassname}`;\n        return element;\n    }\n    dispose() {\n        this._onDidSashEnd.dispose();\n        this._onDidAddView.dispose();\n        this._onDidRemoveView.dispose();\n        for (let i = 0; i < this.element.children.length; i++) {\n            if (this.element.children.item(i) === this.element) {\n                this.element.removeChild(this.element);\n                break;\n            }\n        }\n        this.element.remove();\n    }\n}\n","import { toggleClass } from '../dom';\nimport { Emitter } from '../events';\nimport { CompositeDisposable } from '../lifecycle';\nimport { DragAndDropObserver } from './dnd';\nexport var Position;\n(function (Position) {\n    Position[\"Top\"] = \"Top\";\n    Position[\"Left\"] = \"Left\";\n    Position[\"Bottom\"] = \"Bottom\";\n    Position[\"Right\"] = \"Right\";\n    Position[\"Center\"] = \"Center\";\n})(Position || (Position = {}));\nfunction isBooleanValue(canDisplayOverlay) {\n    return typeof canDisplayOverlay === 'boolean';\n}\nexport class Droptarget extends CompositeDisposable {\n    constructor(element, options) {\n        super();\n        this.element = element;\n        this.options = options;\n        this._onDrop = new Emitter();\n        this.onDrop = this._onDrop.event;\n        this.addDisposables(this._onDrop, new DragAndDropObserver(this.element, {\n            onDragEnter: () => undefined,\n            onDragOver: (e) => {\n                const width = this.element.clientWidth;\n                const height = this.element.clientHeight;\n                if (width === 0 || height === 0) {\n                    return; // avoid div!0\n                }\n                const x = e.offsetX;\n                const y = e.offsetY;\n                const xp = (100 * x) / width;\n                const yp = (100 * y) / height;\n                const quadrant = this.calculateQuadrant(this.options.validOverlays, xp, yp);\n                if (isBooleanValue(this.options.canDisplayOverlay)) {\n                    if (!this.options.canDisplayOverlay) {\n                        return;\n                    }\n                }\n                else if (!this.options.canDisplayOverlay(e, quadrant)) {\n                    return;\n                }\n                if (!this.target) {\n                    this.target = document.createElement('div');\n                    this.target.className = 'drop-target-dropzone';\n                    this.overlay = document.createElement('div');\n                    this.overlay.className = 'drop-target-selection';\n                    this._state = Position.Center;\n                    this.target.appendChild(this.overlay);\n                    this.element.classList.add('drop-target');\n                    this.element.append(this.target);\n                }\n                if (this.options.validOverlays === 'none') {\n                    return;\n                }\n                if (!this.target || !this.overlay) {\n                    return;\n                }\n                const isSmallX = width < 100;\n                const isSmallY = height < 100;\n                this.toggleClasses(quadrant, isSmallX, isSmallY);\n                this.setState(quadrant);\n            },\n            onDragLeave: () => {\n                this.removeDropTarget();\n            },\n            onDragEnd: () => {\n                this.removeDropTarget();\n            },\n            onDrop: (e) => {\n                e.preventDefault();\n                e.stopPropagation();\n                const state = this._state;\n                this.removeDropTarget();\n                if (state) {\n                    this._onDrop.fire({ position: state, nativeEvent: e });\n                }\n            },\n        }));\n    }\n    get state() {\n        return this._state;\n    }\n    set validOverlays(value) {\n        this.options.validOverlays = value;\n    }\n    set canDisplayOverlay(value) {\n        this.options.canDisplayOverlay = value;\n    }\n    dispose() {\n        this.removeDropTarget();\n    }\n    toggleClasses(quadrant, isSmallX, isSmallY) {\n        if (!this.overlay) {\n            return;\n        }\n        const isLeft = quadrant === 'left';\n        const isRight = quadrant === 'right';\n        const isTop = quadrant === 'top';\n        const isBottom = quadrant === 'bottom';\n        toggleClass(this.overlay, 'right', !isSmallX && isRight);\n        toggleClass(this.overlay, 'left', !isSmallX && isLeft);\n        toggleClass(this.overlay, 'top', !isSmallY && isTop);\n        toggleClass(this.overlay, 'bottom', !isSmallY && isBottom);\n        toggleClass(this.overlay, 'small-right', isSmallX && isRight);\n        toggleClass(this.overlay, 'small-left', isSmallX && isLeft);\n        toggleClass(this.overlay, 'small-top', isSmallY && isTop);\n        toggleClass(this.overlay, 'small-bottom', isSmallY && isBottom);\n    }\n    setState(quadrant) {\n        switch (quadrant) {\n            case 'top':\n                this._state = Position.Top;\n                break;\n            case 'left':\n                this._state = Position.Left;\n                break;\n            case 'bottom':\n                this._state = Position.Bottom;\n                break;\n            case 'right':\n                this._state = Position.Right;\n                break;\n            default:\n                this._state = Position.Center;\n                break;\n        }\n    }\n    calculateQuadrant(overlayType, xp, yp) {\n        switch (overlayType) {\n            case 'all':\n                if (xp < 20) {\n                    return 'left';\n                }\n                if (xp > 80) {\n                    return 'right';\n                }\n                if (yp < 20) {\n                    return 'top';\n                }\n                if (yp > 80) {\n                    return 'bottom';\n                }\n                break;\n            case 'vertical':\n                if (yp < 50) {\n                    return 'top';\n                }\n                return 'bottom';\n            case 'horizontal':\n                if (xp < 50) {\n                    return 'left';\n                }\n                return 'right';\n        }\n        return null;\n    }\n    removeDropTarget() {\n        if (this.target) {\n            this._state = undefined;\n            this.element.removeChild(this.target);\n            this.target = undefined;\n            this.element.classList.remove('drop-target');\n        }\n    }\n}\n","import { Splitview, Orientation, } from '../splitview/core/splitview';\nimport { CompositeDisposable } from '../lifecycle';\nimport { Emitter } from '../events';\nimport { addClasses, removeClasses } from '../dom';\nexport class Paneview extends CompositeDisposable {\n    constructor(container, options) {\n        var _a;\n        super();\n        this.paneItems = [];\n        this.skipAnimation = false;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._orientation = (_a = options.orientation) !== null && _a !== void 0 ? _a : Orientation.VERTICAL;\n        this.element = document.createElement('div');\n        this.element.className = 'pane-container';\n        container.appendChild(this.element);\n        this.splitview = new Splitview(this.element, {\n            orientation: this._orientation,\n            proportionalLayout: false,\n            descriptor: options.descriptor,\n        });\n        // if we've added views from the descriptor we need to\n        // add the panes to our Pane array and setup animation\n        this.getPanes().forEach((pane) => {\n            const disposable = new CompositeDisposable(pane.onDidChangeExpansionState(() => {\n                this.setupAnimation();\n                this._onDidChange.fire(undefined);\n            }));\n            const paneItem = {\n                pane,\n                disposable: {\n                    dispose: () => {\n                        disposable.dispose();\n                    },\n                },\n            };\n            this.paneItems.push(paneItem);\n            pane.orthogonalSize = this.splitview.orthogonalSize;\n        });\n        this.addDisposables(this._onDidChange, this.splitview.onDidSashEnd(() => {\n            this._onDidChange.fire(undefined);\n        }), this.splitview.onDidAddView(() => {\n            this._onDidChange.fire();\n        }), this.splitview.onDidRemoveView(() => {\n            this._onDidChange.fire();\n        }));\n    }\n    get onDidAddView() {\n        return this.splitview.onDidAddView;\n    }\n    get onDidRemoveView() {\n        return this.splitview.onDidRemoveView;\n    }\n    get minimumSize() {\n        return this.splitview.minimumSize;\n    }\n    get maximumSize() {\n        return this.splitview.maximumSize;\n    }\n    get orientation() {\n        return this.splitview.orientation;\n    }\n    get size() {\n        return this.splitview.size;\n    }\n    get orthogonalSize() {\n        return this.splitview.orthogonalSize;\n    }\n    addPane(pane, size, index = this.splitview.length, skipLayout = false) {\n        const disposable = pane.onDidChangeExpansionState(() => {\n            this.setupAnimation();\n            this._onDidChange.fire(undefined);\n        });\n        const paneItem = {\n            pane,\n            disposable: {\n                dispose: () => {\n                    disposable.dispose();\n                },\n            },\n        };\n        this.paneItems.splice(index, 0, paneItem);\n        pane.orthogonalSize = this.splitview.orthogonalSize;\n        this.splitview.addView(pane, size, index, skipLayout);\n    }\n    getViewSize(index) {\n        return this.splitview.getViewSize(index);\n    }\n    getPanes() {\n        return this.splitview.getViews();\n    }\n    removePane(index, options = { skipDispose: false }) {\n        const paneItem = this.paneItems.splice(index, 1)[0];\n        this.splitview.removeView(index);\n        if (!options.skipDispose) {\n            paneItem.disposable.dispose();\n            paneItem.pane.dispose();\n        }\n        return paneItem;\n    }\n    moveView(from, to) {\n        if (from === to) {\n            return;\n        }\n        const view = this.removePane(from, { skipDispose: true });\n        this.skipAnimation = true;\n        try {\n            this.addPane(view.pane, view.pane.size, to, false);\n        }\n        finally {\n            this.skipAnimation = false;\n        }\n    }\n    layout(size, orthogonalSize) {\n        this.splitview.layout(size, orthogonalSize);\n    }\n    setupAnimation() {\n        if (this.skipAnimation) {\n            return;\n        }\n        if (this.animationTimer) {\n            clearTimeout(this.animationTimer);\n            this.animationTimer = undefined;\n        }\n        addClasses(this.element, 'animated');\n        this.animationTimer = setTimeout(() => {\n            this.animationTimer = undefined;\n            removeClasses(this.element, 'animated');\n        }, 200);\n    }\n    dispose() {\n        super.dispose();\n        if (this.animationTimer) {\n            clearTimeout(this.animationTimer);\n            this.animationTimer = undefined;\n        }\n        this.paneItems.forEach((paneItem) => {\n            paneItem.disposable.dispose();\n            paneItem.pane.dispose();\n        });\n        this.paneItems = [];\n        this.splitview.dispose();\n        this.element.remove();\n    }\n}\n","import { addDisposableListener } from '../events';\nimport { CompositeDisposable } from '../lifecycle';\nexport class DragAndDropObserver extends CompositeDisposable {\n    constructor(element, callbacks) {\n        super();\n        this.element = element;\n        this.callbacks = callbacks;\n        // A helper to fix issues with repeated DRAG_ENTER / DRAG_LEAVE\n        // calls see https://github.com/microsoft/vscode/issues/14470\n        // when the element has child elements where the events are fired\n        // repeadedly.\n        this.counter = 0;\n        this.registerListeners();\n    }\n    registerListeners() {\n        this.addDisposables(addDisposableListener(this.element, 'dragenter', (e) => {\n            this.counter++;\n            this.callbacks.onDragEnter(e);\n        }));\n        this.addDisposables(addDisposableListener(this.element, 'dragover', (e) => {\n            e.preventDefault(); // needed so that the drop event fires (https://stackoverflow.com/questions/21339924/drop-event-not-firing-in-chrome)\n            if (this.callbacks.onDragOver) {\n                this.callbacks.onDragOver(e);\n            }\n        }));\n        this.addDisposables(addDisposableListener(this.element, 'dragleave', (e) => {\n            this.counter--;\n            if (this.counter === 0) {\n                this.callbacks.onDragLeave(e);\n            }\n        }));\n        this.addDisposables(addDisposableListener(this.element, 'dragend', (e) => {\n            this.counter = 0;\n            this.callbacks.onDragEnd(e);\n        }));\n        this.addDisposables(addDisposableListener(this.element, 'drop', (e) => {\n            this.counter = 0;\n            this.callbacks.onDrop(e);\n        }));\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/grid\n *--------------------------------------------------------------------------------------------*/\nimport { Orientation, } from '../splitview/core/splitview';\nimport { Emitter } from '../events';\nexport class LeafNode {\n    constructor(view, orientation, orthogonalSize, size = 0) {\n        this.view = view;\n        this.orientation = orientation;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._orthogonalSize = orthogonalSize;\n        this._size = size;\n        this._disposable = this.view.onDidChange((event) => {\n            if (event) {\n                this._onDidChange.fire(this.orientation === Orientation.VERTICAL\n                    ? event.width\n                    : event.height);\n            }\n            else {\n                this._onDidChange.fire(undefined);\n            }\n        });\n    }\n    get minimumWidth() {\n        return this.view.minimumWidth;\n    }\n    get maximumWidth() {\n        return this.view.maximumWidth;\n    }\n    get minimumHeight() {\n        return this.view.minimumHeight;\n    }\n    get maximumHeight() {\n        return this.view.maximumHeight;\n    }\n    get priority() {\n        return this.view.priority;\n    }\n    get snap() {\n        return this.view.snap;\n    }\n    get minimumSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumHeight\n            : this.minimumWidth;\n    }\n    get maximumSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumHeight\n            : this.maximumWidth;\n    }\n    get minimumOrthogonalSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumWidth\n            : this.minimumHeight;\n    }\n    get maximumOrthogonalSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumWidth\n            : this.maximumHeight;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    get size() {\n        return this._size;\n    }\n    get element() {\n        return this.view.element;\n    }\n    get width() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.orthogonalSize\n            : this.size;\n    }\n    get height() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.size\n            : this.orthogonalSize;\n    }\n    setVisible(visible) {\n        if (this.view.setVisible) {\n            this.view.setVisible(visible);\n            this._onDidChange.fire(undefined);\n        }\n    }\n    layout(size, orthogonalSize) {\n        this._size = size;\n        this._orthogonalSize = orthogonalSize;\n        this.view.layout(this.width, this.height);\n    }\n    dispose() {\n        this._onDidChange.dispose();\n        this._disposable.dispose();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/grid\n *--------------------------------------------------------------------------------------------*/\nimport { Splitview, Orientation, LayoutPriority, } from '../splitview/core/splitview';\nimport { Emitter, Event } from '../events';\nimport { LeafNode } from './leafNode';\nimport { CompositeDisposable, Disposable } from '../lifecycle';\nexport class BranchNode extends CompositeDisposable {\n    constructor(orientation, proportionalLayout, styles, size, orthogonalSize, childDescriptors) {\n        super();\n        this.orientation = orientation;\n        this.proportionalLayout = proportionalLayout;\n        this.styles = styles;\n        this.children = [];\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._childrenDisposable = Disposable.NONE;\n        this._orthogonalSize = orthogonalSize;\n        this._size = size;\n        this.element = document.createElement('div');\n        this.element.className = 'branch-node';\n        if (!childDescriptors) {\n            this.splitview = new Splitview(this.element, {\n                orientation: this.orientation,\n                proportionalLayout,\n                styles,\n            });\n            this.splitview.layout(this.size, this.orthogonalSize);\n        }\n        else {\n            const descriptor = {\n                views: childDescriptors.map((childDescriptor) => {\n                    return {\n                        view: childDescriptor.node,\n                        size: childDescriptor.node.size,\n                        visible: childDescriptor.node instanceof LeafNode &&\n                            childDescriptor.visible !== undefined\n                            ? childDescriptor.visible\n                            : true,\n                    };\n                }),\n                size: this.size,\n            };\n            this.children = childDescriptors.map((c) => c.node);\n            this.splitview = new Splitview(this.element, {\n                orientation: this.orientation,\n                descriptor,\n                proportionalLayout,\n            });\n        }\n        this.addDisposables(this._onDidChange, this.splitview.onDidSashEnd(() => {\n            this._onDidChange.fire(undefined);\n        }));\n        this.setupChildrenEvents();\n    }\n    get width() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.size\n            : this.orthogonalSize;\n    }\n    get height() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.orthogonalSize\n            : this.size;\n    }\n    get minimumSize() {\n        return this.children.length === 0\n            ? 0\n            : Math.max(...this.children.map((c) => c.minimumOrthogonalSize));\n    }\n    get maximumSize() {\n        return Math.min(...this.children.map((c) => c.maximumOrthogonalSize));\n    }\n    get minimumOrthogonalSize() {\n        return this.splitview.minimumSize;\n    }\n    get maximumOrthogonalSize() {\n        return this.splitview.maximumSize;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    get size() {\n        return this._size;\n    }\n    get minimumWidth() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumOrthogonalSize\n            : this.minimumSize;\n    }\n    get minimumHeight() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumSize\n            : this.minimumOrthogonalSize;\n    }\n    get maximumWidth() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumOrthogonalSize\n            : this.maximumSize;\n    }\n    get maximumHeight() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumSize\n            : this.maximumOrthogonalSize;\n    }\n    get priority() {\n        if (this.children.length === 0) {\n            return LayoutPriority.Normal;\n        }\n        const priorities = this.children.map((c) => typeof c.priority === 'undefined'\n            ? LayoutPriority.Normal\n            : c.priority);\n        if (priorities.some((p) => p === LayoutPriority.High)) {\n            return LayoutPriority.High;\n        }\n        else if (priorities.some((p) => p === LayoutPriority.Low)) {\n            return LayoutPriority.Low;\n        }\n        return LayoutPriority.Normal;\n    }\n    setVisible(visible) {\n        for (const child of this.children) {\n            child.setVisible(visible);\n        }\n    }\n    isChildVisible(index) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        return this.splitview.isViewVisible(index);\n    }\n    setChildVisible(index, visible) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        if (this.splitview.isViewVisible(index) === visible) {\n            return;\n        }\n        this.splitview.setViewVisible(index, visible);\n    }\n    moveChild(from, to) {\n        if (from === to) {\n            return;\n        }\n        if (from < 0 || from >= this.children.length) {\n            throw new Error('Invalid from index');\n        }\n        if (from < to) {\n            to--;\n        }\n        this.splitview.moveView(from, to);\n        const child = this._removeChild(from);\n        this._addChild(child, to);\n    }\n    getChildSize(index) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        return this.splitview.getViewSize(index);\n    }\n    resizeChild(index, size) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        this.splitview.resizeView(index, size);\n    }\n    layout(size, orthogonalSize) {\n        this._size = orthogonalSize;\n        this._orthogonalSize = size;\n        this.splitview.layout(this.size, this.orthogonalSize);\n    }\n    addChild(node, size, index, skipLayout) {\n        if (index < 0 || index > this.children.length) {\n            throw new Error('Invalid index');\n        }\n        this.splitview.addView(node, size, index, skipLayout);\n        this._addChild(node, index);\n    }\n    getChildCachedVisibleSize(index) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        return this.splitview.getViewCachedVisibleSize(index);\n    }\n    removeChild(index, sizing) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        this.splitview.removeView(index, sizing);\n        this._removeChild(index);\n    }\n    _addChild(node, index) {\n        this.children.splice(index, 0, node);\n        this.setupChildrenEvents();\n    }\n    _removeChild(index) {\n        const [child] = this.children.splice(index, 1);\n        this.setupChildrenEvents();\n        return child;\n    }\n    setupChildrenEvents() {\n        this._childrenDisposable.dispose();\n        this._childrenDisposable = Event.any(...this.children.map((c) => c.onDidChange))(() => {\n            /**\n             * indicate a change has occured to allows any re-rendering but don't bubble\n             * event because that was specific to this branch\n             */\n            this._onDidChange.fire(undefined);\n        });\n    }\n    dispose() {\n        super.dispose();\n        this._childrenDisposable.dispose();\n        this.children.forEach((child) => child.dispose());\n        this.splitview.dispose();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/grid\n *--------------------------------------------------------------------------------------------*/\nimport { Orientation, Sizing, } from '../splitview/core/splitview';\nimport { Position } from '../dnd/droptarget';\nimport { tail } from '../array';\nimport { LeafNode } from './leafNode';\nimport { BranchNode } from './branchNode';\nimport { Emitter } from '../events';\nimport { MutableDisposable } from '../lifecycle';\nfunction findLeaf(candiateNode, last) {\n    if (candiateNode instanceof LeafNode) {\n        return candiateNode;\n    }\n    if (candiateNode instanceof BranchNode) {\n        return findLeaf(candiateNode.children[last ? candiateNode.children.length - 1 : 0], last);\n    }\n    throw new Error('invalid node');\n}\nfunction flipNode(node, size, orthogonalSize) {\n    if (node instanceof BranchNode) {\n        const result = new BranchNode(orthogonal(node.orientation), node.proportionalLayout, node.styles, size, orthogonalSize);\n        let totalSize = 0;\n        for (let i = node.children.length - 1; i >= 0; i--) {\n            const child = node.children[i];\n            const childSize = child instanceof BranchNode ? child.orthogonalSize : child.size;\n            let newSize = node.size === 0\n                ? 0\n                : Math.round((size * childSize) / node.size);\n            totalSize += newSize;\n            // The last view to add should adjust to rounding errors\n            if (i === 0) {\n                newSize += size - totalSize;\n            }\n            result.addChild(flipNode(child, orthogonalSize, newSize), newSize, 0, true);\n        }\n        return result;\n    }\n    else {\n        return new LeafNode(node.view, orthogonal(node.orientation), orthogonalSize);\n    }\n}\nexport function indexInParent(element) {\n    const parentElement = element.parentElement;\n    if (!parentElement) {\n        throw new Error('Invalid grid element');\n    }\n    let el = parentElement.firstElementChild;\n    let index = 0;\n    while (el !== element && el !== parentElement.lastElementChild && el) {\n        el = el.nextElementSibling;\n        index++;\n    }\n    return index;\n}\n/**\n * Find the grid location of a specific DOM element by traversing the parent\n * chain and finding each child index on the way.\n *\n * This will break as soon as DOM structures of the Splitview or Gridview change.\n */\nexport function getGridLocation(element) {\n    const parentElement = element.parentElement;\n    if (!parentElement) {\n        throw new Error('Invalid grid element');\n    }\n    if (/\\bgrid-view\\b/.test(parentElement.className)) {\n        return [];\n    }\n    const index = indexInParent(parentElement);\n    const ancestor = parentElement.parentElement.parentElement.parentElement;\n    return [...getGridLocation(ancestor), index];\n}\nexport function getRelativeLocation(rootOrientation, location, direction) {\n    const orientation = getLocationOrientation(rootOrientation, location);\n    const directionOrientation = getDirectionOrientation(direction);\n    if (orientation === directionOrientation) {\n        const [rest, _index] = tail(location);\n        let index = _index;\n        if (direction === Position.Right || direction === Position.Bottom) {\n            index += 1;\n        }\n        return [...rest, index];\n    }\n    else {\n        const index = direction === Position.Right || direction === Position.Bottom\n            ? 1\n            : 0;\n        return [...location, index];\n    }\n}\nexport function getDirectionOrientation(direction) {\n    return direction === Position.Top || direction === Position.Bottom\n        ? Orientation.VERTICAL\n        : Orientation.HORIZONTAL;\n}\nexport function getLocationOrientation(rootOrientation, location) {\n    return location.length % 2 === 0\n        ? orthogonal(rootOrientation)\n        : rootOrientation;\n}\nexport const orthogonal = (orientation) => orientation === Orientation.HORIZONTAL\n    ? Orientation.VERTICAL\n    : Orientation.HORIZONTAL;\nexport function isGridBranchNode(node) {\n    return !!node.children;\n}\nconst serializeBranchNode = (node, orientation) => {\n    const size = orientation === Orientation.VERTICAL ? node.box.width : node.box.height;\n    if (!isGridBranchNode(node)) {\n        if (typeof node.cachedVisibleSize === 'number') {\n            return {\n                type: 'leaf',\n                data: node.view.toJSON(),\n                size: node.cachedVisibleSize,\n                visible: false,\n            };\n        }\n        return { type: 'leaf', data: node.view.toJSON(), size };\n    }\n    return {\n        type: 'branch',\n        data: node.children.map((c) => serializeBranchNode(c, orthogonal(orientation))),\n        size,\n    };\n};\nexport class Gridview {\n    constructor(proportionalLayout, styles, orientation) {\n        this.proportionalLayout = proportionalLayout;\n        this.styles = styles;\n        this.disposable = new MutableDisposable();\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this.element = document.createElement('div');\n        this.element.className = 'grid-view';\n        this.root = new BranchNode(orientation, proportionalLayout, styles, 0, 0);\n    }\n    serialize() {\n        const root = serializeBranchNode(this.getView(), this.orientation);\n        return {\n            root,\n            width: this.width,\n            height: this.height,\n            orientation: this.orientation,\n        };\n    }\n    dispose() {\n        this.disposable.dispose();\n        this._onDidChange.dispose();\n        this.root.dispose();\n        this.element.remove();\n    }\n    clear() {\n        const orientation = this.root.orientation;\n        this.root = new BranchNode(orientation, this.proportionalLayout, this.styles, this.root.size, this.root.orthogonalSize);\n    }\n    deserialize(json, deserializer) {\n        const orientation = json.orientation;\n        const height = orientation === Orientation.VERTICAL ? json.height : json.width;\n        this._deserialize(json.root, orientation, deserializer, height);\n    }\n    _deserialize(root, orientation, deserializer, orthogonalSize) {\n        this.root = this._deserializeNode(root, orientation, deserializer, orthogonalSize, true);\n    }\n    _deserializeNode(node, orientation, deserializer, orthogonalSize, isRoot = false) {\n        let result;\n        if (node.type === 'branch') {\n            const serializedChildren = node.data;\n            const children = serializedChildren.map((serializedChild) => {\n                return {\n                    node: this._deserializeNode(serializedChild, orthogonal(orientation), deserializer, node.size),\n                    visible: serializedChild.visible,\n                };\n            });\n            // HORIZONTAL => height=orthogonalsize width=size\n            // VERTICAL => height=size width=orthogonalsize\n            result = new BranchNode(orientation, this.proportionalLayout, this.styles, isRoot ? orthogonalSize : node.size, isRoot ? node.size : orthogonalSize, children);\n        }\n        else {\n            result = new LeafNode(deserializer.fromJSON(node), orientation, orthogonalSize, node.size);\n        }\n        return result;\n    }\n    get orientation() {\n        return this.root.orientation;\n    }\n    set orientation(orientation) {\n        if (this.root.orientation === orientation) {\n            return;\n        }\n        const { size, orthogonalSize } = this.root;\n        this.root = flipNode(this.root, orthogonalSize, size);\n        this.root.layout(size, orthogonalSize);\n    }\n    get root() {\n        return this._root;\n    }\n    set root(root) {\n        const oldRoot = this._root;\n        if (oldRoot) {\n            oldRoot.dispose();\n            this.element.removeChild(oldRoot.element);\n        }\n        this._root = root;\n        this.element.appendChild(this._root.element);\n        this.disposable.value = this._root.onDidChange((e) => {\n            this._onDidChange.fire(e);\n        });\n    }\n    next(location) {\n        return this.progmaticSelect(location);\n    }\n    previous(location) {\n        return this.progmaticSelect(location, true);\n    }\n    getView(location) {\n        const node = location ? this.getNode(location)[1] : this.root;\n        return this._getViews(node, this.orientation);\n    }\n    _getViews(node, orientation, cachedVisibleSize) {\n        const box = { height: node.height, width: node.width };\n        if (node instanceof LeafNode) {\n            return { box, view: node.view, cachedVisibleSize };\n        }\n        const children = [];\n        for (let i = 0; i < node.children.length; i++) {\n            const child = node.children[i];\n            const nodeCachedVisibleSize = node.getChildCachedVisibleSize(i);\n            children.push(this._getViews(child, orthogonal(orientation), nodeCachedVisibleSize));\n        }\n        return { box, children };\n    }\n    progmaticSelect(location, reverse = false) {\n        const [path, node] = this.getNode(location);\n        if (!(node instanceof LeafNode)) {\n            throw new Error('invalid location');\n        }\n        for (let i = path.length - 1; i > -1; i--) {\n            const n = path[i];\n            const l = location[i] || 0;\n            const canProgressInCurrentLevel = reverse\n                ? l - 1 > -1\n                : l + 1 < n.children.length;\n            if (canProgressInCurrentLevel) {\n                return findLeaf(n.children[reverse ? l - 1 : l + 1], reverse);\n            }\n        }\n        return findLeaf(this.root, reverse);\n    }\n    get width() {\n        return this.root.width;\n    }\n    get height() {\n        return this.root.height;\n    }\n    get minimumWidth() {\n        return this.root.minimumWidth;\n    }\n    get minimumHeight() {\n        return this.root.minimumHeight;\n    }\n    get maximumWidth() {\n        return this.root.maximumHeight;\n    }\n    get maximumHeight() {\n        return this.root.maximumHeight;\n    }\n    isViewVisible(location) {\n        const [rest, index] = tail(location);\n        const [, parent] = this.getNode(rest);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid from location');\n        }\n        return parent.isChildVisible(index);\n    }\n    setViewVisible(location, visible) {\n        const [rest, index] = tail(location);\n        const [, parent] = this.getNode(rest);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid from location');\n        }\n        parent.setChildVisible(index, visible);\n    }\n    moveView(parentLocation, from, to) {\n        const [, parent] = this.getNode(parentLocation);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid location');\n        }\n        parent.moveChild(from, to);\n    }\n    addView(view, size, location) {\n        const [rest, index] = tail(location);\n        const [pathToParent, parent] = this.getNode(rest);\n        if (parent instanceof BranchNode) {\n            const node = new LeafNode(view, orthogonal(parent.orientation), parent.orthogonalSize);\n            parent.addChild(node, size, index);\n        }\n        else {\n            const [grandParent, ..._] = [...pathToParent].reverse();\n            const [parentIndex, ...__] = [...rest].reverse();\n            let newSiblingSize = 0;\n            const newSiblingCachedVisibleSize = grandParent.getChildCachedVisibleSize(parentIndex);\n            if (typeof newSiblingCachedVisibleSize === 'number') {\n                newSiblingSize = Sizing.Invisible(newSiblingCachedVisibleSize);\n            }\n            grandParent.removeChild(parentIndex);\n            const newParent = new BranchNode(parent.orientation, this.proportionalLayout, this.styles, parent.size, parent.orthogonalSize);\n            grandParent.addChild(newParent, parent.size, parentIndex);\n            const newSibling = new LeafNode(parent.view, grandParent.orientation, parent.size);\n            newParent.addChild(newSibling, newSiblingSize, 0);\n            if (typeof size !== 'number' && size.type === 'split') {\n                size = { type: 'split', index: 0 };\n            }\n            const node = new LeafNode(view, grandParent.orientation, parent.size);\n            newParent.addChild(node, size, index);\n        }\n    }\n    remove(view, sizing) {\n        const location = getGridLocation(view.element);\n        return this.removeView(location, sizing);\n    }\n    removeView(location, sizing) {\n        const [rest, index] = tail(location);\n        const [pathToParent, parent] = this.getNode(rest);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid location');\n        }\n        const node = parent.children[index];\n        if (!(node instanceof LeafNode)) {\n            throw new Error('Invalid location');\n        }\n        parent.removeChild(index, sizing);\n        if (parent.children.length === 0) {\n            return node.view;\n        }\n        if (parent.children.length > 1) {\n            return node.view;\n        }\n        const sibling = parent.children[0];\n        if (pathToParent.length === 0) {\n            // parent is root\n            if (sibling instanceof LeafNode) {\n                return node.view;\n            }\n            // we must promote sibling to be the new root\n            parent.removeChild(0, sizing);\n            this.root = sibling;\n            return node.view;\n        }\n        const [grandParent, ..._] = [...pathToParent].reverse();\n        const [parentIndex, ...__] = [...rest].reverse();\n        const isSiblingVisible = parent.isChildVisible(0);\n        parent.removeChild(0, sizing);\n        const sizes = grandParent.children.map((_size, i) => grandParent.getChildSize(i));\n        grandParent.removeChild(parentIndex, sizing);\n        if (sibling instanceof BranchNode) {\n            sizes.splice(parentIndex, 1, ...sibling.children.map((c) => c.size));\n            for (let i = 0; i < sibling.children.length; i++) {\n                const child = sibling.children[i];\n                grandParent.addChild(child, child.size, parentIndex + i);\n            }\n        }\n        else {\n            const newSibling = new LeafNode(sibling.view, orthogonal(sibling.orientation), sibling.size);\n            const siblingSizing = isSiblingVisible\n                ? sibling.orthogonalSize\n                : Sizing.Invisible(sibling.orthogonalSize);\n            grandParent.addChild(newSibling, siblingSizing, parentIndex);\n        }\n        for (let i = 0; i < sizes.length; i++) {\n            grandParent.resizeChild(i, sizes[i]);\n        }\n        return node.view;\n    }\n    layout(width, height) {\n        const [size, orthogonalSize] = this.root.orientation === Orientation.HORIZONTAL\n            ? [height, width]\n            : [width, height];\n        this.root.layout(size, orthogonalSize);\n    }\n    getNode(location, node = this.root, path = []) {\n        if (location.length === 0) {\n            return [path, node];\n        }\n        if (!(node instanceof BranchNode)) {\n            throw new Error('Invalid location');\n        }\n        const [index, ...rest] = location;\n        if (index < 0 || index >= node.children.length) {\n            throw new Error('Invalid location');\n        }\n        const child = node.children[index];\n        path.push(node);\n        return this.getNode(rest, child, path);\n    }\n}\n","export var DockviewDropTargets;\n(function (DockviewDropTargets) {\n    DockviewDropTargets[DockviewDropTargets[\"Tab\"] = 0] = \"Tab\";\n    DockviewDropTargets[DockviewDropTargets[\"Panel\"] = 1] = \"Panel\";\n    DockviewDropTargets[DockviewDropTargets[\"TabContainer\"] = 2] = \"TabContainer\";\n})(DockviewDropTargets || (DockviewDropTargets = {}));\n","import { Emitter } from '../events';\nexport class SplitviewApi {\n    constructor(component) {\n        this.component = component;\n    }\n    get minimumSize() {\n        return this.component.minimumSize;\n    }\n    get maximumSize() {\n        return this.component.maximumSize;\n    }\n    get height() {\n        return this.component.height;\n    }\n    get width() {\n        return this.component.width;\n    }\n    get length() {\n        return this.component.length;\n    }\n    get orientation() {\n        return this.component.orientation;\n    }\n    get panels() {\n        return this.component.panels;\n    }\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    get onDidAddView() {\n        return this.component.onDidAddView;\n    }\n    get onDidRemoveView() {\n        return this.component.onDidRemoveView;\n    }\n    updateOptions(options) {\n        this.component.updateOptions(options);\n    }\n    removePanel(panel, sizing) {\n        this.component.removePanel(panel, sizing);\n    }\n    focus() {\n        this.component.focus();\n    }\n    getPanel(id) {\n        return this.component.getPanel(id);\n    }\n    layout(width, height) {\n        return this.component.layout(width, height);\n    }\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    movePanel(from, to) {\n        this.component.movePanel(from, to);\n    }\n    fromJSON(data) {\n        this.component.fromJSON(data);\n    }\n    toJSON() {\n        return this.component.toJSON();\n    }\n    clear() {\n        this.component.clear();\n    }\n}\nexport class PaneviewApi {\n    constructor(component) {\n        this.component = component;\n    }\n    get minimumSize() {\n        return this.component.minimumSize;\n    }\n    get maximumSize() {\n        return this.component.maximumSize;\n    }\n    get height() {\n        return this.component.height;\n    }\n    get width() {\n        return this.component.width;\n    }\n    get panels() {\n        return this.component.panels;\n    }\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    get onDidAddView() {\n        return this.component.onDidAddView;\n    }\n    get onDidRemoveView() {\n        return this.component.onDidRemoveView;\n    }\n    get onDidDrop() {\n        const emitter = new Emitter();\n        const disposable = this.component.onDidDrop((e) => {\n            emitter.fire(Object.assign(Object.assign({}, e), { api: this }));\n        });\n        emitter.dispose = () => {\n            disposable.dispose();\n            emitter.dispose();\n        };\n        return emitter.event;\n    }\n    removePanel(panel) {\n        this.component.removePanel(panel);\n    }\n    getPanel(id) {\n        return this.component.getPanel(id);\n    }\n    movePanel(from, to) {\n        this.component.movePanel(from, to);\n    }\n    focus() {\n        this.component.focus();\n    }\n    layout(width, height) {\n        this.component.layout(width, height);\n    }\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    fromJSON(data) {\n        this.component.fromJSON(data);\n    }\n    toJSON() {\n        return this.component.toJSON();\n    }\n    clear() {\n        this.component.clear();\n    }\n}\nexport class GridviewApi {\n    constructor(component) {\n        this.component = component;\n    }\n    get minimumHeight() {\n        return this.component.minimumHeight;\n    }\n    get maximumHeight() {\n        return this.component.maximumHeight;\n    }\n    get minimumWidth() {\n        return this.component.minimumWidth;\n    }\n    get maximumWidth() {\n        return this.component.maximumWidth;\n    }\n    get width() {\n        return this.component.width;\n    }\n    get height() {\n        return this.component.height;\n    }\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    get onDidAddPanel() {\n        return this.component.onDidAddGroup;\n    }\n    get onDidRemovePanel() {\n        return this.component.onDidRemoveGroup;\n    }\n    get onDidActivePanelChange() {\n        return this.component.onDidActiveGroupChange;\n    }\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    get panels() {\n        return this.component.groups;\n    }\n    get orientation() {\n        return this.component.orientation;\n    }\n    set orientation(value) {\n        this.component.updateOptions({ orientation: value });\n    }\n    focus() {\n        this.component.focus();\n    }\n    layout(width, height, force = false) {\n        this.component.layout(width, height, force);\n    }\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    removePanel(panel, sizing) {\n        this.component.removePanel(panel, sizing);\n    }\n    movePanel(panel, options) {\n        this.component.movePanel(panel, options);\n    }\n    getPanel(id) {\n        return this.component.getPanel(id);\n    }\n    fromJSON(data) {\n        return this.component.fromJSON(data);\n    }\n    toJSON() {\n        return this.component.toJSON();\n    }\n    clear() {\n        this.component.clear();\n    }\n}\nexport class DockviewApi {\n    constructor(component) {\n        this.component = component;\n    }\n    get width() {\n        return this.component.width;\n    }\n    get height() {\n        return this.component.height;\n    }\n    get minimumHeight() {\n        return this.component.minimumHeight;\n    }\n    get maximumHeight() {\n        return this.component.maximumHeight;\n    }\n    get minimumWidth() {\n        return this.component.minimumWidth;\n    }\n    get maximumWidth() {\n        return this.component.maximumWidth;\n    }\n    get size() {\n        return this.component.size;\n    }\n    get totalPanels() {\n        return this.component.totalPanels;\n    }\n    get onDidActiveGroupChange() {\n        return this.component.onDidActiveGroupChange;\n    }\n    get onDidAddGroup() {\n        return this.component.onDidAddGroup;\n    }\n    get onDidRemoveGroup() {\n        return this.component.onDidRemoveGroup;\n    }\n    get onDidActivePanelChange() {\n        return this.component.onDidActivePanelChange;\n    }\n    get onDidAddPanel() {\n        return this.component.onDidAddPanel;\n    }\n    get onDidRemovePanel() {\n        return this.component.onDidRemovePanel;\n    }\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    get onDidDrop() {\n        return this.component.onDidDrop;\n    }\n    get panels() {\n        return this.component.panels;\n    }\n    get groups() {\n        return this.component.groups;\n    }\n    get activePanel() {\n        return this.component.activePanel;\n    }\n    get activeGroup() {\n        return this.component.activeGroup;\n    }\n    getTabHeight() {\n        return this.component.tabHeight;\n    }\n    setTabHeight(height) {\n        this.component.tabHeight = height;\n    }\n    focus() {\n        this.component.focus();\n    }\n    getPanel(id) {\n        return this.component.getGroupPanel(id);\n    }\n    layout(width, height, force = false) {\n        this.component.layout(width, height, force);\n    }\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    addEmptyGroup(options) {\n        this.component.addEmptyGroup(options);\n    }\n    moveToNext(options) {\n        this.component.moveToNext(options);\n    }\n    moveToPrevious(options) {\n        this.component.moveToPrevious(options);\n    }\n    closeAllGroups() {\n        return this.component.closeAllGroups();\n    }\n    removeGroup(group) {\n        this.component.removeGroup(group);\n    }\n    getGroup(id) {\n        return this.component.getPanel(id);\n    }\n    fromJSON(data) {\n        this.component.fromJSON(data);\n    }\n    toJSON() {\n        return this.component.toJSON();\n    }\n    clear() {\n        this.component.clear();\n    }\n}\n","import { CompositeDisposable, MutableDisposable, } from '../../lifecycle';\nimport { Emitter } from '../../events';\nimport { trackFocus } from '../../dom';\nexport class ContentContainer extends CompositeDisposable {\n    constructor() {\n        super();\n        this.disposable = new MutableDisposable();\n        this._onDidFocus = new Emitter();\n        this.onDidFocus = this._onDidFocus.event;\n        this._onDidBlur = new Emitter();\n        this.onDidBlur = this._onDidBlur.event;\n        this._element = document.createElement('div');\n        this._element.className = 'content-container';\n        this._element.tabIndex = -1;\n        this.addDisposables(this._onDidFocus, this._onDidBlur);\n        // for hosted containers\n        // 1) register a drop target on the host\n        // 2) register window dragStart events to disable pointer events\n        // 3) register dragEnd events\n        // 4) register mouseMove events (if no buttons are present we take this as a dragEnd event)\n    }\n    get element() {\n        return this._element;\n    }\n    show() {\n        this.element.style.display = '';\n    }\n    hide() {\n        this.element.style.display = 'none';\n    }\n    openPanel(panel) {\n        var _a;\n        if (this.panel === panel) {\n            return;\n        }\n        if (this.panel) {\n            if ((_a = this.panel.view) === null || _a === void 0 ? void 0 : _a.content) {\n                this._element.removeChild(this.panel.view.content.element);\n            }\n            this.panel = undefined;\n        }\n        this.panel = panel;\n        const disposable = new CompositeDisposable();\n        if (this.panel.view) {\n            const _onDidFocus = this.panel.view.content.onDidFocus;\n            const _onDidBlur = this.panel.view.content.onDidBlur;\n            const { onDidFocus, onDidBlur } = trackFocus(this._element);\n            disposable.addDisposables(onDidFocus(() => this._onDidFocus.fire()), onDidBlur(() => this._onDidBlur.fire()));\n            if (_onDidFocus) {\n                disposable.addDisposables(_onDidFocus(() => this._onDidFocus.fire()));\n            }\n            if (_onDidBlur) {\n                disposable.addDisposables(_onDidBlur(() => this._onDidBlur.fire()));\n            }\n            this._element.appendChild(this.panel.view.content.element);\n        }\n        this.disposable.value = disposable;\n    }\n    layout(_width, _height) {\n        // noop\n    }\n    closePanel() {\n        var _a, _b, _c;\n        if ((_c = (_b = (_a = this.panel) === null || _a === void 0 ? void 0 : _a.view) === null || _b === void 0 ? void 0 : _b.content) === null || _c === void 0 ? void 0 : _c.element) {\n            this._element.removeChild(this.panel.view.content.element);\n            this.panel = undefined;\n        }\n    }\n    dispose() {\n        this.disposable.dispose();\n        super.dispose();\n    }\n}\n","import { getElementsByTagName } from '../dom';\nimport { addDisposableListener, Emitter } from '../events';\nimport { CompositeDisposable, MutableDisposable, } from '../lifecycle';\nexport class DragHandler extends CompositeDisposable {\n    constructor(el) {\n        super();\n        this.el = el;\n        this.disposable = new MutableDisposable();\n        this._onDragStart = new Emitter();\n        this.onDragStart = this._onDragStart.event;\n        this.iframes = [];\n        this.configure();\n    }\n    configure() {\n        this.addDisposables(this._onDragStart, addDisposableListener(this.el, 'dragstart', (event) => {\n            this.iframes = [\n                ...getElementsByTagName('iframe'),\n                ...getElementsByTagName('webview'),\n            ];\n            for (const iframe of this.iframes) {\n                iframe.style.pointerEvents = 'none';\n            }\n            this.el.classList.add('dragged');\n            setTimeout(() => this.el.classList.remove('dragged'), 0);\n            this.disposable.value = this.getData();\n            if (event.dataTransfer) {\n                event.dataTransfer.effectAllowed = 'move';\n            }\n        }), addDisposableListener(this.el, 'dragend', () => {\n            for (const iframe of this.iframes) {\n                iframe.style.pointerEvents = 'auto';\n            }\n            this.iframes = [];\n            this.disposable.dispose();\n        }));\n    }\n}\n","import { addDisposableListener, Emitter } from '../events';\nimport { CompositeDisposable } from '../lifecycle';\nimport { getPanelData, LocalSelectionTransfer, PanelTransfer, } from '../dnd/dataTransfer';\nimport { toggleClass } from '../dom';\nimport { Droptarget } from '../dnd/droptarget';\nimport { DockviewDropTargets } from './dnd';\nimport { DragHandler } from '../dnd/abstractDragHandler';\nexport var MouseEventKind;\n(function (MouseEventKind) {\n    MouseEventKind[\"CLICK\"] = \"CLICK\";\n    MouseEventKind[\"CONTEXT_MENU\"] = \"CONTEXT_MENU\";\n})(MouseEventKind || (MouseEventKind = {}));\nexport class Tab extends CompositeDisposable {\n    constructor(panelId, accessor, group) {\n        super();\n        this.panelId = panelId;\n        this.group = group;\n        this._onChanged = new Emitter();\n        this.onChanged = this._onChanged.event;\n        this._onDropped = new Emitter();\n        this.onDrop = this._onDropped.event;\n        this.addDisposables(this._onChanged, this._onDropped);\n        this._element = document.createElement('div');\n        this._element.className = 'tab';\n        this._element.tabIndex = 0;\n        this._element.draggable = true;\n        toggleClass(this.element, 'inactive-tab', true);\n        this.addDisposables(new (class Handler extends DragHandler {\n            constructor() {\n                super(...arguments);\n                this.panelTransfer = LocalSelectionTransfer.getInstance();\n            }\n            getData() {\n                this.panelTransfer.setData([new PanelTransfer(accessor.id, group.id, panelId)], PanelTransfer.prototype);\n                return {\n                    dispose: () => {\n                        this.panelTransfer.clearData(PanelTransfer.prototype);\n                    },\n                };\n            }\n            dispose() {\n                //\n            }\n        })(this._element));\n        this.addDisposables(addDisposableListener(this._element, 'mousedown', (event) => {\n            if (event.defaultPrevented) {\n                return;\n            }\n            /**\n             * TODO: alternative to stopPropagation\n             *\n             * I need to stop the event propagation here since otherwise it'll be intercepted by event handlers\n             * on the tabs-container. I cannot use event.preventDefault() since I need the on DragStart event to occur\n             */\n            event.stopPropagation();\n            this._onChanged.fire({ kind: MouseEventKind.CLICK, event });\n        }), addDisposableListener(this._element, 'contextmenu', (event) => {\n            this._onChanged.fire({\n                kind: MouseEventKind.CONTEXT_MENU,\n                event,\n            });\n        }));\n        this.droptarget = new Droptarget(this._element, {\n            validOverlays: 'none',\n            canDisplayOverlay: (event) => {\n                const data = getPanelData();\n                if (data) {\n                    return this.panelId !== data.panelId;\n                }\n                return this.group.model.canDisplayOverlay(event, DockviewDropTargets.Tab);\n            },\n        });\n        this.addDisposables(this.droptarget.onDrop((event) => {\n            this._onDropped.fire(event);\n        }));\n    }\n    get element() {\n        return this._element;\n    }\n    setActive(isActive) {\n        toggleClass(this.element, 'active-tab', isActive);\n        toggleClass(this.element, 'inactive-tab', !isActive);\n    }\n    setContent(part) {\n        if (this.content) {\n            this._element.removeChild(this.content.element);\n        }\n        this.content = part;\n        this._element.appendChild(this.content.element);\n    }\n    dispose() {\n        super.dispose();\n        this.droptarget.dispose();\n    }\n}\n","import { DockviewApi } from '../api/component.api';\nimport { getPanelData } from '../dnd/dataTransfer';\nimport { Droptarget, Position } from '../dnd/droptarget';\nimport { isAncestor, toggleClass } from '../dom';\nimport { addDisposableListener, Emitter } from '../events';\nimport { CompositeDisposable } from '../lifecycle';\nimport { ContentContainer } from './panel/content';\nimport { TabsContainer } from './titlebar/tabsContainer';\nimport { DockviewDropTargets } from './dnd';\nexport var GroupChangeKind2;\n(function (GroupChangeKind2) {\n    GroupChangeKind2[\"ADD_PANEL\"] = \"ADD_PANEL\";\n    GroupChangeKind2[\"REMOVE_PANEL\"] = \"REMOVE_PANEL\";\n    GroupChangeKind2[\"PANEL_ACTIVE\"] = \"PANEL_ACTIVE\";\n})(GroupChangeKind2 || (GroupChangeKind2 = {}));\nexport class Groupview extends CompositeDisposable {\n    constructor(container, accessor, id, options, parent) {\n        super();\n        this.container = container;\n        this.accessor = accessor;\n        this.id = id;\n        this.options = options;\n        this.parent = parent;\n        this._isGroupActive = false;\n        this._locked = false;\n        this.mostRecentlyUsed = [];\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._width = 0;\n        this._height = 0;\n        this._panels = [];\n        this._onMove = new Emitter();\n        this.onMove = this._onMove.event;\n        this._onDidGroupChange = new Emitter();\n        this.onDidGroupChange = this._onDidGroupChange.event;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this.container.classList.add('groupview');\n        this.addDisposables(this._onMove, this._onDidGroupChange, this._onDidChange, this._onDidDrop);\n        this.tabsContainer = new TabsContainer(this.accessor, this.parent, {\n            tabHeight: options.tabHeight,\n        });\n        this.contentContainer = new ContentContainer();\n        this.dropTarget = new Droptarget(this.contentContainer.element, {\n            validOverlays: 'all',\n            canDisplayOverlay: (event, quadrant) => {\n                if (this.locked && !quadrant) {\n                    return false;\n                }\n                const data = getPanelData();\n                if (data) {\n                    const groupHasOnePanelAndIsActiveDragElement = this._panels.length === 1 && data.groupId === this.id;\n                    return !groupHasOnePanelAndIsActiveDragElement;\n                }\n                return this.canDisplayOverlay(event, DockviewDropTargets.Panel);\n            },\n        });\n        container.append(this.tabsContainer.element, this.contentContainer.element);\n        this.header.hidden = !!options.hideHeader;\n        this.locked = !!options.locked;\n        this.addDisposables(this._onMove, this._onDidGroupChange, this.tabsContainer.onDrop((event) => {\n            this.handleDropEvent(event.event, Position.Center, event.index);\n        }), this.contentContainer.onDidFocus(() => {\n            this.accessor.doSetGroupActive(this.parent, true);\n        }), this.contentContainer.onDidBlur(() => {\n            // noop\n        }), this.dropTarget.onDrop((event) => {\n            this.handleDropEvent(event.nativeEvent, event.position);\n        }));\n    }\n    get element() {\n        throw new Error('not supported');\n    }\n    get activePanel() {\n        return this._activePanel;\n    }\n    get locked() {\n        return this._locked;\n    }\n    set locked(value) {\n        this._locked = value;\n    }\n    get isActive() {\n        return this._isGroupActive;\n    }\n    get panels() {\n        return this._panels;\n    }\n    get size() {\n        return this._panels.length;\n    }\n    get isEmpty() {\n        return this._panels.length === 0;\n    }\n    get minimumHeight() {\n        return 100;\n    }\n    get maximumHeight() {\n        return Number.MAX_SAFE_INTEGER;\n    }\n    get minimumWidth() {\n        return 100;\n    }\n    get maximumWidth() {\n        return Number.MAX_SAFE_INTEGER;\n    }\n    get hasWatermark() {\n        return !!(this.watermark && this.container.contains(this.watermark.element));\n    }\n    get header() {\n        return this.tabsContainer;\n    }\n    get isContentFocused() {\n        if (!document.activeElement) {\n            return false;\n        }\n        return isAncestor(document.activeElement, this.contentContainer.element);\n    }\n    initialize() {\n        var _a, _b;\n        if ((_a = this.options) === null || _a === void 0 ? void 0 : _a.panels) {\n            this.options.panels.forEach((panel) => {\n                this.doAddPanel(panel);\n            });\n        }\n        if ((_b = this.options) === null || _b === void 0 ? void 0 : _b.activePanel) {\n            this.openPanel(this.options.activePanel);\n        }\n        // must be run after the constructor otherwise this.parent may not be\n        // correctly initialized\n        this.setActive(this.isActive, true, true);\n        this.updateContainer();\n    }\n    indexOf(panel) {\n        return this.tabsContainer.indexOf(panel.id);\n    }\n    toJSON() {\n        var _a;\n        const result = {\n            views: this.tabsContainer.panels,\n            activeView: (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.id,\n            id: this.id,\n        };\n        if (this.locked) {\n            result.locked = true;\n        }\n        if (this.header.hidden) {\n            result.hideHeader = true;\n        }\n        return result;\n    }\n    moveToNext(options) {\n        if (!options) {\n            options = {};\n        }\n        if (!options.panel) {\n            options.panel = this.activePanel;\n        }\n        const index = options.panel ? this.panels.indexOf(options.panel) : -1;\n        let normalizedIndex;\n        if (index < this.panels.length - 1) {\n            normalizedIndex = index + 1;\n        }\n        else if (!options.suppressRoll) {\n            normalizedIndex = 0;\n        }\n        else {\n            return;\n        }\n        this.openPanel(this.panels[normalizedIndex]);\n    }\n    moveToPrevious(options) {\n        if (!options) {\n            options = {};\n        }\n        if (!options.panel) {\n            options.panel = this.activePanel;\n        }\n        if (!options.panel) {\n            return;\n        }\n        const index = this.panels.indexOf(options.panel);\n        let normalizedIndex;\n        if (index > 0) {\n            normalizedIndex = index - 1;\n        }\n        else if (!options.suppressRoll) {\n            normalizedIndex = this.panels.length - 1;\n        }\n        else {\n            return;\n        }\n        this.openPanel(this.panels[normalizedIndex]);\n    }\n    containsPanel(panel) {\n        return this.panels.includes(panel);\n    }\n    init(_params) {\n        //noop\n    }\n    update(_params) {\n        //noop\n    }\n    focus() {\n        var _a;\n        (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    openPanel(panel, options = {}) {\n        if (typeof options.index !== 'number' ||\n            options.index > this.panels.length) {\n            options.index = this.panels.length;\n        }\n        const skipSetPanelActive = !!options.skipSetPanelActive;\n        const skipSetGroupActive = !!options.skipSetGroupActive;\n        // ensure the group is updated before we fire any events\n        panel.updateParentGroup(this.parent, true);\n        if (this._activePanel === panel) {\n            if (!skipSetGroupActive) {\n                this.accessor.doSetGroupActive(this.parent);\n            }\n            return;\n        }\n        this.doAddPanel(panel, options.index, skipSetPanelActive);\n        if (!skipSetPanelActive) {\n            this.doSetActivePanel(panel);\n        }\n        if (!skipSetGroupActive) {\n            this.accessor.doSetGroupActive(this.parent, !!options.skipFocus);\n        }\n        this.updateContainer();\n    }\n    removePanel(groupItemOrId) {\n        const id = typeof groupItemOrId === 'string'\n            ? groupItemOrId\n            : groupItemOrId.id;\n        const panelToRemove = this._panels.find((panel) => panel.id === id);\n        if (!panelToRemove) {\n            throw new Error('invalid operation');\n        }\n        return this._removePanel(panelToRemove);\n    }\n    closeAllPanels() {\n        if (this.panels.length > 0) {\n            // take a copy since we will be edting the array as we iterate through\n            const arrPanelCpy = [...this.panels];\n            for (const panel of arrPanelCpy) {\n                this.doClose(panel);\n            }\n        }\n        else {\n            this.accessor.removeGroup(this.parent);\n        }\n    }\n    closePanel(panel) {\n        this.doClose(panel);\n    }\n    doClose(panel) {\n        this.accessor.removePanel(panel);\n    }\n    isPanelActive(panel) {\n        return this._activePanel === panel;\n    }\n    updateActions() {\n        var _a, _b;\n        if (this.isActive && ((_b = (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.view) === null || _b === void 0 ? void 0 : _b.actions)) {\n            this.tabsContainer.setActionElement(this._activePanel.view.actions.element);\n        }\n        else {\n            this.tabsContainer.setActionElement(undefined);\n        }\n    }\n    setActive(isGroupActive, skipFocus = false, force = false) {\n        var _a, _b;\n        if (!force && this.isActive === isGroupActive) {\n            if (!skipFocus) {\n                (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.focus();\n            }\n            return;\n        }\n        this._isGroupActive = isGroupActive;\n        toggleClass(this.container, 'active-group', isGroupActive);\n        toggleClass(this.container, 'inactive-group', !isGroupActive);\n        this.tabsContainer.setActive(this.isActive);\n        if (!this._activePanel && this.panels.length > 0) {\n            this.doSetActivePanel(this.panels[0]);\n        }\n        this.updateContainer();\n        if (isGroupActive) {\n            if (!skipFocus) {\n                (_b = this._activePanel) === null || _b === void 0 ? void 0 : _b.focus();\n            }\n        }\n    }\n    layout(width, height) {\n        var _a;\n        this._width = width;\n        this._height = height;\n        this.contentContainer.layout(this._width, this._height);\n        if ((_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.layout) {\n            this._activePanel.layout(this._width, this._height);\n        }\n    }\n    _removePanel(panel) {\n        const isActivePanel = this._activePanel === panel;\n        this.doRemovePanel(panel);\n        if (isActivePanel && this.panels.length > 0) {\n            const nextPanel = this.mostRecentlyUsed[0];\n            this.openPanel(nextPanel);\n        }\n        if (this._activePanel && this.panels.length === 0) {\n            this.doSetActivePanel(undefined);\n        }\n        this.updateContainer();\n        return panel;\n    }\n    doRemovePanel(panel) {\n        const index = this.panels.indexOf(panel);\n        if (this._activePanel === panel) {\n            this.contentContainer.closePanel();\n        }\n        this.tabsContainer.delete(panel.id);\n        this._panels.splice(index, 1);\n        if (this.mostRecentlyUsed.includes(panel)) {\n            this.mostRecentlyUsed.splice(this.mostRecentlyUsed.indexOf(panel), 1);\n        }\n        this._onDidGroupChange.fire({\n            kind: GroupChangeKind2.REMOVE_PANEL,\n            panel,\n        });\n    }\n    doAddPanel(panel, index = this.panels.length, skipSetActive = false) {\n        const existingPanel = this._panels.indexOf(panel);\n        const hasExistingPanel = existingPanel > -1;\n        this.tabsContainer.openPanel(panel, index);\n        if (!skipSetActive) {\n            this.contentContainer.openPanel(panel);\n        }\n        this.tabsContainer.show();\n        this.contentContainer.show();\n        if (hasExistingPanel) {\n            // TODO - need to ensure ordering hasn't changed and if it has need to re-order this.panels\n            return;\n        }\n        this.updateMru(panel);\n        this.panels.splice(index, 0, panel);\n        this._onDidGroupChange.fire({\n            kind: GroupChangeKind2.ADD_PANEL,\n            panel,\n        });\n    }\n    doSetActivePanel(panel) {\n        this._activePanel = panel;\n        if (panel) {\n            this.tabsContainer.setActivePanel(panel);\n            panel.layout(this._width, this._height);\n            this.updateMru(panel);\n            this._onDidGroupChange.fire({\n                kind: GroupChangeKind2.PANEL_ACTIVE,\n                panel,\n            });\n        }\n    }\n    updateMru(panel) {\n        if (this.mostRecentlyUsed.includes(panel)) {\n            this.mostRecentlyUsed.splice(this.mostRecentlyUsed.indexOf(panel), 1);\n        }\n        this.mostRecentlyUsed = [panel, ...this.mostRecentlyUsed];\n    }\n    updateContainer() {\n        this.updateActions();\n        toggleClass(this.container, 'empty', this.isEmpty);\n        this.panels.forEach((panel) => panel.updateParentGroup(this.parent, this.isActive));\n        if (this.isEmpty && !this.watermark) {\n            const watermark = this.accessor.createWatermarkComponent();\n            watermark.init({\n                containerApi: new DockviewApi(this.accessor),\n                params: {},\n                title: '',\n                api: null,\n            });\n            this.watermark = watermark;\n            addDisposableListener(this.watermark.element, 'click', () => {\n                if (!this.isActive) {\n                    this.accessor.doSetGroupActive(this.parent);\n                }\n            });\n            this.contentContainer.hide();\n            this.tabsContainer.hide();\n            this.container.appendChild(this.watermark.element);\n            this.watermark.updateParentGroup(this.parent, true);\n        }\n        if (!this.isEmpty && this.watermark) {\n            this.watermark.element.remove();\n            this.watermark.dispose();\n            this.watermark = undefined;\n            this.contentContainer.show();\n            this.tabsContainer.show();\n        }\n    }\n    canDisplayOverlay(event, target) {\n        // custom overlay handler\n        if (this.accessor.options.showDndOverlay) {\n            return this.accessor.options.showDndOverlay({\n                nativeEvent: event,\n                target,\n                group: this.accessor.getPanel(this.id),\n            });\n        }\n        return false;\n    }\n    handleDropEvent(event, position, index) {\n        const data = getPanelData();\n        if (data) {\n            const fromSameGroup = this.tabsContainer.indexOf(data.panelId) !== -1;\n            if (fromSameGroup && this.tabsContainer.size === 1) {\n                return;\n            }\n            const { groupId, panelId } = data;\n            const isSameGroup = this.id === groupId;\n            if (isSameGroup && !position) {\n                const oldIndex = this.tabsContainer.indexOf(panelId);\n                if (oldIndex === index) {\n                    return;\n                }\n            }\n            this._onMove.fire({\n                target: position,\n                groupId: data.groupId,\n                itemId: data.panelId,\n                index,\n            });\n        }\n        else {\n            this._onDidDrop.fire({\n                nativeEvent: event,\n                position,\n                index,\n                getData: () => getPanelData(),\n            });\n        }\n    }\n    dispose() {\n        var _a;\n        super.dispose();\n        (_a = this.watermark) === null || _a === void 0 ? void 0 : _a.dispose();\n        for (const panel of this.panels) {\n            panel.dispose();\n        }\n        this.dropTarget.dispose();\n        this.tabsContainer.dispose();\n        this.contentContainer.dispose();\n    }\n}\n","import { CompositeDisposable, } from '../../lifecycle';\nimport { addDisposableListener, Emitter } from '../../events';\nimport { MouseEventKind, Tab } from '../tab';\nimport { last } from '../../array';\nimport { getPanelData } from '../../dnd/dataTransfer';\nimport { Droptarget } from '../../dnd/droptarget';\nimport { DockviewDropTargets } from '../dnd';\nexport class TabsContainer extends CompositeDisposable {\n    constructor(accessor, group, options) {\n        super();\n        this.accessor = accessor;\n        this.group = group;\n        this.tabs = [];\n        this.selectedIndex = -1;\n        this._hidden = false;\n        this._onDrop = new Emitter();\n        this.onDrop = this._onDrop.event;\n        this.addDisposables(this._onDrop);\n        this._element = document.createElement('div');\n        this._element.className = 'tabs-and-actions-container';\n        this.height = options.tabHeight;\n        this.actionContainer = document.createElement('div');\n        this.actionContainer.className = 'action-container';\n        this.tabContainer = document.createElement('div');\n        this.tabContainer.className = 'tabs-container';\n        this.voidContainer = document.createElement('div');\n        this.voidContainer.className = 'void-container';\n        this._element.appendChild(this.tabContainer);\n        this._element.appendChild(this.voidContainer);\n        this._element.appendChild(this.actionContainer);\n        this.voidDropTarget = new Droptarget(this.voidContainer, {\n            validOverlays: 'none',\n            canDisplayOverlay: (event) => {\n                var _a;\n                const data = getPanelData();\n                if (data) {\n                    // don't show the overlay if the tab being dragged is the last panel of this group\n                    return ((_a = last(this.tabs)) === null || _a === void 0 ? void 0 : _a.value.panelId) !== data.panelId;\n                }\n                return group.model.canDisplayOverlay(event, DockviewDropTargets.Panel);\n            },\n        });\n        this.addDisposables(this.voidDropTarget.onDrop((event) => {\n            this._onDrop.fire({\n                event: event.nativeEvent,\n                index: this.tabs.length,\n            });\n        }), this.voidDropTarget, addDisposableListener(this.tabContainer, 'mousedown', (event) => {\n            if (event.defaultPrevented) {\n                return;\n            }\n            const isLeftClick = event.button === 0;\n            if (isLeftClick) {\n                this.accessor.doSetGroupActive(this.group);\n            }\n        }));\n    }\n    get panels() {\n        return this.tabs.map((_) => _.value.panelId);\n    }\n    get size() {\n        return this.tabs.length;\n    }\n    get height() {\n        return this._height;\n    }\n    set height(value) {\n        this._height = value;\n        if (typeof value !== 'number') {\n            this.element.style.removeProperty('--dv-tabs-and-actions-container-height');\n        }\n        else {\n            this.element.style.setProperty('--dv-tabs-and-actions-container-height', `${value}px`);\n        }\n    }\n    get hidden() {\n        return this._hidden;\n    }\n    set hidden(value) {\n        this._hidden = value;\n        this.element.style.display = value ? 'none' : '';\n    }\n    show() {\n        if (!this.hidden) {\n            this.element.style.display = '';\n        }\n    }\n    hide() {\n        this._element.style.display = 'none';\n    }\n    setActionElement(element) {\n        if (this.actions === element) {\n            return;\n        }\n        if (this.actions) {\n            this.actions.remove();\n            this.actions = undefined;\n        }\n        if (element) {\n            this.actionContainer.appendChild(element);\n            this.actions = element;\n        }\n    }\n    get element() {\n        return this._element;\n    }\n    isActive(tab) {\n        return (this.selectedIndex > -1 &&\n            this.tabs[this.selectedIndex].value === tab);\n    }\n    at(index) {\n        var _a;\n        return (_a = this.tabs[index]) === null || _a === void 0 ? void 0 : _a.value;\n    }\n    indexOf(id) {\n        return this.tabs.findIndex((tab) => tab.value.panelId === id);\n    }\n    setActive(_isGroupActive) {\n        // noop\n    }\n    addTab(tab, index = this.tabs.length) {\n        if (index < 0 || index > this.tabs.length) {\n            throw new Error('invalid location');\n        }\n        this.tabContainer.insertBefore(tab.value.element, this.tabContainer.children[index]);\n        this.tabs = [\n            ...this.tabs.slice(0, index),\n            tab,\n            ...this.tabs.slice(index),\n        ];\n        if (this.selectedIndex < 0) {\n            this.selectedIndex = index;\n        }\n    }\n    delete(id) {\n        const index = this.tabs.findIndex((tab) => tab.value.panelId === id);\n        const tabToRemove = this.tabs.splice(index, 1)[0];\n        const { value, disposable } = tabToRemove;\n        disposable.dispose();\n        value.element.remove();\n    }\n    setActivePanel(panel) {\n        this.tabs.forEach((tab) => {\n            const isActivePanel = panel.id === tab.value.panelId;\n            tab.value.setActive(isActivePanel);\n        });\n    }\n    openPanel(panel, index = this.tabs.length) {\n        var _a;\n        if (this.tabs.find((tab) => tab.value.panelId === panel.id)) {\n            return;\n        }\n        const tabToAdd = new Tab(panel.id, this.accessor, this.group);\n        if (!((_a = panel.view) === null || _a === void 0 ? void 0 : _a.tab)) {\n            throw new Error('invalid header component');\n        }\n        tabToAdd.setContent(panel.view.tab);\n        const disposable = CompositeDisposable.from(tabToAdd.onChanged((event) => {\n            var _a;\n            const alreadyFocused = panel.id === ((_a = this.group.model.activePanel) === null || _a === void 0 ? void 0 : _a.id) &&\n                this.group.model.isContentFocused;\n            this.accessor.fireMouseEvent(Object.assign(Object.assign({}, event), { panel, tab: true }));\n            const isLeftClick = event.event.button === 0;\n            if (!isLeftClick || event.event.defaultPrevented) {\n                return;\n            }\n            if (event.kind === MouseEventKind.CLICK) {\n                this.group.model.openPanel(panel, {\n                    skipFocus: alreadyFocused,\n                });\n            }\n        }), tabToAdd.onDrop((event) => {\n            this._onDrop.fire({\n                event: event.nativeEvent,\n                index: this.tabs.findIndex((x) => x.value === tabToAdd),\n            });\n        }));\n        const value = { value: tabToAdd, disposable };\n        this.addTab(value, index);\n    }\n    closePanel(panel) {\n        this.delete(panel.id);\n    }\n    dispose() {\n        super.dispose();\n        this.tabs.forEach((tab) => {\n            tab.disposable.dispose();\n        });\n        this.tabs = [];\n    }\n}\n","import { Emitter, Event, TickDelayedEvent } from '../events';\nimport { getGridLocation, Gridview } from './gridview';\nimport { Position } from '../dnd/droptarget';\nimport { CompositeDisposable } from '../lifecycle';\nimport { sequentialNumberGenerator } from '../math';\nimport { Sizing, } from '../splitview/core/splitview';\nconst nextLayoutId = sequentialNumberGenerator();\nexport function toTarget(direction) {\n    switch (direction) {\n        case 'left':\n            return Position.Left;\n        case 'right':\n            return Position.Right;\n        case 'above':\n            return Position.Top;\n        case 'below':\n            return Position.Bottom;\n        case 'within':\n        default:\n            return Position.Center;\n    }\n}\nexport class BaseGrid extends CompositeDisposable {\n    constructor(_element, options) {\n        super();\n        this._element = _element;\n        this._id = nextLayoutId.next();\n        this._groups = new Map();\n        this._onDidLayoutChange = new Emitter();\n        this.onDidLayoutChange = this._onDidLayoutChange.event;\n        this._onDidRemoveGroup = new Emitter();\n        this.onDidRemoveGroup = this._onDidRemoveGroup.event;\n        this._onDidAddGroup = new Emitter();\n        this.onDidAddGroup = this._onDidAddGroup.event;\n        this._onDidActiveGroupChange = new Emitter();\n        this.onDidActiveGroupChange = this._onDidActiveGroupChange.event;\n        this._bufferOnDidLayoutChange = new TickDelayedEvent();\n        this.gridview = new Gridview(!!options.proportionalLayout, options.styles, options.orientation);\n        this.element.appendChild(this.gridview.element);\n        this.layout(0, 0, true); // set some elements height/widths\n        this.addDisposables(this.gridview.onDidChange(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }));\n        this.addDisposables(Event.any(this.onDidAddGroup, this.onDidRemoveGroup, this.onDidActiveGroupChange)(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), this._bufferOnDidLayoutChange.onEvent(() => {\n            this._onDidLayoutChange.fire();\n        }), this._bufferOnDidLayoutChange);\n    }\n    get id() {\n        return this._id;\n    }\n    get element() {\n        return this._element;\n    }\n    get size() {\n        return this._groups.size;\n    }\n    get groups() {\n        return Array.from(this._groups.values()).map((_) => _.value);\n    }\n    get width() {\n        return this.gridview.width;\n    }\n    get height() {\n        return this.gridview.height;\n    }\n    get minimumHeight() {\n        return this.gridview.minimumHeight;\n    }\n    get maximumHeight() {\n        return this.gridview.maximumHeight;\n    }\n    get minimumWidth() {\n        return this.gridview.minimumWidth;\n    }\n    get maximumWidth() {\n        return this.gridview.maximumWidth;\n    }\n    get activeGroup() {\n        return this._activeGroup;\n    }\n    setVisible(panel, visible) {\n        this.gridview.setViewVisible(getGridLocation(panel.element), visible);\n        this._onDidLayoutChange.fire();\n    }\n    isVisible(panel) {\n        return this.gridview.isViewVisible(getGridLocation(panel.element));\n    }\n    doAddGroup(group, location = [0], size) {\n        this.gridview.addView(group, size !== null && size !== void 0 ? size : Sizing.Distribute, location);\n        this._onDidAddGroup.fire(group);\n        this.doSetGroupActive(group);\n    }\n    doRemoveGroup(group, options) {\n        if (!this._groups.has(group.id)) {\n            throw new Error('invalid operation');\n        }\n        const item = this._groups.get(group.id);\n        const view = this.gridview.remove(group, Sizing.Distribute);\n        if (item && !(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n            item.disposable.dispose();\n            item.value.dispose();\n            this._groups.delete(group.id);\n        }\n        this._onDidRemoveGroup.fire(group);\n        if (!(options === null || options === void 0 ? void 0 : options.skipActive) && this._activeGroup === group) {\n            const groups = Array.from(this._groups.values());\n            this.doSetGroupActive(groups.length > 0 ? groups[0].value : undefined);\n        }\n        return view;\n    }\n    getPanel(id) {\n        var _a;\n        return (_a = this._groups.get(id)) === null || _a === void 0 ? void 0 : _a.value;\n    }\n    doSetGroupActive(group, skipFocus) {\n        if (this._activeGroup === group) {\n            return;\n        }\n        if (this._activeGroup) {\n            this._activeGroup.setActive(false);\n            if (!skipFocus) {\n                this._activeGroup.focus();\n            }\n        }\n        if (group) {\n            group.setActive(true);\n            if (!skipFocus) {\n                group.focus();\n            }\n        }\n        this._activeGroup = group;\n        this._onDidActiveGroupChange.fire(group);\n    }\n    removeGroup(group) {\n        this.doRemoveGroup(group);\n    }\n    moveToNext(options) {\n        var _a;\n        if (!options) {\n            options = {};\n        }\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.next(location)) === null || _a === void 0 ? void 0 : _a.view;\n        this.doSetGroupActive(next);\n    }\n    moveToPrevious(options) {\n        var _a;\n        if (!options) {\n            options = {};\n        }\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.previous(location)) === null || _a === void 0 ? void 0 : _a.view;\n        this.doSetGroupActive(next);\n    }\n    layout(width, height, forceResize) {\n        const different = forceResize || width !== this.width || height !== this.height;\n        if (!different) {\n            return;\n        }\n        this.element.style.height = `${height}px`;\n        this.element.style.width = `${width}px`;\n        this.gridview.layout(width, height);\n    }\n    dispose() {\n        super.dispose();\n        this._onDidActiveGroupChange.dispose();\n        this._onDidAddGroup.dispose();\n        this._onDidRemoveGroup.dispose();\n        this._onDidLayoutChange.dispose();\n        for (const group of this.groups) {\n            group.dispose();\n        }\n        this.gridview.dispose();\n    }\n}\n","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","import { Emitter } from '../events';\nimport { CompositeDisposable } from '../lifecycle';\n/**\n * A core api implementation that should be used across all panel-like objects\n */\nexport class PanelApiImpl extends CompositeDisposable {\n    constructor(id) {\n        super();\n        this.id = id;\n        this._isFocused = false;\n        this._isActive = false;\n        this._isVisible = true;\n        this._width = 0;\n        this._height = 0;\n        this._onDidDimensionChange = new Emitter({\n            replay: true,\n        });\n        this.onDidDimensionsChange = this._onDidDimensionChange.event;\n        //\n        this._onDidChangeFocus = new Emitter({\n            replay: true,\n        });\n        this.onDidFocusChange = this._onDidChangeFocus.event;\n        //\n        this._onFocusEvent = new Emitter();\n        this.onFocusEvent = this._onFocusEvent.event;\n        //\n        this._onDidVisibilityChange = new Emitter({\n            replay: true,\n        });\n        this.onDidVisibilityChange = this._onDidVisibilityChange.event;\n        //\n        this._onVisibilityChange = new Emitter();\n        this.onVisibilityChange = this._onVisibilityChange.event;\n        //\n        this._onDidActiveChange = new Emitter({\n            replay: true,\n        });\n        this.onDidActiveChange = this._onDidActiveChange.event;\n        //\n        this._onActiveChange = new Emitter();\n        this.onActiveChange = this._onActiveChange.event;\n        this.addDisposables(this._onDidDimensionChange, this._onDidChangeFocus, this._onDidVisibilityChange, this._onDidActiveChange, this._onFocusEvent, this._onActiveChange, this._onVisibilityChange, this.onDidFocusChange((event) => {\n            this._isFocused = event.isFocused;\n        }), this.onDidActiveChange((event) => {\n            this._isActive = event.isActive;\n        }), this.onDidVisibilityChange((event) => {\n            this._isVisible = event.isVisible;\n        }), this.onDidDimensionsChange((event) => {\n            this._width = event.width;\n            this._height = event.height;\n        }));\n    }\n    //\n    get isFocused() {\n        return this._isFocused;\n    }\n    get isActive() {\n        return this._isActive;\n    }\n    get isVisible() {\n        return this._isVisible;\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    setVisible(isVisible) {\n        this._onVisibilityChange.fire({ isVisible });\n    }\n    setActive() {\n        this._onActiveChange.fire();\n    }\n    dispose() {\n        super.dispose();\n    }\n}\n","import { Emitter } from '../events';\nimport { PanelApiImpl } from './panelApi';\nexport class GridviewPanelApiImpl extends PanelApiImpl {\n    //\n    constructor(id) {\n        super(id);\n        this._onDidConstraintsChangeInternal = new Emitter();\n        this.onDidConstraintsChangeInternal = this._onDidConstraintsChangeInternal.event;\n        //\n        this._onDidConstraintsChange = new Emitter({\n            replay: true,\n        });\n        this.onDidConstraintsChange = this._onDidConstraintsChange.event;\n        //\n        this._onDidSizeChange = new Emitter();\n        this.onDidSizeChange = this._onDidSizeChange.event;\n        this.addDisposables(this._onDidConstraintsChangeInternal, this._onDidConstraintsChange, this._onDidSizeChange);\n    }\n    setConstraints(value) {\n        this._onDidConstraintsChangeInternal.fire(value);\n    }\n    setSize(event) {\n        this._onDidSizeChange.fire(event);\n    }\n}\n","import { Emitter } from '../events';\nimport { GridviewPanelApiImpl } from './gridviewPanelApi';\nimport { MutableDisposable } from '../lifecycle';\nexport class DockviewPanelApiImpl extends GridviewPanelApiImpl {\n    constructor(panel, group) {\n        super(panel.id);\n        this.panel = panel;\n        this._onDidTitleChange = new Emitter();\n        this.onDidTitleChange = this._onDidTitleChange.event;\n        this._titleChanged = new Emitter();\n        this.titleChanged = this._titleChanged.event;\n        this._suppressClosableChanged = new Emitter();\n        this.suppressClosableChanged = this._suppressClosableChanged.event;\n        this._onDidActiveGroupChange = new Emitter();\n        this.onDidActiveGroupChange = this._onDidActiveGroupChange.event;\n        this._onDidGroupChange = new Emitter();\n        this.onDidGroupChange = this._onDidGroupChange.event;\n        this.disposable = new MutableDisposable();\n        this._group = group;\n        this.addDisposables(this.disposable, this._onDidTitleChange, this._titleChanged, this._suppressClosableChanged, this._onDidGroupChange, this._onDidActiveGroupChange);\n    }\n    get title() {\n        return this.panel.title;\n    }\n    get suppressClosable() {\n        return !!this.panel.suppressClosable;\n    }\n    get isGroupActive() {\n        var _a;\n        return !!((_a = this.group) === null || _a === void 0 ? void 0 : _a.isActive);\n    }\n    set group(value) {\n        const isOldGroupActive = this.isGroupActive;\n        this._group = value;\n        this._onDidGroupChange.fire();\n        if (this._group) {\n            this.disposable.value = this._group.api.onDidActiveChange(() => {\n                this._onDidActiveGroupChange.fire();\n            });\n            if (this.isGroupActive !== isOldGroupActive) {\n                this._onDidActiveGroupChange.fire();\n            }\n        }\n    }\n    get group() {\n        return this._group;\n    }\n    setTitle(title) {\n        this._onDidTitleChange.fire({ title });\n    }\n    close() {\n        if (!this.group) {\n            throw new Error(`panel ${this.id} has no group`);\n        }\n        return this.group.model.closePanel(this.panel);\n    }\n}\n","import { DockviewPanelApiImpl } from '../api/groupPanelApi';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nexport class DockviewGroupPanel extends CompositeDisposable {\n    constructor(id, accessor, containerApi, group) {\n        super();\n        this.id = id;\n        this.containerApi = containerApi;\n        this.mutableDisposable = new MutableDisposable();\n        this._suppressClosable = false;\n        this._title = '';\n        this._group = group;\n        this.api = new DockviewPanelApiImpl(this, this._group);\n        this.addDisposables(this.api.onActiveChange(() => {\n            accessor.setActivePanel(this);\n        }), this.api.onDidTitleChange((event) => {\n            const title = event.title;\n            this.update({ params: { title } });\n        }));\n    }\n    get params() {\n        var _a;\n        return (_a = this._params) === null || _a === void 0 ? void 0 : _a.params;\n    }\n    get title() {\n        return this._title;\n    }\n    get suppressClosable() {\n        return this._suppressClosable;\n    }\n    get group() {\n        return this._group;\n    }\n    get view() {\n        return this._view;\n    }\n    init(params) {\n        var _a;\n        this._params = params.params;\n        this._view = params.view;\n        this.setTitle(params.title);\n        this.setSuppressClosable(params.suppressClosable || false);\n        (_a = this.view) === null || _a === void 0 ? void 0 : _a.init(Object.assign(Object.assign({}, params), { api: this.api, containerApi: this.containerApi }));\n    }\n    focus() {\n        this.api._onFocusEvent.fire();\n    }\n    toJSON() {\n        return {\n            id: this.id,\n            view: this.view.toJSON(),\n            params: Object.keys(this._params || {}).length > 0\n                ? this._params\n                : undefined,\n            suppressClosable: this.suppressClosable || undefined,\n            title: this.title,\n        };\n    }\n    setTitle(title) {\n        var _a;\n        const didTitleChange = title !== ((_a = this._params) === null || _a === void 0 ? void 0 : _a.title);\n        if (didTitleChange) {\n            this._title = title;\n            this.api._titleChanged.fire({ title: this.title });\n        }\n    }\n    setSuppressClosable(suppressClosable) {\n        var _a;\n        const didSuppressChangableClose = suppressClosable !== ((_a = this._params) === null || _a === void 0 ? void 0 : _a.suppressClosable);\n        if (didSuppressChangableClose) {\n            this._suppressClosable = suppressClosable;\n            this.api._suppressClosableChanged.fire({\n                suppressClosable: !!this.suppressClosable,\n            });\n        }\n    }\n    update(event) {\n        var _a;\n        const params = event.params;\n        this._params = Object.assign(Object.assign({}, (this._params || {})), event.params.params);\n        if (typeof params.title === 'string') {\n            this.setTitle(params.title);\n        }\n        if (typeof params.suppressClosable === 'boolean') {\n            this.setSuppressClosable(params.suppressClosable);\n        }\n        (_a = this.view) === null || _a === void 0 ? void 0 : _a.update({\n            params: {\n                params: this._params,\n                title: this.title,\n                suppressClosable: this.suppressClosable,\n            },\n        });\n    }\n    updateParentGroup(group, isGroupActive) {\n        var _a;\n        this._group = group;\n        this.api.group = group;\n        const isPanelVisible = this._group.model.isPanelActive(this);\n        this.api._onDidActiveChange.fire({\n            isActive: isGroupActive && isPanelVisible,\n        });\n        this.api._onDidVisibilityChange.fire({\n            isVisible: isPanelVisible,\n        });\n        (_a = this.view) === null || _a === void 0 ? void 0 : _a.updateParentGroup(this._group, this._group.model.isPanelActive(this));\n    }\n    layout(width, height) {\n        var _a;\n        // the obtain the correct dimensions of the content panel we must deduct the tab height\n        this.api._onDidDimensionChange.fire({\n            width,\n            height: height - (this.group.model.header.height || 0),\n        });\n        (_a = this.view) === null || _a === void 0 ? void 0 : _a.layout(width, height);\n    }\n    dispose() {\n        var _a;\n        this.api.dispose();\n        this.mutableDisposable.dispose();\n        (_a = this.view) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","export class ActionContainer {\n    constructor() {\n        this._element = document.createElement('div');\n        this._element.className = 'actions-bar';\n        this._list = document.createElement('ul');\n        this._list.className = 'actions-container';\n        this._element.appendChild(this._list);\n    }\n    get element() {\n        return this._element;\n    }\n    add(element) {\n        const listItem = document.createElement('li');\n        listItem.className = 'action-item';\n        this._list.appendChild(element);\n    }\n}\n","import { ActionContainer } from '../../../actionbar/actionsContainer';\nimport { addDisposableListener } from '../../../events';\nimport { toggleClass } from '../../../dom';\nimport { CompositeDisposable } from '../../../lifecycle';\nexport class Watermark extends CompositeDisposable {\n    constructor() {\n        super();\n        this._element = document.createElement('div');\n        this._element.className = 'watermark';\n        const title = document.createElement('div');\n        title.className = 'watermark-title';\n        const emptySpace = document.createElement('span');\n        emptySpace.style.flexGrow = '1';\n        const content = document.createElement('div');\n        content.className = 'watermark-content';\n        this._element.appendChild(title);\n        this._element.appendChild(content);\n        const actions = new ActionContainer();\n        title.appendChild(emptySpace);\n        title.appendChild(actions.element);\n        const closeAnchor = document.createElement('a');\n        closeAnchor.className = 'close-action';\n        actions.add(closeAnchor);\n        this.addDisposables(addDisposableListener(closeAnchor, 'click', (ev) => {\n            var _a;\n            ev.preventDefault();\n            if (this.group) {\n                (_a = this.params) === null || _a === void 0 ? void 0 : _a.containerApi.removeGroup(this.group);\n            }\n        }));\n    }\n    get id() {\n        return 'watermark';\n    }\n    update(_event) {\n        // noop\n    }\n    focus() {\n        // noop\n    }\n    toJSON() {\n        return {};\n    }\n    layout(_width, _height) {\n        // noop\n    }\n    init(params) {\n        this.params = params;\n        this.addDisposables(this.params.containerApi.onDidLayoutChange(() => {\n            this.render();\n        }));\n        this.render();\n    }\n    updateParentGroup(group, _visible) {\n        this.group = group;\n        this.render();\n    }\n    get element() {\n        return this._element;\n    }\n    render() {\n        const isOneGroup = !!(this.params && this.params.containerApi.size <= 1);\n        toggleClass(this.element, 'has-actions', isOneGroup);\n    }\n    dispose() {\n        super.dispose();\n    }\n}\n","export function createComponent(id, componentName, components = {}, frameworkComponents = {}, createFrameworkComponent, fallback) {\n    const Component = typeof componentName === 'string'\n        ? components[componentName]\n        : undefined;\n    const FrameworkComponent = typeof componentName === 'string'\n        ? frameworkComponents[componentName]\n        : undefined;\n    if (Component && FrameworkComponent) {\n        throw new Error(`Cannot create '${id}'. component '${componentName}' registered as both a component and frameworkComponent`);\n    }\n    if (FrameworkComponent) {\n        if (!createFrameworkComponent) {\n            throw new Error(`Cannot create '${id}' for framework component '${componentName}'. you must register a frameworkPanelWrapper to use framework components`);\n        }\n        return createFrameworkComponent.createComponent(id, componentName, FrameworkComponent);\n    }\n    if (!Component) {\n        if (fallback) {\n            return fallback();\n        }\n        throw new Error(`Cannot create '${id}', no component '${componentName}' provided`);\n    }\n    return new Component(id, componentName);\n}\n","import { CompositeDisposable } from '../../../lifecycle';\nimport { addDisposableListener } from '../../../events';\nexport class DefaultTab extends CompositeDisposable {\n    constructor() {\n        super();\n        this._isPanelVisible = false;\n        this._isGroupActive = false;\n        //\n        this.params = {};\n        this._element = document.createElement('div');\n        this._element.className = 'default-tab';\n        //\n        this._content = document.createElement('div');\n        this._content.className = 'tab-content';\n        //\n        this._actionContainer = document.createElement('div');\n        this._actionContainer.className = 'action-container';\n        //\n        this._list = document.createElement('ul');\n        this._list.className = 'tab-list';\n        //\n        this.action = document.createElement('a');\n        this.action.className = 'tab-action';\n        //\n        this._element.appendChild(this._content);\n        this._element.appendChild(this._actionContainer);\n        this._actionContainer.appendChild(this._list);\n        this._list.appendChild(this.action);\n        //\n        this.addDisposables(addDisposableListener(this._actionContainer, 'mousedown', (ev) => {\n            ev.preventDefault();\n        }));\n        this.render();\n    }\n    get element() {\n        return this._element;\n    }\n    get id() {\n        return '__DEFAULT_TAB__';\n    }\n    update(event) {\n        this.params = Object.assign(Object.assign({}, this.params), event.params);\n        this.render();\n    }\n    toJSON() {\n        return { id: this.id };\n    }\n    focus() {\n        //noop\n    }\n    init(params) {\n        this.params = params;\n        this._content.textContent = params.title;\n        if (!this.params.suppressClosable) {\n            addDisposableListener(this.action, 'click', (ev) => {\n                ev.preventDefault(); //\n                this.params.api.close();\n            });\n        }\n        else {\n            this.action.classList.add('disable-close');\n        }\n    }\n    updateParentGroup(group, isPanelVisible) {\n        const changed = this._isPanelVisible !== isPanelVisible ||\n            this._isGroupActive !== group.isActive;\n        this._isPanelVisible = isPanelVisible;\n        this._isGroupActive = group.isActive;\n        if (changed) {\n            this.render();\n        }\n    }\n    layout(_width, _height) {\n        // noop\n    }\n    render() {\n        if (this._content.textContent !== this.params.title) {\n            this._content.textContent = this.params.title;\n        }\n    }\n}\n","import { trackFocus } from '../dom';\nimport { CompositeDisposable } from '../lifecycle';\nexport class BasePanelView extends CompositeDisposable {\n    constructor(id, component, api) {\n        super();\n        this.id = id;\n        this.component = component;\n        this.api = api;\n        this._height = 0;\n        this._width = 0;\n        this._element = document.createElement('div');\n        this._element.tabIndex = -1;\n        this._element.style.outline = 'none';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n        this._element.style.overflow = 'hidden';\n        const { onDidFocus, onDidBlur } = trackFocus(this._element);\n        this.addDisposables(this.api, onDidFocus(() => {\n            this.api._onDidChangeFocus.fire({ isFocused: true });\n        }), onDidBlur(() => {\n            this.api._onDidChangeFocus.fire({ isFocused: false });\n        }));\n    }\n    get element() {\n        return this._element;\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    get params() {\n        var _a;\n        return (_a = this._params) === null || _a === void 0 ? void 0 : _a.params;\n    }\n    focus() {\n        this.api._onFocusEvent.fire();\n    }\n    layout(width, height) {\n        this._width = width;\n        this._height = height;\n        this.api._onDidDimensionChange.fire({ width, height });\n        if (this.part) {\n            if (this._params) {\n                this.part.update(this._params.params);\n            }\n        }\n    }\n    init(parameters) {\n        this._params = parameters;\n        this.part = this.getComponent();\n    }\n    update(event) {\n        var _a, _b;\n        this._params = Object.assign(Object.assign({}, this._params), { params: Object.assign(Object.assign({}, (_a = this._params) === null || _a === void 0 ? void 0 : _a.params), event.params) });\n        (_b = this.part) === null || _b === void 0 ? void 0 : _b.update({ params: this._params.params });\n    }\n    toJSON() {\n        var _a, _b;\n        const params = (_b = (_a = this._params) === null || _a === void 0 ? void 0 : _a.params) !== null && _b !== void 0 ? _b : {};\n        return {\n            id: this.id,\n            component: this.component,\n            params: Object.keys(params).length > 0 ? params : undefined,\n        };\n    }\n    dispose() {\n        var _a;\n        super.dispose();\n        this.api.dispose();\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import { BasePanelView, } from './basePanelView';\nimport { GridviewPanelApiImpl } from '../api/gridviewPanelApi';\nimport { Emitter } from '../events';\nexport class GridviewPanel extends BasePanelView {\n    constructor(id, component, api = new GridviewPanelApiImpl(id)) {\n        super(id, component, api);\n        this._evaluatedMinimumWidth = 0;\n        this._evaluatedMaximumWidth = Number.MAX_SAFE_INTEGER;\n        this._evaluatedMinimumHeight = 0;\n        this._evaluatedMaximumHeight = Number.MAX_SAFE_INTEGER;\n        this._minimumWidth = 0;\n        this._minimumHeight = 0;\n        this._maximumWidth = Number.MAX_SAFE_INTEGER;\n        this._maximumHeight = Number.MAX_SAFE_INTEGER;\n        this._snap = false;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this.addDisposables(this._onDidChange, this.api.onVisibilityChange((event) => {\n            const { isVisible } = event;\n            const { accessor } = this._params;\n            accessor.setVisible(this, isVisible);\n        }), this.api.onActiveChange(() => {\n            const { accessor } = this._params;\n            accessor.setActive(this);\n        }), this.api.onDidConstraintsChangeInternal((event) => {\n            if (typeof event.minimumWidth === 'number' ||\n                typeof event.minimumWidth === 'function') {\n                this._minimumWidth = event.minimumWidth;\n            }\n            if (typeof event.minimumHeight === 'number' ||\n                typeof event.minimumHeight === 'function') {\n                this._minimumHeight = event.minimumHeight;\n            }\n            if (typeof event.maximumWidth === 'number' ||\n                typeof event.maximumWidth === 'function') {\n                this._maximumWidth = event.maximumWidth;\n            }\n            if (typeof event.maximumHeight === 'number' ||\n                typeof event.maximumHeight === 'function') {\n                this._maximumHeight = event.maximumHeight;\n            }\n        }), this.api.onDidSizeChange((event) => {\n            this._onDidChange.fire({\n                height: event.height,\n                width: event.width,\n            });\n        }));\n    }\n    get priority() {\n        return this._priority;\n    }\n    get snap() {\n        return this._snap;\n    }\n    get minimumWidth() {\n        const width = typeof this._minimumWidth === 'function'\n            ? this._minimumWidth()\n            : this._minimumWidth;\n        if (width !== this._evaluatedMinimumWidth) {\n            this._evaluatedMinimumWidth = width;\n            this.updateConstraints();\n        }\n        return width;\n    }\n    get minimumHeight() {\n        const height = typeof this._minimumHeight === 'function'\n            ? this._minimumHeight()\n            : this._minimumHeight;\n        if (height !== this._evaluatedMinimumHeight) {\n            this._evaluatedMinimumHeight = height;\n            this.updateConstraints();\n        }\n        return height;\n    }\n    get maximumHeight() {\n        const height = typeof this._maximumHeight === 'function'\n            ? this._maximumHeight()\n            : this._maximumHeight;\n        if (height !== this._evaluatedMaximumHeight) {\n            this._evaluatedMaximumHeight = height;\n            this.updateConstraints();\n        }\n        return height;\n    }\n    get maximumWidth() {\n        const width = typeof this._maximumWidth === 'function'\n            ? this._maximumWidth()\n            : this._maximumWidth;\n        if (width !== this._evaluatedMaximumWidth) {\n            this._evaluatedMaximumWidth = width;\n            this.updateConstraints();\n        }\n        return width;\n    }\n    get isActive() {\n        return this.api.isActive;\n    }\n    setVisible(isVisible) {\n        this.api._onDidVisibilityChange.fire({ isVisible });\n    }\n    setActive(isActive) {\n        this.api._onDidActiveChange.fire({ isActive });\n    }\n    init(parameters) {\n        if (parameters.maximumHeight) {\n            this._maximumHeight = parameters.maximumHeight;\n        }\n        if (parameters.minimumHeight) {\n            this._minimumHeight = parameters.minimumHeight;\n        }\n        if (parameters.maximumWidth) {\n            this._maximumWidth = parameters.maximumWidth;\n        }\n        if (parameters.minimumWidth) {\n            this._minimumWidth = parameters.minimumWidth;\n        }\n        this._priority = parameters.priority;\n        this._snap = !!parameters.snap;\n        super.init(parameters);\n        if (typeof parameters.isVisible === 'boolean') {\n            this.setVisible(parameters.isVisible);\n        }\n    }\n    updateConstraints() {\n        this.api._onDidConstraintsChange.fire({\n            minimumWidth: this._evaluatedMinimumWidth,\n            maximumWidth: this._evaluatedMaximumWidth,\n            minimumHeight: this._evaluatedMinimumHeight,\n            maximumHeight: this._evaluatedMaximumHeight,\n        });\n    }\n    toJSON() {\n        const state = super.toJSON();\n        const maximum = (value) => value === Number.MAX_SAFE_INTEGER ? undefined : value;\n        const minimum = (value) => (value <= 0 ? undefined : value);\n        return Object.assign(Object.assign({}, state), { minimumHeight: minimum(this.minimumHeight), maximumHeight: maximum(this.maximumHeight), minimumWidth: minimum(this.minimumWidth), maximumWidth: maximum(this.maximumWidth), snap: this.snap, priority: this.priority });\n    }\n}\n","import { GridviewPanelApiImpl, } from '../api/gridviewPanelApi';\nimport { Groupview } from './groupview';\nimport { GridviewPanel } from '../gridview/gridviewPanel';\nclass GroupviewApi extends GridviewPanelApiImpl {\n}\nexport class GroupPanel extends GridviewPanel {\n    constructor(accessor, id, options) {\n        super(id, 'groupview_default', new GroupviewApi(id));\n        this._model = new Groupview(this.element, accessor, id, options, this);\n    }\n    get panels() {\n        return this._model.panels;\n    }\n    get activePanel() {\n        return this._model.activePanel;\n    }\n    get size() {\n        return this._model.size;\n    }\n    get model() {\n        return this._model;\n    }\n    get minimumHeight() {\n        return this._model.minimumHeight;\n    }\n    get maximumHeight() {\n        return this._model.maximumHeight;\n    }\n    get minimumWidth() {\n        return this._model.minimumWidth;\n    }\n    get maximumWidth() {\n        return this._model.maximumWidth;\n    }\n    get locked() {\n        return this._model.locked;\n    }\n    set locked(value) {\n        this._model.locked = value;\n    }\n    get header() {\n        return this._model.header;\n    }\n    initialize() {\n        this._model.initialize();\n    }\n    setActive(isActive) {\n        super.setActive(isActive);\n        this.model.setActive(isActive);\n    }\n    layout(width, height) {\n        super.layout(width, height);\n        this.model.layout(width, height);\n    }\n    getComponent() {\n        return this._model;\n    }\n    toJSON() {\n        return this.model.toJSON();\n    }\n}\n","import { DefaultTab } from './components/tab/defaultTab';\nexport class DefaultGroupPanelView {\n    constructor(renderers) {\n        var _a;\n        this._content = renderers.content;\n        this._tab = (_a = renderers.tab) !== null && _a !== void 0 ? _a : new DefaultTab();\n        this._actions =\n            renderers.actions ||\n                (this.content.actions\n                    ? {\n                        element: this.content.actions,\n                        dispose: () => {\n                            //\n                        },\n                    }\n                    : undefined);\n    }\n    get content() {\n        return this._content;\n    }\n    get tab() {\n        return this._tab;\n    }\n    get actions() {\n        return this._actions;\n    }\n    init(params) {\n        this.content.init(Object.assign(Object.assign({}, params), { tab: this.tab }));\n        this.tab.init(params);\n    }\n    updateParentGroup(group, isPanelVisible) {\n        var _a;\n        this._content.updateParentGroup(group, isPanelVisible);\n        (_a = this._tab) === null || _a === void 0 ? void 0 : _a.updateParentGroup(group, isPanelVisible);\n    }\n    layout(width, height) {\n        this.content.layout(width, height);\n    }\n    update(event) {\n        this.content.update(event);\n        this.tab.update(event);\n    }\n    toJSON() {\n        return {\n            content: this.content.toJSON(),\n            tab: this.tab instanceof DefaultTab ? undefined : this.tab.toJSON(),\n        };\n    }\n    dispose() {\n        var _a;\n        this.content.dispose();\n        this.tab.dispose();\n        (_a = this.actions) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import { getRelativeLocation, getGridLocation, } from '../gridview/gridview';\nimport { Position } from '../dnd/droptarget';\nimport { tail, sequenceEquals } from '../array';\nimport { DockviewGroupPanel } from './dockviewGroupPanel';\nimport { CompositeDisposable } from '../lifecycle';\nimport { Event, Emitter } from '../events';\nimport { Watermark } from './components/watermark/watermark';\nimport { sequentialNumberGenerator } from '../math';\nimport { createComponent } from '../panel/componentFactory';\nimport { BaseGrid, toTarget, } from '../gridview/baseComponentGridview';\nimport { DockviewApi } from '../api/component.api';\nimport { MouseEventKind } from '../groupview/tab';\nimport { Orientation } from '../splitview/core/splitview';\nimport { DefaultTab } from './components/tab/defaultTab';\nimport { GroupChangeKind2, } from '../groupview/groupview';\nimport { GroupPanel } from '../groupview/groupviewPanel';\nimport { DefaultGroupPanelView } from './defaultGroupPanelView';\nconst nextGroupId = sequentialNumberGenerator();\nexport class DockviewComponent extends BaseGrid {\n    constructor(element, options) {\n        super(element, {\n            proportionalLayout: true,\n            orientation: options.orientation || Orientation.HORIZONTAL,\n            styles: options.styles,\n        });\n        this._onTabContextMenu = new Emitter();\n        this.onTabContextMenu = this._onTabContextMenu.event;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onDidRemovePanel = new Emitter();\n        this.onDidRemovePanel = this._onDidRemovePanel.event;\n        this._onDidAddPanel = new Emitter();\n        this.onDidAddPanel = this._onDidAddPanel.event;\n        this._onDidLayoutFromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutFromJSON.event;\n        this._onDidActivePanelChange = new Emitter();\n        this.onDidActivePanelChange = this._onDidActivePanelChange.event;\n        this.addDisposables(this._onTabContextMenu, this._onDidDrop, Event.any(this.onDidAddPanel, this.onDidRemovePanel, this.onDidActivePanelChange)(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }));\n        this._options = options;\n        if (!this.options.components) {\n            this.options.components = {};\n        }\n        if (!this.options.frameworkComponents) {\n            this.options.frameworkComponents = {};\n        }\n        if (!this.options.frameworkTabComponents) {\n            this.options.frameworkTabComponents = {};\n        }\n        if (!this.options.tabComponents) {\n            this.options.tabComponents = {};\n        }\n        if (!this.options.watermarkComponent &&\n            !this.options.watermarkFrameworkComponent) {\n            this.options.watermarkComponent = Watermark;\n        }\n        this._api = new DockviewApi(this);\n    }\n    get totalPanels() {\n        return this.panels.length;\n    }\n    get panels() {\n        return this.groups.flatMap((group) => group.panels);\n    }\n    get deserializer() {\n        return this._deserializer;\n    }\n    set deserializer(value) {\n        this._deserializer = value;\n    }\n    get options() {\n        return this._options;\n    }\n    get activePanel() {\n        const activeGroup = this.activeGroup;\n        if (!activeGroup) {\n            return undefined;\n        }\n        return activeGroup.activePanel;\n    }\n    set tabHeight(height) {\n        this.options.tabHeight = height;\n        this._groups.forEach((value) => {\n            value.value.model.header.height = height;\n        });\n    }\n    get tabHeight() {\n        return this.options.tabHeight;\n    }\n    updateOptions(options) {\n        const hasOrientationChanged = typeof options.orientation === 'string' &&\n            this.gridview.orientation !== options.orientation;\n        this._options = Object.assign(Object.assign({}, this.options), options);\n        if (hasOrientationChanged) {\n            this.gridview.orientation = options.orientation;\n        }\n        this.layout(this.gridview.width, this.gridview.height, true);\n    }\n    focus() {\n        var _a;\n        (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    getGroupPanel(id) {\n        return this.panels.find((panel) => panel.id === id);\n    }\n    setActivePanel(panel) {\n        this.doSetGroupActive(panel.group);\n        panel.group.model.openPanel(panel);\n    }\n    moveToNext(options = {}) {\n        var _a;\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        if (options.includePanel && options.group) {\n            if (options.group.activePanel !==\n                options.group.panels[options.group.panels.length - 1]) {\n                options.group.model.moveToNext({ suppressRoll: true });\n                return;\n            }\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.next(location)) === null || _a === void 0 ? void 0 : _a.view;\n        this.doSetGroupActive(next);\n    }\n    moveToPrevious(options = {}) {\n        var _a;\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        if (options.includePanel && options.group) {\n            if (options.group.activePanel !==\n                options.group.panels[0]) {\n                options.group.model.moveToPrevious({ suppressRoll: true });\n                return;\n            }\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.previous(location)) === null || _a === void 0 ? void 0 : _a.view;\n        if (next) {\n            this.doSetGroupActive(next);\n        }\n    }\n    /**\n     * Serialize the current state of the layout\n     *\n     * @returns A JSON respresentation of the layout\n     */\n    toJSON() {\n        var _a;\n        const data = this.gridview.serialize();\n        const panels = this.panels.reduce((collection, panel) => {\n            collection[panel.id] = panel.toJSON();\n            return collection;\n        }, {});\n        return {\n            grid: data,\n            panels,\n            activeGroup: (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.id,\n            options: { tabHeight: this.tabHeight },\n        };\n    }\n    fromJSON(data) {\n        this.clear();\n        if (!this.deserializer) {\n            throw new Error('invalid deserializer');\n        }\n        const { grid, panels, options, activeGroup } = data;\n        if (typeof (options === null || options === void 0 ? void 0 : options.tabHeight) === 'number') {\n            this.tabHeight = options.tabHeight;\n        }\n        if (!this.deserializer) {\n            throw new Error('no deserializer provided');\n        }\n        this.gridview.deserialize(grid, {\n            fromJSON: (node) => {\n                const { id, locked, hideHeader, views, activeView } = node.data;\n                const group = this.createGroup({\n                    id,\n                    locked: !!locked,\n                    hideHeader: !!hideHeader,\n                });\n                this._onDidAddGroup.fire(group);\n                for (const child of views) {\n                    const panel = this.deserializer.fromJSON(panels[child], group);\n                    const isActive = typeof activeView === 'string' && activeView === panel.id;\n                    group.model.openPanel(panel, {\n                        skipSetPanelActive: !isActive,\n                        skipSetGroupActive: true\n                    });\n                }\n                if (!group.activePanel && group.panels.length > 0) {\n                    group.model.openPanel(group.panels[group.panels.length - 1], {\n                        skipSetGroupActive: true\n                    });\n                }\n                return group;\n            }\n        });\n        if (typeof activeGroup === 'string') {\n            const panel = this.getPanel(activeGroup);\n            if (panel) {\n                this.doSetGroupActive(panel);\n            }\n        }\n        this.gridview.layout(this.width, this.height);\n        this._onDidLayoutFromJSON.fire();\n    }\n    clear() {\n        const groups = Array.from(this._groups.values()).map((_) => _.value);\n        const hasActiveGroup = !!this.activeGroup;\n        const hasActivePanel = !!this.activePanel;\n        for (const group of groups) {\n            // remove the group will automatically remove the panels\n            this.removeGroup(group, true);\n        }\n        if (hasActiveGroup) {\n            this.doSetGroupActive(undefined);\n        }\n        if (hasActivePanel) {\n            this._onDidActivePanelChange.fire(undefined);\n        }\n        this.gridview.clear();\n    }\n    closeAllGroups() {\n        for (const entry of this._groups.entries()) {\n            const [_, group] = entry;\n            group.value.model.closeAllPanels();\n        }\n    }\n    fireMouseEvent(event) {\n        if (event.kind === MouseEventKind.CONTEXT_MENU) {\n            if (event.tab && event.panel) {\n                this._onTabContextMenu.fire({\n                    event: event.event,\n                    api: this._api,\n                    panel: event.panel,\n                });\n            }\n        }\n    }\n    addPanel(options) {\n        var _a, _b;\n        if (this.panels.find((_) => _.id === options.id)) {\n            throw new Error(`panel with id ${options.id} already exists`);\n        }\n        let referenceGroup;\n        if ((_a = options.position) === null || _a === void 0 ? void 0 : _a.referencePanel) {\n            const referencePanel = this.getGroupPanel(options.position.referencePanel);\n            if (!referencePanel) {\n                throw new Error(`referencePanel ${options.position.referencePanel} does not exist`);\n            }\n            referenceGroup = this.findGroup(referencePanel);\n        }\n        else {\n            referenceGroup = this.activeGroup;\n        }\n        let panel;\n        if (referenceGroup) {\n            const target = toTarget(((_b = options.position) === null || _b === void 0 ? void 0 : _b.direction) || 'within');\n            if (target === Position.Center) {\n                panel = this.createPanel(options, referenceGroup);\n                referenceGroup.model.openPanel(panel);\n            }\n            else {\n                const location = getGridLocation(referenceGroup.element);\n                const relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n                const group = this.createGroupAtLocation(relativeLocation);\n                panel = this.createPanel(options, group);\n                group.model.openPanel(panel);\n            }\n        }\n        else {\n            const group = this.createGroupAtLocation();\n            panel = this.createPanel(options, group);\n            group.model.openPanel(panel);\n        }\n        return panel;\n    }\n    removePanel(panel, options = {\n        removeEmptyGroup: true,\n        skipDispose: false,\n    }) {\n        const group = panel.group;\n        if (!group) {\n            throw new Error(`cannot remove panel ${panel.id}. it's missing a group.`);\n        }\n        group.model.removePanel(panel);\n        panel.dispose();\n        const retainGroupForWatermark = this.size === 1;\n        if (!retainGroupForWatermark &&\n            group.size === 0 &&\n            options.removeEmptyGroup) {\n            this.removeGroup(group);\n        }\n    }\n    createWatermarkComponent() {\n        var _a;\n        return createComponent('watermark-id', 'watermark-name', this.options.watermarkComponent\n            ? { 'watermark-name': this.options.watermarkComponent }\n            : {}, this.options.watermarkFrameworkComponent\n            ? { 'watermark-name': this.options.watermarkFrameworkComponent }\n            : {}, (_a = this.options.frameworkComponentFactory) === null || _a === void 0 ? void 0 : _a.watermark);\n    }\n    addEmptyGroup(options) {\n        const group = this.createGroup();\n        if (options) {\n            const referencePanel = this.panels.find((panel) => panel.id === options.referencePanel);\n            if (!referencePanel) {\n                throw new Error(`reference panel ${options.referencePanel} does not exist`);\n            }\n            const referenceGroup = this.findGroup(referencePanel);\n            if (!referenceGroup) {\n                throw new Error(`reference group for reference panel ${options.referencePanel} does not exist`);\n            }\n            const target = toTarget(options.direction || 'within');\n            const location = getGridLocation(referenceGroup.element);\n            const relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n            this.doAddGroup(group, relativeLocation);\n        }\n        else {\n            this.doAddGroup(group);\n        }\n    }\n    removeGroup(group, skipActive = false) {\n        const panels = [...group.panels]; // reassign since group panels will mutate\n        for (const panel of panels) {\n            this.removePanel(panel, {\n                removeEmptyGroup: false,\n                skipDispose: false,\n            });\n        }\n        super.doRemoveGroup(group, { skipActive });\n    }\n    moveGroupOrPanel(referenceGroup, groupId, itemId, target, index) {\n        var _a;\n        const sourceGroup = groupId\n            ? (_a = this._groups.get(groupId)) === null || _a === void 0 ? void 0 : _a.value\n            : undefined;\n        if (!target || target === Position.Center) {\n            const groupItem = (sourceGroup === null || sourceGroup === void 0 ? void 0 : sourceGroup.model.removePanel(itemId)) ||\n                this.panels.find((panel) => panel.id === itemId);\n            if (!groupItem) {\n                throw new Error(`No panel with id ${itemId}`);\n            }\n            if ((sourceGroup === null || sourceGroup === void 0 ? void 0 : sourceGroup.model.size) === 0) {\n                this.doRemoveGroup(sourceGroup);\n            }\n            referenceGroup.model.openPanel(groupItem, { index });\n        }\n        else {\n            const referenceLocation = getGridLocation(referenceGroup.element);\n            const targetLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, target);\n            if (sourceGroup && sourceGroup.size < 2) {\n                const [targetParentLocation, to] = tail(targetLocation);\n                const sourceLocation = getGridLocation(sourceGroup.element);\n                const [sourceParentLocation, from] = tail(sourceLocation);\n                if (sequenceEquals(sourceParentLocation, targetParentLocation)) {\n                    // special case when 'swapping' two views within same grid location\n                    // if a group has one tab - we are essentially moving the 'group'\n                    // which is equivalent to swapping two views in this case\n                    this.gridview.moveView(sourceParentLocation, from, to);\n                }\n                else {\n                    // source group will become empty so delete the group\n                    const targetGroup = this.doRemoveGroup(sourceGroup, {\n                        skipActive: true,\n                        skipDispose: true,\n                    });\n                    // after deleting the group we need to re-evaulate the ref location\n                    const updatedReferenceLocation = getGridLocation(referenceGroup.element);\n                    const location = getRelativeLocation(this.gridview.orientation, updatedReferenceLocation, target);\n                    this.doAddGroup(targetGroup, location);\n                }\n            }\n            else {\n                const groupItem = (sourceGroup === null || sourceGroup === void 0 ? void 0 : sourceGroup.model.removePanel(itemId)) ||\n                    this.panels.find((panel) => panel.id === itemId);\n                if (!groupItem) {\n                    throw new Error(`No panel with id ${itemId}`);\n                }\n                const dropLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, target);\n                const group = this.createGroupAtLocation(dropLocation);\n                group.model.openPanel(groupItem);\n            }\n        }\n    }\n    doSetGroupActive(group, skipFocus) {\n        var _a, _b;\n        const isGroupAlreadyFocused = this._activeGroup === group;\n        super.doSetGroupActive(group, skipFocus);\n        if (!isGroupAlreadyFocused && ((_a = this._activeGroup) === null || _a === void 0 ? void 0 : _a.activePanel)) {\n            this._onDidActivePanelChange.fire((_b = this._activeGroup) === null || _b === void 0 ? void 0 : _b.activePanel);\n        }\n    }\n    createGroup(options) {\n        if (!options) {\n            options = { tabHeight: this.tabHeight };\n        }\n        if (typeof options.tabHeight !== 'number') {\n            options.tabHeight = this.tabHeight;\n        }\n        let id = options === null || options === void 0 ? void 0 : options.id;\n        if (id && this._groups.has(options.id)) {\n            console.warn(`Duplicate group id ${options === null || options === void 0 ? void 0 : options.id}. reassigning group id to avoid errors`);\n            id = undefined;\n        }\n        if (!id) {\n            id = nextGroupId.next();\n            while (this._groups.has(id)) {\n                id = nextGroupId.next();\n            }\n        }\n        const view = new GroupPanel(this, id, options);\n        view.init({ params: {}, accessor: null }); // required to initialized .part and allow for correct disposal of group\n        if (!this._groups.has(view.id)) {\n            const disposable = new CompositeDisposable(view.model.onMove((event) => {\n                const { groupId, itemId, target, index } = event;\n                this.moveGroupOrPanel(view, groupId, itemId, target, index);\n            }), view.model.onDidDrop((event) => {\n                this._onDidDrop.fire(Object.assign(Object.assign({}, event), { api: this._api, group: view }));\n            }), view.model.onDidGroupChange((event) => {\n                switch (event.kind) {\n                    case GroupChangeKind2.ADD_PANEL:\n                        if (event.panel) {\n                            this._onDidAddPanel.fire(event.panel);\n                        }\n                        break;\n                    case GroupChangeKind2.REMOVE_PANEL:\n                        if (event.panel) {\n                            this._onDidRemovePanel.fire(event.panel);\n                        }\n                        break;\n                    case GroupChangeKind2.PANEL_ACTIVE:\n                        this._onDidActivePanelChange.fire(event.panel);\n                        break;\n                }\n            }));\n            this._groups.set(view.id, { value: view, disposable });\n        }\n        // TODO: must be called after the above listeners have been setup,\n        // not an ideal pattern\n        view.initialize();\n        if (typeof this.options.tabHeight === 'number') {\n            view.model.header.height = this.options.tabHeight;\n        }\n        return view;\n    }\n    createPanel(options, group) {\n        const view = new DefaultGroupPanelView({\n            content: this.createContentComponent(options.id, options.component),\n            tab: this.createTabComponent(options.id, options.tabComponent),\n        });\n        const panel = new DockviewGroupPanel(options.id, this, this._api, group);\n        panel.init({\n            view,\n            title: options.title || options.id,\n            suppressClosable: options === null || options === void 0 ? void 0 : options.suppressClosable,\n            params: (options === null || options === void 0 ? void 0 : options.params) || {},\n        });\n        return panel;\n    }\n    createContentComponent(id, componentName) {\n        var _a;\n        return createComponent(id, componentName, this.options.components || {}, this.options.frameworkComponents, (_a = this.options.frameworkComponentFactory) === null || _a === void 0 ? void 0 : _a.content);\n    }\n    createTabComponent(id, componentName) {\n        var _a;\n        return createComponent(id, componentName, this.options.tabComponents || {}, this.options.frameworkTabComponents, (_a = this.options.frameworkComponentFactory) === null || _a === void 0 ? void 0 : _a.tab, () => new DefaultTab());\n    }\n    createGroupAtLocation(location = [0]) {\n        const group = this.createGroup();\n        this.doAddGroup(group, location);\n        return group;\n    }\n    findGroup(panel) {\n        var _a;\n        return (_a = Array.from(this._groups.values()).find((group) => group.value.model.containsPanel(panel))) === null || _a === void 0 ? void 0 : _a.value;\n    }\n    dispose() {\n        super.dispose();\n        this._onDidActivePanelChange.dispose();\n        this._onDidAddPanel.dispose();\n        this._onDidRemovePanel.dispose();\n        this._onDidLayoutFromJSON.dispose();\n    }\n}\n","import { getRelativeLocation, getGridLocation, } from './gridview';\nimport { Position } from '../dnd/droptarget';\nimport { tail, sequenceEquals } from '../array';\nimport { CompositeDisposable } from '../lifecycle';\nimport { BaseGrid, toTarget, } from './baseComponentGridview';\nimport { createComponent } from '../panel/componentFactory';\nimport { Emitter } from '../events';\nexport class GridviewComponent extends BaseGrid {\n    constructor(element, options) {\n        super(element, {\n            proportionalLayout: options.proportionalLayout,\n            orientation: options.orientation,\n            styles: options.styles,\n        });\n        this._onDidLayoutfromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutfromJSON.event;\n        this._options = options;\n        if (!this.options.components) {\n            this.options.components = {};\n        }\n        if (!this.options.frameworkComponents) {\n            this.options.frameworkComponents = {};\n        }\n    }\n    get orientation() {\n        return this.gridview.orientation;\n    }\n    set orientation(value) {\n        this.gridview.orientation = value;\n    }\n    get options() {\n        return this._options;\n    }\n    get deserializer() {\n        return this._deserializer;\n    }\n    set deserializer(value) {\n        this._deserializer = value;\n    }\n    updateOptions(options) {\n        const hasOrientationChanged = typeof options.orientation === 'string' &&\n            this.gridview.orientation !== options.orientation;\n        this._options = Object.assign(Object.assign({}, this.options), options);\n        if (hasOrientationChanged) {\n            this.gridview.orientation = options.orientation;\n        }\n        this.layout(this.gridview.width, this.gridview.height, true);\n    }\n    removePanel(panel) {\n        this.removeGroup(panel);\n    }\n    /**\n     * Serialize the current state of the layout\n     *\n     * @returns A JSON respresentation of the layout\n     */\n    toJSON() {\n        var _a;\n        const data = this.gridview.serialize();\n        return {\n            grid: data,\n            activePanel: (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.id,\n        };\n    }\n    setVisible(panel, visible) {\n        this.gridview.setViewVisible(getGridLocation(panel.element), visible);\n    }\n    setActive(panel) {\n        this._groups.forEach((value, _key) => {\n            value.value.setActive(panel === value.value);\n        });\n    }\n    focus() {\n        var _a;\n        (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    fromJSON(serializedGridview) {\n        this.clear();\n        const { grid, activePanel } = serializedGridview;\n        const queue = [];\n        this.gridview.deserialize(grid, {\n            fromJSON: (node) => {\n                const { data } = node;\n                const view = createComponent(data.id, data.component, this.options.components || {}, this.options.frameworkComponents || {}, this.options.frameworkComponentFactory\n                    ? {\n                        createComponent: this.options.frameworkComponentFactory\n                            .createComponent,\n                    }\n                    : undefined);\n                queue.push(() => view.init({\n                    params: data.params,\n                    minimumWidth: data.minimumWidth,\n                    maximumWidth: data.maximumWidth,\n                    minimumHeight: data.minimumHeight,\n                    maximumHeight: data.maximumHeight,\n                    priority: data.priority,\n                    snap: !!data.snap,\n                    accessor: this,\n                    isVisible: node.visible,\n                }));\n                this._onDidAddGroup.fire(view);\n                this.registerPanel(view);\n                return view;\n            },\n        });\n        this.layout(this.width, this.height, true);\n        queue.forEach((f) => f());\n        if (typeof activePanel === 'string') {\n            const panel = this.getPanel(activePanel);\n            if (panel) {\n                this.doSetGroupActive(panel);\n            }\n        }\n        this._onDidLayoutfromJSON.fire();\n    }\n    clear() {\n        const hasActiveGroup = this.activeGroup;\n        const groups = Array.from(this._groups.values()); // reassign since group panels will mutate\n        for (const group of groups) {\n            group.disposable.dispose();\n            this.doRemoveGroup(group.value, { skipActive: true });\n        }\n        if (hasActiveGroup) {\n            this.doSetGroupActive(undefined);\n        }\n        this.gridview.clear();\n    }\n    movePanel(panel, options) {\n        var _a;\n        let relativeLocation;\n        const removedPanel = this.gridview.remove(panel);\n        const referenceGroup = (_a = this._groups.get(options.reference)) === null || _a === void 0 ? void 0 : _a.value;\n        if (!referenceGroup) {\n            throw new Error(`reference group ${options.reference} does not exist`);\n        }\n        const target = toTarget(options.direction);\n        if (target === Position.Center) {\n            throw new Error(`${target} not supported as an option`);\n        }\n        else {\n            const location = getGridLocation(referenceGroup.element);\n            relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n        }\n        this.doAddGroup(removedPanel, relativeLocation, options.size);\n    }\n    addPanel(options) {\n        var _a, _b;\n        let relativeLocation = options.location || [0];\n        if ((_a = options.position) === null || _a === void 0 ? void 0 : _a.referencePanel) {\n            const referenceGroup = (_b = this._groups.get(options.position.referencePanel)) === null || _b === void 0 ? void 0 : _b.value;\n            if (!referenceGroup) {\n                throw new Error(`reference group ${options.position.referencePanel} does not exist`);\n            }\n            const target = toTarget(options.position.direction);\n            if (target === Position.Center) {\n                throw new Error(`${target} not supported as an option`);\n            }\n            else {\n                const location = getGridLocation(referenceGroup.element);\n                relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n            }\n        }\n        const view = createComponent(options.id, options.component, this.options.components || {}, this.options.frameworkComponents || {}, this.options.frameworkComponentFactory\n            ? {\n                createComponent: this.options.frameworkComponentFactory\n                    .createComponent,\n            }\n            : undefined);\n        view.init({\n            params: options.params || {},\n            minimumWidth: options.minimumWidth,\n            maximumWidth: options.maximumWidth,\n            minimumHeight: options.minimumHeight,\n            maximumHeight: options.maximumHeight,\n            priority: options.priority,\n            snap: !!options.snap,\n            accessor: this,\n            isVisible: true,\n        });\n        this.registerPanel(view);\n        this.doAddGroup(view, relativeLocation, options.size);\n        return view;\n    }\n    registerPanel(panel) {\n        const disposable = new CompositeDisposable(panel.api.onDidFocusChange((event) => {\n            if (!event.isFocused) {\n                return;\n            }\n            this._groups.forEach((groupItem) => {\n                const group = groupItem.value;\n                if (group !== panel) {\n                    group.setActive(false);\n                }\n                else {\n                    group.setActive(true);\n                }\n            });\n        }));\n        this._groups.set(panel.id, {\n            value: panel,\n            disposable,\n        });\n    }\n    moveGroup(referenceGroup, groupId, target) {\n        const sourceGroup = this.getPanel(groupId);\n        if (!sourceGroup) {\n            throw new Error('invalid operation');\n        }\n        const referenceLocation = getGridLocation(referenceGroup.element);\n        const targetLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, target);\n        const [targetParentLocation, to] = tail(targetLocation);\n        const sourceLocation = getGridLocation(sourceGroup.element);\n        const [sourceParentLocation, from] = tail(sourceLocation);\n        if (sequenceEquals(sourceParentLocation, targetParentLocation)) {\n            // special case when 'swapping' two views within same grid location\n            // if a group has one tab - we are essentially moving the 'group'\n            // which is equivalent to swapping two views in this case\n            this.gridview.moveView(sourceParentLocation, from, to);\n            return;\n        }\n        // source group will become empty so delete the group\n        const targetGroup = this.doRemoveGroup(sourceGroup, {\n            skipActive: true,\n            skipDispose: true,\n        });\n        // after deleting the group we need to re-evaulate the ref location\n        const updatedReferenceLocation = getGridLocation(referenceGroup.element);\n        const location = getRelativeLocation(this.gridview.orientation, updatedReferenceLocation, target);\n        this.doAddGroup(targetGroup, location);\n    }\n    removeGroup(group) {\n        super.removeGroup(group);\n    }\n    dispose() {\n        super.dispose();\n        this._onDidLayoutfromJSON.dispose();\n    }\n}\n","import { CompositeDisposable, MutableDisposable, } from '../lifecycle';\nimport { Orientation, Sizing, Splitview, } from './core/splitview';\nimport { Emitter } from '../events';\nimport { createComponent } from '../panel/componentFactory';\n/**\n * A high-level implementation of splitview that works using 'panels'\n */\nexport class SplitviewComponent extends CompositeDisposable {\n    constructor(element, options) {\n        super();\n        this.element = element;\n        this._disposable = new MutableDisposable();\n        this._panels = new Map();\n        this._onDidLayoutfromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutfromJSON.event;\n        this._onDidAddView = new Emitter();\n        this.onDidAddView = this._onDidAddView.event;\n        this._onDidRemoveView = new Emitter();\n        this.onDidRemoveView = this._onDidRemoveView.event;\n        this._onDidLayoutChange = new Emitter();\n        this.onDidLayoutChange = this._onDidLayoutChange.event;\n        this._options = options;\n        if (!options.components) {\n            options.components = {};\n        }\n        if (!options.frameworkComponents) {\n            options.frameworkComponents = {};\n        }\n        this.splitview = new Splitview(this.element, options);\n        this.addDisposables(this._disposable, this._onDidAddView, this._onDidLayoutfromJSON, this._onDidRemoveView, this._onDidLayoutChange);\n    }\n    get panels() {\n        return this.splitview.getViews();\n    }\n    get options() {\n        return this._options;\n    }\n    get length() {\n        return this._panels.size;\n    }\n    get orientation() {\n        return this.splitview.orientation;\n    }\n    get splitview() {\n        return this._splitview;\n    }\n    set splitview(value) {\n        this._splitview = value;\n        this._disposable.value = new CompositeDisposable(this._splitview.onDidSashEnd(() => {\n            this._onDidLayoutChange.fire(undefined);\n        }), this._splitview.onDidAddView((e) => this._onDidAddView.fire(e)), this._splitview.onDidRemoveView((e) => this._onDidRemoveView.fire(e)));\n    }\n    get minimumSize() {\n        return this.splitview.minimumSize;\n    }\n    get maximumSize() {\n        return this.splitview.maximumSize;\n    }\n    get height() {\n        return this.splitview.orientation === Orientation.HORIZONTAL\n            ? this.splitview.orthogonalSize\n            : this.splitview.size;\n    }\n    get width() {\n        return this.splitview.orientation === Orientation.HORIZONTAL\n            ? this.splitview.size\n            : this.splitview.orthogonalSize;\n    }\n    updateOptions(options) {\n        const hasOrientationChanged = typeof options.orientation === 'string' &&\n            this.options.orientation !== options.orientation;\n        this._options = Object.assign(Object.assign({}, this.options), options);\n        if (hasOrientationChanged) {\n            this.splitview.orientation = options.orientation;\n        }\n        this.splitview.layout(this.splitview.size, this.splitview.orthogonalSize);\n    }\n    focus() {\n        var _a;\n        (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    movePanel(from, to) {\n        this.splitview.moveView(from, to);\n    }\n    setVisible(panel, visible) {\n        const index = this.panels.indexOf(panel);\n        this.splitview.setViewVisible(index, visible);\n    }\n    setActive(view, skipFocus) {\n        this._activePanel = view;\n        this.panels\n            .filter((v) => v !== view)\n            .forEach((v) => {\n            v.api._onDidActiveChange.fire({ isActive: false });\n            if (!skipFocus) {\n                v.focus();\n            }\n        });\n        view.api._onDidActiveChange.fire({ isActive: true });\n        if (!skipFocus) {\n            view.focus();\n        }\n    }\n    removePanel(panel, sizing) {\n        const disposable = this._panels.get(panel.id);\n        if (!disposable) {\n            throw new Error(`unknown splitview panel ${panel.id}`);\n        }\n        disposable.disposable.dispose();\n        disposable.value.dispose();\n        this._panels.delete(panel.id);\n        const index = this.panels.findIndex((_) => _ === panel);\n        this.splitview.removeView(index, sizing);\n        const panels = this.panels;\n        if (panels.length > 0) {\n            this.setActive(panels[panels.length - 1]);\n        }\n    }\n    getPanel(id) {\n        return this.panels.find((view) => view.id === id);\n    }\n    addPanel(options) {\n        if (this._panels.has(options.id)) {\n            throw new Error(`panel ${options.id} already exists`);\n        }\n        const view = createComponent(options.id, options.component, this.options.components || {}, this.options.frameworkComponents || {}, this.options.frameworkWrapper\n            ? {\n                createComponent: this.options.frameworkWrapper.createComponent,\n            }\n            : undefined);\n        view.orientation = this.splitview.orientation;\n        view.init({\n            params: options.params || {},\n            minimumSize: options.minimumSize,\n            maximumSize: options.maximumSize,\n            snap: options.snap,\n            priority: options.priority,\n            accessor: this,\n        });\n        const size = typeof options.size === 'number' ? options.size : Sizing.Distribute;\n        const index = typeof options.index === 'number' ? options.index : undefined;\n        this.splitview.addView(view, size, index);\n        this.doAddView(view);\n        this.setActive(view);\n        return view;\n    }\n    layout(width, height) {\n        const [size, orthogonalSize] = this.splitview.orientation === Orientation.HORIZONTAL\n            ? [width, height]\n            : [height, width];\n        this.splitview.layout(size, orthogonalSize);\n    }\n    doAddView(view) {\n        const disposable = view.api.onDidFocusChange((event) => {\n            if (!event.isFocused) {\n                return;\n            }\n            this.setActive(view, true);\n        });\n        this._panels.set(view.id, { disposable, value: view });\n    }\n    toJSON() {\n        var _a;\n        const views = this.splitview\n            .getViews()\n            .map((view, i) => {\n            const size = this.splitview.getViewSize(i);\n            return {\n                size,\n                data: view.toJSON(),\n                snap: !!view.snap,\n                priority: view.priority,\n            };\n        });\n        return {\n            views,\n            activeView: (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.id,\n            size: this.splitview.size,\n            orientation: this.splitview.orientation,\n        };\n    }\n    fromJSON(serializedSplitview) {\n        this.clear();\n        const { views, orientation, size, activeView } = serializedSplitview;\n        const queue = [];\n        this.splitview = new Splitview(this.element, {\n            orientation,\n            proportionalLayout: this.options.proportionalLayout,\n            descriptor: {\n                size,\n                views: views.map((view) => {\n                    const data = view.data;\n                    if (this._panels.has(data.id)) {\n                        throw new Error(`panel ${data.id} already exists`);\n                    }\n                    const panel = createComponent(data.id, data.component, this.options.components || {}, this.options.frameworkComponents || {}, this.options.frameworkWrapper\n                        ? {\n                            createComponent: this.options.frameworkWrapper\n                                .createComponent,\n                        }\n                        : undefined);\n                    queue.push(() => {\n                        panel.init({\n                            params: data.params || {},\n                            minimumSize: data.minimumSize,\n                            maximumSize: data.maximumSize,\n                            snap: view.snap,\n                            priority: view.priority,\n                            accessor: this,\n                        });\n                    });\n                    panel.orientation = orientation;\n                    this.doAddView(panel);\n                    setTimeout(() => {\n                        // the original onDidAddView events are missed since they are fired before we can subcribe to them\n                        this._onDidAddView.fire(panel);\n                    }, 0);\n                    return { size: view.size, view: panel };\n                }),\n            },\n        });\n        this.layout(this.width, this.height);\n        queue.forEach((f) => f());\n        if (typeof activeView === 'string') {\n            const panel = this.getPanel(activeView);\n            if (panel) {\n                this.setActive(panel);\n            }\n        }\n        this._onDidLayoutfromJSON.fire();\n    }\n    clear() {\n        for (const [_, value] of this._panels.entries()) {\n            value.disposable.dispose();\n            value.value.dispose();\n        }\n        this._panels.clear();\n        this.splitview.dispose();\n    }\n    dispose() {\n        for (const [_, value] of this._panels.entries()) {\n            value.disposable.dispose();\n            value.value.dispose();\n        }\n        this._panels.clear();\n        this.splitview.dispose();\n        super.dispose();\n    }\n}\n","import { Emitter } from '../events';\nimport { PanelApiImpl } from './panelApi';\nexport class SplitviewPanelApiImpl extends PanelApiImpl {\n    //\n    constructor(id) {\n        super(id);\n        this._onDidConstraintsChangeInternal = new Emitter();\n        this.onDidConstraintsChangeInternal = this._onDidConstraintsChangeInternal.event;\n        //\n        this._onDidConstraintsChange = new Emitter({\n            replay: true,\n        });\n        this.onDidConstraintsChange = this._onDidConstraintsChange.event;\n        //\n        this._onDidSizeChange = new Emitter();\n        this.onDidSizeChange = this._onDidSizeChange.event;\n        this.addDisposables(this._onDidConstraintsChangeInternal, this._onDidConstraintsChange, this._onDidSizeChange);\n    }\n    setConstraints(value) {\n        this._onDidConstraintsChangeInternal.fire(value);\n    }\n    setSize(event) {\n        this._onDidSizeChange.fire(event);\n    }\n}\n","import { Emitter } from '../events';\nimport { SplitviewPanelApiImpl } from './splitviewPanelApi';\nexport class PaneviewPanelApiImpl extends SplitviewPanelApiImpl {\n    constructor(id) {\n        super(id);\n        this._onDidExpansionChange = new Emitter({\n            replay: true,\n        });\n        this.onDidExpansionChange = this._onDidExpansionChange.event;\n        this._onMouseEnter = new Emitter({});\n        this.onMouseEnter = this._onMouseEnter.event;\n        this._onMouseLeave = new Emitter({});\n        this.onMouseLeave = this._onMouseLeave.event;\n        this.addDisposables(this._onDidExpansionChange, this._onMouseEnter, this._onMouseLeave);\n    }\n    set pane(pane) {\n        this._pane = pane;\n    }\n    setExpanded(isExpanded) {\n        var _a;\n        (_a = this._pane) === null || _a === void 0 ? void 0 : _a.setExpanded(isExpanded);\n    }\n    get isExpanded() {\n        var _a;\n        return !!((_a = this._pane) === null || _a === void 0 ? void 0 : _a.isExpanded());\n    }\n}\n","import { DragHandler } from '../dnd/abstractDragHandler';\nimport { getPaneData, LocalSelectionTransfer, PaneTransfer, } from '../dnd/dataTransfer';\nimport { Droptarget, Position } from '../dnd/droptarget';\nimport { Emitter } from '../events';\nimport { PaneviewPanel, } from './paneviewPanel';\nexport class DraggablePaneviewPanel extends PaneviewPanel {\n    constructor(id, component, headerComponent, orientation, isExpanded, disableDnd) {\n        super(id, component, headerComponent, orientation, isExpanded, true);\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        if (!disableDnd) {\n            this.initDragFeatures();\n        }\n    }\n    initDragFeatures() {\n        if (!this.header) {\n            return;\n        }\n        const id = this.id;\n        this.header.draggable = true;\n        this.handler = new (class PaneDragHandler extends DragHandler {\n            getData() {\n                LocalSelectionTransfer.getInstance().setData([new PaneTransfer('paneview', id)], PaneTransfer.prototype);\n                return {\n                    dispose: () => {\n                        LocalSelectionTransfer.getInstance().clearData(PaneTransfer.prototype);\n                    },\n                };\n            }\n        })(this.header);\n        this.target = new Droptarget(this.element, {\n            validOverlays: 'vertical',\n            canDisplayOverlay: () => {\n                const data = getPaneData();\n                if (!data) {\n                    return true;\n                }\n                return data.paneId !== this.id;\n            },\n        });\n        this.addDisposables(this._onDidDrop, this.handler, this.target, this.target.onDrop((event) => {\n            this.onDrop(event);\n        }));\n    }\n    onDrop(event) {\n        const data = getPaneData();\n        if (!data) {\n            this._onDidDrop.fire(Object.assign(Object.assign({}, event), { panel: this, getData: () => getPaneData() }));\n            return;\n        }\n        const containerApi = this._params\n            .containerApi;\n        const panelId = data.paneId;\n        const existingPanel = containerApi.getPanel(panelId);\n        if (!existingPanel) {\n            this._onDidDrop.fire(Object.assign(Object.assign({}, event), { panel: this, getData: () => getPaneData() }));\n            return;\n        }\n        const allPanels = containerApi.panels;\n        const fromIndex = allPanels.indexOf(existingPanel);\n        let toIndex = containerApi.panels.indexOf(this);\n        if (event.position === Position.Left ||\n            event.position === Position.Top) {\n            toIndex = Math.max(0, toIndex - 1);\n        }\n        if (event.position === Position.Right ||\n            event.position === Position.Bottom) {\n            if (fromIndex > toIndex) {\n                toIndex++;\n            }\n            toIndex = Math.min(allPanels.length - 1, toIndex);\n        }\n        containerApi.movePanel(fromIndex, toIndex);\n    }\n}\n","import { PaneviewPanelApiImpl } from '../api/paneviewPanelApi';\nimport { addClasses, removeClasses } from '../dom';\nimport { addDisposableListener, Emitter } from '../events';\nimport { BasePanelView, } from '../gridview/basePanelView';\nimport { Orientation } from '../splitview/core/splitview';\nexport class PaneviewPanel extends BasePanelView {\n    constructor(id, component, headerComponent, orientation, isExpanded, isHeaderVisible) {\n        super(id, component, new PaneviewPanelApiImpl(id));\n        this.headerComponent = headerComponent;\n        this._onDidChangeExpansionState = new Emitter({ replay: true });\n        this.onDidChangeExpansionState = this._onDidChangeExpansionState.event;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this.headerSize = 22;\n        this._orthogonalSize = 0;\n        this._size = 0;\n        this._minimumBodySize = 100;\n        this._maximumBodySize = Number.POSITIVE_INFINITY;\n        this._isExpanded = false;\n        this.expandedSize = 0;\n        this.api.pane = this; // TODO cannot use 'this' before 'super'\n        this._isExpanded = isExpanded;\n        this._headerVisible = isHeaderVisible;\n        this._onDidChangeExpansionState.fire(this.isExpanded()); // initialize value\n        this._orientation = orientation;\n        this.element.classList.add('pane');\n        this.addDisposables(this.api.onDidSizeChange((event) => {\n            this._onDidChange.fire(event.size);\n        }), addDisposableListener(this.element, 'mouseenter', (ev) => {\n            this.api._onMouseEnter.fire(ev);\n        }), addDisposableListener(this.element, 'mouseleave', (ev) => {\n            this.api._onMouseLeave.fire(ev);\n        }));\n        this.addDisposables(this._onDidChangeExpansionState, this.onDidChangeExpansionState((isPanelExpanded) => {\n            this.api._onDidExpansionChange.fire({\n                isExpanded: isPanelExpanded,\n            });\n        }), this.api.onDidFocusChange((e) => {\n            if (!this.header) {\n                return;\n            }\n            if (e.isFocused) {\n                addClasses(this.header, 'focused');\n            }\n            else {\n                removeClasses(this.header, 'focused');\n            }\n        }));\n        this.renderOnce();\n    }\n    set orientation(value) {\n        this._orientation = value;\n    }\n    get orientation() {\n        return this._orientation;\n    }\n    get minimumSize() {\n        const headerSize = this.headerSize;\n        const expanded = this.isExpanded();\n        const minimumBodySize = expanded ? this._minimumBodySize : 0;\n        return headerSize + minimumBodySize;\n    }\n    get maximumSize() {\n        const headerSize = this.headerSize;\n        const expanded = this.isExpanded();\n        const maximumBodySize = expanded ? this._maximumBodySize : 0;\n        return headerSize + maximumBodySize;\n    }\n    get size() {\n        return this._size;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    set orthogonalSize(size) {\n        this._orthogonalSize = size;\n    }\n    get minimumBodySize() {\n        return this._minimumBodySize;\n    }\n    set minimumBodySize(value) {\n        this._minimumBodySize = typeof value === 'number' ? value : 0;\n    }\n    get maximumBodySize() {\n        return this._maximumBodySize;\n    }\n    set maximumBodySize(value) {\n        this._maximumBodySize =\n            typeof value === 'number' ? value : Number.POSITIVE_INFINITY;\n    }\n    get headerVisible() {\n        return this._headerVisible;\n    }\n    set headerVisible(value) {\n        this._headerVisible = value;\n        this.header.style.display = value ? '' : 'none';\n    }\n    setVisible(isVisible) {\n        this.api._onDidVisibilityChange.fire({ isVisible });\n    }\n    setActive(isActive) {\n        this.api._onDidActiveChange.fire({ isActive });\n    }\n    isExpanded() {\n        return this._isExpanded;\n    }\n    setExpanded(expanded) {\n        if (this._isExpanded === expanded) {\n            return;\n        }\n        this._isExpanded = expanded;\n        if (expanded) {\n            if (this.animationTimer) {\n                clearTimeout(this.animationTimer);\n            }\n            if (this.body) {\n                this.element.appendChild(this.body);\n            }\n        }\n        else {\n            this.animationTimer = setTimeout(() => {\n                var _a;\n                (_a = this.body) === null || _a === void 0 ? void 0 : _a.remove();\n            }, 200);\n        }\n        this._onDidChange.fire(expanded ? this.width : undefined);\n        this._onDidChangeExpansionState.fire(expanded);\n    }\n    layout(size, orthogonalSize) {\n        this._size = size;\n        this._orthogonalSize = orthogonalSize;\n        const [width, height] = this.orientation === Orientation.HORIZONTAL\n            ? [size, orthogonalSize]\n            : [orthogonalSize, size];\n        if (this.isExpanded()) {\n            this.expandedSize = width;\n        }\n        super.layout(width, height);\n    }\n    init(parameters) {\n        var _a, _b;\n        super.init(parameters);\n        if (typeof parameters.minimumBodySize === 'number') {\n            this.minimumBodySize = parameters.minimumBodySize;\n        }\n        if (typeof parameters.maximumBodySize === 'number') {\n            this.maximumBodySize = parameters.maximumBodySize;\n        }\n        this.bodyPart = this.getBodyComponent();\n        this.headerPart = this.getHeaderComponent();\n        this.bodyPart.init(Object.assign(Object.assign({}, parameters), { api: this.api }));\n        this.headerPart.init(Object.assign(Object.assign({}, parameters), { api: this.api }));\n        (_a = this.body) === null || _a === void 0 ? void 0 : _a.append(this.bodyPart.element);\n        (_b = this.header) === null || _b === void 0 ? void 0 : _b.append(this.headerPart.element);\n        if (typeof parameters.isExpanded === 'boolean') {\n            this.setExpanded(parameters.isExpanded);\n        }\n    }\n    toJSON() {\n        const params = this._params;\n        return Object.assign(Object.assign({}, super.toJSON()), { headerComponent: this.headerComponent, title: params.title });\n    }\n    renderOnce() {\n        this.header = document.createElement('div');\n        this.header.tabIndex = 0;\n        this.header.className = 'pane-header';\n        this.header.style.height = `${this.headerSize}px`;\n        this.header.style.lineHeight = `${this.headerSize}px`;\n        this.header.style.minHeight = `${this.headerSize}px`;\n        this.header.style.maxHeight = `${this.headerSize}px`;\n        this.element.appendChild(this.header);\n        this.body = document.createElement('div');\n        this.body.className = 'pane-body';\n        this.element.appendChild(this.body);\n    }\n    // TODO slightly hacky by-pass of the component to create a body and header component\n    getComponent() {\n        return {\n            update: (params) => {\n                var _a, _b;\n                (_a = this.bodyPart) === null || _a === void 0 ? void 0 : _a.update({ params });\n                (_b = this.headerPart) === null || _b === void 0 ? void 0 : _b.update({ params });\n            },\n            dispose: () => {\n                var _a, _b;\n                (_a = this.bodyPart) === null || _a === void 0 ? void 0 : _a.dispose();\n                (_b = this.headerPart) === null || _b === void 0 ? void 0 : _b.dispose();\n            },\n        };\n    }\n}\n","import { addDisposableListener } from '../events';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nimport { toggleClass } from '../dom';\nexport class DefaultHeader extends CompositeDisposable {\n    constructor() {\n        super();\n        this.disposable = new MutableDisposable();\n        this.apiRef = { api: null };\n        this._element = document.createElement('div');\n        this.element.className = 'default-header';\n        this._content = document.createElement('span');\n        this._expander = document.createElement('a');\n        this.element.appendChild(this._expander);\n        this.element.appendChild(this._content);\n        this.addDisposables(addDisposableListener(this._element, 'click', () => {\n            var _a;\n            (_a = this.apiRef.api) === null || _a === void 0 ? void 0 : _a.setExpanded(!this.apiRef.api.isExpanded);\n        }));\n    }\n    get element() {\n        return this._element;\n    }\n    init(params) {\n        this.apiRef.api = params.api;\n        this._content.textContent = params.title;\n        this._expander.textContent = '▼';\n        toggleClass(this._expander, 'collapsed', !params.api.isExpanded);\n        this.disposable.value = params.api.onDidExpansionChange((e) => {\n            toggleClass(this._expander, 'collapsed', !e.isExpanded);\n        });\n    }\n    update(_params) {\n        //\n    }\n    dispose() {\n        this.disposable.dispose();\n        super.dispose();\n    }\n}\n","import { PaneviewApi } from '../api/component.api';\nimport { createComponent } from '../panel/componentFactory';\nimport { Emitter } from '../events';\nimport { CompositeDisposable, MutableDisposable, } from '../lifecycle';\nimport { Orientation, Sizing, } from '../splitview/core/splitview';\nimport { Paneview } from './paneview';\nimport { DraggablePaneviewPanel, } from './draggablePaneviewPanel';\nimport { DefaultHeader } from './defaultPaneviewHeader';\nexport class PaneFramework extends DraggablePaneviewPanel {\n    constructor(options) {\n        super(options.id, options.component, options.headerComponent, options.orientation, options.isExpanded, options.disableDnd);\n        this.options = options;\n    }\n    getBodyComponent() {\n        return this.options.body;\n    }\n    getHeaderComponent() {\n        return this.options.header;\n    }\n}\nexport class PaneviewComponent extends CompositeDisposable {\n    constructor(element, options) {\n        super();\n        this.element = element;\n        this._disposable = new MutableDisposable();\n        this._viewDisposables = new Map();\n        this._onDidLayoutfromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutfromJSON.event;\n        this._onDidLayoutChange = new Emitter();\n        this.onDidLayoutChange = this._onDidLayoutChange.event;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onDidAddView = new Emitter();\n        this.onDidAddView = this._onDidAddView.event;\n        this._onDidRemoveView = new Emitter();\n        this.onDidRemoveView = this._onDidRemoveView.event;\n        this.addDisposables(this._onDidLayoutChange, this._onDidLayoutfromJSON, this._onDidDrop, this._onDidAddView, this._onDidRemoveView);\n        this._options = options;\n        if (!options.components) {\n            options.components = {};\n        }\n        if (!options.frameworkComponents) {\n            options.frameworkComponents = {};\n        }\n        this.paneview = new Paneview(this.element, {\n            // only allow paneview in the vertical orientation for now\n            orientation: Orientation.VERTICAL,\n        });\n        this.addDisposables(this._disposable);\n    }\n    get panels() {\n        return this.paneview.getPanes();\n    }\n    set paneview(value) {\n        this._paneview = value;\n        this._disposable.value = new CompositeDisposable(this._paneview.onDidChange(() => {\n            this._onDidLayoutChange.fire(undefined);\n        }), this._paneview.onDidAddView((e) => this._onDidAddView.fire(e)), this._paneview.onDidRemoveView((e) => this._onDidRemoveView.fire(e)));\n    }\n    get paneview() {\n        return this._paneview;\n    }\n    get minimumSize() {\n        return this.paneview.minimumSize;\n    }\n    get maximumSize() {\n        return this.paneview.maximumSize;\n    }\n    get height() {\n        return this.paneview.orientation === Orientation.HORIZONTAL\n            ? this.paneview.orthogonalSize\n            : this.paneview.size;\n    }\n    get width() {\n        return this.paneview.orientation === Orientation.HORIZONTAL\n            ? this.paneview.size\n            : this.paneview.orthogonalSize;\n    }\n    get options() {\n        return this._options;\n    }\n    focus() {\n        //\n    }\n    updateOptions(options) {\n        this._options = Object.assign(Object.assign({}, this.options), options);\n    }\n    addPanel(options) {\n        const body = createComponent(options.id, options.component, this.options.components || {}, this.options.frameworkComponents || {}, this.options.frameworkWrapper\n            ? {\n                createComponent: this.options.frameworkWrapper.body.createComponent,\n            }\n            : undefined);\n        let header;\n        if (options.headerComponent) {\n            header = createComponent(options.id, options.headerComponent, this.options.headerComponents || {}, this.options.headerframeworkComponents, this.options.frameworkWrapper\n                ? {\n                    createComponent: this.options.frameworkWrapper.header\n                        .createComponent,\n                }\n                : undefined);\n        }\n        else {\n            header = new DefaultHeader();\n        }\n        const view = new PaneFramework({\n            id: options.id,\n            component: options.component,\n            headerComponent: options.headerComponent,\n            header,\n            body,\n            orientation: Orientation.VERTICAL,\n            isExpanded: !!options.isExpanded,\n            disableDnd: !!this.options.disableDnd,\n        });\n        this.doAddPanel(view);\n        const size = typeof options.size === 'number' ? options.size : Sizing.Distribute;\n        const index = typeof options.index === 'number' ? options.index : undefined;\n        view.init({\n            params: options.params || {},\n            minimumBodySize: options.minimumBodySize,\n            maximumBodySize: options.maximumBodySize,\n            isExpanded: options.isExpanded,\n            title: options.title,\n            containerApi: new PaneviewApi(this),\n        });\n        this.paneview.addPane(view, size, index);\n        view.orientation = this.paneview.orientation;\n        return view;\n    }\n    removePanel(panel) {\n        const views = this.panels;\n        const index = views.findIndex((_) => _ === panel);\n        this.paneview.removePane(index);\n        this.doRemovePanel(panel);\n    }\n    movePanel(from, to) {\n        this.paneview.moveView(from, to);\n    }\n    getPanel(id) {\n        return this.panels.find((view) => view.id === id);\n    }\n    layout(width, height) {\n        const [size, orthogonalSize] = this.paneview.orientation === Orientation.HORIZONTAL\n            ? [width, height]\n            : [height, width];\n        this.paneview.layout(size, orthogonalSize);\n    }\n    toJSON() {\n        const maximum = (value) => value === Number.MAX_SAFE_INTEGER ||\n            value === Number.POSITIVE_INFINITY\n            ? undefined\n            : value;\n        const minimum = (value) => (value <= 0 ? undefined : value);\n        const views = this.paneview\n            .getPanes()\n            .map((view, i) => {\n            const size = this.paneview.getViewSize(i);\n            return {\n                size,\n                data: view.toJSON(),\n                minimumSize: minimum(view.minimumBodySize),\n                maximumSize: maximum(view.maximumBodySize),\n                expanded: view.isExpanded(),\n            };\n        });\n        return {\n            views,\n            size: this.paneview.size,\n        };\n    }\n    fromJSON(serializedPaneview) {\n        this.clear();\n        const { views, size } = serializedPaneview;\n        const queue = [];\n        this.paneview = new Paneview(this.element, {\n            orientation: Orientation.VERTICAL,\n            descriptor: {\n                size,\n                views: views.map((view) => {\n                    const data = view.data;\n                    const body = createComponent(data.id, data.component, this.options.components || {}, this.options.frameworkComponents || {}, this.options.frameworkWrapper\n                        ? {\n                            createComponent: this.options.frameworkWrapper.body\n                                .createComponent,\n                        }\n                        : undefined);\n                    let header;\n                    if (data.headerComponent) {\n                        header = createComponent(data.id, data.headerComponent, this.options.headerComponents || {}, this.options.headerframeworkComponents || {}, this.options.frameworkWrapper\n                            ? {\n                                createComponent: this.options.frameworkWrapper.header\n                                    .createComponent,\n                            }\n                            : undefined);\n                    }\n                    else {\n                        header = new DefaultHeader();\n                    }\n                    const panel = new PaneFramework({\n                        id: data.id,\n                        component: data.component,\n                        headerComponent: data.headerComponent,\n                        header,\n                        body,\n                        orientation: Orientation.VERTICAL,\n                        isExpanded: !!view.expanded,\n                        disableDnd: !!this.options.disableDnd,\n                    });\n                    this.doAddPanel(panel);\n                    queue.push(() => {\n                        panel.init({\n                            params: data.params || {},\n                            minimumBodySize: view.minimumSize,\n                            maximumBodySize: view.maximumSize,\n                            title: data.title,\n                            isExpanded: !!view.expanded,\n                            containerApi: new PaneviewApi(this),\n                        });\n                        panel.orientation = this.paneview.orientation;\n                    });\n                    setTimeout(() => {\n                        // the original onDidAddView events are missed since they are fired before we can subcribe to them\n                        this._onDidAddView.fire(panel);\n                    }, 0);\n                    return { size: view.size, view: panel };\n                }),\n            },\n        });\n        this.layout(this.width, this.height);\n        queue.forEach((f) => f());\n        this._onDidLayoutfromJSON.fire();\n    }\n    clear() {\n        for (const [_, value] of this._viewDisposables.entries()) {\n            value.dispose();\n        }\n        this._viewDisposables.clear();\n        this.paneview.dispose();\n    }\n    doAddPanel(panel) {\n        const disposable = panel.onDidDrop((event) => {\n            this._onDidDrop.fire(event);\n        });\n        this._viewDisposables.set(panel.id, disposable);\n    }\n    doRemovePanel(panel) {\n        const disposable = this._viewDisposables.get(panel.id);\n        if (disposable) {\n            disposable.dispose();\n            this._viewDisposables.delete(panel.id);\n        }\n    }\n    dispose() {\n        super.dispose();\n        for (const [_, value] of this._viewDisposables.entries()) {\n            value.dispose();\n        }\n        this._viewDisposables.clear();\n        this.paneview.dispose();\n    }\n}\n","import { BasePanelView, } from '../gridview/basePanelView';\nimport { SplitviewPanelApiImpl } from '../api/splitviewPanelApi';\nimport { Orientation } from './core/splitview';\nimport { Emitter } from '../events';\nexport class SplitviewPanel extends BasePanelView {\n    constructor(id, componentName) {\n        super(id, componentName, new SplitviewPanelApiImpl(id));\n        this._evaluatedMinimumSize = 0;\n        this._evaluatedMaximumSize = Number.POSITIVE_INFINITY;\n        this._minimumSize = 0;\n        this._maximumSize = Number.POSITIVE_INFINITY;\n        this._snap = false;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this.addDisposables(this._onDidChange, this.api.onVisibilityChange((event) => {\n            const { isVisible } = event;\n            const { accessor } = this._params;\n            accessor.setVisible(this, isVisible);\n        }), this.api.onActiveChange(() => {\n            const { accessor } = this._params;\n            accessor.setActive(this);\n        }), this.api.onDidConstraintsChangeInternal((event) => {\n            if (typeof event.minimumSize === 'number' ||\n                typeof event.minimumSize === 'function') {\n                this._minimumSize = event.minimumSize;\n            }\n            if (typeof event.maximumSize === 'number' ||\n                typeof event.maximumSize === 'function') {\n                this._maximumSize = event.maximumSize;\n            }\n            this.updateConstraints();\n        }), this.api.onDidSizeChange((event) => {\n            this._onDidChange.fire(event.size);\n        }));\n    }\n    get priority() {\n        return this._priority;\n    }\n    set orientation(value) {\n        this._orientation = value;\n    }\n    get orientation() {\n        return this._orientation;\n    }\n    get minimumSize() {\n        const size = typeof this._minimumSize === 'function'\n            ? this._minimumSize()\n            : this._minimumSize;\n        if (size !== this._evaluatedMinimumSize) {\n            this._evaluatedMinimumSize = size;\n            this.updateConstraints();\n        }\n        return size;\n    }\n    get maximumSize() {\n        const size = typeof this._maximumSize === 'function'\n            ? this._maximumSize()\n            : this._maximumSize;\n        if (size !== this._evaluatedMaximumSize) {\n            this._evaluatedMaximumSize = size;\n            this.updateConstraints();\n        }\n        return size;\n    }\n    get snap() {\n        return this._snap;\n    }\n    setVisible(isVisible) {\n        this.api._onDidVisibilityChange.fire({ isVisible });\n    }\n    setActive(isActive) {\n        this.api._onDidActiveChange.fire({ isActive });\n    }\n    layout(size, orthogonalSize) {\n        const [width, height] = this.orientation === Orientation.HORIZONTAL\n            ? [size, orthogonalSize]\n            : [orthogonalSize, size];\n        super.layout(width, height);\n    }\n    init(parameters) {\n        super.init(parameters);\n        this._priority = parameters.priority;\n        if (parameters.minimumSize) {\n            this._minimumSize = parameters.minimumSize;\n        }\n        if (parameters.maximumSize) {\n            this._maximumSize = parameters.maximumSize;\n        }\n        if (parameters.snap) {\n            this._snap = parameters.snap;\n        }\n    }\n    toJSON() {\n        const maximum = (value) => value === Number.MAX_SAFE_INTEGER ||\n            value === Number.POSITIVE_INFINITY\n            ? undefined\n            : value;\n        const minimum = (value) => (value <= 0 ? undefined : value);\n        return Object.assign(Object.assign({}, super.toJSON()), { minimumSize: minimum(this.minimumSize), maximumSize: maximum(this.maximumSize) });\n    }\n    updateConstraints() {\n        this.api._onDidConstraintsChange.fire({\n            maximumSize: this._evaluatedMaximumSize,\n            minimumSize: this._evaluatedMinimumSize,\n        });\n    }\n}\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { sequentialNumberGenerator } from '../math';\n/**\n * This component is intended to interface between vanilla-js and React hence we need to be\n * creative in how we update props.\n * A ref of the component is exposed with an update method; which when called stores the props\n * as a ref within this component and forcefully triggers a re-render of the component using\n * the ref of props we just set on the renderered component as the props passed to the inner\n * component\n */\nconst ReactComponentBridge = (props, ref) => {\n    const [_, triggerRender] = React.useState();\n    const _props = React.useRef(props.componentProps);\n    React.useImperativeHandle(ref, () => ({\n        update: (componentProps) => {\n            _props.current = Object.assign(Object.assign({}, _props.current), componentProps);\n            /**\n             * setting a arbitrary piece of state within this component will\n             * trigger a re-render.\n             * we use this rather than updating through a prop since we can\n             * pass a ref into the vanilla-js world.\n             */\n            triggerRender(Date.now());\n        },\n    }), []);\n    return React.createElement(props.component, _props.current);\n};\nReactComponentBridge.displayName = 'DockviewReactJsBridge';\n/**\n * Since we are storing the React.Portal references in a rendered array they\n * require a key property like any other React element rendered in an array\n * to prevent excessive re-rendering\n */\nconst uniquePortalKeyGenerator = sequentialNumberGenerator();\nexport const ReactPartContext = React.createContext({});\nexport class ReactPart {\n    constructor(parent, portalStore, component, parameters, context) {\n        this.parent = parent;\n        this.portalStore = portalStore;\n        this.component = component;\n        this.parameters = parameters;\n        this.context = context;\n        this.disposed = false;\n        this.createPortal();\n    }\n    update(props) {\n        var _a;\n        if (this.disposed) {\n            throw new Error('invalid operation: resource is already disposed');\n        }\n        (_a = this.componentInstance) === null || _a === void 0 ? void 0 : _a.update(props);\n    }\n    createPortal() {\n        if (this.disposed) {\n            throw new Error('invalid operation: resource is already disposed');\n        }\n        if (typeof this.component !== 'function') {\n            /**\n             * we know this isn't a React.FunctionComponent so throw an error here.\n             * if we do not intercept this the React library will throw a very obsure error\n             * for the same reason, at least at this point we will emit a sensible stacktrace.\n             */\n            throw new Error('Invalid Operation. dockview only supports React Functional Components.');\n        }\n        const bridgeComponent = React.createElement(React.forwardRef(ReactComponentBridge), {\n            component: this\n                .component,\n            componentProps: this.parameters,\n            ref: (element) => {\n                this.componentInstance = element;\n            },\n        });\n        const node = this.context\n            ? React.createElement(ReactPartContext.Provider, { value: this.context }, bridgeComponent)\n            : bridgeComponent;\n        const portal = ReactDOM.createPortal(node, this.parent, uniquePortalKeyGenerator.next());\n        this.ref = {\n            portal,\n            disposable: this.portalStore.addPortal(portal),\n        };\n    }\n    dispose() {\n        var _a;\n        (_a = this.ref) === null || _a === void 0 ? void 0 : _a.disposable.dispose();\n        this.disposed = true;\n    }\n}\n/**\n * A React Hook that returns an array of portals to be rendered by the user of this hook\n * and a disposable function to add a portal. Calling dispose removes this portal from the\n * portal array\n */\nexport const usePortalsLifecycle = () => {\n    const [portals, setPortals] = React.useState([]);\n    React.useDebugValue(`Portal count: ${portals.length}`);\n    const addPortal = React.useCallback((portal) => {\n        setPortals((existingPortals) => [...existingPortals, portal]);\n        let disposed = false;\n        return {\n            dispose: () => {\n                if (disposed) {\n                    throw new Error('invalid operation: resource already disposed');\n                }\n                disposed = true;\n                setPortals((existingPortals) => existingPortals.filter((p) => p !== portal));\n            },\n        };\n    }, []);\n    return [portals, addPortal];\n};\n// it does the job...\nexport function isReactElement(element) {\n    return element === null || element === void 0 ? void 0 : element.type;\n}\n","import { ReactPart } from '../react';\nimport { Emitter } from '../../events';\nexport class ReactPanelContentPart {\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._onDidFocus = new Emitter();\n        this.onDidFocus = this._onDidFocus.event;\n        this._onDidBlur = new Emitter();\n        this.onDidBlur = this._onDidBlur.event;\n        this._element = document.createElement('div');\n        this._element.className = 'dockview-react-part';\n        this._actionsElement = document.createElement('div');\n        this._actionsElement.className = 'dockview-react-part';\n    }\n    get element() {\n        return this._element;\n    }\n    get actions() {\n        return this._actionsElement;\n    }\n    focus() {\n        // TODO\n    }\n    init(parameters) {\n        const context = {\n            api: parameters.api,\n            containerApi: parameters.containerApi,\n            actionsPortalElement: this._actionsElement,\n            tabPortalElement: parameters.tab,\n        };\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            params: parameters.params,\n            api: parameters.api,\n            containerApi: parameters.containerApi,\n        }, context);\n    }\n    toJSON() {\n        return {\n            id: this.id,\n        };\n    }\n    update(event) {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update(event.params);\n    }\n    updateParentGroup(group, _isPanelVisible) {\n        this._group = group;\n    }\n    layout(_width, _height) {\n        // noop\n    }\n    dispose() {\n        var _a, _b;\n        this._onDidFocus.dispose();\n        this._onDidBlur.dispose();\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n        (_b = this.actionsPart) === null || _b === void 0 ? void 0 : _b.dispose();\n    }\n}\n","import { ReactPart } from '../react';\nexport class ReactPanelHeaderPart {\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._element = document.createElement('div');\n        this._element.className = 'dockview-react-part';\n    }\n    get element() {\n        return this._element;\n    }\n    focus() {\n        //noop\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            params: parameters.params,\n            api: parameters.api,\n            containerApi: parameters.containerApi,\n        });\n    }\n    update(event) {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update(event.params);\n    }\n    toJSON() {\n        return {\n            id: this.id,\n        };\n    }\n    layout(_width, _height) {\n        // noop - retrieval from api\n    }\n    updateParentGroup(_group, _isPanelVisible) {\n        // noop - retrieval from api\n    }\n    dispose() {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import { DockviewGroupPanel } from '../dockview/dockviewGroupPanel';\nimport { createComponent } from '../panel/componentFactory';\nimport { DockviewApi } from '../api/component.api';\nimport { DefaultTab } from '../dockview/components/tab/defaultTab';\nimport { DefaultGroupPanelView } from '../dockview/defaultGroupPanelView';\nexport class ReactPanelDeserialzier {\n    constructor(layout) {\n        this.layout = layout;\n    }\n    fromJSON(panelData, group) {\n        var _a, _b, _c;\n        const panelId = panelData.id;\n        const params = panelData.params;\n        const title = panelData.title;\n        const suppressClosable = panelData.suppressClosable;\n        const viewData = panelData.view;\n        const view = new DefaultGroupPanelView({\n            content: createComponent(viewData.content.id, viewData.content.id, this.layout.options.components, this.layout.options.frameworkComponents, (_a = this.layout.options.frameworkComponentFactory) === null || _a === void 0 ? void 0 : _a.content),\n            tab: ((_b = viewData.tab) === null || _b === void 0 ? void 0 : _b.id)\n                ? createComponent(viewData.tab.id, viewData.tab.id, this.layout.options.tabComponents, this.layout.options.frameworkTabComponents, (_c = this.layout.options.frameworkComponentFactory) === null || _c === void 0 ? void 0 : _c.tab)\n                : new DefaultTab(),\n        });\n        const panel = new DockviewGroupPanel(panelId, this.layout, new DockviewApi(this.layout), group);\n        panel.init({\n            view,\n            title,\n            suppressClosable,\n            params: params || {},\n        });\n        return panel;\n    }\n}\n","import { ReactPart } from '../react';\nexport class ReactWatermarkPart {\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._groupRef = {\n            value: undefined,\n        };\n        this._element = document.createElement('div');\n        this._element.className = 'dockview-react-part';\n    }\n    get element() {\n        return this._element;\n    }\n    init(parameters) {\n        this.parameters = parameters;\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            params: parameters.params,\n            api: parameters.api,\n            containerApi: parameters.containerApi,\n            close: () => {\n                if (this._groupRef.value) {\n                    parameters.containerApi.removeGroup(this._groupRef.value);\n                }\n            },\n        });\n    }\n    focus() {\n        // noop\n    }\n    update(params) {\n        var _a, _b;\n        if (this.parameters) {\n            this.parameters.params = params.params;\n        }\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update({ params: ((_b = this.parameters) === null || _b === void 0 ? void 0 : _b.params) || {} });\n    }\n    toJSON() {\n        return {\n            id: this.id,\n        };\n    }\n    layout(_width, _height) {\n        // noop - retrieval from api\n    }\n    updateParentGroup(group, _isPanelVisible) {\n        // noop - retrieval from api\n        this._groupRef.value = group;\n    }\n    dispose() {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import * as React from 'react';\nimport { DockviewComponent, } from '../../dockview/dockviewComponent';\nimport { ReactPanelContentPart } from './reactContentPart';\nimport { ReactPanelHeaderPart } from './reactHeaderPart';\nimport { ReactPanelDeserialzier } from '../deserializer';\nimport { usePortalsLifecycle } from '../react';\nimport { DockviewApi } from '../../api/component.api';\nimport { ReactWatermarkPart } from './reactWatermarkPart';\nimport { watchElementResize } from '../../dom';\nexport const DockviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const dockviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    React.useEffect(() => {\n        if (props.disableAutoResizing) {\n            return () => {\n                //\n            };\n        }\n        const watcher = watchElementResize(domRef.current, (entry) => {\n            var _a;\n            const { width, height } = entry.contentRect;\n            (_a = dockviewRef.current) === null || _a === void 0 ? void 0 : _a.layout(width, height);\n        });\n        return () => {\n            watcher.dispose();\n        };\n    }, [props.disableAutoResizing]);\n    React.useEffect(() => {\n        var _a;\n        const factory = {\n            content: {\n                createComponent: (_id, componentId, component) => {\n                    return new ReactPanelContentPart(componentId, component, {\n                        addPortal,\n                    });\n                },\n            },\n            tab: {\n                createComponent: (_id, componentId, component) => {\n                    return new ReactPanelHeaderPart(componentId, component, {\n                        addPortal,\n                    });\n                },\n            },\n            watermark: {\n                createComponent: (_id, componentId, component) => {\n                    return new ReactWatermarkPart(componentId, component, {\n                        addPortal,\n                    });\n                },\n            },\n        };\n        const element = document.createElement('div');\n        const dockview = new DockviewComponent(element, {\n            frameworkComponentFactory: factory,\n            frameworkComponents: props.components,\n            frameworkTabComponents: props.tabComponents,\n            tabHeight: props.tabHeight,\n            watermarkFrameworkComponent: props.watermarkComponent,\n            styles: props.hideBorders\n                ? { separatorBorder: 'transparent' }\n                : undefined,\n        });\n        (_a = domRef.current) === null || _a === void 0 ? void 0 : _a.appendChild(dockview.element);\n        dockview.deserializer = new ReactPanelDeserialzier(dockview);\n        const { clientWidth, clientHeight } = domRef.current;\n        dockview.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api: new DockviewApi(dockview) });\n        }\n        dockviewRef.current = dockview;\n        return () => {\n            dockview.dispose();\n            element.remove();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const disposable = dockviewRef.current.onDidDrop((event) => {\n            if (props.onDidDrop) {\n                props.onDidDrop(event);\n            }\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.onDidDrop]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            frameworkComponents: props.components,\n        });\n    }, [props.components]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            watermarkFrameworkComponent: props.watermarkComponent,\n        });\n    }, [props.watermarkComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            showDndOverlay: props.showDndOverlay,\n        });\n    }, [props.showDndOverlay]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            frameworkTabComponents: props.tabComponents,\n        });\n    }, [props.tabComponents]);\n    React.useEffect(() => {\n        if (!props.onTabContextMenu || !dockviewRef.current) {\n            return () => {\n                //noop\n            };\n        }\n        const disposable = dockviewRef.current.onTabContextMenu((event) => {\n            if (props.onTabContextMenu) {\n                props.onTabContextMenu(event);\n            }\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.onTabContextMenu]);\n    return (React.createElement(\"div\", { className: props.className, style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nDockviewReact.displayName = 'DockviewComponent';\n","import { SplitviewApi } from '../../api/component.api';\nimport { SplitviewPanel } from '../../splitview/splitviewPanel';\nimport { ReactPart } from '../react';\nexport class ReactPanelView extends SplitviewPanel {\n    constructor(id, component, reactComponent, reactPortalStore) {\n        super(id, component);\n        this.reactComponent = reactComponent;\n        this.reactPortalStore = reactPortalStore;\n    }\n    getComponent() {\n        var _a;\n        return new ReactPart(this.element, this.reactPortalStore, this.reactComponent, {\n            params: ((_a = this._params) === null || _a === void 0 ? void 0 : _a.params) || {},\n            api: this.api,\n            containerApi: new SplitviewApi(this._params.accessor),\n        });\n    }\n}\n","import * as React from 'react';\nimport { SplitviewApi } from '../../api/component.api';\nimport { SplitviewComponent, } from '../../splitview/splitviewComponent';\nimport { Orientation } from '../../splitview/core/splitview';\nimport { usePortalsLifecycle } from '../react';\nimport { ReactPanelView } from './view';\nimport { watchElementResize } from '../../dom';\nexport const SplitviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const splitviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    React.useEffect(() => {\n        if (props.disableAutoResizing) {\n            return () => {\n                //\n            };\n        }\n        const watcher = watchElementResize(domRef.current, (entry) => {\n            var _a;\n            const { width, height } = entry.contentRect;\n            (_a = splitviewRef.current) === null || _a === void 0 ? void 0 : _a.layout(width, height);\n        });\n        return () => {\n            watcher.dispose();\n        };\n    }, [props.disableAutoResizing]);\n    React.useEffect(() => {\n        const splitview = new SplitviewComponent(domRef.current, {\n            orientation: props.orientation || Orientation.HORIZONTAL,\n            frameworkComponents: props.components,\n            frameworkWrapper: {\n                createComponent: (id, componentId, component) => {\n                    return new ReactPanelView(id, componentId, component, {\n                        addPortal,\n                    });\n                },\n            },\n            proportionalLayout: typeof props.proportionalLayout === 'boolean'\n                ? props.proportionalLayout\n                : true,\n            styles: props.hideBorders\n                ? { separatorBorder: 'transparent' }\n                : undefined,\n        });\n        const { clientWidth, clientHeight } = domRef.current;\n        splitview.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api: new SplitviewApi(splitview) });\n        }\n        splitviewRef.current = splitview;\n        return () => {\n            splitview.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!splitviewRef.current) {\n            return;\n        }\n        splitviewRef.current.updateOptions({\n            frameworkComponents: props.components,\n        });\n    }, [props.components]);\n    return (React.createElement(\"div\", { className: props.className, style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nSplitviewReact.displayName = 'SplitviewComponent';\n","import { GridviewApi } from '../../api/component.api';\nimport { GridviewPanel, } from '../../gridview/gridviewPanel';\nimport { ReactPart } from '../react';\nexport class ReactGridPanelView extends GridviewPanel {\n    constructor(id, component, reactComponent, reactPortalStore) {\n        super(id, component);\n        this.reactComponent = reactComponent;\n        this.reactPortalStore = reactPortalStore;\n    }\n    getComponent() {\n        var _a;\n        return new ReactPart(this.element, this.reactPortalStore, this.reactComponent, {\n            params: ((_a = this._params) === null || _a === void 0 ? void 0 : _a.params) || {},\n            api: this.api,\n            containerApi: new GridviewApi(this._params.accessor),\n        });\n    }\n}\n","import * as React from 'react';\nimport { GridviewComponent, } from '../../gridview/gridviewComponent';\nimport { Orientation } from '../../splitview/core/splitview';\nimport { ReactGridPanelView } from './view';\nimport { usePortalsLifecycle } from '../react';\nimport { GridviewApi } from '../../api/component.api';\nimport { watchElementResize } from '../../dom';\nexport const GridviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const gridviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    React.useEffect(() => {\n        if (props.disableAutoResizing) {\n            return () => {\n                //\n            };\n        }\n        const watcher = watchElementResize(domRef.current, (entry) => {\n            var _a;\n            const { width, height } = entry.contentRect;\n            (_a = gridviewRef.current) === null || _a === void 0 ? void 0 : _a.layout(width, height);\n        });\n        return () => {\n            watcher.dispose();\n        };\n    }, [props.disableAutoResizing]);\n    React.useEffect(() => {\n        var _a;\n        const element = document.createElement('div');\n        const gridview = new GridviewComponent(element, {\n            proportionalLayout: typeof props.proportionalLayout === 'boolean'\n                ? props.proportionalLayout\n                : true,\n            orientation: props.orientation || Orientation.HORIZONTAL,\n            frameworkComponents: props.components,\n            frameworkComponentFactory: {\n                createComponent: (id, componentId, component) => {\n                    return new ReactGridPanelView(id, componentId, component, {\n                        addPortal,\n                    });\n                },\n            },\n            styles: props.hideBorders\n                ? { separatorBorder: 'transparent' }\n                : undefined,\n        });\n        (_a = domRef.current) === null || _a === void 0 ? void 0 : _a.appendChild(gridview.element);\n        const { clientWidth, clientHeight } = domRef.current;\n        gridview.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api: new GridviewApi(gridview) });\n        }\n        gridviewRef.current = gridview;\n        return () => {\n            gridview.dispose();\n            element.remove();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!gridviewRef.current) {\n            return;\n        }\n        gridviewRef.current.updateOptions({\n            frameworkComponents: props.components,\n        });\n    }, [props.components]);\n    return (React.createElement(\"div\", { className: props.className, style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nGridviewReact.displayName = 'GridviewComponent';\n","import { ReactPart } from '../react';\nexport class PanePanelSection {\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._element = document.createElement('div');\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    get element() {\n        return this._element;\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            params: parameters.params,\n            api: parameters.api,\n            title: parameters.title,\n            containerApi: parameters.containerApi,\n        });\n    }\n    toJSON() {\n        return {\n            id: this.id,\n        };\n    }\n    update(params) {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update(params.params);\n    }\n    dispose() {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import * as React from 'react';\nimport { PaneviewComponent, } from '../../paneview/paneviewComponent';\nimport { usePortalsLifecycle } from '../react';\nimport { PaneviewApi } from '../../api/component.api';\nimport { PanePanelSection } from './view';\nimport { watchElementResize } from '../../dom';\nexport const PaneviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const paneviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    React.useEffect(() => {\n        if (props.disableAutoResizing) {\n            return () => {\n                //\n            };\n        }\n        const watcher = watchElementResize(domRef.current, (entry) => {\n            var _a;\n            const { width, height } = entry.contentRect;\n            (_a = paneviewRef.current) === null || _a === void 0 ? void 0 : _a.layout(width, height);\n        });\n        return () => {\n            watcher.dispose();\n        };\n    }, [props.disableAutoResizing]);\n    React.useEffect(() => {\n        const createComponent = (id, _componentId, component) => new PanePanelSection(id, component, {\n            addPortal,\n        });\n        const paneview = new PaneviewComponent(domRef.current, {\n            frameworkComponents: props.components,\n            components: {},\n            headerComponents: {},\n            disableDnd: props.disableDnd,\n            headerframeworkComponents: props.headerComponents,\n            frameworkWrapper: {\n                header: {\n                    createComponent,\n                },\n                body: {\n                    createComponent,\n                },\n            },\n        });\n        const api = new PaneviewApi(paneview);\n        const { clientWidth, clientHeight } = domRef.current;\n        paneview.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api });\n        }\n        paneviewRef.current = paneview;\n        return () => {\n            paneview.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return;\n        }\n        paneviewRef.current.updateOptions({\n            frameworkComponents: props.components,\n        });\n    }, [props.components]);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return;\n        }\n        paneviewRef.current.updateOptions({\n            headerframeworkComponents: props.headerComponents,\n        });\n    }, [props.headerComponents]);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return () => {\n                //\n            };\n        }\n        const paneview = paneviewRef.current;\n        const disposable = paneview.onDidDrop((event) => {\n            if (props.onDidDrop) {\n                props.onDidDrop(Object.assign(Object.assign({}, event), { api: new PaneviewApi(paneview) }));\n            }\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.onDidDrop]);\n    return (React.createElement(\"div\", { className: props.className, style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nPaneviewReact.displayName = 'PaneviewComponent';\n","import {\n    DockviewReact,\n    DockviewReadyEvent,\n    IDockviewPanelProps,\n    PanelApi,\n} from 'dockview';\nimport * as React from 'react';\n\nconst components = {\n    default: (props: IDockviewPanelProps<{ title: string }>) => {\n        return <div style={{ padding: '20px' }}>{props.params.title}</div>;\n    },\n};\n\nconst RenderWhenVisible = <T,>(\n    props: T & {\n        children: React.FunctionComponent<T>;\n        api: Pick<PanelApi, 'isVisible' | 'onDidVisibilityChange'>;\n    }\n) => {\n    const [visible, setVisible] = React.useState<boolean>(props.api.isVisible);\n\n    React.useEffect(() => {\n        const disposable = props.api.onDidVisibilityChange((event) =>\n            setVisible(event.isVisible)\n        );\n\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.api]);\n\n    if (!visible) {\n        return null;\n    }\n\n    return React.createElement(props.children, props);\n};\n\nexport const SimpleDockview = () => {\n    const onReady = (event: DockviewReadyEvent) => {\n        const panel = event.api.addPanel({\n            id: 'panel_1',\n            component: 'default',\n            params: {\n                title: 'Panel 1',\n            },\n        });\n\n        panel.group.locked = true;\n        panel.group.header.hidden = true;\n\n        event.api.addPanel({\n            id: 'panel_2',\n            component: 'default',\n            params: {\n                title: 'Panel 2',\n            },\n        });\n\n        event.api.addPanel({\n            id: 'panel_3',\n            component: 'default',\n            params: {\n                title: 'Panel 3',\n            },\n        });\n\n        event.api.addPanel({\n            id: 'panel_4',\n            component: 'default',\n            params: {\n                title: 'Panel 4',\n            },\n            position: { referencePanel: 'panel_1', direction: 'right' },\n        });\n\n        const panel5 = event.api.addPanel({\n            id: 'panel_5',\n            component: 'default',\n            params: {\n                title: 'Panel 5',\n            },\n            position: { referencePanel: 'panel_3', direction: 'right' },\n        });\n\n        // panel5.group!.model.header.hidden = true;\n        // panel5.group!.model.locked = true;\n\n        event.api.addPanel({\n            id: 'panel_6',\n            component: 'default',\n            params: {\n                title: 'Panel 6',\n            },\n            position: { referencePanel: 'panel_5', direction: 'below' },\n        });\n\n        event.api.addPanel({\n            id: 'panel_7',\n            component: 'default',\n            params: {\n                title: 'Panel 7',\n            },\n            position: { referencePanel: 'panel_6', direction: 'right' },\n        });\n    };\n\n    return (\n        <DockviewReact\n            components={components}\n            onReady={onReady}\n            className=\"dockview-theme-dark\"\n        />\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"heroBanner\":\"heroBanner_qdFl\",\"buttons\":\"buttons_AeoN\"};","import React from 'react';\nimport clsx from 'clsx';\nimport Layout from '@theme/Layout';\nimport Link from '@docusaurus/Link';\nimport useDocusaurusContext from '@docusaurus/useDocusaurusContext';\nimport styles from './index.module.css';\nimport HomepageFeatures from '@site/src/components/HomepageFeatures';\nimport { SimpleDockview } from '../components/simpleDockview';\n\nfunction HomepageHeader() {\n    const { siteConfig } = useDocusaurusContext();\n    return (\n        <header className={clsx('hero hero--primary', styles.heroBanner)}>\n            <div className=\"container\">\n                <h1 className=\"hero__title\">{siteConfig.title}</h1>\n                <p className=\"hero__subtitle\">{siteConfig.tagline}</p>\n                <div className={styles.buttons}>\n                    <Link\n                        className=\"button button--secondary button--lg\"\n                        to=\"/docs\"\n                    >\n                        Get Started\n                    </Link>\n                </div>\n            </div>\n        </header>\n    );\n}\n\nexport default function Home(): JSX.Element {\n    const { siteConfig } = useDocusaurusContext();\n    return (\n        <Layout\n            title={`Hello from ${siteConfig.title}`}\n            description=\"Description will go into a meta tag in <head />\"\n        >\n            <HomepageHeader />\n            <main className=\"container\">\n                <div style={{ height: '500px', padding: '20px 0px' }}>\n                    <SimpleDockview />\n                </div>\n                {/* <HomepageFeatures /> */}\n            </main>\n        </Layout>\n    );\n}\n"],"names":["TransferObject","PanelTransfer","viewId","groupId","panelId","PaneTransfer","paneId","LocalSelectionTransfer","getInstance","INSTANCE","hasData","proto","this","clearData","undefined","data","getData","setData","getPanelData","panelTransfer","prototype","getPaneData","paneTransfer","Event","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","Constructor","protoProps","staticProps","any","children","listener","disposables","map","child","dispose","forEach","d","Emitter","options","_listeners","_disposed","fire","e","_last","_event","_a","replay","push","index","indexOf","splice","addDisposableWindowListener","element","type","addEventListener","removeEventListener","addDisposableListener","Disposable","TickDelayedEvent","_onFired","onEvent","event","timer","clearTimeout","setTimeout","NONE","CompositeDisposable","args","from","addDisposables","arg","MutableDisposable","_disposable","disposable","watchElementResize","cb","observer","ResizeObserver","entires","firstEntry","observe","unobserve","disconnect","removeClasses","classes","classname","classList","contains","remove","addClasses","add","toggleClass","className","isToggled","hasClass","isAncestor","testChild","testAncestor","parentNode","getElementsByTagName","tag","Array","slice","call","document","trackFocus","FocusTracker","_onDidFocus","onDidFocus","_onDidBlur","onDidBlur","hasFocus","activeElement","loosingFocus","onFocus","onBlur","window","_refreshStateHandler","HTMLElement","refreshState","clamp","value","min","max","Error","Math","sequentialNumberGenerator","next","toString","tail","arr","sequenceEquals","arr1","arr2","pushToStart","unshift","pushToEnd","range","to","result","Orientation","SashState","LayoutPriority","Sizing","ViewItem","container","view","size","_cachedVisibleSize","_size","cachedVisibleSize","setVisible","visible","viewMinimumSize","viewMaximumSize","toggle","minimumSize","maximumSize","priority","snap","enabled","style","pointerEvents","Distribute","Split","Invisible","Position","Splitview","views","sashes","_orthogonalSize","contentSize","_proportions","_onDidSashEnd","onDidSashEnd","_onDidAddView","onDidAddView","_onDidRemoveView","onDidRemoveView","_startSnappingEnabled","_endSnappingEnabled","resize","delta","sizes","lowPriorityIndexes","highPriorityIndexes","overloadMinDelta","overloadMaxDelta","snapBefore","snapAfter","x","Number","NEGATIVE_INFINITY","POSITIVE_INFINITY","upIndexes","downIndexes","upItems","upSizes","downItems","downSizes","minDeltaUp","reduce","_","maxDeltaUp","maxDeltaDown","minDeltaDown","minDelta","maxDelta","snapped","snapView","limitDelta","actualDelta","deltaUp","item","viewDelta","deltaDown","_orientation","orientation","createContainer","proportionalLayout","viewContainer","createViewContainer","sashContainer","createSashContainer","appendChild","styles","viewDescriptor","sizing","addView","r","saveProportions","separatorBorder","removeProperty","setProperty","isViewVisible","setViewVisible","viewItem","distributeEmptySpace","layoutViews","getViewSize","resizeView","indexes","filter","Low","High","round","relayout","getViews","onDidChange","skipLayout","viewSize","createElement","newSize","removeChild","insertBefore","sash","onStart","iframes","start","HORIZONTAL","clientX","clientY","sashIndex","array","fn","firstIndex","s","snapBeforeIndex","findFirstSnapIndex","snapAfterIndex","snappedViewItem","halfSize","floor","mousemove","mousemoveEvent","end","sashItem","distributeViewSizes","flexibleViewItems","flexibleSize","removeView","getViewCachedVisibleSize","moveView","layout","orthogonalSize","previousSize","proportions","lowPriorityIndex","emptyDelta","sum","updateSashEnablement","offset","left","top","VERTICAL","width","height","previous","collapsesDown","expandsDown","reverseViews","reverse","collapsesUp","expandsUp","position","snappedBefore","snappedAfter","startSnappingEnabled","updateSash","MINIMUM","endSnappingEnabled","MAXIMUM","DISABLED","ENABLED","state","orientationClassname","tmp","Paneview","paneItems","skipAnimation","_onDidChange","splitview","getPanes","pane","onDidChangeExpansionState","setupAnimation","paneItem","addPane","removePane","skipDispose","animationTimer","DragAndDropObserver","callbacks","counter","registerListeners","onDragEnter","preventDefault","onDragOver","onDragLeave","onDragEnd","onDrop","Droptarget","_onDrop","clientWidth","clientHeight","xp","offsetX","yp","offsetY","quadrant","calculateQuadrant","validOverlays","canDisplayOverlay","overlay","_state","Center","append","isSmallX","isSmallY","toggleClasses","setState","removeDropTarget","stopPropagation","nativeEvent","isLeft","isRight","isTop","isBottom","Top","Left","Bottom","Right","overlayType","LeafNode","minimumWidth","maximumWidth","minimumHeight","maximumHeight","BranchNode","childDescriptors","_childrenDisposable","childDescriptor","node","c","setupChildrenEvents","isChildVisible","setChildVisible","moveChild","_removeChild","_addChild","getChildSize","resizeChild","addChild","getChildCachedVisibleSize","minimumOrthogonalSize","maximumOrthogonalSize","Normal","priorities","some","p","findLeaf","candiateNode","last","flipNode","orthogonal","totalSize","childSize","getGridLocation","parentElement","test","el","firstElementChild","lastElementChild","nextElementSibling","indexInParent","ancestor","getRelativeLocation","rootOrientation","location","direction","getLocationOrientation","directionOrientation","getDirectionOrientation","rest","DockviewDropTargets","serializeBranchNode","box","isGridBranchNode","toJSON","Gridview","root","serialize","getView","clear","deserialize","json","deserializer","_deserialize","_deserializeNode","isRoot","serializedChild","fromJSON","progmaticSelect","getNode","_getViews","nodeCachedVisibleSize","path","n","l","parent","parentLocation","pathToParent","grandParent","parentIndex","newSiblingSize","newSiblingCachedVisibleSize","newParent","newSibling","sibling","isSiblingVisible","siblingSizing","_root","oldRoot","SplitviewApi","component","updateOptions","removePanel","panel","focus","getPanel","id","addPanel","movePanel","panels","onDidLayoutFromJSON","onDidLayoutChange","PaneviewApi","emitter","onDidDrop","assign","api","GridviewApi","force","onDidAddGroup","onDidRemoveGroup","onDidActiveGroupChange","groups","DockviewApi","getTabHeight","tabHeight","setTabHeight","getGroupPanel","addEmptyGroup","moveToNext","moveToPrevious","closeAllGroups","removeGroup","group","getGroup","totalPanels","onDidActivePanelChange","onDidAddPanel","onDidRemovePanel","activePanel","activeGroup","ContentContainer","_element","tabIndex","show","display","hide","openPanel","content","_width","_height","closePanel","_b","_c","MouseEventKind","DragHandler","_onDragStart","onDragStart","configure","dataTransfer","effectAllowed","GroupChangeKind2","Tab","accessor","_onChanged","onChanged","_onDropped","draggable","arguments","defaultPrevented","kind","CLICK","CONTEXT_MENU","droptarget","model","setActive","isActive","setContent","part","TabsContainer","tabs","selectedIndex","_hidden","actionContainer","tabContainer","voidContainer","voidDropTarget","Panel","button","doSetGroupActive","hidden","setActionElement","actions","tab","at","findIndex","_isGroupActive","addTab","delete","tabToRemove","setActivePanel","isActivePanel","find","tabToAdd","alreadyFocused","isContentFocused","fireMouseEvent","skipFocus","Groupview","_locked","mostRecentlyUsed","_panels","_onMove","onMove","_onDidGroupChange","onDidGroupChange","_onDidDrop","tabsContainer","contentContainer","dropTarget","locked","header","hideHeader","handleDropEvent","initialize","doAddPanel","updateContainer","activeView","_activePanel","normalizedIndex","suppressRoll","containsPanel","includes","init","_params","update","skipSetPanelActive","skipSetGroupActive","updateParentGroup","doSetActivePanel","groupItemOrId","panelToRemove","_removePanel","closeAllPanels","arrPanelCpy","doClose","isPanelActive","updateActions","isGroupActive","doRemovePanel","nextPanel","REMOVE_PANEL","skipSetActive","hasExistingPanel","updateMru","ADD_PANEL","PANEL_ACTIVE","isEmpty","watermark","createWatermarkComponent","containerApi","params","title","showDndOverlay","itemId","MAX_SAFE_INTEGER","nextLayoutId","toTarget","BaseGrid","_id","_groups","Map","_onDidLayoutChange","_onDidRemoveGroup","_onDidAddGroup","_onDidActiveGroupChange","_bufferOnDidLayoutChange","gridview","isVisible","doAddGroup","doRemoveGroup","has","get","skipActive","_activeGroup","values","forceResize","_assertThisInitialized","self","ReferenceError","PanelApiImpl","_isFocused","_isActive","_isVisible","_onDidDimensionChange","onDidDimensionsChange","_onDidChangeFocus","onDidFocusChange","_onFocusEvent","onFocusEvent","_onDidVisibilityChange","onDidVisibilityChange","_onVisibilityChange","onVisibilityChange","_onDidActiveChange","onDidActiveChange","_onActiveChange","onActiveChange","isFocused","GridviewPanelApiImpl","_onDidConstraintsChangeInternal","onDidConstraintsChangeInternal","_onDidConstraintsChange","onDidConstraintsChange","_onDidSizeChange","onDidSizeChange","setConstraints","setSize","DockviewPanelApiImpl","_onDidTitleChange","onDidTitleChange","_titleChanged","titleChanged","_suppressClosableChanged","suppressClosableChanged","_group","setTitle","close","suppressClosable","isOldGroupActive","DockviewGroupPanel","mutableDisposable","_suppressClosable","_title","_view","setSuppressClosable","keys","isPanelVisible","ActionContainer","_list","Watermark","emptySpace","flexGrow","closeAnchor","ev","render","_visible","isOneGroup","createComponent","componentName","components","frameworkComponents","createFrameworkComponent","fallback","Component","FrameworkComponent","DefaultTab","_isPanelVisible","_content","_actionContainer","action","textContent","changed","BasePanelView","outline","overflow","parameters","getComponent","GridviewPanel","_evaluatedMinimumWidth","_evaluatedMaximumWidth","_evaluatedMinimumHeight","_evaluatedMaximumHeight","_minimumWidth","_minimumHeight","_maximumWidth","_maximumHeight","_snap","_priority","updateConstraints","maximum","minimum","GroupviewApi","GroupPanel","_model","DefaultGroupPanelView","renderers","_tab","_actions","nextGroupId","DockviewComponent","_onTabContextMenu","onTabContextMenu","_onDidRemovePanel","_onDidAddPanel","_onDidLayoutFromJSON","_onDidActivePanelChange","_options","frameworkTabComponents","tabComponents","watermarkComponent","watermarkFrameworkComponent","_api","hasOrientationChanged","includePanel","grid","collection","createGroup","hasActiveGroup","hasActivePanel","entries","entry","referenceGroup","referencePanel","findGroup","createPanel","relativeLocation","createGroupAtLocation","removeEmptyGroup","frameworkComponentFactory","moveGroupOrPanel","sourceGroup","referenceLocation","targetLocation","targetParentLocation","sourceParentLocation","targetGroup","updatedReferenceLocation","groupItem","dropLocation","isGroupAlreadyFocused","console","warn","set","createContentComponent","createTabComponent","tabComponent","flatMap","_deserializer","GridviewComponent","_onDidLayoutfromJSON","_key","serializedGridview","queue","registerPanel","f","removedPanel","reference","moveGroup","SplitviewComponent","v","frameworkWrapper","doAddView","serializedSplitview","_splitview","SplitviewPanelApiImpl","PaneviewPanelApiImpl","_onDidExpansionChange","onDidExpansionChange","_onMouseEnter","onMouseEnter","_onMouseLeave","onMouseLeave","setExpanded","isExpanded","_pane","DraggablePaneviewPanel","headerComponent","disableDnd","initDragFeatures","handler","existingPanel","allPanels","fromIndex","toIndex","isHeaderVisible","_onDidChangeExpansionState","headerSize","_minimumBodySize","_maximumBodySize","_isExpanded","expandedSize","_headerVisible","isPanelExpanded","renderOnce","expanded","body","minimumBodySize","maximumBodySize","bodyPart","getBodyComponent","headerPart","getHeaderComponent","lineHeight","minHeight","maxHeight","DefaultHeader","apiRef","_expander","PaneFramework","PaneviewComponent","_viewDisposables","paneview","headerComponents","headerframeworkComponents","serializedPaneview","_paneview","SplitviewPanel","_evaluatedMinimumSize","_evaluatedMaximumSize","_minimumSize","_maximumSize","ReactComponentBridge","ref","React","triggerRender","_props","componentProps","current","Date","now","displayName","uniquePortalKeyGenerator","ReactPartContext","ReactPart","portalStore","context","disposed","createPortal","componentInstance","bridgeComponent","Provider","portal","ReactDOM","addPortal","usePortalsLifecycle","portals","setPortals","existingPortals","ReactPanelContentPart","reactPortalStore","_actionsElement","actionsPortalElement","tabPortalElement","actionsPart","ReactPanelHeaderPart","ReactPanelDeserialzier","panelData","viewData","ReactWatermarkPart","_groupRef","DockviewReact","domRef","dockviewRef","disableAutoResizing","watcher","contentRect","factory","componentId","dockview","hideBorders","onReady","ReactPanelView","reactComponent","SplitviewReact","splitviewRef","ReactGridPanelView","GridviewReact","gridviewRef","PanePanelSection","PaneviewReact","paneviewRef","_componentId","default","padding","SimpleDockview","HomepageHeader","siteConfig","useDocusaurusContext","clsx","tagline","Link","Home","Layout","description"],"sourceRoot":""}